cset: moving following pidspec: 20566
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.286448371 seconds)
loading group "string"... done (took 0.581492988 seconds)
loading group "linalg"... done (took 7.132426754 seconds)
loading group "parallel"... done (took 0.165833562 seconds)
loading group "find"... done (took 1.129313061 seconds)
loading group "tuple"... done (took 1.980812974 seconds)
loading group "dates"... done (took 1.264800275 seconds)
loading group "micro"... done (took 0.234960467 seconds)
loading group "io"... done (took 0.961363454 seconds)
loading group "scalar"... done (took 38.399699335 seconds)
loading group "sparse"... done (took 12.318198411 seconds)
loading group "broadcast"... done (took 0.965605715 seconds)
loading group "union"... done (took 13.140807793 seconds)
loading group "simd"... done (took 4.633457669 seconds)
loading group "random"... done (took 9.063541458 seconds)
loading group "problem"... done (took 1.97816465 seconds)
loading group "array"... done (took 21.235417631 seconds)
loading group "misc"... done (took 1.918756746 seconds)
loading group "sort"... done (took 3.202979012 seconds)
loading group "collection"... done (took 17.918434817 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529868701 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140974359 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116632735 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137929285 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183816043 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131917657 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143777571 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083921032 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038772677 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160670526 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138454195 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475490827 seconds)
done (took 5.035694773 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.20029554 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086230588 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095799086 seconds)
  done (took 0.880725024 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065748846 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125475578 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080078987 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067323357 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066126873 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080031115 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065921448 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065224424 seconds)
  done (took 1.2566063 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073522227 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067737774 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084104806 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066585268 seconds)
  done (took 0.998902888 seconds)
done (took 4.119411343 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897119483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233441871 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187670074 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.45195515 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147839434 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.187710947 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668254264 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324795112 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209446524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099725991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104769983 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378357603 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106108609 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665620039 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077697166 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105109454 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.157504817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427473158 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080641069 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082829868 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10285239 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141397424 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103291916 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078700468 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167355627 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0695887 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147024776 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.093997999 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067500365 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241957079 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189135932 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682263822 seconds)
  done (took 10.420907104 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098922599 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115721075 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069037236 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138824634 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102096135 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085454987 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070200224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082642539 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091059088 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157722919 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113640191 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104557693 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08149242 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069743586 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100306778 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210445124 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105103572 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084270445 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085589083 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074993924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121139 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081878498 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093210881 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07728732 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.151003705 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194134306 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11043434 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110860844 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068728788 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080984638 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131048641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144689515 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067815771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082837896 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139740698 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110828238 seconds)
  done (took 4.527203363 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.030253449 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15970605 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09040288 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151389121 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.128991069 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083160541 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109356012 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082119956 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099395751 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230455907 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.081118578 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.463331325 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126539118 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101479563 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067012662 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067235574 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083622846 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.513241402 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144650935 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101322144 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10227062 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08849133 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069825128 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357673152 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067853559 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065404277 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083729395 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059017276 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143855842 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067029104 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.322139809 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.071674248 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087056164 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085484582 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064878421 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116187832 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064148126 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107624435 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122329406 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065931251 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064282462 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166771143 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089801658 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065221756 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103849821 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117375177 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103982424 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082903828 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067382476 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18046913 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066560878 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098083874 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.896747133 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166278934 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079094628 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065991126 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285425165 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08348083 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083269939 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064140457 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279981397 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15213422 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066286328 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.087739522 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065309065 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067966336 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386721696 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06706297 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.015499396 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067851092 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075520281 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084319724 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066790925 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087535889 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071408745 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099993057 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066461908 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066299912 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082863624 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065274804 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082599294 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084645906 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202502615 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08236096 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063615194 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065921011 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081413948 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085042037 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111489608 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068938685 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081011284 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098952645 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083647593 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066960849 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118724296 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066616351 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100922825 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083880337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113717566 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081496807 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.147117744 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067459214 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110086807 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075716917 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112837486 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093244854 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068027013 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152562605 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064206632 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081362331 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066739947 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064043115 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084021736 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067799813 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097109038 seconds)
  done (took 21.108231576 seconds)
done (took 37.792863517 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289100507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.089540281 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09050324 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074899269 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090972457 seconds)
  done (took 1.415419285 seconds)
done (took 2.170938644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118952495 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116096059 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062653425 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111217326 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06290886 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115428615 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112818399 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080984093 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116992282 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06371135 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111832789 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063923168 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063090998 seconds)
  done (took 1.983098544 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081931139 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084246899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084590297 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081444754 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077655679 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081665719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079597767 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103449438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078930664 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087145418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063564284 seconds)
  done (took 1.654893259 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080907373 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08255812 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084757309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080194767 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077756516 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080333328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079028357 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101003697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079475002 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088101652 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063480468 seconds)
  done (took 1.652711833 seconds)
done (took 6.037662421 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077228624 seconds)
  done (took 0.824171958 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.693689801 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.600677452 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082102919 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133569671 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219802457 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153733208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.43574189 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107733547 seconds)
  done (took 10.347273282 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088690829 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085094763 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067866691 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084394563 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081156289 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086978214 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071317262 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071033679 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084070663 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069785862 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085952395 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069060935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082764426 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070375038 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071254679 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083528837 seconds)
  done (took 2.071497464 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092704708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09097496 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089784745 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075234079 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08827733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072020017 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091149995 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073474793 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085780663 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071254068 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090582199 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073042728 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087058449 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064736499 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089750724 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076449059 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086176993 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074776441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090073973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076377501 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090209368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065316024 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087350108 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07488059 seconds)
  done (took 2.818915307 seconds)
done (took 16.816430164 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129318817 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07543829 seconds)
  done (took 0.962836069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080567942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096994194 seconds)
  done (took 0.943602499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082195649 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080137317 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087673653 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091399757 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065987993 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080579795 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102048962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066157007 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07997575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06507235 seconds)
  done (took 1.56648473 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068139823 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092167148 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069135052 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095567257 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072639284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079263567 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072244566 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082806948 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07759302 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077983364 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070217961 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097883147 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071053796 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098930725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072662252 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083226046 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086182716 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067007207 seconds)
  done (took 2.20104274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064626671 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066460915 seconds)
  done (took 0.896510827 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066400161 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063176651 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080763115 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066241378 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077469197 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062700995 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078487705 seconds)
  done (took 1.260764244 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.39589725 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108499883 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.241532917 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086751105 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101975655 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.260051083 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082363618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069953363 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086584119 seconds)
  done (took 2.235946905 seconds)
done (took 10.832874062 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078843568 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085308786 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109198168 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4178921 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104944122 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065652582 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130972062 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21862854 seconds)
done (took 1.980829287 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124147601 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603442259 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395960372 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211279657 seconds)
  done (took 1.983598866 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367535645 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090297474 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073425953 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066210415 seconds)
  done (took 1.370779662 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065588677 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068933229 seconds)
  done (took 0.907953991 seconds)
done (took 5.158573287 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065466591 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065644554 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.099157163 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064040733 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083022807 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063946742 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063689591 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.080795032 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066273057 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066267533 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082405093 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068531162 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.081667596 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065264052 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065236654 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078803695 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063127843 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065805486 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078532702 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063233001 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063991415 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081207924 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064303355 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06315957 seconds)
  done (took 2.509931568 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084545335 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082499808 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071439764 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087249655 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07043997 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087282187 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070355446 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066855311 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086932133 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069082674 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085571588 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070110353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083383831 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071255147 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083813605 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070395256 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086845507 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066181664 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071277184 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085724579 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071512454 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082067497 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070572086 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086660439 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070338099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08499134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068646697 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082167163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071835592 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086053654 seconds)
  done (took 3.103993546 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069994795 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064063676 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080165955 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070441021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063750443 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081113472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063677437 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080017027 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064734957 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063615728 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080674529 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063188956 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063587952 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079784442 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064929736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082378908 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079330557 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064368745 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07951836 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06406737 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066572366 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078463564 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063721324 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079625771 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06351033 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062968587 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079304081 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063074707 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06447663 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079091773 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066919883 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067548241 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079734679 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070237564 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083373628 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063515038 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068403407 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078591871 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064406947 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06324122 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079334429 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063640088 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06301259 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085756212 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064130174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082082409 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063925767 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064760399 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079851217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06668679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079191643 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063496703 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065676498 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080498185 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067392795 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06339995 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079984995 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063204839 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079806147 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063105968 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063238875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079425493 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066244721 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064564976 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094626343 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070748745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078834428 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065305621 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064620796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081264956 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065057341 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076509527 seconds)
  done (took 5.898099585 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115741847 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090311784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081451121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065479667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078705764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064180138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067435293 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079759302 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065663026 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085347246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064109258 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064770075 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080666261 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076632801 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080985336 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065696809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085531211 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061697183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064458746 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08335877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064298435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082586754 seconds)
  done (took 2.451981262 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184419415 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086582157 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108155918 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089820513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08430293 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073088292 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069256759 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08556618 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070506915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083457971 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068901156 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085181913 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067955399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083575641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068335639 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08382514 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069606866 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084538849 seconds)
  done (took 2.330193291 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07700225 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066031362 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104615341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065767609 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082525641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068255663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086953413 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075393071 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084056095 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066200601 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090449083 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069124593 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084093247 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06620008 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068678643 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081369563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06826121 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081443888 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075242692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08670463 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072128691 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089644283 seconds)
  done (took 2.494985365 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080886229 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067980738 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099839073 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084597822 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061692237 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064368638 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08795629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065680504 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087723572 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068448273 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065770071 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080181599 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071333186 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081593516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070577557 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08182743 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068054696 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066297473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08331467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062991616 seconds)
  done (took 2.286488847 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086060136 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083421444 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067504745 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090891999 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066848577 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083189139 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075177449 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082979047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067830396 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107926936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067952446 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084914303 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075500224 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088443822 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067600742 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091098919 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075656435 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091100279 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067383342 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083442196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.217904306 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067570646 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091789976 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067676593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083380023 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067336954 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067861261 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087739009 seconds)
  done (took 3.146655006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066557009 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066721585 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080063479 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063475983 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06401572 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080007956 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064382869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063938816 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081986602 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06399536 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065818895 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082140371 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066635881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081984157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066402626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066418613 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082029853 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063813475 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063983966 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080061384 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066148595 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065977306 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081978709 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064210482 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079273699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066372148 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063904706 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079280651 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06555042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063966892 seconds)
  done (took 2.902095008 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075220008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089843409 seconds)
  done (took 0.959646453 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063919716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080259931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079560742 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070202265 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086028726 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066636722 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090165013 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070492876 seconds)
  done (took 1.399359703 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080949211 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077374098 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084026149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077992981 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.092518944 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083753371 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15254045 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083001779 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073183688 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08073781 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079141499 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065089979 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089000729 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066757466 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08830847 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072561324 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064228121 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088040725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068503409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080947806 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067963154 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091142122 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068296039 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0639869 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083096005 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075481269 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093237614 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067559308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08569278 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074151251 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087803478 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060386504 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066304962 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082789034 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064991412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092043206 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08131681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085864966 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075007538 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067944673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092349895 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061530884 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086924995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072627249 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092252751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066749551 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084296365 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061640238 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064522104 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084367713 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061447692 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06633698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077359476 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073257748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085707307 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076492616 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084068007 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067609734 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069060265 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085924568 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073199044 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084744062 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068449759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065905211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091672195 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070278546 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091991062 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062519757 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060617054 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08070437 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076116894 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104383903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072859394 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083103218 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067592261 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080240169 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069122165 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067917675 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087999867 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072408663 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083139278 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072286536 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089655624 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066824051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068368179 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090250549 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06443128 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084694121 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064592517 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097694877 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065224558 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080862884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063991882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07589895 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086364967 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066231547 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080332901 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072819604 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061450615 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082474008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067261671 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083565045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076159118 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087757395 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071780735 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09103496 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074476843 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066293077 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086464327 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063325374 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08324877 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065458912 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072904865 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077268043 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069031708 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083809997 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067311718 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090848866 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065047145 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066205971 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089912254 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072196429 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081157596 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063778618 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069357109 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082431368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06957856 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090705428 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065274294 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061759248 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078273578 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070371469 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083254724 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07035258 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087703325 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069821393 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061321416 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081713885 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070769147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091455735 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067390048 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084401808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072451539 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068007192 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081942554 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072672315 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085179231 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065620979 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071975278 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083084879 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062748714 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086078653 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069325582 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064887144 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08615128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069817026 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085870894 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067955942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081296058 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071568022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066923595 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082676808 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066768174 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081897683 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076888325 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068362253 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07880579 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063820105 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09004599 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06472422 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065848944 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082296759 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068803067 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083722596 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064156208 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065370159 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084307069 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076500972 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087548085 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067174066 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088335456 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077414743 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082953459 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068628064 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066311107 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084206181 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067485944 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091050817 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072177767 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088099913 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068502042 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06328717 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088596448 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073173533 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08228166 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064794526 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065419043 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08649501 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071692079 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086776635 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067819896 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080692727 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067259578 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068972521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085363575 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066846072 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081573371 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070978669 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082361034 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072882364 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06754548 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093166999 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070121022 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078465037 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070468071 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080897681 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071708821 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061947054 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081334705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065645795 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084453862 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065490832 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069234932 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07799957 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073396976 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090456603 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066269903 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066087501 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082979044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073709143 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084130645 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070355657 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069596619 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089911617 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076353223 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082977877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069248429 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093154155 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065890748 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060847311 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088114247 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065900673 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082566125 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06499101 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064233752 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086012804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07445033 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089478662 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060912572 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085098259 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065523641 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065928205 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078752878 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070782034 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085935701 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067549139 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072709521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084060633 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067260549 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086470041 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066167276 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066453866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084301293 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069316424 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084411731 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069289626 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081983528 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069104269 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065392599 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080634047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068545957 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065785232 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083430028 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071656752 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082463522 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06671423 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085361888 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067703342 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067392263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084494303 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06576842 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086849879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067094991 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067332574 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085487008 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06260003 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090021302 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066668455 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073815274 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083704 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063517649 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088286578 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068485446 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.0713826 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08471337 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06786199 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083931072 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066655934 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085495874 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072838246 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064933948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.0942918 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073869881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083795691 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069607802 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083208531 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068121609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066413685 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084128519 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066994331 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066112477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083720779 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070765723 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085671489 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067480741 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06749699 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084444705 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066893969 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08410823 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061977422 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065192836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083083414 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066948574 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091965136 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067629261 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082602385 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065684986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067803061 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08242774 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063702552 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091103456 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075467041 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083494522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074066463 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082603527 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067836064 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076744289 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078137781 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065055077 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081364713 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064074581 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07366535 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083856055 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075849965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083572695 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065445697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0640286 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08409464 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065397558 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060614625 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081863032 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07081154 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082645113 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06604706 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066405496 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086744864 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067737997 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092833769 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066209735 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084438235 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067006254 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064120073 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082411936 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06579497 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085357897 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067368103 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064385304 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081396421 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066390472 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083686044 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067039815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066779063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084708385 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073589987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083472779 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069150811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069237466 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080894478 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070443249 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08267637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066486663 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065512684 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087418687 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069949417 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08444582 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075394952 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083505972 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066886054 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067747207 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081524791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066283636 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083000639 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066182524 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066068091 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084169791 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074480871 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081266024 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069564183 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066348627 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084045504 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07323237 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084428109 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069924413 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090444973 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066579661 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068084989 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091316889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069997764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087018108 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068495438 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084939072 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072649754 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065949945 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090403534 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067424026 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084609893 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069299297 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064989081 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083494904 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066742913 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065665471 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089534903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067080441 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08347884 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066531698 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081572156 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067933995 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070013614 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091295037 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0692099 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086495973 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062246556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064339996 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084942724 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064492751 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084694193 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069642529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072353642 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085808528 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067809859 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082387652 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075360818 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089311292 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070087444 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064446086 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087351765 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06779864 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086470125 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067633695 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066384801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085248501 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071435626 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085818636 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065782374 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072985661 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086943975 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068272307 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085611641 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067358112 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066617937 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079168006 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067378363 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086363167 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071967115 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068023252 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084316818 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077323165 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081436908 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067506765 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087054304 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066846585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069887185 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079197781 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068339232 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085198814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067069281 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062608807 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082767732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064766919 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085801289 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065544703 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062573271 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09378259 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075366243 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087147544 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065578691 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065114268 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079674244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062739462 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083818161 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068085666 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068769915 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093740127 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066506307 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08278844 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063156558 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066276018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086919638 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070446743 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081296012 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062275912 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065424866 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087078426 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072423807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082304038 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066918581 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069534941 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085837036 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064909008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087359337 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063481906 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087437486 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079368021 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066920507 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084510322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072318196 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09072097 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067407927 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079339669 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067927431 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068842008 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084032315 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068210421 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085319279 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082452453 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087067399 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065882359 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065021474 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086022125 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066388349 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092350464 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068200541 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066684915 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089905035 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06799386 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091966838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069957348 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090753065 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070077875 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086868438 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065896485 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066388712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081993903 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06629911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084526897 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067912321 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070811178 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091727828 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065559778 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094407796 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075692885 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085501874 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063300322 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065522269 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083466069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062939673 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085525007 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065323187 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064240557 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082177784 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066241713 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085371756 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072768992 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067215072 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085503569 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066807549 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078620301 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0688777 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069335733 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084996803 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063814425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066019452 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085072946 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070311871 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087576977 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064669676 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085920384 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067926874 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067765404 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079592794 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073157146 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064951483 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086933437 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066324897 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083662546 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067821954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087164355 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071081718 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067267824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086799867 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075042279 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086072784 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064573287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063323649 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089833446 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064224573 seconds)
  done (took 45.809792049 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106594962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081059097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062408043 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079743211 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074865088 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081497502 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062047779 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062327383 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080732631 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066280198 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079501756 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061717658 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089014441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085665382 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092134726 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065808463 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079825006 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063571072 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079333084 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063715292 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088916839 seconds)
  done (took 2.449353324 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074993117 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.088625239 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073308545 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094463013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067825917 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088815467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073004132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088519131 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094021528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067658724 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094028819 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071114819 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.084933964 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067290197 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084966937 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070646335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093987206 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067671266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088100896 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073869411 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088555103 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072809045 seconds)
  done (took 2.60772852 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066637456 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065690408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085095816 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061441999 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065122589 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.079481446 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07003404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081779558 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069139816 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064280471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082756063 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074024949 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085258043 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061759121 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066309626 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081294473 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129971049 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069868078 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065727672 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085697863 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061382078 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086104597 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062013973 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062372924 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082707783 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069778636 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083768525 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063707533 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066308869 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082619987 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066677127 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081527434 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067517009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066518474 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082817338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0647839 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065685851 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083663642 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062274973 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081875107 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066415958 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062350839 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084022617 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066935956 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063723987 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081729894 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067691486 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083445274 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061682564 seconds)
  done (took 4.437618915 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083386711 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129194244 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086512796 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08939444 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100294734 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092387542 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07044454 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110443521 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063294764 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083090606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082211231 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102856451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084738218 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070805117 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090961944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066297417 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067073569 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083648966 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070175467 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083829712 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069864826 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091064595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098839714 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080279455 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08782661 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065761643 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084448133 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071089136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097779674 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071195091 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089437237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071948429 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099524599 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070511982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084485425 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067582721 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100678375 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084538208 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069194524 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06396892 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085880804 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0706239 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090579881 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082244648 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084632313 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071295344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084199315 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063500578 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097232942 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068177623 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092579622 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099244464 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070966022 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084242056 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070208574 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099784845 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066102025 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082284647 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069275474 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095889519 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064086847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088033101 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080018662 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085335902 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074150239 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097743164 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071469886 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087390206 seconds)
  done (took 6.574731244 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074700054 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09093125 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081158114 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09862148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090578238 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074494156 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090805456 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072950139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089965731 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077679086 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090133988 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112164835 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068779364 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09347255 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073427963 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090571151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072691227 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091115847 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072199627 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091680207 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09088717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080639717 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090459441 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099240872 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103007604 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085386534 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072814431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090611029 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080771038 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091758561 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101705814 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072848086 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090669761 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099199502 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08429518 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090138656 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065690305 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091003702 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07302032 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.09127206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0687022 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09882975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072609506 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085582875 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072160664 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091493503 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098727702 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083596867 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093008681 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094985224 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073256919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098931207 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072475681 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090804754 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097926945 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105473022 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099069472 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098253295 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072773513 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098410454 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098445776 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105853441 seconds)
  done (took 6.264644102 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087518037 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092680596 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096152887 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061697571 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064253597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088540272 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065284476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082106752 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074949096 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092615987 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077086779 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088343578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07322303 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09614349 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088155357 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074205223 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088436694 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070090454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093564357 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070301674 seconds)
  done (took 2.478025341 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074983558 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101911382 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06778959 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071518715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088256857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071274062 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088092106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069276609 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085221595 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069935577 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095042886 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076389268 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085817144 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072843224 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094408845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072350329 seconds)
  done (took 2.142234782 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078282258 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095580681 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081463831 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085609939 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065082362 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082567789 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066113412 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062401336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082232084 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080878505 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085303797 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069605437 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085183757 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064682793 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063165326 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088101401 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063316039 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082688904 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066589847 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.099253295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077864057 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083946229 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06706134 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067506561 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085879997 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071331189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085548248 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064671928 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08345093 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066674292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084846985 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07389364 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08159044 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064972896 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063988271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082370704 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066551542 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084611399 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06886022 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065571943 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083705158 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066636511 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084677741 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067363751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081221553 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067165909 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062547681 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090610519 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063908606 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084295651 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066342194 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086768459 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067573733 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076210048 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088194724 seconds)
  done (took 5.036780125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080128533 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069368503 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081487238 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064544388 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087666656 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06815936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069023259 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086986759 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06807695 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083019013 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06899055 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087385016 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068792465 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069938395 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08582969 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070333708 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080759227 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067563729 seconds)
  done (took 2.219321949 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071388328 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065959806 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091945037 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067601127 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084871642 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06828472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062653022 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08381092 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065305557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084487849 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066434848 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068283419 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083567938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069210347 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084936109 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06656978 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067879858 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083539271 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066358199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080672237 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068687032 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065154175 seconds)
  done (took 2.480862033 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071671049 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092625116 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160426792 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.1063843 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082369674 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.098214178 seconds)
  done (took 1.475982554 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09012149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098302336 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067411573 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1059208 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074571097 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086943232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067952595 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085934619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077430712 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100383369 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068581215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096032325 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094840947 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076272047 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092431577 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074476589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087130987 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068190443 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085318765 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105885973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06865825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095020181 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069072381 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086641202 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068966081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094428495 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076513653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100841113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086408437 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07739703 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092144419 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06877484 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096022209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100203106 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069726713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094994634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068338913 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10520613 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073764892 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095325845 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06944313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093243974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095787349 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072552383 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09509682 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069241169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092357523 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068095953 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088227892 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111669057 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074839565 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095316697 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092833439 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077221181 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096064996 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112154698 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08143339 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095638895 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092740468 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081967915 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095335328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073218084 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095930995 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100320524 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074060879 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095396269 seconds)
  done (took 6.546926618 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084579154 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104514502 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069231401 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100735509 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095362735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068846423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087022297 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068060886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086432291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067443031 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127773353 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068645685 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095545345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094756626 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068737763 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087220558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068216665 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094373066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067948673 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110940076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086669527 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07660797 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094530208 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094064209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081848899 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092506553 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068139535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087190931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067722789 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087001859 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072723557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087685463 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094689319 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068090743 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095543274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06891158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086333812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073618731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087055854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073385094 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095997409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104585264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068596518 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087359845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081435396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087173165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068722239 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086681786 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068316446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086410577 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08137377 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101876062 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100103891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095541981 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069088985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086901605 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069169488 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087517162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069278443 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091691991 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076178158 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086552261 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112115366 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06955795 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086815102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076153406 seconds)
  done (took 6.423983648 seconds)
done (took 127.205241102 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200571802 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183065289 seconds)
  done (took 1.247257135 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068059275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095622148 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096852332 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128458232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085710859 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099908263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117873818 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079207592 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065787497 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085133466 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066130482 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086615042 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13104536 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066833925 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084973982 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068553517 seconds)
  done (took 2.297571361 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101495932 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193525709 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10776997 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065505305 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098266743 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07859015 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084297203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076482795 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093701099 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065240384 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076895233 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094480655 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064556311 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095121589 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074395355 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096364712 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065300801 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096682208 seconds)
  done (took 2.50381322 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102831368 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140230423 seconds)
  done (took 1.114750827 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197812274 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121929736 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205839133 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.408735991 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204068164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274060613 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172181632 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169559191 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.154770276 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168185554 seconds)
  done (took 2.944784731 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098647009 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169897729 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307761528 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13623888 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085360762 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114637881 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.137077103 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088687828 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100870502 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099543479 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080922409 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096673537 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096726938 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09439152 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074132123 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096512612 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119557784 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074398429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095665459 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076236349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118118706 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066697887 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073904612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093734911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077031298 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09845237 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066366706 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085607767 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075118888 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093647265 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078963463 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112863773 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096840295 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13079981 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081335096 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131358987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096312115 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071653082 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094003925 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073268955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097453877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077073905 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102698865 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076289596 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086027339 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076931402 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085348196 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066695867 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.097992023 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077421958 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098770021 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078686802 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128817229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096241679 seconds)
  done (took 6.178874224 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.741938312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110523081 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093043835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805969423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088750771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10483519 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.713489389 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116455326 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210463998 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764139859 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088466095 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097258455 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.181029108 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.232692284 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.877476284 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281890832 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.62937797 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103783076 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108003851 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131370333 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138031599 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175876546 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148564105 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407359164 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074599716 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091716026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136229138 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074574797 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159063958 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084502448 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091742933 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154894275 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.223798091 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.154667104 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095926333 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06918411 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090074545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148110357 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217001364 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189759909 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157306949 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067107713 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090756962 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139969785 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131146854 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068535209 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139491464 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150648766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148888017 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073237888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094295752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141093024 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139125939 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141895897 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100447988 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269361966 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288213514 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090044721 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098588524 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103849107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21066353 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103823798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.19869679 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138814609 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168057612 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089988123 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732978664 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.148038447 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091467815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07501311 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118002018 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093743089 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138219346 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14404087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.361174552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.160860859 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073906721 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088615541 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182097616 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082944723 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090092245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140239142 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074031545 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121722039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163187499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142763119 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146555138 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208820858 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141142839 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136061485 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094512469 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122683391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074773782 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192458454 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191412978 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1395448 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.184925502 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158961593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.140723658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.145915032 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074082778 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169266366 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097467892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099595583 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136627797 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189874914 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122457753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082503359 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093327367 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139185366 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124123951 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085370856 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138065833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168409924 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433257776 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145867877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067122572 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107053799 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138679848 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140316213 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095508547 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214648599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122517348 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145716071 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120298591 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088690772 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119602444 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139410539 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07765259 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121375288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136480451 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097528069 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212886556 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189909863 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077652703 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.192488833 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161166118 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094356556 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149690844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119141824 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14551216 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07553454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15749255 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07563808 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744851703 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143561828 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120150297 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07346456 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164784466 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069007144 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103415423 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102569905 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069098286 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755549247 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085280845 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099087188 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082997841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093971591 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120656252 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136119578 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073621069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137550224 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202613736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094545614 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099124375 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103802313 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13759699 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095205174 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083504316 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103783716 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082448234 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121523078 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093853319 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08217419 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145238073 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.160523427 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170510091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570609088 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070347654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102607211 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179625476 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091014714 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241655904 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15595318 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.174780597 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140405663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100358717 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28992549 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142472573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164036631 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085279558 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148523601 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089218555 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136961941 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141323785 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070106496 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095546565 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139817294 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143375564 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.161640851 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.920300462 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089787364 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204258759 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068807649 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.14795679 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095665709 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076020678 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.25933552 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069381164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165286135 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142619074 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073350415 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102975398 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.816970352 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102131404 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139422224 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073776971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193184921 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141440006 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135769074 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135466574 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096575049 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138216367 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186723432 seconds)
  done (took 40.206115256 seconds)
done (took 57.366547733 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255829636 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17559268 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.23948827 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142036815 seconds)
  done (took 1.778907042 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.141504423 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103691425 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11642468 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084479946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103212389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085665485 seconds)
  done (took 1.532989211 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.399354402 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262412341 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229479429 seconds)
  done (took 1.788557494 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258418642 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209987606 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443760058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.295196352 seconds)
  done (took 2.23106805 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174456402 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111944122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067145545 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104740477 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.157027407 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250554507 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127016383 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18634143 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078596744 seconds)
  done (took 2.203726354 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.19619074 seconds)
done (took 10.629907329 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.210494204 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.143359681 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.153466866 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.196415057 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120678329 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.205996922 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.190157187 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071381537 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.111325354 seconds)
    (10/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.194535495 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.13743357 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.213338434 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082749311 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09853577 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080361399 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072272299 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112001179 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115364676 seconds)
    (19/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062691073 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164859746 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.134873072 seconds)
    (22/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212293086 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11737254 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.180465836 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10453484 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.099294933 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.149573265 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.144123289 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.219632543 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072273036 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.244010428 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072782933 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096914664 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093501626 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.187769893 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069671062 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098842166 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.204614594 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.206492836 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075212354 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.123611842 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.218772913 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19831362 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114637207 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095587326 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197024569 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090395693 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072194776 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100602375 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.238822703 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.167424594 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087250792 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052448227 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066048917 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05159522 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093408808 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067411409 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.207981797 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.160259379 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072902534 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099566086 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072306314 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.197213617 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088204131 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199032461 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088262818 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.145789526 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.162722379 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077467546 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.07268102 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136078751 seconds)
    (72/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063668176 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090845591 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066836276 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087118806 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.16840734 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110413793 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.116730722 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071499475 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101479464 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.066826968 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120344094 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097175569 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156376528 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075736283 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144654345 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18590104 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068602089 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128961427 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111344554 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074066864 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12971795 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096640879 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098534504 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082314579 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.187664004 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.188354208 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15449222 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108614064 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098301579 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.157774087 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 0.148676992 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 0.124707687 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09693926 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067450963 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095499497 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072626391 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.176093145 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140919384 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086770587 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167038107 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0726905 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073636634 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062836918 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094371948 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.145281488 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116769382 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.130023549 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09213381 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169602775 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137340594 seconds)
    (122/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.082626186 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077084834 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05089538 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088443933 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074278989 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.0938268 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.135282154 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095151641 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089530449 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095401919 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091596378 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.096880506 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062711141 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052263996 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092852303 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073892479 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.125745243 seconds)
    (139/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108413261 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113459705 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051732162 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067395021 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086928799 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074433825 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052529761 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.07245145 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074132685 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.146683597 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065597239 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113770025 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072570236 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071922904 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.168602746 seconds)
    (154/309) benchmarking ("sort", Int8, false)...
    done (took 0.163767228 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075422209 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072988145 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051474277 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051959972 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090001496 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.05116407 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157094474 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087818128 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073689031 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096935548 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052244069 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064766017 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09877549 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052297999 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092900808 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080486282 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052984382 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156730305 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053119224 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073090527 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05140964 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067318254 seconds)
    (177/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052550755 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.082078141 seconds)
    (179/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092382624 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109263151 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098114223 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134902866 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072270611 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.054853376 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074781217 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094583522 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113807139 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073585403 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156435191 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085351401 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191782974 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052537997 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098943249 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052770941 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061240815 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07528491 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.159178552 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074459288 seconds)
    (199/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107691727 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089611194 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.316562785 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074760492 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052583793 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053745782 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064403968 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.073121769 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068493888 seconds)
    (208/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092002669 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052508866 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052132103 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051106316 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.10938415 seconds)
    (213/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080800806 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116876758 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054955869 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.087231867 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06607955 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07530815 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094858649 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080992433 seconds)
    (221/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069970724 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.087540758 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051419293 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052341226 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089634796 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108595783 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09474772 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052458083 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066233228 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075380665 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072830424 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066157181 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087285137 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051518646 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071111834 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089942408 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080455174 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124076097 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065836531 seconds)
    (240/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067311156 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135258155 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086453914 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053224933 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.147916683 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072817164 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118877167 seconds)
    (247/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.0796865 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161198075 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089423528 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072355672 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068099048 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05289918 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062065645 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098180127 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066042705 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098375938 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12975861 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094949462 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051591751 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066533309 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.087493379 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1243497 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087118621 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051436056 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051528406 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095574501 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067551368 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065614689 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093803503 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067812527 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066510639 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07446693 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074535265 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066605112 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091669757 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07299579 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096366439 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06183496 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068200721 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.191084925 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072647319 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193306917 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053251215 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190257342 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073583894 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09060643 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065437129 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096419199 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066627523 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050589727 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086497807 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072956209 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.149482817 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064507807 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095477602 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066843901 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065413825 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193510115 seconds)
    (299/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06074423 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.074553244 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071097259 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067829362 seconds)
    (303/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.074535984 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146715226 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156664618 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112100433 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071252276 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064845525 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086392582 seconds)
  done (took 32.832482254 seconds)
done (took 33.743743257 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080654429 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114075279 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07422713 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114334852 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081084211 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099766326 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072258722 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077812284 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.101803096 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081478287 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100936362 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054664044 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096298671 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074850235 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096022014 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092544201 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100516273 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073071506 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073186269 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086149786 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074121081 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087114573 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066845636 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.0558819 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099101773 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07241325 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072474509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.096468215 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06548466 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087207887 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068492785 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073054688 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086465596 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078924199 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093583015 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074200712 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075348059 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098296335 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068231403 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086979372 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073747317 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065870005 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093787667 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073847051 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07123961 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09285253 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074388247 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100967357 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092563312 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089398777 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07499256 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098200048 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077588831 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071474105 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091562848 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07418509 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092195137 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091888384 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096477341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068059714 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073210853 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096268003 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071136165 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095250024 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074523343 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075332693 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098014943 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071190374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096468138 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070656393 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065810543 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095984375 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069696355 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087544192 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076302192 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076691944 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086441657 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071688438 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07219057 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094668182 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065371975 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089200933 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06773931 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072684468 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089320664 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054808167 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069369907 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093324695 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06567719 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095816588 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071281658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073485218 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088976029 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076954757 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065323829 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092381175 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066412454 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065675152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089352301 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070156784 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.08734948 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067554458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074652775 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088887323 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071350216 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.101568774 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06579445 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072422167 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086680331 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064972354 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103919407 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075477191 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065908789 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089807099 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065234744 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072719938 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086571408 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066842472 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065658211 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087494232 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071344289 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087347503 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06802561 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073163133 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101159056 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065883179 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068818632 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089314729 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066008965 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092606838 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066047654 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066597701 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089433453 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063212789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068039712 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088124048 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073240109 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067773716 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095873245 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067614862 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096999836 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070149167 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071584763 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092941787 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064920083 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058731349 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089846764 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068348877 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066942202 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087821146 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068000193 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08700136 seconds)
done (took 13.107604191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065886356 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167178542 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12568354 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095818568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10973623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066568337 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099657332 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103515661 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.09043389 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126344342 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086892486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106521137 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114673988 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087752011 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066285373 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.0694158 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089637148 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088539263 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123895552 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086412 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.138937966 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087247763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119697952 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090015151 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111018801 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094256407 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088950645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070880544 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069031675 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124720368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107600316 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069559364 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067201237 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121508497 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.11640225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085836539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087588564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084458078 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088097927 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066280449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113607411 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100448077 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103696485 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081886112 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09417573 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069543638 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090141894 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08543098 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112560789 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08016251 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110072482 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132506227 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069275215 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104453927 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06570752 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109439974 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082046441 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090369609 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067176171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090984503 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066022416 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069611674 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109977954 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11536192 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07009238 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104245442 seconds)
  done (took 7.205977486 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084843207 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.116237331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084429607 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107113474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065964026 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066920018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088959137 seconds)
  done (took 1.581248129 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067170155 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0885303 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111768005 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089217926 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107597171 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08735201 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098647867 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067523489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106505522 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067918885 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087453013 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127511232 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067891203 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096989772 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091495163 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089690442 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090585271 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089393444 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070615963 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113276069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069933291 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086683218 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091650163 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067712727 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103379687 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067834283 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137064939 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072070487 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09085844 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07030779 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065631301 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138436887 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103602411 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077930302 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066345715 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104289832 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082151367 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087440237 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.0834905 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09423144 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081216885 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067521642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.090930882 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065586924 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07155463 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100869045 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06923781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090857453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069853946 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086872224 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090719141 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081159185 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089359907 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071145026 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069000766 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095245337 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077711053 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090051257 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08709034 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06843084 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106329033 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083744164 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104362038 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084044086 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091823203 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081140636 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103653226 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069839145 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069157222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092940317 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084162334 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087855492 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068935164 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078332468 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.090749842 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090803345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112606401 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069434679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100072175 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067847894 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067552589 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089275015 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090678939 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092881234 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067627964 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07213083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093096246 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066196345 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066407086 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093308341 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06592131 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091021599 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070893292 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068073224 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092114339 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084002952 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090222375 seconds)
  done (took 9.262879144 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06852755 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068214729 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092088109 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068493016 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068438492 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090041067 seconds)
  done (took 1.433591281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097969898 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091674701 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081674819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095025131 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106246834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103857063 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083133852 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105444625 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085179542 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.101832885 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082424469 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105139904 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088431244 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095710161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082027011 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094296033 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082806913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098682616 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079265004 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097105711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088280329 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096714295 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073760109 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083093169 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093492771 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073987358 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099699225 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079841902 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101665661 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08268506 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095877058 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072138606 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095003148 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.083032601 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104470727 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072788709 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09516841 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072096708 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099955168 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071082787 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106097592 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073622942 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078167066 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094312167 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104860455 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072215685 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071370902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099115502 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081986534 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094395324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071885006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095077704 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07105375 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094488643 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072019025 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106116186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071657342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105175301 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072701817 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072828907 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093096118 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071419324 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105460686 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070883641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103167947 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072074294 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09472979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07409444 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096406065 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073110898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071263702 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092923896 seconds)
  done (took 7.300801178 seconds)
done (took 27.745428244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.648195105 seconds)
  done (took 1.626381458 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.761626752 seconds)
  done (took 1.742114696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.730001887 seconds)
  done (took 15.716558247 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.608395677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.758669355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.793010009 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155660308 seconds)
  done (took 3.297688067 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.882234417 seconds)
  done (took 1.887479239 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234310721 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223787312 seconds)
  done (took 1.444232033 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73013081 seconds)
  done (took 1.726718621 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.272926668 seconds)
  done (took 2.26093869 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318535605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180248001 seconds)
  done (took 1.491820001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519759128 seconds)
  done (took 1.513088012 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.556348706 seconds)
  done (took 7.554616112 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22914865 seconds)
  done (took 1.239242751 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266384741 seconds)
  done (took 1.264917456 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.125591955 seconds)
  done (took 4.124677056 seconds)
done (took 47.877813136 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077148756 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081606269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103841059 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079133795 seconds)
  done (took 1.334493755 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077783868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073165522 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100186402 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073421125 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100971493 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073991195 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098703498 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077460405 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072414175 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097435458 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073417438 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095963135 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075522513 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098475867 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070271837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07559351 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099574415 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073470722 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099080384 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073761028 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071510841 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098163875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076387238 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094864115 seconds)
  done (took 3.026757263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077074789 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072840851 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097718953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072287281 seconds)
  done (took 1.321964626 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077073794 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115598459 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089045403 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077131971 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115639604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.10995488 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069817715 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069716387 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09474142 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077306305 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091112745 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097615113 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110739293 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078234524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102309263 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065956044 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069002459 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110002828 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077909072 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10115737 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070461583 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079879328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091582015 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090496491 seconds)
  done (took 3.140599065 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076863767 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127561342 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07803999 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113620859 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092353161 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065312112 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099489998 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115359315 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125543359 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089300556 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069963313 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066250565 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096339028 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065834626 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076758801 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133261659 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135723342 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069040384 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122213619 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065617214 seconds)
  done (took 2.895917113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075486209 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070598013 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088875632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06939445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076217154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096187534 seconds)
  done (took 1.491120129 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068289159 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067496319 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09043383 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06647748 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072613743 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090655401 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06626679 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067644407 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090539041 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067154218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066490985 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088769505 seconds)
  done (took 1.911030091 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.381719752 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092414101 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069188216 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088171184 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071183363 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090140165 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081173869 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068172011 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.115005144 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067545307 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091028526 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068635737 seconds)
  done (took 2.2975028 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26077694 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077962047 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322919373 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167669494 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14087072 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155266302 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105666952 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140232497 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198765727 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138176011 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199241681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222994625 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134138244 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167249284 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11469883 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132074758 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186581618 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221312313 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105642662 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223994036 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206714148 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156334741 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180250493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128041701 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134842475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151302524 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072924905 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106119432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232659156 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159945828 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199978636 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137853264 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096930276 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229278412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224398526 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194912629 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162047561 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085199193 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157432657 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164890263 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255822622 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114417451 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19404674 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133257267 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106104458 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171277203 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145635268 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145990228 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136860311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114069384 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172342482 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238815235 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164144559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112051762 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13650715 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141394579 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143369891 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103853001 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266964662 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195195898 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158597873 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095311809 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099586651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209392786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157246092 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14094565 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151852662 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11875839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166735706 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210597623 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145950167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171689621 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18003824 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089340819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145251018 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193695922 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15594581 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228621511 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155330438 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072989669 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150713754 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129326276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1069883 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144677019 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100679585 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207867786 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124433329 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138707687 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139888844 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134671861 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136427469 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19339905 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200613042 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12948319 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067182979 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129778411 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149342376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175238717 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11274761 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134314827 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147144163 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079033457 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189730478 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075891953 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153007249 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103560695 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151730331 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162650752 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075817913 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180112578 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103052468 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128050279 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163182729 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218894855 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116852411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083204468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227206279 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155393227 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132616716 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175331943 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213977591 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102475569 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129616388 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204746337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243426838 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090763657 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223587048 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134095193 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083805739 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113687114 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153642726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139080054 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149068476 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108354059 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152926855 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22616656 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075170833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121817746 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166261557 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082548897 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107016809 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140808324 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126711558 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095952308 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12570879 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13281319 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195877032 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155746997 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109050281 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177518355 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099400383 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22411043 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115830769 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131368276 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105186642 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09566844 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165109815 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217024524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079737276 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225446074 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15398879 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131445666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150010261 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083500491 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194423399 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078973001 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070734031 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200697341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137588592 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136686473 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184018731 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131109608 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155300373 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152497531 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161812762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184190142 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161687688 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133358074 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088563927 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139721859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152403361 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.098559074 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120139344 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083918024 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13109514 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12254314 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084430675 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197194289 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155222181 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126689371 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114480497 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122052886 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204091378 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077782578 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157698563 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145751159 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120418296 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209893072 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187057256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164081353 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126042311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200760049 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072127948 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074164309 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116515754 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154534824 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109378876 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084234228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169895512 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179431397 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156261122 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165144117 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137183519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149232688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212201769 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071646972 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143648773 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179069287 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154305959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153838105 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112565253 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100517589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198721001 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134503242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244352809 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142699322 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152277665 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180529079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.12982927 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105724645 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106413261 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191682616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133158594 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181739517 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127587277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113709345 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138065482 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081575086 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130752912 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154648757 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147781363 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18824613 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143647205 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161158255 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077762438 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144434036 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175349668 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1501251 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065289167 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147192269 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21983107 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122236802 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145806285 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185497493 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104945874 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153230706 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209735339 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200149887 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109551159 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137257698 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15264199 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157204548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146550174 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169994946 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137881391 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163652642 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137333787 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085902528 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113139433 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124499362 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13455286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096111144 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138822737 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144280391 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120159576 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159536819 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137371491 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137526377 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146067661 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124583986 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092216831 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123512374 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233453825 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150151878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232478491 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102004741 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204719926 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225573686 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075712337 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105282471 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081572565 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192837851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086087284 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1624299 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124141607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131689282 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155957767 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172500608 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122936765 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069024427 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136810633 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162796011 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138274449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125194669 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133692536 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222955412 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104512454 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105649526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153237904 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106102511 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128175638 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23266675 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087057236 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098774251 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101372711 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081556759 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157405978 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214011607 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108814687 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.12909363 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143844434 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148319879 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157869672 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127576435 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125458105 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141450147 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179434175 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182404555 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090624274 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139876701 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157379026 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21372473 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133512946 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121957968 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20526059 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212135337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221469407 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090398545 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142250172 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142748128 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136341968 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195204194 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084394086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226765246 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108415263 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167125065 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13205915 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119791101 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159836274 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125202208 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089819086 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2048134 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149096084 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099137058 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106543899 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14686383 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151061096 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134572097 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07524231 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192718528 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073966601 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166008665 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229495136 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107739233 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108068586 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121674944 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108776624 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135857946 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130631371 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087287328 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.143158248 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229130225 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091962077 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206551127 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168927823 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142738717 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192826886 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127126378 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663148766 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079442349 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211912368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148032778 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235022852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09861146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172075163 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111835322 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151237298 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199717264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132654574 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202264937 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161234811 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149283132 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07973698 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129790179 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137823438 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117137354 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133960221 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142663267 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144318929 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126971235 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.14878836 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155867318 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107550917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0967893 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21503978 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146121675 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172556821 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169729001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111699595 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146830003 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194439622 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081559756 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.150442682 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214781074 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134434996 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124370537 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082974918 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13307199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230530214 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073958713 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220105254 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15390589 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137330547 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141712582 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145104299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160562222 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134415075 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179154506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097316308 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140215263 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143524757 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110610724 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103586474 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108329482 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140139472 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126026758 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130189101 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122474013 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207532798 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072312862 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123327973 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129544274 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174020476 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238044469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114468346 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084151054 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146266553 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140499005 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143520772 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153475184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108311588 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108469139 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082462984 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137016854 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111189457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142387014 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130288269 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137813193 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224660052 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084507813 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250361056 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122438149 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13278251 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070692041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105735595 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09666087 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124206857 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135778532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12685777 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205181168 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124015186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116750193 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118796292 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073996575 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083774075 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183219262 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138988868 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149621375 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099541871 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088843872 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137401354 seconds)
  done (took 71.061239239 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131523713 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103376016 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116737994 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172485355 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144478391 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237152822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179821203 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222180582 seconds)
  done (took 2.396610601 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068799383 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116500606 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102205982 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116167938 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088609897 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068640169 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293414876 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.1097906 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067013673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114287709 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11773011 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091591099 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.470746895 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066654143 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094762402 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084660065 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067414264 seconds)
  done (took 3.218680796 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.426870777 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.626992092 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449496423 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07283722 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.901318293 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.10646236 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.377659618 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162467937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090241167 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429351215 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728155897 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149043603 seconds)
  done (took 17.610994586 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074280773 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069059601 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108856876 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082829334 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098690238 seconds)
  done (took 1.524341971 seconds)
done (took 114.225761608 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079516975 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34126648 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053433755 seconds)
  done (took 1.518564833 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08252289 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085153004 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110815958 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082646008 seconds)
  done (took 1.459983892 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074262224 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076434416 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110205371 seconds)
  done (took 1.358134967 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277627229 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16598796 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087331875 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082414312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07776327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103829711 seconds)
  done (took 1.362750574 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072812979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075547805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099101557 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076142908 seconds)
  done (took 1.415014478 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076071435 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052415616 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054803282 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080903475 seconds)
  done (took 1.362726933 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090314295 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105065269 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080390745 seconds)
  done (took 1.370802109 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106543668 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112447824 seconds)
  done (took 1.31760267 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08122549 seconds)
  done (took 1.174250998 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094403351 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.138859466 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153657016 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136701794 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165654585 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136184333 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.112762525 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087828264 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103268933 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.115622737 seconds)
  done (took 2.344106403 seconds)
done (took 16.382147208 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077789131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.487961757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360032521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116726508 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66841611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356658408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005788101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119010849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12036002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094096704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083598333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67585692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969265096 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.444632564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.956479009 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318120306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676302333 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067744105 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093070091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067688505 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964714823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093562081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067520213 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067983619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.689570891 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370541232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093599195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318755755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067578553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095316635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354658637 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094207979 seconds)
  done (took 16.12531659 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070018914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142871431 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072442209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083098154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096171752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069412671 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097753358 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069571008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152177435 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067422893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111084756 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06720473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097551326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068228367 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086631713 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094561689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068757101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068080727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093908381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06909063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112492192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067437494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068116799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093895205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067938677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.105998041 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067600971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067833031 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094073224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070160404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096606906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069064199 seconds)
  done (took 3.826493648 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113539064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151803158 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073776915 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127979871 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112117669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09561535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.169500859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092718453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154365455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067780786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111034399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068626823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126794939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068165802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113211164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068248932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069156528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094921492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068326538 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094036651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086522499 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092978999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067740474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068952566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095363682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080595359 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094188984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068288973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068465066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096219313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071261314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094001895 seconds)
  done (took 4.132300876 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071843539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075000422 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108386391 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083390312 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095127067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072141966 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073287635 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095367811 seconds)
  done (took 1.775344367 seconds)
done (took 26.953354818 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077682345 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070401919 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099305383 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08038406 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099529012 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078298216 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067263063 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100646862 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076117532 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072669282 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101572344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067676473 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09695325 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067380755 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074637514 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093827633 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078970153 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097680119 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079611009 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079932592 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096544574 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076895669 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10117815 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080110358 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105775386 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078875769 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082145739 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099578451 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069130209 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096787378 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076502617 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109831999 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068180046 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079338451 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09438406 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06777472 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068060604 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093775279 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079770784 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100050279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070069419 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099953001 seconds)
  done (took 4.652586511 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087378378 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090734549 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111470376 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065417442 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097082097 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064768067 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114578717 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062953305 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059521287 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11441747 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055143218 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058928309 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089221922 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0540233 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059486794 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056519661 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088145888 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05610823 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059345938 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085688982 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057837773 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054278991 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086935296 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063153909 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055862023 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087443325 seconds)
  done (took 3.046284169 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074046832 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083411075 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114005657 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127237133 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131552899 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076971007 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104746199 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087724779 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112541733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06735282 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071236011 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122238094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087283272 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101082319 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06840443 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114194575 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081272084 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069268017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100427792 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08968445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.110907479 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077405172 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119412936 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081351612 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066743236 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096295624 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071404217 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108019397 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073073565 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077324376 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098930044 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071459702 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096264531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078625299 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071298829 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.09581978 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090089415 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.104149831 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077482001 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068202203 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097517802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069330463 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114494926 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111487951 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094130431 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074818379 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075170628 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103727332 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067780559 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11241667 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076660341 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067026581 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096275069 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066619549 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093944658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080560359 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069516748 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096280613 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076054874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097475829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079682918 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070951386 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109996663 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06735771 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102086551 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066587995 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06832268 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093593891 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090534116 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068601924 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135045367 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068190228 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095215592 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076317215 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102007084 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072988506 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067906697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109523287 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077608501 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097783969 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076304448 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070820165 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097218112 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086853016 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096702154 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069203195 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068566734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.1004822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070035011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095428677 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081532796 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067987157 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097323474 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08435392 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.094395988 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069399846 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074141705 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098679731 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066943518 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105733482 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07295203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068282502 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103084963 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067899459 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097491572 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07764229 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071669703 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092914478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072633521 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100672068 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068181621 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068825492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.097017619 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069364527 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103079932 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073943538 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072329732 seconds)
  done (took 11.24500851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.189990758 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192358521 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069826067 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17704003 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.0760529 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107427096 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178202717 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095288089 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095673177 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068343173 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068977377 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.129247104 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123696078 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105643385 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105632592 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067380591 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113273787 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104351142 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179011819 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17449691 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114737939 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075611172 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069498568 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09718315 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069659343 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10512257 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084596454 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102285589 seconds)
  done (took 4.265875128 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081704476 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128494775 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073797769 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089080333 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118082283 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068573128 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100815925 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069498806 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107520713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079912833 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094845139 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073161284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074114898 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105038578 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068374022 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104811008 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077330574 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069066866 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097539694 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07244112 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104285549 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080180462 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071584208 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094031049 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073459172 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094124149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064577262 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.11238116 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068091249 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116872415 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066867363 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073659604 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10814064 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06845544 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094490866 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070757016 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070258831 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098658213 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069221507 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066201329 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093853561 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057741778 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066160366 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10731158 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074131267 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08682269 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073800538 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073235644 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099590852 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065443001 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097653491 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070506169 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070963617 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103894153 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072965965 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073232445 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098988034 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065940867 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102935833 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071956021 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064366591 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094168266 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072528326 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0669819 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.103336997 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072143419 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093612495 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071298853 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072759102 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101215772 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071543938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070389538 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092487597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06941153 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099684056 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07282348 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072319954 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093834861 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067417915 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068031211 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082587441 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067084268 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053841973 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098179898 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066482792 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066203139 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097971304 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07394631 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108081393 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068404233 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100292116 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069188814 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067409783 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.09791752 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063492752 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070296682 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110456939 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110356346 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068094645 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065359206 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10927379 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071909705 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066977922 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083706584 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073852341 seconds)
  done (took 9.774082251 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094990471 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091961433 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.097063051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082187466 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122553592 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09160032 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102190539 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073831376 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069715856 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11249444 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068200817 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103180112 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068608538 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076616107 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122638104 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075027721 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096957986 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076842034 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07238662 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134685199 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082948251 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109152093 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.08021873 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095877248 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072733779 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079926831 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.123043473 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079616126 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105690422 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.0846976 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079372654 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.12232235 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085422816 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098717151 seconds)
  done (took 4.273554336 seconds)
done (took 38.360211965 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.19393992 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.411147905 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.185491433 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.085281877 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.197688089 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.200842997 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.214921247 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185814161 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.362664304 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.186350031 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.500561591 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.847007272 seconds)
done (took 58.703712501 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.191382391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.321983241 seconds)
    (2/2) benchmarking "String"...
    done (took 1.451289549 seconds)
  done (took 3.902188854 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.550420868 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.064051 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442035899 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.18253064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.193696537 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486644399 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.765737089 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.991674808 seconds)
  done (took 27.254469089 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.18628643 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.541004426 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.468336039 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.47940598 seconds)
  done (took 17.804697489 seconds)
done (took 58.832861566 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.180155066 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.22141124 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.183734972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169375671 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.290785882 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.206759381 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.454370297 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.417318701 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.190691134 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.19423869 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.184989901 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.186376355 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.186687858 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.491197785 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186807253 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.1872648 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.254587299 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.741681097 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.56850472 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.198677174 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.190806348 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260793559 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.197766628 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.197243312 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.215795034 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.186141321 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185752504 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.191707905 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.371729732 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190720608 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.273541208 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.675523388 seconds)
  done (took 190.961365505 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.184947141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.246251325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.338351586 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.21885393 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.568201449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.384445353 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.324803642 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.696813176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202419401 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.19542062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478106252 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186804579 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.522665298 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.150298305 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.196553659 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.293418363 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.363352358 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.512166238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.201815331 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.424210541 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.192661127 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.438292712 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.369781362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.422716534 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.225661463 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.254082736 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.188456033 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.199898732 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.374853278 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.31385201 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.188847302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229367535 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.729967581 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042554942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.182087806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.212951708 seconds)
  done (took 149.386413243 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.435566748 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.181326003 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.180835522 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182037035 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180414491 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.209871024 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.181001279 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.687334864 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.687286117 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.682426707 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.385252803 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.240165346 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.391880035 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.18152069 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271302518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194405319 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.183074458 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.195457945 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.205075328 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183325173 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.181364871 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.684194299 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.194762776 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.438878406 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.187315988 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.18077021 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209909996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.572849084 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.181598622 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.209441696 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.454605239 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.492886102 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.222820897 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18242871 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.182023659 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.464329803 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.183943272 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288014552 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183514082 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210541824 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.182160345 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.446432541 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.182773173 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.182279149 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.185148751 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743617796 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.184127676 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.686718151 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183480068 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.04260739 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.181579403 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18312414 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.832489268 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.613385596 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.184253989 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18234821 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.185126225 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18255478 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183453181 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.210572661 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.704498307 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.279356301 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.184968458 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.186287677 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211417361 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.183864041 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.327063018 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.18367561 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.564564075 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.240398456 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.292728132 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.686553797 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185766911 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.274809336 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300198616 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.183366603 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.182840221 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183591224 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.183634909 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.288032122 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.183434992 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.561633684 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190313349 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.184895694 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.184133509 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.241356715 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.27505919 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.184122604 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.460697657 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.186452039 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.183944634 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850413209 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.273856487 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.18410187 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.184589988 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185140526 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.562394793 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.68987013 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327326523 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.187081366 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.555651476 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.184228173 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.57285448 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.670360475 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.757062207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.186943424 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289276276 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188739999 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.186702833 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.185172195 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213904247 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.185847168 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.245833602 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.185295923 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.578156616 seconds)
  done (took 342.897639504 seconds)
done (took 685.810774009 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.859021974 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.841119269 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.94248529 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.838979244 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.820077071 seconds)
  done (took 10.431149095 seconds)
done (took 11.56061885 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.357995212 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.357314638 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240391388 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.361444305 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.211788034 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.373248103 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.337264123 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.207970576 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281918069 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.255735231 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.280802288 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230900492 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.211588935 seconds)
  done (took 17.838067494 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47955672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.47946028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.251196742 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482871072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225984636 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.488756169 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376888061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.382351582 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.370513794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.202074755 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.200895841 seconds)
  done (took 16.071816992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490894846 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480356087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25385237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.490707348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.228282823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492212101 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375734263 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.384723226 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.372263702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.201538024 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.201552914 seconds)
  done (took 16.103759286 seconds)
done (took 51.14364881 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.195704519 seconds)
  done (took 2.327286112 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.228109769 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.389357249 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.208687327 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.199884669 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.19610819 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.197308634 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.201002821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.195975957 seconds)
  done (took 10.950830319 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.193740565 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.193638819 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.193339719 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.193430908 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.196345688 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.196213142 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.196796318 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.19705736 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.194489775 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196330879 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.196973192 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.194830803 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.194174396 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.19643565 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.197048539 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.194573582 seconds)
  done (took 20.258719825 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.196485429 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.194786936 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.193369668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.195078352 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.194309672 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.194190541 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.196069072 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.195082733 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.193709415 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.194847551 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.194885147 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.194144197 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.195551217 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.194981427 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.194498597 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.195153441 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.19560254 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.195478487 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.199965581 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.194526986 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.195733245 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.195506494 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.195886901 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.196022228 seconds)
  done (took 29.82125238 seconds)
done (took 64.490192946 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.150860171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.749535973 seconds)
  done (took 9.033815488 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.197900227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.197940267 seconds)
  done (took 3.532027233 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198473048 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.198072717 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.197510047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.198340851 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.198406389 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.198207122 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.198519694 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.198314956 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.19781181 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.197589455 seconds)
  done (took 13.115665087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.198327208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.199121948 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.196931657 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.19827058 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.198697569 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.195695492 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.198769933 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.199059579 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.199041355 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.196680904 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.199120005 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.1971227 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.198913745 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.197940938 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.200111606 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.198088857 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.197137125 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.196816393 seconds)
  done (took 22.701642029 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.199911496 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.200178718 seconds)
  done (took 3.536413212 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.196508182 seconds)
    (2/7) benchmarking "second"...
    done (took 1.197195982 seconds)
    (3/7) benchmarking "month"...
    done (took 1.196896521 seconds)
    (4/7) benchmarking "year"...
    done (took 1.196022144 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.197702813 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.197274754 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.198161844 seconds)
  done (took 9.516382653 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.200701576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.377202767 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.452290076 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792494291 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202419807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.204652376 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.99371649 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.204131309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.205786938 seconds)
  done (took 13.769805939 seconds)
done (took 76.339589022 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.181065213 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.196760911 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.006325516 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204022076 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.212399272 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.496027574 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.191772552 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330090106 seconds)
done (took 36.954744451 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.209337013 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.900266836 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.939156704 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.194480417 seconds)
  done (took 11.170965997 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.178221219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.07073396 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.183938769 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.168203819 seconds)
  done (took 17.739782935 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.784687872 seconds)
    (2/2) benchmarking "read"...
    done (took 1.526918554 seconds)
  done (took 4.448833245 seconds)
done (took 40.705524469 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201268893 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.200954078 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198150825 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.199235 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.201647546 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.198684068 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198619807 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.198939784 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.201882824 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202032627 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201740484 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.202052471 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.202039163 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201738176 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.201852406 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197959429 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.199582045 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201563047 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.199284797 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199048525 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.19909063 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201381024 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.199725792 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.199931052 seconds)
  done (took 29.946813938 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.202357612 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.200652425 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.20233884 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20263113 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.199958306 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.202733961 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.202794027 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.200081801 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.203314952 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.202521089 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199491529 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.201011398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.202880259 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.201049505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203034749 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.199939412 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.203796686 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201494083 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203206112 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.201502657 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.203544388 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200796792 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201763131 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202949871 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.202137662 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201052524 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.203859525 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.202129061 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203695077 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201828986 seconds)
  done (took 37.20023675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209180961 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.212347553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204538622 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204643576 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.204156111 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204688974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.205630513 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205990231 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205443981 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.207658094 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205565005 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206076016 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.20625194 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.20583816 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.205774807 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.205696698 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2055537 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.205267645 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.20651125 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206027331 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.206004785 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.20632387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.20608565 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.205502348 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.206983144 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.205679377 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.206155314 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.20566019 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.206352931 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.205596595 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.206398048 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.206011636 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206443484 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.206712159 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.205771024 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.206614022 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.212332793 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213298967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.205612802 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.206052706 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.206655797 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206151525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.20718194 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.206498294 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.205748802 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.20733026 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.206729866 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.206022193 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.207511752 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.206634296 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.20751234 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207165239 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.207832776 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.207022115 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.20791021 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.209203398 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.206846513 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206640199 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207729391 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20754122 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.20673888 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.2085365 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207096532 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.207807807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.208348989 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.207410303 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.207456725 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208145834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208248632 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207739793 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.207736856 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.208530574 seconds)
  done (took 88.036563532 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.207699518 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.206730591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.205288521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.206321248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205225664 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.207936724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206567085 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209106405 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205903102 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.207740654 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209204142 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207320602 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.206864826 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.209059726 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209276676 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.20563763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.208348843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205782244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209217815 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.209652561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.208406229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.207245948 seconds)
  done (took 27.709932342 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208414303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.208942624 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206642674 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.209427853 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20671692 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.210382698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209440413 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.209781678 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211271059 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206869457 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207078432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20924754 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207764884 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20837472 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207341527 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.208467337 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209249011 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20800283 seconds)
  done (took 22.89957167 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.207760348 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.208476796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.208827405 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207079651 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.208761745 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209595629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207859964 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.209594373 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.209111375 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.20775352 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.209973247 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208925758 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.211151602 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207789095 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209355123 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207604602 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.210501985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207140785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209502018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208452345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207486716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210450681 seconds)
  done (took 27.739621114 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.211312631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210916793 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.208324283 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208051508 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.207589099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.211354175 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.210779925 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.208724708 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.210794975 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.211091602 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208165044 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.211222556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.208998536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.210116426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.209715025 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209977668 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211823068 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209338336 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212147227 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21047863 seconds)
  done (took 25.347708553 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214061025 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212649902 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.211947894 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211759515 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211805981 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212891104 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212648202 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.211946694 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212291777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213105726 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.212075188 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.214101737 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213307019 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213642231 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212295755 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212794943 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212627568 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213985454 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212885909 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.213828662 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214286693 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214281762 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.213389635 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212312211 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212772566 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213331808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.212999866 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213470777 seconds)
  done (took 35.112194469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213572365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212430242 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.211501315 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.212340702 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.211620493 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.211771123 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.212215847 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.212781485 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.213875597 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.211386047 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.213826665 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.214241883 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213886941 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.213260278 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213930569 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.214363266 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214312642 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.212109778 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211528453 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211432061 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.213704414 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214838681 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.21487374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.212063124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212235021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.215065359 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212375826 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213540356 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216589741 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.212602856 seconds)
  done (took 37.544402929 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.232800967 seconds)
    (2/2) benchmarking "in"...
    done (took 1.233908882 seconds)
  done (took 3.617876172 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212221276 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216261611 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.214428649 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.212473535 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.213287675 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.215971769 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.215703417 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212854407 seconds)
  done (took 10.864867799 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.214093063 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.215158465 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215833386 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.21464829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.216073437 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.21618315 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224017622 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.230938862 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.216894311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.215276672 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.220184182 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.22278793 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.221042434 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.215266292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.215684761 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.218012748 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.215361295 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.216899479 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.216463768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.216447438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.216788602 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219417311 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219390061 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214055773 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.217679701 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.230220118 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.224066444 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.215496644 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.215612424 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.223879392 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.216474217 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.213625048 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.218263358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.217018484 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216958384 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.216967526 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.228575817 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232327368 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.225085278 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21862554 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216837428 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.214569611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.219364483 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.219543089 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220157685 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.217952243 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.21784172 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.214178469 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.216781779 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.219724424 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.222329094 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216216983 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.215252923 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224705308 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.219568764 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2275289 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.233799579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.219986559 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.225581962 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.23022582 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.233331707 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.225085192 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.220237856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.218690283 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.227177147 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.24284705 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227726008 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.231464176 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.216383906 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.218707752 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.227496004 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234010177 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.228401436 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.218551298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21878056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.218916777 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219300777 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.218467139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228925951 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238568345 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220933114 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21939768 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.228650914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24244365 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.218826166 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.219642059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.219530646 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.220367211 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.220288478 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232189631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235716989 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.21975456 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.218940948 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.21990056 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.223000045 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.22031686 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.219260571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.221034303 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.218051236 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221442902 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22208054 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.224886566 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.231537898 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220960404 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22075133 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230082374 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.220975955 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220395977 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232240108 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.221141246 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220501354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.221372341 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.229191722 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218566076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22375704 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230516807 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.221031193 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.224473413 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.221177384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.221914406 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23112814 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.249522283 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.222733463 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.22162409 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.22684523 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.233873739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222033404 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.226528124 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221727584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.219796759 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.219653819 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.224929528 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.222417612 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.222816089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222088156 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.224379907 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.220043823 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.22321021 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.222443555 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.22340354 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.224092034 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.222504876 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.22381473 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.225812315 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.222458404 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.224789661 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.230996646 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.223070745 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.224718181 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.224486475 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.220602847 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.222976045 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.225604119 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.223622009 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.223411089 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.222568652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.222445883 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.223625988 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223441077 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.224118571 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.224170433 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.224460774 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.227498344 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.223530552 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.229494414 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.222657283 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.221519827 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.224410672 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.225825812 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224687952 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223856888 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.223031412 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.226917786 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.231169266 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.224778327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224656363 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.229462142 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225389563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.224422585 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224673715 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227957957 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231646951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225934778 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233591221 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.22562254 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225680996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.225706742 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.225213795 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.22403048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224466324 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.226796463 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232322353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23952199 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234200622 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.225981656 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229378279 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.225815501 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228247241 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.231672232 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224373137 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226147826 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225335962 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225054002 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225736926 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.229583502 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.22704425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.225419529 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.226323425 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227190993 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.226283983 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227024946 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.227488986 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.227729652 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.224217471 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226802648 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226477084 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.225790717 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.223603062 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.225558521 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.224472492 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226899685 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.227370847 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.236672514 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.224622772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228076914 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228890367 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.226924471 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.225725447 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22682497 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230022784 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.226805151 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235758402 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.243249976 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228531014 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23546776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.242611146 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.226445651 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.231768431 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.228641455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.22540154 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230119017 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235559613 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229104025 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.228082233 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228268194 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.227114822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22793491 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.237434547 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.227310851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.227273186 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228627468 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231225875 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.226141628 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230721974 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.229310223 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.228742889 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232075554 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229970202 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.228690459 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.230907999 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228089651 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.229429135 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229069571 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231294945 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.237585371 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.235621387 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.229780692 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.232939979 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229627945 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233213168 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230336339 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228711863 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228387771 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243378604 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.238898938 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238250349 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.232942713 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.229676694 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236560977 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.229190465 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.234105008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229901053 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231148944 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.229195429 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.230210909 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.228433999 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231792711 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.230892953 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231653779 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231449985 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234298008 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.231137449 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.228871672 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.230033904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229947069 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.231333105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.230625471 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230740434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.234390553 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23349675 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22995914 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.229990942 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23941436 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246782394 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233161567 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.230293632 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.231157998 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.230323227 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232940167 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231178453 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.233533193 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238633353 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.234669452 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.241357499 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233029085 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242166604 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232115084 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234101956 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238777168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.229712793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.230139265 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233966027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.231582604 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241095211 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.247396645 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.231868998 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.235846092 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232419877 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232809004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232634194 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.233281013 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232463681 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.232160009 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243326993 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.247828318 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.235321895 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235575101 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.230424157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.233019397 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232797551 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23120745 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238664887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.23329199 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233647793 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23273463 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233571137 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232655738 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233689036 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.233543112 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230552015 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233751189 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24282102 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.249663667 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237602896 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234422881 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.245118145 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233722339 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243228165 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.249816257 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.235687117 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235095109 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.23491314 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.23827603 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.233175407 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.235914456 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23317437 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.234365226 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.23745326 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.233293443 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.237507057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.234545748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.234589667 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.235113264 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243070829 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257325377 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.236239308 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23916861 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233284461 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236066262 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.238154516 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.234374834 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233326652 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236960085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245299709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242570326 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.236134382 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.234931463 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235906203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236272753 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235138633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.23646021 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.234947166 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.23565466 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.238140654 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235181543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241754489 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.235260848 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236281315 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237659687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.236789025 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.247550826 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236457116 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.23674024 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235251302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.236203649 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23738363 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.236674439 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.236123552 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237244582 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237678452 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.237785809 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242411559 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.241746338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.240753858 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.23634169 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.236413707 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237507008 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238783074 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236702595 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.23669295 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236760599 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.238354491 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237284998 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.239930278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.236031705 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.236630385 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.237985841 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238247528 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.240939378 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.24327122 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238339761 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.234852639 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.237729479 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.237479711 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.236565857 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.238039767 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.24965716 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241305336 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2480012 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245573821 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.241810509 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.237759919 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240868713 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247209136 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237372441 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.239111892 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.23839163 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241444376 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.239036273 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.241688498 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239394944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247440257 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239247634 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239374947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249777583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.256040727 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238832824 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.240220982 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242196815 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.239901128 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.235739438 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239899063 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.238263831 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248089674 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.257305964 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239918588 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242012404 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.238440529 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.240234791 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242941568 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239444137 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.241221267 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.23812707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.239761181 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239246482 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239907831 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.237315242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.239904575 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.238426761 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.242671596 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.246229034 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.237263896 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24258905 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.240326148 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.241386209 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240109161 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240577195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.238461097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.238185019 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.240184451 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.240330739 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.242030094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.243812487 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241053081 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.241181919 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.241795149 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241870963 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243654898 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.250152179 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.247644706 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237904982 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.241883603 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241069648 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.245645459 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240680839 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.241428587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242529628 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.244188587 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.240932362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242196218 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.241121368 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24484953 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.259593275 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.257198281 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242354592 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.242517221 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247902094 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.243003266 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.240212222 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242413248 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245019543 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246277119 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249103616 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242680187 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250268952 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257726229 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243247811 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.246304297 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.24599768 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.249830025 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.246991939 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.242833782 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.242372109 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.246917556 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.260454309 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243054301 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252126517 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27596325 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.261093421 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.24471633 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.2441728 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24231019 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.243490664 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.245888929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.242939339 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.242647477 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243883199 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.243360861 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.244112744 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249244604 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.245806981 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.243380688 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.243478143 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.243589626 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247404139 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.241256606 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.243752558 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.243678328 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244477018 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.244290912 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.244354786 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244321773 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258519061 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.256715767 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.245672196 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.244950353 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241581191 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24990758 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.247362362 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254567243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.251151054 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.244336407 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.245285106 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246987526 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245520266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.242575513 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.246006684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.244684044 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244346854 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.242892845 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.259956417 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255916085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.251418147 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247450731 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246612955 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.24499095 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247790728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245410748 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246145983 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.249250316 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.245419843 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249565791 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.246448773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.247147682 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249472401 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.252196183 seconds)
  done (took 736.20267306 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244194034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243768319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.24429182 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.24342419 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244197648 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243340412 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244206736 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.243477131 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243833728 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243943935 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244514016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244030097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245154098 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244856072 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.243919883 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.245037395 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24422029 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.244430263 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.245389829 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245031697 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244931513 seconds)
  done (took 27.312245978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.247106409 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.244462161 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244019671 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247096714 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245123692 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246947018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245012743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248184076 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248077021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245097571 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247634213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248035332 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.246033189 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.245389249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24568094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247736132 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247958867 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246364455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248578597 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245623981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248102266 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246956575 seconds)
  done (took 28.608369441 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248181679 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.248046389 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.247348544 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.244728235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248697255 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.246594999 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.248308998 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.24830064 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.248097492 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.250626489 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.247553263 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.248815318 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.25573695 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.253383191 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.251651473 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.248452431 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.39394107 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.248655139 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.248854292 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.247781659 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.247199814 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.256916542 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.246136635 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.247047733 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.247586433 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.249313101 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.249913889 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.249284208 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.24912215 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.250354548 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.253165057 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.249246575 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.249254635 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252334273 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.249162773 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.251116836 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.253494698 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.250557826 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.247693755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.251833899 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.261247092 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271249577 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.251108685 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260333287 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.251429676 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.251913081 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.253790023 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.258173011 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.248936459 seconds)
  done (took 62.617868187 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.250730791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.249906043 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.247602018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.25207024 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.250171891 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.251097209 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.250739813 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.252462552 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.249661008 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.250092769 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.252138437 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.248910393 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.248399312 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.251887424 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.251629438 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.249820525 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.248966164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.249828252 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.249489424 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.249154511 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.249169651 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.250897463 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.252809942 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.250423042 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.251648074 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.250274346 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.250184304 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.252628944 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.24963537 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.250390341 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253566677 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.253341649 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.25334469 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.251603547 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.250495856 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.252500181 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.252918491 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.250726635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.252990831 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.25062176 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.252741355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.253348536 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.252946072 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.253615539 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.25038627 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.250273681 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.250355551 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.252073389 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.251876096 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.253709644 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252948172 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.251879209 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.253311039 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25029805 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.253212203 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.253813139 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.251221891 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.251479683 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.25531476 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.252384228 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.251836356 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.254558389 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.252030761 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.2546319 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.254647735 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251994683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.252701789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.25544416 seconds)
  done (took 86.299680308 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253960256 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255664139 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254396312 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253924231 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253002895 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.255048908 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.255010284 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254871018 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255216341 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25528874 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255366361 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254569606 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25409916 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254473666 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254905873 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254728347 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255135646 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253834149 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253941024 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254846544 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.254606569 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255120781 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254761328 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255867279 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255431714 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254776859 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255083618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.255471257 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255377326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25545587 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256568913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.254623959 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255268165 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255519105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256924864 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25549655 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255644893 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256247728 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.254715303 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256604478 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256057891 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256752231 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255797462 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.2565331 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256992605 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255080404 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256350093 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.256348992 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256616575 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25589818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255951806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257346835 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256221989 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257064765 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256163405 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256772741 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256976733 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.257641902 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256566409 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256777735 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25757215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.256872615 seconds)
  done (took 79.037347583 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25762218 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257161803 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.25654639 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.254895856 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257544928 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255395295 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.258559738 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.258420421 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258218541 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.257482492 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259616596 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256253846 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256026504 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258801187 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.255813554 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257327928 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256397107 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2570525 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.259366135 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256463796 seconds)
  done (took 26.337661695 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256546276 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258303232 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.256292309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.257180606 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.259254848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.257400625 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.259912388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260001332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.257689296 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259287292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.260386085 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.25901675 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257601279 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257834662 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.260308373 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.258492668 seconds)
  done (took 21.329776212 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.256505494 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258683575 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.259312663 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258591747 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.255779949 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256373972 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.258937637 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256711944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25689425 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260115545 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.259334999 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.259279572 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.259941122 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259882448 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.256618105 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.260129429 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256743443 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257867511 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.260311262 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.260875482 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.2582105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257537737 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.259610458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.259750898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.257429145 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258520128 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257875783 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.256602434 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257734377 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.262717636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.257724385 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258473933 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.257974516 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.258280729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.260106991 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258117476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.261044949 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.261765875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.260490123 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.261179585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.260922257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258297282 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.261401599 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.261259545 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259151834 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.260911334 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.259095827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.259242862 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.258636411 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258391301 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261668138 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.261292881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.261774653 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26293656 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.261746482 seconds)
  done (took 70.453249564 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262516201 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262294641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.260074006 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.261778325 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262640795 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.261705646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.262973319 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.259802611 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26053113 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263163562 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260837628 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.262223267 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.261136838 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.262664611 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261338504 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263227078 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.261021101 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260647383 seconds)
  done (took 23.908018333 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261959379 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.261648692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.26293009 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.259798563 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.259779088 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.263931635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260475604 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.262115214 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262366424 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.261752594 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261626034 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.262799231 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264343236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264191144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261242415 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260968959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.264538141 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262381472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.260973271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26173671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.263916559 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263293341 seconds)
  done (took 28.966845838 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.26281739 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.262372749 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.280282719 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.307730347 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.295524504 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.262140855 seconds)
  done (took 8.869290709 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261718293 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264934477 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261674278 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263958527 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264695452 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262263761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261685044 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262398146 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264247863 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262512151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262103814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264793443 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264619379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262623809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264809023 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265802386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262883873 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262119295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263480539 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264801034 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262158221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265793442 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262673609 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262619537 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263819464 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262823618 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264928336 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263134393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26300812 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266315956 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265666686 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263616792 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265997521 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262959921 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266270021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266024803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263389336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266578558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26579819 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263415601 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265795603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265461165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266337454 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264061032 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266505445 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264174183 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263892512 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264186844 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264511908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267198319 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267756545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264286334 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267544038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26749945 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267050695 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267899758 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264725572 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263665945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267542576 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265142209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264212573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266869589 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265141329 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265463976 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2679003 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265155437 seconds)
  done (took 84.666522208 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265506954 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266013767 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265230386 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266106127 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265499124 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265667974 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266419392 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265298433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265249545 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265777979 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268704886 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265455922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265250697 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265606441 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265116647 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264996344 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265372082 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265935591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.26686837 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269031784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266168282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26656336 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26614464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265580745 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265924222 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268767854 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266842789 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266471338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265598932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266468599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266602275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266582189 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26633915 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.26614948 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266089721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266159956 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267431666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266673894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267030733 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270007212 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267619839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269806071 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267616489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267306079 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267438489 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268001879 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267636858 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266593546 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267225783 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267273123 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267674915 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267768712 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26790702 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267824028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266924761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268896725 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268092067 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26758153 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267718337 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270756236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268454336 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268132832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27112647 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268589286 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26802649 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267833761 seconds)
  done (took 84.826711502 seconds)
done (took 1716.593384366 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.34614542 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.288308499 seconds)
  done (took 13.839446399 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.433166751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.386877706 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.268728118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.295605348 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.269402538 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.286288797 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.277797747 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.269865169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.268823353 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.269469458 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.268899333 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.459179053 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.268425135 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.269639131 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.269041861 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.362075563 seconds)
  done (took 42.137382556 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.297919869 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.276310231 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.382276146 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.293233744 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.296579704 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.447752702 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.328196396 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275194683 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.436298949 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.316361531 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.75371227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.297594556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.274612434 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.325747595 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.291458709 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.447930064 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.512206679 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.761019282 seconds)
  done (took 29.220295332 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.701271422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.279459191 seconds)
  done (took 9.189354339 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.277475261 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.294949874 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.305714292 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.298415196 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.298916972 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.284360993 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.271203617 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.289326047 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.346179779 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.278814779 seconds)
  done (took 64.159670357 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.292834529 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.275933618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.275338213 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.273401712 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.266171242 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.269159149 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.273161373 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.268982472 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.729413279 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.395934985 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.290929983 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.281413209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.275359278 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.276816325 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.272338761 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.311253444 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.427336585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.271650331 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.272511676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.282271892 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.275139985 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.356211232 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.313573047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.272835067 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.393758901 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.729812788 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.280018616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.282015366 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.411856732 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.273251796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.274905827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.276379149 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.277447409 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.837770023 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.717739815 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.2844567 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.298950794 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.284470881 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.274288385 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.39597512 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.276858563 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.284267086 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.268680275 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.694558589 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435901644 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.384353027 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.483537597 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.27794814 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.276908431 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.33705293 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.277377768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.277139664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.30428697 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02502466 seconds)
  done (took 107.607868462 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.273296801 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.759294678 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437588442 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.289118798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050713513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.944192831 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.273103395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545122556 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.299299639 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270813236 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.605062081 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.76336121 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.277625881 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.289253591 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.913822644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325431853 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272154963 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.036689315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.273351527 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.271564153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691087488 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300778798 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.273310726 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.437653437 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.310262419 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.734999324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.689119953 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.716095834 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.276387147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.270222724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.726557726 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274343298 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.276782568 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.272361064 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.54267206 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.626248682 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.606895062 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.279723277 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322672336 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.273228057 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.301505135 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729258331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616477213 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.273608988 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.274686526 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73673594 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.2736132 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.278850354 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.273762541 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47238379 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.002130789 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.272522917 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.696699583 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.274634228 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.530015216 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.280329364 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331158803 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762738063 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.273820523 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.348896698 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.300442491 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.273158331 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271948305 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.273722604 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.273809036 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.621196102 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.382829237 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.274393533 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.620948849 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.722896062 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.274032338 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783271187 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162526567 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.276961553 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.340963739 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273785636 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.850763005 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762158759 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30971798 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273738834 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.607396572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.276349782 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.587299417 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.286281031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.275785409 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702506551 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.293737358 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.274501628 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.274476318 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.276781437 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.896434677 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284048096 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.53650645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.326405861 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.274551654 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.275109164 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.278315031 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274484694 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.276678911 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.27996165 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.787899011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.275882214 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.575974223 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295255207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2760235 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277216066 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.276826039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.275422618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.489871652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.825738549 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.279114079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275397878 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.27564998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.279585171 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423673597 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.276795179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.578683761 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.279528503 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275198411 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.296042663 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.976081769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.283201044 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275428014 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.276292218 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.114833271 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.484895978 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.293084692 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.276291797 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27750499 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292979561 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.671126756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.27765896 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.306511758 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.278781552 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.969960596 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.279699583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.292060447 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.654385033 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28635574 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276951733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.284618681 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.277150763 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.583458643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554195302 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.31631364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.278976638 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.294969549 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.969119101 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.281709544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417341101 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29668672 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.290595735 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.474747036 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.606145213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.278176638 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.84178251 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.278035477 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.488034274 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.277971061 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593546758 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.756572546 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27968645 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285882504 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.972912132 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.95502252 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.930337972 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.278045807 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606664865 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.247443843 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.731552144 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.278189743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.278718848 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.706499293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.281615553 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.279668053 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.277992418 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.279333913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452797212 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453819069 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.151467365 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.282076009 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740864138 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.294223593 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.279229629 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.286798519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283532613 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.631958561 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36674883 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.285529777 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.297654946 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.279781161 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.283786577 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.748547112 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.18679604 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.282706348 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.432557315 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899646947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.28162809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.280663001 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.992370699 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.515424529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787940293 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.313838286 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.586089703 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.28486746 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.320404714 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.995217634 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308888789 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.793786662 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284676436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.282421565 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878801433 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.281971142 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.621224312 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.280532266 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.279775521 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802626852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.282210477 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.281125663 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.656794991 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284024762 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52654551 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.282643042 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.332880997 seconds)
  done (took 1098.46813392 seconds)
done (took 1365.826770602 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.280519148 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.283092325 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.270441044 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.283511938 seconds)
  done (took 26.33944831 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.2902099 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.287486947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.289274178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.287880207 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.289686312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.288299689 seconds)
  done (took 8.955784469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.556874057 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.280977677 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.282688683 seconds)
  done (took 19.343905149 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502607082 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.506635068 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.647041323 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.377715726 seconds)
  done (took 10.258676925 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.289239338 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.28920725 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.289912885 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.29035211 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.291825581 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.293186837 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.290127105 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.291727835 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.292328117 seconds)
  done (took 12.840497374 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.130430443 seconds)
done (took 84.090540778 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.395811033 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.346991136 seconds)
    (3/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.877405818 seconds)
    (4/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036971399 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.373596393 seconds)
    (6/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.416492821 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.698542866 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.441552449 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.292916367 seconds)
    (10/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895175707 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.752880582 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.643645966 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.55825405 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.339923348 seconds)
    (15/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.283169531 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.313712946 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.661257312 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.71511422 seconds)
    (19/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.667001904 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.571281292 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.846493932 seconds)
    (22/309) benchmarking ("sort", BigInt, false)...
    done (took 6.288307851 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.923534212 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.684333229 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.127585851 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.315964892 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.396070576 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.308308555 seconds)
    (29/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.804113574 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.652826048 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.709423777 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.389138015 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.412511444 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.330627169 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.926888643 seconds)
    (36/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.351375403 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.296436982 seconds)
    (38/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.111497392 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.287871021 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.3342799 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.501406643 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.287588034 seconds)
    (43/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.270096351 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.454141803 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.403667113 seconds)
    (46/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.890087506 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.59857408 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.544275335 seconds)
    (49/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.499356339 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.27386118 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.305392535 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644772414 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.594841395 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.859458864 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.830130269 seconds)
    (56/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.371848296 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.343063185 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.272166398 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.141654164 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.707237906 seconds)
    (61/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.376080033 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.730595276 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.27321177 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.785340302 seconds)
    (65/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.289055515 seconds)
    (66/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.298823342 seconds)
    (67/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.603853941 seconds)
    (68/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.476935815 seconds)
    (69/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.314183714 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059451509 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.861616672 seconds)
    (72/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.083102224 seconds)
    (73/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.353298735 seconds)
    (74/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.285770491 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.375345338 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.82850059 seconds)
    (77/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321577351 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.18664661 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.312820157 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.685081334 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.463765446 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.360031139 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.320282737 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.851703486 seconds)
    (85/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.343621708 seconds)
    (86/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.30641788 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.137350284 seconds)
    (88/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.86883116 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.291339781 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.175645401 seconds)
    (91/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.398393718 seconds)
    (92/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.68744039 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.911776205 seconds)
    (94/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.401376764 seconds)
    (95/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.660105385 seconds)
    (96/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.488112233 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.274040488 seconds)
    (98/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.150818138 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.618092589 seconds)
    (100/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.504071731 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.049506666 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 5.299046069 seconds)
    (103/309) benchmarking ("sort", Float64, false)...
    done (took 5.577677523 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.310182984 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.297205222 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.091300119 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.503206015 seconds)
    (108/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.347470754 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.291001933 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.937292593 seconds)
    (111/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.102635207 seconds)
    (112/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.140754903 seconds)
    (113/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.319180213 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.754372499 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.332629133 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.29010659 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.188715947 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.100395851 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.290486107 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.3285834 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.856447084 seconds)
    (122/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.645453503 seconds)
    (123/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.301763934 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.132725469 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.295005392 seconds)
    (126/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.320352399 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.030756774 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.802715554 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.313232343 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.305985081 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.548816858 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.413215281 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.356879594 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.276434888 seconds)
    (135/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.665984283 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.025329943 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.546338333 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.645011799 seconds)
    (139/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.575563619 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.734015083 seconds)
    (141/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.480319953 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.304653168 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.138620871 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.394146402 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.89007518 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.660528435 seconds)
    (147/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.318074172 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.315646466 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.029833761 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304969292 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320336241 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503458034 seconds)
    (153/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.891843577 seconds)
    (154/309) benchmarking ("sort", Int8, false)...
    done (took 4.346857488 seconds)
    (155/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.391452982 seconds)
    (156/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.714609521 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.935247791 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.629957444 seconds)
    (159/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.37220534 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.566366702 seconds)
    (161/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.405992428 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.69204438 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.332819191 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.375505726 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.576681702 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.075940523 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.294234415 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.624040763 seconds)
    (169/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.047301086 seconds)
    (170/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.65733034 seconds)
    (171/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.171305776 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.625191575 seconds)
    (173/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.27964495 seconds)
    (174/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.76719913 seconds)
    (175/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.850480947 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207402921 seconds)
    (177/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.83383194 seconds)
    (178/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.680603613 seconds)
    (179/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.381298152 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.255083807 seconds)
    (181/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.479807835 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.367775857 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.309139128 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.729994644 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.2937185 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.630727487 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.835425094 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.322370144 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.296386087 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.699077936 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.370979168 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.375857837 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.337820684 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.591304196 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.577764551 seconds)
    (196/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.455402904 seconds)
    (197/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.784155612 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.279270767 seconds)
    (199/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.772230649 seconds)
    (200/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.420041278 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.304578826 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.909079523 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.916536295 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.048654326 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.363782164 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.14739982 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.294634138 seconds)
    (208/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393806289 seconds)
    (209/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.130468314 seconds)
    (210/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.491828919 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.519733611 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.754701174 seconds)
    (213/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.023190253 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.345079458 seconds)
    (215/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.284426441 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.116390813 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.156214901 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.852304444 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.50321304 seconds)
    (220/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.420899564 seconds)
    (221/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.399331691 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.709461527 seconds)
    (223/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.610153412 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.28099 seconds)
    (225/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.517455269 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.288767049 seconds)
    (227/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.322027697 seconds)
    (228/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.901813375 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.651642802 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.296722446 seconds)
    (231/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.304841744 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.191807656 seconds)
    (233/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.663754296 seconds)
    (234/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.631454363 seconds)
    (235/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.316951354 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.312576492 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.273114369 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.280901904 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.801385301 seconds)
    (240/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.419983893 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.346913693 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.337032913 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.369672272 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.304443733 seconds)
    (245/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.306720818 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.280969458 seconds)
    (247/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.027419551 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.310958173 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.72625726 seconds)
    (250/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.047643097 seconds)
    (251/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.419582835 seconds)
    (252/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.614217586 seconds)
    (253/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.294286441 seconds)
    (254/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.299092553 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.027289627 seconds)
    (256/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.311915933 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.404552437 seconds)
    (258/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322152782 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.661726982 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.310501012 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.708298036 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.390857383 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.507401854 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.802597347 seconds)
    (265/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.520080357 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.324335801 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.281174752 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.928295919 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.322522197 seconds)
    (270/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.355936128 seconds)
    (271/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330691195 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.283452142 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.685469166 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.305646611 seconds)
    (275/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.326476692 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.386748792 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323729705 seconds)
    (278/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.570592183 seconds)
    (279/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.361370347 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.296905582 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.380737223 seconds)
    (282/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.297531124 seconds)
    (283/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.284165236 seconds)
    (284/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.322473558 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.621219526 seconds)
    (286/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.326111704 seconds)
    (287/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057920767 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.390174019 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.550236791 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.54104592 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.380198551 seconds)
    (292/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.324471086 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.394634786 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.415223714 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.509214358 seconds)
    (296/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.298321021 seconds)
    (297/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.319106143 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.300383055 seconds)
    (299/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.660703351 seconds)
    (300/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.103941931 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.340367733 seconds)
    (302/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.411836758 seconds)
    (303/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.89498699 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.300093774 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.40634823 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.150179681 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340551098 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.38187225 seconds)
    (309/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.404938219 seconds)
  done (took 911.452212185 seconds)
done (took 912.677204468 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.335831822 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.32571195 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.312944559 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.335228837 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.421194116 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.338411207 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.322845191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.315701477 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.36180095 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.362928381 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.30959297 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.337770132 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.312518963 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.310842798 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.313703289 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325414595 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.329874773 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.313581825 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.328471066 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.324313196 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.328388835 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.310182615 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.364243317 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.33819912 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.318105505 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.317870941 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.31436676 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.331183007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.422617605 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.314415368 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.31735739 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.323154646 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.329612795 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.314847171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.309772167 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.33130661 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.323055277 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.325117747 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.319222636 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.344151744 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.732785325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.313275961 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.313778869 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.316289249 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.315789697 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.320257967 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.314016212 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.322065441 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325981617 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325633768 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.746555401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.329500479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.316625286 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.31722307 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.3265994 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.313783614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.319061875 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.328568732 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.332533674 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328417435 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.324530569 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.323296265 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.319502765 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.330649905 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320880996 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.790528448 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.31424344 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.322131296 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.743021877 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.323901181 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.791341347 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324065084 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.319773465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.327845702 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.346061364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.334293688 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.314248897 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.316809968 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.322069687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.312630132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.328022278 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.326871713 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.323099473 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.318728726 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329051194 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.342829925 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.328937763 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.316750927 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.327669573 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.334175702 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.323127403 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.326225477 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.321518858 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.314840384 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.328583485 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.322357924 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.319381453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.317875644 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.324224209 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.330732197 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.740553297 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.333488346 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.316420055 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.316215999 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.3184432 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.329343036 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.741849297 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.317434362 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.342455388 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.36774627 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.32084381 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.332545515 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.321663241 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.332245856 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.328982773 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.32206034 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.315844905 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.331979138 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.758247298 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333250318 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.322191803 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.315959474 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.332728455 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.322616615 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.316928191 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.343308337 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.322910666 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329982483 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.438231781 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.330572325 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.348452286 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.315046454 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.324058988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.345595333 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332438328 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.348170973 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.323096529 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332442519 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.333029186 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.316834846 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.328917999 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.33116281 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322556307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.326622264 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.316322562 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.346306933 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.330276288 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.330451794 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.342539352 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.439636074 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.318872283 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.335496068 seconds)
done (took 222.653537657 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.37724269 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.307731633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.406805329 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.315278104 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.413915857 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.412411935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.313493092 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.314393383 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.313408659 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.726541053 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.313360233 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.31410968 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.315251552 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.314181028 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.396726606 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.316424308 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.312453688 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685269357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.316250308 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.385065922 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.314287846 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313310869 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.315673995 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.720537231 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.315768352 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.314463874 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.386121944 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.317445627 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.69226098 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.311711006 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.312008694 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.663036682 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.405125617 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.333352938 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.326921761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.32368045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.416349974 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.334143794 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.397093909 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.39728024 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.409320849 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.355100139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.311955754 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.309728353 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.318724049 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.318688006 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.315524765 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.343748537 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.316352024 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.316461377 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.706894832 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.32813795 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.31633082 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.315577967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.315415619 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.34689464 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.31647584 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.318841414 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.405821625 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.319366375 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.3810133 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.756038792 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.698405147 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.317105103 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.31163566 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.315657549 seconds)
  done (took 147.516760311 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.385205521 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.393433006 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.429984803 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.319024579 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.368836801 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.433655176 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.319604521 seconds)
  done (took 10.901944854 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.324651594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.319669432 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.368319088 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368016834 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.318199769 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.466231922 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.318767579 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.330497082 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.316340076 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.372708099 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.320154019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.320053509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.327192769 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.319592363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.368206311 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.330351668 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.43344044 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.320237365 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32056225 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.476340512 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.317755147 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.327509822 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.372550553 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.33076553 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.32093835 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.325962506 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.890085119 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320742221 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318181163 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.321253405 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319181841 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.358131814 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.322034868 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.318371521 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318544401 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436852488 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.321159496 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.318372317 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.321381721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.317280117 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.322053248 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.321889065 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.322003227 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.31831072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.32102539 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.346272696 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.321529494 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.321846259 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.322013768 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.321609333 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.372790795 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.321353785 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.31958408 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.319389227 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.376892226 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.329123824 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.322285592 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.319960697 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322606123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.320185836 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.478888285 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.369724252 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.321909302 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379133264 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322382623 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.322754323 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.3237707 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.325279826 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38201359 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.326255521 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.376804305 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.325719955 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.481364982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.349904832 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.328341246 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.328198021 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.326910636 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323745338 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.320487526 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.328608775 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.319394664 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.32481722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.329029052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.320867759 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.321237244 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426809468 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.433513963 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.321408135 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.33705234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.331653193 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.321396934 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.377057828 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.324954274 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.321050898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376597519 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.439285733 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.376616077 seconds)
  done (took 152.100050664 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.330637123 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.331912348 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.325117716 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.339807813 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.324046088 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.323929726 seconds)
  done (took 9.231910414 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.326266038 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325140547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.324537726 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.325185941 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.324050604 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.324426516 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.325258303 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325833176 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.32886387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.325027896 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.32551111 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.326284463 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.326578619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.324893267 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.32563556 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.326227263 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.325983217 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.322874718 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.325428947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.325818537 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.42005622 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.325036404 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.324642539 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.326582259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.329337262 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.326337464 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.33368085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.326134982 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326001624 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.335058791 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.327767676 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.327313869 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.327564029 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.33079436 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.329897588 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.32777515 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329522496 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.32819518 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.324867127 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.327081052 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.327368058 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327357901 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.32825318 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.327896579 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.328572492 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.332034387 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.33183324 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.334791034 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.328200754 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328705431 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328344442 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.327666765 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.327548725 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.327620546 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.332564379 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.331922548 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.332306285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.328142342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.327346313 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.329548538 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.330498912 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.328525045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.329464114 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.332250029 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.335551574 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.330017233 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.330159255 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.331813941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329430553 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.329329556 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.329576626 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.326613575 seconds)
  done (took 97.974157912 seconds)
done (took 418.972641244 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.7315317 seconds)
  done (took 7.992833806 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.381409887 seconds)
  done (took 7.644971624 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.712582897 seconds)
  done (took 20.977752308 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.393766172 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.385114382 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.344158433 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.331567096 seconds)
  done (took 26.716862744 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.751507867 seconds)
  done (took 8.01228039 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.327801047 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.325605392 seconds)
  done (took 13.916775413 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.930886234 seconds)
  done (took 8.192553303 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.736404455 seconds)
  done (took 8.003184579 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.349047262 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.33201855 seconds)
  done (took 14.209635348 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.307234187 seconds)
  done (took 7.569573905 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.246392871 seconds)
  done (took 8.509517389 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.336702754 seconds)
  done (took 7.600407226 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.406319124 seconds)
  done (took 7.668814443 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.022336052 seconds)
  done (took 9.284464303 seconds)
done (took 157.561905179 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.321937523 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.324044856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.326649069 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.324959952 seconds)
  done (took 26.56084404 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.362883566 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.364175971 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.365176616 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.375662497 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.367022893 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.363731788 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.355699888 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.356488117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.374688069 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.368212326 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.366221362 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.366452969 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.366057532 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.356312248 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.366565699 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.36727361 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.374913515 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.366071686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.357543933 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.369313217 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.332116313 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.377103392 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.368387413 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.331957372 seconds)
  done (took 33.984739736 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.534562766 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.406457417 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.485124076 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.384167221 seconds)
  done (took 7.073596657 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.38366273 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.385002705 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.400739831 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.437134661 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.462592822 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.394584308 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.35934025 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.353536678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.339601277 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.385589539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.460561015 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.401792715 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.473246134 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.332578215 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.512272349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.332764917 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.3326909 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.384552847 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.437333603 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.454076354 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.332214051 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.384039343 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.394778727 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.400617512 seconds)
  done (took 34.800775442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.330995236 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.340634513 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.337806265 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.331436584 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.331868884 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.331948268 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.338348611 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.332999207 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.353504511 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.333267859 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.331157724 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.330954966 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.332076995 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.333193191 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.332461424 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.345485904 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.346391907 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.332388454 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.335897423 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.338596005 seconds)
  done (took 27.986187676 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.325192259 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.179973945 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.678291543 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.582830612 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.327004193 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.327155005 seconds)
  done (took 27.685974751 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.400778139 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.532256452 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.334209211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69289888 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.775402622 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.335719826 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.334324811 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.56787336 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.8740108 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.875469158 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.391586317 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.401088211 seconds)
  done (took 19.783916886 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.340940175 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.328969567 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.330836902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.345081509 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.387926864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.338689535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.339876405 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.327495454 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.390041179 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.394560194 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.338797857 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.390391702 seconds)
  done (took 37.522519325 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416053742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380442527 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.322368077 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156050298 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.714621502 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540695503 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.210920554 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.768943976 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.336388315 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603944054 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332403022 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420760036 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.587799465 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341563965 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332484508 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368412335 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559284049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833718688 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334224854 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.292846383 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356143379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330247736 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.393223349 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359394042 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543151859 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467965634 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.708864286 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33062062 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60985676 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.343339001 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342122839 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331305285 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604501234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003887481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423618772 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341465275 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188291473 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.047866921 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.33045176 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.293305902 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288538085 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.336272887 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342251008 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33170887 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265144064 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344215613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.779143945 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.339106297 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.043602704 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331645997 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342211518 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426750937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.335500196 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.149705075 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418936139 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333002801 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.329206348 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338604886 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905083072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.831887865 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350602723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.269460452 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497732883 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.298503484 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965065081 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.437107631 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.33677497 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337180379 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268557792 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.30610004 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352168823 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472802732 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.3536144 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.994809814 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077029838 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.339467637 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486354601 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884928014 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337950657 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269424545 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56157553 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333537834 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274062408 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.284166672 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267103515 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046383315 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343713403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.756669494 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342237059 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773304207 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347236219 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350841688 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357666772 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559304394 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.218874195 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335228472 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.316288629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485873648 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356567354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.774128911 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271512334 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.338436756 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592901356 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.546884591 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342772079 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370790349 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541557318 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337639672 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.353476469 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334765191 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3670328 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.915471911 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349377118 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835609906 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354255537 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336030734 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086188929 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338652146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.439232757 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335497301 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588080783 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.132320993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338222765 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417186125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343727364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.337607804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.406964465 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.859453532 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336759984 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.339670415 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336789583 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.369626345 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.337506875 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297533201 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.334419094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341950283 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.34037509 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.561967462 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340834516 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614061897 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272455751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475258076 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438714564 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.561323725 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.525608882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335103798 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596994152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34976269 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347276358 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350405821 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356610307 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43518262 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358975591 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.337367308 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.61271093 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.341175584 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.341283691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.414628524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.794501435 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346564127 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.342955935 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.239454885 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919612689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311062743 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343771862 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.231779104 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.352076446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402958714 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343173735 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.349162362 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.167295644 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289154144 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.343805594 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.344191826 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.563643555 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349409834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.311263538 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41927596 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.538171113 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923531338 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354405734 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.272467033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.049994585 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.030220578 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339483297 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.273600028 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.339209455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348054164 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349869057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.657153295 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921600641 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343677971 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.303868668 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.347129417 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349191668 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.344692119 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339999502 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.138135071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.834818068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342019597 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.352639787 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482182194 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.352791538 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273822353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.343186753 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.343470531 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339474519 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.340040302 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372706117 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.321034073 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828834337 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599212142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.167518117 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.353192498 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.40826547 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.372602327 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.343320435 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328065985 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358583844 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.352049787 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349754324 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.350685638 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.311006015 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.022446609 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911582465 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092941006 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872843964 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320205225 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.355614642 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342575779 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.784752342 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277190005 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908082641 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.531648133 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78264487 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298693786 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543536185 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.535662595 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108920191 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352912886 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570093125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319720845 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.347184631 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356235401 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554449634 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376065414 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352909712 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272921367 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.627975594 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57683575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304382397 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424773961 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785463566 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318355714 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360437752 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.34115309 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708558243 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515502811 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.055904797 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.522389729 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342097806 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34517224 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832383791 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348286398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.572274738 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973917188 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360429747 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.547245595 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28653621 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353804526 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.353111767 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.343264236 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.657155381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.350317955 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.600889845 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.352553029 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278359831 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35346152 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875431942 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.232970276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.349930209 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34395786 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094021868 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356940174 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.629904787 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.347674207 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.13698739 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351393086 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277270884 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279171654 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.038853983 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348239328 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314472722 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850540097 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.457504379 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.41895429 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364565083 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214888977 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600570583 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.357857196 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927220551 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574458182 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.275179945 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368514027 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.44472702 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3459503 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.333576736 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345460724 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581212964 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247195335 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571427604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.356667682 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.24600402 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.344684054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559637164 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345644293 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34703689 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593866845 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.058475471 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.365248984 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090751318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373113563 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350153158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270114179 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511384556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.352032037 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42631739 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.356071652 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.356650646 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.356314943 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520312058 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349041833 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351409104 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.361008447 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440939688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.867721143 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.146283023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.353422054 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937856683 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114723681 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.93751879 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364267151 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350000183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347642238 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281293 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49605381 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57722141 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620271346 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465128329 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.559615527 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370170539 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359676082 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357696751 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561155037 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622414866 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.246925213 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347144712 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362695162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.348623551 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.358096514 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.560276317 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862144484 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905082876 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470786155 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361902835 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.790644196 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624521295 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348478975 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347699629 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944465959 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.353737072 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.719890762 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.354586362 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358621483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498075402 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359147017 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031712119 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.359364595 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.50792091 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.121604278 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.43233122 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.609344747 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.847751322 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.362547116 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93685515 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059631418 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616809856 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41580095 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363775502 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.462451286 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497147189 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.354362381 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352855628 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351017899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198825946 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.060722837 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.361092134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944627223 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61842285 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.348292665 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.355727122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375272736 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.359928744 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.573788409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07373487 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577772491 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36037032 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356750071 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.172213056 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94209307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366358904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286408579 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.354117009 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597057564 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590611187 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374784459 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.817743638 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.0617816 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907808576 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.333858924 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373077779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361289301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.060952783 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950068321 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.159828183 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857838963 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913735713 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352374038 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628069338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.357279891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354248754 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63010644 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355955985 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.363931673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365411001 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.940107542 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129163355 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.357603734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.349247563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.290370588 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697937705 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040570132 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291976091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363208634 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.539707141 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.355971455 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471382096 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364416842 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.355166531 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357230154 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.112161381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639205952 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.358754832 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.346696684 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.355667324 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357176042 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360692321 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589913408 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355043927 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.028251637 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.706029545 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609794512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.369630306 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.338893131 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.357789487 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35455013 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.351597447 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.561274185 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672355148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913701794 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.354676348 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.368335174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359015422 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.571563131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567612915 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.370500318 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368583812 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356939215 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372684295 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.267330831 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.863572623 seconds)
  done (took 1599.732693055 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.362322631 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.389477487 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.391617621 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.391008293 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.396249481 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439042556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.454714523 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451256402 seconds)
  done (took 52.567299038 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.361626855 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.596363574 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.384164146 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.355584198 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.365832909 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.356142629 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.806551544 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.365600983 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.363322002 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.364503231 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.355657634 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.369587029 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.995522498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.365351907 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.355453823 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.345960593 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.365721535 seconds)
  done (took 65.766855461 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.364329667 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.384393304 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.45969143 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.3573309 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.565073938 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.362523111 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.431166088 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.423136316 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355966878 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.7377526 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.010829559 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390819169 seconds)
  done (took 80.137797686 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.36251048 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.364706799 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.36275922 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.363552026 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.362068394 seconds)
  done (took 8.110293388 seconds)
done (took 2022.977264548 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.612283878 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.068316274 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031676421 seconds)
  done (took 5.395955873 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.50668919 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.554621679 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.709682307 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.686208413 seconds)
  done (took 7.752978804 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.63301816 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.737674163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.535994258 seconds)
  done (took 6.202623466 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.777729705 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.374883727 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.435755756 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.359431747 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.361562621 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.35738739 seconds)
  done (took 20.375625604 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.362123362 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.365696551 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.363087535 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.364781075 seconds)
  done (took 6.753016922 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.344861004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.098185906 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.347353583 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.360040634 seconds)
  done (took 18.445296622 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.108086151 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.121700818 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.107235376 seconds)
  done (took 7.634515479 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.364095383 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.205303708 seconds)
  done (took 9.865930469 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685298795 seconds)
  done (took 2.981554422 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.494490722 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.627244807 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398153198 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.328746829 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.430617222 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.239351388 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.02423483 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.598475107 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.317853061 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.559150237 seconds)
  done (took 28.316584206 seconds)
done (took 127.220055487 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.16738602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.765952944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.561956142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.137176263 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.593575283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.561709494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.647239732 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.103370934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.796095698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.635560759 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.180254705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.622345759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.595368443 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.765333807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.595030055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382492844 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.601258822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.207740904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.829478418 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.027155044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.647595475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.77271052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.006457277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.948681081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.60291406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.512935853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.355358284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383025443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.004618719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.524847888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.516556101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.197376452 seconds)
  done (took 191.547790165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.360796226 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360950063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.361515601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.361000133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36666668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362254699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.361452096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.36239674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.361254752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.36508779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360584923 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.382197192 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370727741 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.361388489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.362088972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381140553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.363972168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.36258328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.361078255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.375709967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362196655 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.37173784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.361281409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.363942045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.374116756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.361366615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.361647438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.362209227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.36233979 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.376447574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.369205195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.36347545 seconds)
  done (took 204.995542641 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.372562094 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362618681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.364988831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.376405053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.36288062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.366388412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362710789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.361998531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.362776704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.370424238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.361974405 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.366471772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.363721128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.363025004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.36488352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381410106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375925213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365884878 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.36375466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381719073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.362869832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376912373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363106909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364206469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.365636175 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.364109558 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.362325083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.368155875 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.376076724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.363950958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.380122008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381291338 seconds)
  done (took 205.083157105 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.568840152 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.37180327 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373326262 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.328453241 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.37219097 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.372495482 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.36844424 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56840467 seconds)
  done (took 14.627257139 seconds)
done (took 617.552456374 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.708593665 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.422763724 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.575889186 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395601373 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.143741989 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.392713176 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.393081743 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.569206719 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.29867668 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.569296447 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.647768685 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.390934705 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.787301262 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.392597251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.647192485 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.496389173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254732279 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.370747824 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.712805504 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.938937204 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.650072259 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.878750792 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.568516036 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.291893056 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.795331379 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.87873775 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13018718 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.256487747 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.393307609 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.709710787 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.057475007 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.388290016 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.454130349 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436738971 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.492755933 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.472361603 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.370557258 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434807754 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.580931096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.639118017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.934741234 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.113658349 seconds)
  done (took 93.339340436 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362859187 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.362455666 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.36309037 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.363008153 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.364369077 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.362853845 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.362443606 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.362422952 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.363568297 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.362650491 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.36215069 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.364351629 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.361127776 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.363969181 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.362383922 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.362766843 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.363692689 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.367975278 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.3632919 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.362224357 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.363287775 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.362871366 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.363997058 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.360320603 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363177009 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363308318 seconds)
  done (took 36.747887161 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376989418 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.611167658 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.798575463 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.384478871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.375773348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37927393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.454187501 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.378507398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.378742787 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.378578636 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.530012397 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.37988773 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.412893648 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80366486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.380385062 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.376929018 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377797016 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.376560401 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.615581955 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387652236 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.455372291 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379862982 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.455026757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.387605153 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.3796472 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377863007 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.380188921 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.873712763 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378434918 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.53097282 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.152743774 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.454051854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.823283872 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.806770639 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.154823059 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.3821241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.377806334 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.537211703 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.380708756 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.379271798 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45586064 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.381324193 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.804360683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.008877067 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.39569409 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.379478562 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.898357051 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.538930554 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.630662042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389077691 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.829165905 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.384212085 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380208878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.380458255 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.628139796 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.389138994 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.379893627 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.919325872 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.387360758 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.459190236 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.380907878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.380562639 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.631082437 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383377335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618935821 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385008133 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.389941414 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.381280334 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.811620792 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.384219831 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.028771781 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.398044758 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.379904458 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.536619401 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.622557137 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939743237 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.385607886 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.635789055 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.842007664 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.457600416 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.386708648 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.866990383 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.462769836 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.386826798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383529745 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383693618 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381093449 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.423313674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455530045 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.963920583 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029680397 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.94172335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.461049174 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.393741814 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.380684232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.915951395 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.398065352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381140774 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.807350956 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036366316 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.398738849 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.390103043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.015827186 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400108676 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.459382994 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.386362321 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.819132612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.384730719 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.425977478 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382297732 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39018587 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.386110322 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.460729585 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.38647171 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383288718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.009125981 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.559815232 seconds)
  done (took 180.987929979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.380137376 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.38429114 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.376332721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.376446269 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.375223905 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37967624 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.374877844 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.376116396 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.381426258 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.375814834 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.376625692 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.377073302 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.376820231 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.379513418 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.387589574 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.383228322 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.990085438 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.377900587 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.375848857 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.376473357 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.170837107 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.37922978 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.376662695 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.374458427 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.377661183 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.378064398 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.379411417 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.377835571 seconds)
  done (took 153.309653357 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384315633 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.950970073 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.386619735 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.515552488 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.404674995 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382234173 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.51244106 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.442956062 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.387520611 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382003844 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382569889 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.687723432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.387232456 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.915022451 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.57256876 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.516527121 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.914855736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.388525004 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382750346 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.38308091 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.516779125 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.392457319 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.69755414 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.972791628 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.389403398 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.97087438 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.377788872 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.385079969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.382593182 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.97062141 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.385102919 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.698901464 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.463257319 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445128896 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.975812531 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.918301327 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.920906905 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.529189986 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.384226504 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.383557426 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.383398477 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372513228 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.949403015 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386782143 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.38678875 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.961886207 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.403247681 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.387049795 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.396044596 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.384882146 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445916548 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.447613528 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.699208294 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.975186869 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.463200323 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.408095803 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.51421339 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.749133416 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.388650264 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.916800239 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374999067 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953642112 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.389334816 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.374856925 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387024489 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.391570222 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.534910815 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.515941594 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.919277057 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390894375 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.917941732 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.537197624 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.386168325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.386094185 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.387918788 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.954725565 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.920618741 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.536888561 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520350539 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.579488653 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.375839256 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.3862754 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.37673406 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.46154797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.386752838 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.95554099 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.921946852 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.392154958 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388483212 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388735524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.390145648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.563663256 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.958688379 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465027737 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.916137767 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.708112479 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.692309927 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.38983436 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.448302696 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.390640793 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.695004388 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390264489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.445932525 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.813707332 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.693588062 seconds)
  done (took 165.134978608 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62687735 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.580854427 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.479750468 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.501711746 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.911558563 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.95422568 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.560468275 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51540081 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.496917649 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.635401691 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.546719697 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.479309342 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.571848988 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.461034617 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.095585892 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.455171736 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.478994944 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.514834005 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.498289044 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.41247411 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009256346 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.675002189 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.557252753 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.567552339 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.481674408 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.162418619 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.94022919 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.892128426 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.554214114 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.639086421 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.898731613 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.499725045 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.333121958 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.045754167 seconds)
  done (took 66.354656059 seconds)
done (took 697.176873611 seconds)
SAVING RESULT...
DONE!
