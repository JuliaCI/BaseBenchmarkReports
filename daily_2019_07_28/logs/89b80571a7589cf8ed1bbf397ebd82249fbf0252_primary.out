cset: moving following pidspec: 5142
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34299386 seconds)
loading group "string"... done (took 0.535702049 seconds)
loading group "linalg"... done (took 6.780241807 seconds)
loading group "parallel"... done (took 0.156724971 seconds)
loading group "find"... done (took 1.18029471 seconds)
loading group "tuple"... done (took 1.784636525 seconds)
loading group "dates"... done (took 1.210438262 seconds)
loading group "micro"... done (took 0.296065929 seconds)
loading group "io"... done (took 0.903707809 seconds)
loading group "scalar"... done (took 36.940455159 seconds)
loading group "sparse"... done (took 10.998079903 seconds)
loading group "broadcast"... done (took 0.918544662 seconds)
loading group "union"... done (took 11.887603757 seconds)
loading group "simd"... done (took 4.162202082 seconds)
loading group "random"... done (took 8.514388548 seconds)
loading group "problem"... done (took 1.861899622 seconds)
loading group "array"... done (took 19.955569642 seconds)
loading group "misc"... done (took 1.683916739 seconds)
loading group "sort"... done (took 3.108319904 seconds)
loading group "collection"... done (took 16.683536268 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479062685 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12111001 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113124016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117103882 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138905884 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113738212 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120428628 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082159396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.808284595 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138077272 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116212605 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406623122 seconds)
done (took 4.9155769 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169752895 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081155311 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080259646 seconds)
  done (took 1.280330069 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064465273 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12056712 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065651583 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065702884 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065529606 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065159165 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065109914 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064762957 seconds)
  done (took 1.631071155 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071409046 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067260589 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067301253 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066764771 seconds)
  done (took 1.392039433 seconds)
done (took 5.666544805 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.758259758 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197129906 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180801163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.38898966 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125572989 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160969629 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644665045 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321969238 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180920188 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079566387 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101406142 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317058197 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10516545 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643521017 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078911935 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08878437 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136686358 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425515592 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066255304 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081051008 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088148293 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129298768 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084534573 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075183286 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142984475 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067010463 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127604299 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080006795 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066370492 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20580771 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171468692 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655015603 seconds)
  done (took 10.132771862 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094787382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09564235 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068118976 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122445668 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096969031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068622944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069875042 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066485471 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08529611 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125997983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088681377 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09974511 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064265836 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067787025 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083303749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202807004 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080876562 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080586372 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069244151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074065869 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104595298 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077187503 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076156157 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076188088 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127884943 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.181987196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097956416 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096202151 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06840562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08102424 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114252158 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127708288 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066748963 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067253497 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123562993 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095569023 seconds)
  done (took 4.544343796 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.895759386 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137895801 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088712572 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15934371 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066601087 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10464261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064580406 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082828589 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.19635123 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.032200554 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.426774459 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109514016 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083129908 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066364456 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067480045 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065606532 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341096883 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108053405 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111502696 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082462884 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072780554 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067914191 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342374078 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065868712 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065526181 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066978098 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057892421 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110253487 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067341741 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.97376811 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.115361022 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066712261 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10002246 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161793026 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086276015 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131577215 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064877659 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06408638 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144910909 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072510765 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064567715 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080910384 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100753288 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.09992582 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066366802 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065049761 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.289058408 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066284928 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083189658 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.697286342 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153239149 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09434556 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066472345 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089885903 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242433443 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084419048 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065499854 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063882753 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181464593 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128150071 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063746835 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066395764 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066180403 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064867963 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066573859 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369276037 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065230799 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.724501209 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069326529 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075629785 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068470986 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066293716 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071618767 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071158186 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084306913 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066264009 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064142783 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065251534 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064980298 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067126239 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067322601 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083525719 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188308414 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066131602 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06656842 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064216772 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085051703 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10011966 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06975317 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064351991 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098719655 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066998896 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06642636 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099846595 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06551786 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082298037 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063193874 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068173077 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112350954 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064804503 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088903413 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065648874 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096095144 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06669943 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097501374 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076249945 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.15923574 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.215229032 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064285368 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064417957 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066313886 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06695057 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066942321 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06808753 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078010122 seconds)
  done (took 19.679044222 seconds)
done (took 36.370966991 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270896809 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073689626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073635436 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073907041 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073358146 seconds)
  done (took 1.77585735 seconds)
done (took 2.965306024 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118118823 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097721152 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063542859 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093886495 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063036566 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098474453 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098198071 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080113898 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098161619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063462994 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094620769 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063420331 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062958237 seconds)
  done (took 2.306335386 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081147077 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081810387 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068499713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081428672 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063169495 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081042561 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07976796 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086951319 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079510838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071070313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062774972 seconds)
  done (took 2.022812174 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08074062 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082461909 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068781683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080879487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062619144 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080508588 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079939789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08396314 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079863755 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072528935 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062841927 seconds)
  done (took 2.015385887 seconds)
done (took 7.523607517 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075767786 seconds)
  done (took 1.246889568 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.577353439 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.997621029 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080082144 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110055522 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181093005 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116662087 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271750057 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085157585 seconds)
  done (took 8.773361728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099720672 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069968536 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068498867 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068881211 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066955226 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070755067 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070803209 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067359288 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070081079 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067898801 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070842397 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068713951 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067852676 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067042275 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069224902 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070638891 seconds)
  done (took 2.375822438 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091157033 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.08930721 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071921956 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07311552 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070659182 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070992656 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073238974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07238345 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069727683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070912031 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073278393 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072258601 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070162572 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063798416 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072468317 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074268823 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069751763 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072842083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07357155 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074211251 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07325277 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06297937 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070216117 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072343187 seconds)
  done (took 3.022901099 seconds)
done (took 16.598397474 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109355401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070717909 seconds)
  done (took 1.361861298 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080453001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080622322 seconds)
  done (took 1.348430807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080441772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064358799 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087300751 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076171892 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065263102 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064546729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084877296 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065048142 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0647194 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065079166 seconds)
  done (took 1.905481905 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0675906 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076520195 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068962034 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07974718 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072005587 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063143692 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.070905011 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066650975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076133992 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061969998 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069738393 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080215534 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069151841 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08186225 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070655006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066527658 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068656297 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065579353 seconds)
  done (took 2.467737586 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06463681 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065746992 seconds)
  done (took 1.325131044 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065898403 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062465088 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064990678 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065499416 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062403896 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06134387 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062233012 seconds)
  done (took 1.636070838 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370212426 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109430279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289531109 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069574601 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080416393 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247357587 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064342499 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069506521 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069187462 seconds)
  done (took 2.603728698 seconds)
done (took 13.842184615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077317342 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083701355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093357954 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336809498 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090378994 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06451062 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111977577 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185608297 seconds)
done (took 2.244767677 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.203812668 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.557178864 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.365967555 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193327225 seconds)
  done (took 2.311305671 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31204803 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089893363 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058311712 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065358487 seconds)
  done (took 1.727829665 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064890619 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068131242 seconds)
  done (took 1.335272217 seconds)
done (took 6.780215717 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064946056 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064782801 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063029794 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082435809 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065171957 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062293635 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062387118 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065116551 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064962922 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064825224 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065238026 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064597387 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064706545 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06472608 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063026066 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062355433 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064806995 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064493641 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062422866 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062294527 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062402865 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064512971 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062565733 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065793785 seconds)
  done (took 2.79056031 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082142277 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065248824 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070729768 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069990252 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06905596 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069734825 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070426652 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065081013 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069850023 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066836781 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068600339 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068978515 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067081905 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068606547 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066661495 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068731688 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.06965345 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065425611 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066988412 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068589266 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069951519 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065593387 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068718257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069976554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068470712 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068301134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066628372 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065675615 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069477658 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068112428 seconds)
  done (took 3.270731493 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068512153 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062553749 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062835941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069866935 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062723717 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063634652 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062283135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062652264 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063201275 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062449512 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06415579 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062106109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062775563 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063735849 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063580514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066251088 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077608076 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063220292 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062679821 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063215832 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066171995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062781823 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062742115 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062356637 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062713718 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062179843 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062815899 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062489627 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063053962 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062375837 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06526997 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066028452 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062328907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068796804 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06624744 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062309613 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06620315 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062050228 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063098772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062113439 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062295875 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06243276 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062484333 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069009818 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062312727 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063829723 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062728645 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063763316 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062958884 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064979909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062288433 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062295032 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064110132 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063452828 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066230168 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062125391 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063105819 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062126428 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063292817 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062443169 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062310255 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062216297 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065276684 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062813833 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076774166 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068895508 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062138493 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064289747 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06321598 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064842432 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063914559 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075169501 seconds)
  done (took 5.838265026 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088878024 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085934023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.176416388 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064531388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060721498 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064727055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066146216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063169816 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064130951 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068190768 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062972991 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063913003 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064551902 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07558164 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063126002 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064308338 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068960085 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060603604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062941335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065954924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063286089 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065783472 seconds)
  done (took 2.808363086 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151174355 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06936417 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103674933 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071599327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066270912 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071235799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068269427 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068464089 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068648844 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067147999 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066927749 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068499253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066384828 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066554679 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066771355 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066728654 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06847485 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067200692 seconds)
  done (took 2.561914268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075476411 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064447576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084761166 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065788246 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064701107 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066990651 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069538593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072818462 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066860438 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064697537 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072736302 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066938114 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066912079 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064789195 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067456153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06477922 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067114434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06478626 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07290378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069632568 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069389587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072689301 seconds)
  done (took 2.735279789 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078375647 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067020954 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080703532 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067506999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060868822 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063338465 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068641364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064786377 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068899243 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066642162 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06478967 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063050481 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068038363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064781382 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068347656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06491369 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066612534 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064536175 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06651943 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060450162 seconds)
  done (took 2.560475337 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084590444 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066335082 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066672574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07466429 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066263983 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066357505 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073793016 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066651105 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066217919 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085559793 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066000989 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066133916 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073239849 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07070784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065804541 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073620751 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07318624 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073073086 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06628219 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066762128 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085693591 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06638441 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073373564 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06627147 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066449853 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066480944 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066856643 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071307572 seconds)
  done (took 3.196934359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0654307 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065432522 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062380455 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062185605 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062971338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062315725 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062505832 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062361615 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064835066 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06265297 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065014936 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064979111 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064997578 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065256969 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065183628 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064984986 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065012046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062866449 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062456762 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062311028 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064708062 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064724411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064686364 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062238651 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063027922 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064477723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062624823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062267035 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064779354 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062316268 seconds)
  done (took 3.138312971 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074325733 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071766483 seconds)
  done (took 1.37385703 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061906398 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078555743 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062365886 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069132733 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068356506 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065610443 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072202371 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068375026 seconds)
  done (took 1.766696561 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079732144 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075490579 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066523171 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079557178 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075491193 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081795125 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130355214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065899482 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071906565 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063306642 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078445831 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064262736 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070958061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065606486 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070502842 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071314076 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062844722 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070874278 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067853254 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063801336 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066160709 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073805541 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067240241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060831598 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066106234 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086441349 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075187528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064581037 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067965774 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.071930567 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07025041 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059210151 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065363331 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065344856 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06283592 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074150297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079281427 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068270182 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073455316 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065980932 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075360521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060551865 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069484053 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07164696 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075012235 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065140693 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065809721 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060321018 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063020863 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067185824 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060509007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065838634 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060247054 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074335889 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068217495 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075262165 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063626664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066202021 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067871207 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068081331 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07171196 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066852249 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067327064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064940056 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074404745 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069260856 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073697999 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060061097 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059541266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062892807 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074842348 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08671022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071187326 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065950208 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066024954 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063100295 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068357802 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066393523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07075886 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071814724 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064971838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070623897 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072384142 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065480451 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067587571 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073179679 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063689602 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067711643 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0628534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081220918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064267164 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062975567 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063338756 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076115682 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068403704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06497007 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063225338 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071777825 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059581811 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065235359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06621249 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065134218 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07418015 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067803659 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068412546 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072164923 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071366463 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064075417 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066693162 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061092349 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064203705 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063309429 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070984561 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058475914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066720905 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064910819 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064713321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196928379 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06427367 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06652843 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073096335 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071181435 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063902675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06222126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067660902 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065368374 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06841115 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072665485 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063929111 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061004628 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061017165 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068972585 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065283191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069460559 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069528987 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068628759 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060133906 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063614333 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071107855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073966372 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065845908 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06628922 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071451588 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067126897 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06557854 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071612172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06810258 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064774415 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071490565 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06590812 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060768924 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068268771 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068025594 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064464824 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068898708 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069055684 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067696445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065960036 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063921923 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072522261 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06654399 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06539945 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065579586 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064147078 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07601265 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068130347 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061741905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062273488 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07490177 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063901028 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064735752 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064555069 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067622537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065975497 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063428001 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064888635 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067586871 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075315332 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069914853 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066228222 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070467802 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076111881 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064778141 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068038988 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064949395 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066365998 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065373202 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073498892 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070262777 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069381212 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067587483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061656005 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07091047 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07261384 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064194682 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062919974 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064443182 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068990845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070607059 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069304039 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065881018 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063245774 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066054978 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068101977 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068153946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065239974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064661679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072326962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064020031 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072284547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066114665 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075493354 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068748034 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061040423 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06866707 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063620819 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070880731 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060801508 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063214068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064620606 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066243152 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063997432 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067689399 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059236153 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070842819 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071061516 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064029227 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063644808 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063526764 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070401198 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065679988 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067640325 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067406911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069819065 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074024972 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063633586 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067400539 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07363532 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.19128938 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059854139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071512027 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064858232 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065111991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064409212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063708052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068505278 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074322799 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071955036 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060029887 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068229836 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064147755 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064835508 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061524799 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.069969453 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068050303 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06695037 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072637053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066028297 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066356643 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069436142 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065300305 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066600292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067266925 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068767505 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066544465 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067399796 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065069706 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069537126 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065587756 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063626204 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067595916 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065907077 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066135538 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07150664 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064981289 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065560874 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067072459 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066335871 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066289937 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066210117 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064849266 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068652889 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066315447 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06548189 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067602186 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060752502 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072536923 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065751705 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073028103 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065821382 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06231322 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072429096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067536166 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071201772 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066451717 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065949064 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066947325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064350805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069002563 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07257731 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064093677 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075967704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073644839 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066545544 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068444955 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06644436 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066951537 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064735924 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066598971 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066340959 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065990766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065077773 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069221009 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067971526 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065792454 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067254543 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06578826 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06577326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066169127 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059784724 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064317967 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065040386 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064909418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074662386 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065495028 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065044941 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064082395 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066013817 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064154955 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06214269 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073013053 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074039875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065733923 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071990571 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06430378 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066886572 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075796633 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059664024 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063412113 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063133699 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06371204 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072704802 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066259715 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074339317 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065635374 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064723488 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062901721 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065046932 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063460838 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059330568 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0626506 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067313226 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063329339 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063028063 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063974187 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066717261 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064646888 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073169947 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063139452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064824334 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064280339 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061464781 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063209321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.195259828 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068497735 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066709093 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063859581 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06299524 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064901442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066790348 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066700907 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065616919 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067380421 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074135016 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065151595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068663525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068334722 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06048897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068612626 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065412106 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065146415 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064727697 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069527532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069128211 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06709439 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074900976 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065208107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066570699 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066352097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06371592 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065372503 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065049589 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065584007 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065462933 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066898207 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074031497 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063517874 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068576671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065451602 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066234118 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07172586 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06673408 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068382568 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072155284 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065802005 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067881423 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073533076 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069680011 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06898628 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06679859 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06763885 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070881544 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065309553 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071782076 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066288839 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066505671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067600467 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063082092 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064831393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065185586 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064887632 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071522117 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065763481 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065426236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06480394 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064064799 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067067447 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069008065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072552869 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068017102 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068043929 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060972845 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062965909 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066369289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063447046 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067074119 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067714038 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071217421 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067713607 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06557017 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064263156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074433572 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07049574 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069055786 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063127098 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069348031 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066133207 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067791745 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066119197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06561696 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066537767 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069587708 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066694682 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064734044 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072178433 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069151318 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066151775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066865027 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066092783 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065382601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060747357 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065582421 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067065838 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070298813 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067353472 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065064962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075560176 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063051644 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06626931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068414443 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064669317 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070181068 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06031987 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066835074 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065964366 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065402977 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060226315 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063918594 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062552737 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06656882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063305154 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059604511 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073905213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072589411 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06662161 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063061259 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062756779 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059405422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190990586 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065717322 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066473959 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067979962 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075871996 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06477284 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064475059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061319601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066121362 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068017191 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068729481 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063016955 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061214141 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06467595 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068813302 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071216635 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063863607 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065763929 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069242216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067993904 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063903955 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069071358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062805749 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069364269 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077920763 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066584302 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066679532 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072390745 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073365858 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066187831 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061328744 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065946662 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069360956 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066415965 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066454557 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066829639 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080233613 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068775987 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065091488 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06473203 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067490993 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065102975 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073155826 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066691127 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06668261 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07044577 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067642459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074907414 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068725961 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074210823 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068577686 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068651033 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06426543 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065887827 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06335446 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064549248 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066302622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066689396 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070659896 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072836937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064579197 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075791862 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074002024 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067245342 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062959333 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064892436 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06488943 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060760496 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06600858 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063501382 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063412614 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063500223 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063971712 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066305057 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070631162 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065902851 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066217885 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065227399 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059879109 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067375214 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067301747 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066434479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06282989 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065139788 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066094235 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069321589 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068572394 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063366451 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066960185 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067103897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066602988 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061054445 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071860353 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064586738 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067452724 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064927046 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066180529 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066480677 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06926001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070180579 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066694305 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067843493 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069271006 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067642924 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063489279 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062900904 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070804554 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063387273 seconds)
  done (took 41.865459641 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098593007 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062578612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060958876 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061606531 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072034829 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062475717 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061002521 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062297392 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062176162 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063956018 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061026917 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060958953 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069528072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076179344 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072482277 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065712483 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061000284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06188774 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060852991 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061768615 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069676344 seconds)
  done (took 2.709155491 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073081102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069192763 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071246806 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073904502 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065919164 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069286157 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070875459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069037017 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074298849 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065895445 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074302556 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069464982 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06575893 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074540612 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065727218 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069560008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07421541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065920366 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06919882 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070962328 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069598538 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07082491 seconds)
  done (took 2.84010915 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065968314 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06489849 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066666699 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060347717 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064144458 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060356586 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068255045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06327817 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067725853 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064085877 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064400398 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064048343 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06618295 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06046111 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065120236 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062764491 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106738498 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06828755 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064478327 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06575143 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060336087 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066800848 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060417235 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060721702 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063956471 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068232528 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065485853 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063152292 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064644473 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064322467 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064917278 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062763918 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066118115 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065789321 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063854616 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063951866 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064479563 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064719583 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060492033 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063310569 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065325758 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060714582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065467962 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066031919 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063187827 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062973704 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066404497 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064303616 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059671239 seconds)
  done (took 4.485907137 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078437414 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107260055 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066596646 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08728197 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078493281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074015402 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068023775 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087630736 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062455554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063368664 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079821817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07800724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0646516 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069503546 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071326178 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064884467 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065471059 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063344379 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068092137 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063897078 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068439998 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070732753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078153436 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077359617 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068080229 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063935073 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063854779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068404289 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076888671 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068372788 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068538532 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069456133 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078507952 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069802537 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063638907 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066499788 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079605966 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064675878 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066983009 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062191714 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066353638 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068386973 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07080532 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079807579 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064941923 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069278369 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064215111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061588086 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076344288 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066768291 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071971358 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07828554 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068274074 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064251198 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068276557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078834331 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064428587 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06259799 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067410226 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075726516 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062033534 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068215841 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077492958 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066425036 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071311914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077530036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069243295 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067961828 seconds)
  done (took 6.237904461 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073534094 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071057636 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078983942 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078669314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071013998 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070708179 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070811204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070651323 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070419232 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075345156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070577731 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.090850154 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066368693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073100039 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070710695 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070873071 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07098716 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070779438 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070479542 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07089532 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070766912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077964129 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070700063 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078305367 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096265942 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066434683 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070227091 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070710943 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078375964 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070892662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078009028 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07064352 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070478825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078195599 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077869071 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070597574 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064034871 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070308098 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070974878 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070916671 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066560697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078189878 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070918267 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06643218 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070856572 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070519337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078480936 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078020265 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073483075 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075548462 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070601032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078532703 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070946006 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071397806 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078038402 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103526209 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078115433 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078524897 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070770416 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078316209 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078103423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084637131 seconds)
  done (took 5.920482424 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08221781 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073559278 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074813981 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060952083 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063107922 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068425 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063190017 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063223282 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072820853 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072948299 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07506325 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068245525 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07128404 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074988832 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06861533 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070948316 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0683728 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06879844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073093181 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068686129 seconds)
  done (took 2.723985023 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072957714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081154642 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065923987 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070288425 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06772218 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07058368 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067672986 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067985338 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06587474 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06770554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074537828 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074606315 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066173433 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070602567 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074525179 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07021337 seconds)
  done (took 2.441641963 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07349474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070832862 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078984746 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064994703 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063120622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061912889 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064994125 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06045156 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061315781 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076538906 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064614146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067317442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064759438 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063498369 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062096668 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06721473 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061600042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062521624 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064675942 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07676991 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075882154 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064134343 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065965257 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06508295 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064886918 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07011172 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064334363 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062559 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062099203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065078744 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065137962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068227811 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062516876 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063438643 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063543696 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062476905 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065018471 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065462689 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067394238 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065436476 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063326364 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064594784 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065226628 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065840242 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061921802 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065202698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061943672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066998941 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063362563 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065347017 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064851747 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067350017 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065425126 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071473643 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067652093 seconds)
  done (took 4.937346383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07845988 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068218652 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061026522 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063277612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068182135 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066816488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068649371 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066654854 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067090846 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06399005 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066878477 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067901653 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066646618 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068471386 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066809011 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068623157 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060957889 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066885536 seconds)
  done (took 2.531966747 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070374688 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065100756 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072276546 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065237069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064542182 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067463931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061330963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063706909 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064561335 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065025613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065246667 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067173 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063449799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067305259 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065018309 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065493696 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067539496 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063568386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065153433 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060920618 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067192709 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064241299 seconds)
  done (took 2.763649236 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071435601 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091012735 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136324832 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082487413 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080413073 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077896723 seconds)
  done (took 1.862339517 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089572703 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078280739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065955573 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086912143 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072019431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066471828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066433342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066892518 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074765561 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075470011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066556583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074634576 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075049005 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07420987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072191102 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072240791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066230097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066499418 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0656293 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08274133 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066279928 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074545658 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06638862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066069724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066290575 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074036737 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074532267 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074624091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066062694 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074125589 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071611213 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066017039 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074221648 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074752215 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068022163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074813045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066205202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082480525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071588974 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073771715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067993508 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071799884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074845951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071038863 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074281139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066176731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070712419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066077933 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066461132 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084363548 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071712356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073831871 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072231588 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074797001 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075174866 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084950006 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075050942 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073815974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071924973 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077213318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073824885 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071993981 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07368386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074552417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07196959 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073734824 seconds)
  done (took 6.11570852 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080709673 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085728031 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066735547 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075146836 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074044008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066306731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066486578 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066541637 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066489881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066466487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105343909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066555834 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073905273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073770075 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066730365 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066124087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066395616 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073656053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066111047 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084292643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066360173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073636001 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073843927 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073694675 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075043674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072021247 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066519634 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066783826 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066371052 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066137203 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0711338 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066450778 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074028257 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066132142 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074081312 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066641122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066249375 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071284438 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066359833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071610081 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073925591 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082166115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066126513 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066375539 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074778941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066451667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066267922 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06585865 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066393741 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066316274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07459694 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074749035 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07459811 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074229431 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067057494 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066680466 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066634385 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066549825 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066602075 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071863433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073782601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066293011 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084665569 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066691713 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066559626 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073688046 seconds)
  done (took 6.024377642 seconds)
done (took 126.701654346 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182334656 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167921773 seconds)
  done (took 1.670625953 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067197691 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094760056 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075863424 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128328984 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065489223 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099586375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097551375 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076742834 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065229778 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065405696 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065394819 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06702936 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129676178 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065685852 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065376336 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066958833 seconds)
  done (took 2.629125032 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095581577 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.171978719 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098172437 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063872421 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095415031 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071998347 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064049685 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073609461 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069812527 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064486001 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071736388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069772939 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063938731 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069865865 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069804567 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071610342 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064079182 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07157131 seconds)
  done (took 2.756536343 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097981432 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089385729 seconds)
  done (took 1.524709519 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152687027 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103677447 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148179084 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33160405 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159367228 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22795395 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125427532 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124719067 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119985129 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120715469 seconds)
  done (took 2.948097292 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096783953 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145958133 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253285117 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114154797 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071235436 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089696985 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115170058 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076731186 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076476007 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076383572 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07647234 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075110939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094752988 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073001591 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072544236 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074922256 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097826291 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071490687 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074659515 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073626813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.095378532 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065206456 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072401256 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071364203 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073783054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073873472 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065069692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065096568 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073335245 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073192564 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076151445 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088372672 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073886173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103168952 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069170832 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104155524 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075229011 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070332671 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072643081 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070220373 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074663898 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074763741 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071498893 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074748009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064873908 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075287405 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064861215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06466001 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076636553 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065542016 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076947273 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075885735 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102993728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065767039 seconds)
  done (took 5.823264836 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.659634225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102347617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068696292 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106128956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0952629 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071156639 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.681399238 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08906234 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172368729 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0906534 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087053355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069048376 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079640338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081980827 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.10923682 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100082867 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092304463 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070441179 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099543944 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097036052 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067268013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092328624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088650408 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373868808 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066478914 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069030874 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0667858 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069028981 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108971184 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076836255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06900697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119415825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082812456 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118935072 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066668544 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067439573 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06695977 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078353008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179150857 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130883459 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128724314 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066991585 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067317217 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068065343 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088530823 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066481217 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108460895 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079206661 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117120302 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068994337 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06885453 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067398218 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068169398 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078744376 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075956993 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079142278 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227928195 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067276812 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067026139 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070330067 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17755999 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077771884 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077679619 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090291438 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126807954 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066437809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689046265 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082810972 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066218922 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068370793 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06668318 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067577921 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066770515 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244240479 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341918287 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069871526 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069615328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068105877 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.160422386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077908852 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068269353 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110268985 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066767025 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06864293 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069874676 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069631238 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116280789 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078999698 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069657036 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067527645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068993488 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068146374 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066246976 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160943465 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079959106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079033764 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156908048 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068958711 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109831181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078671777 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069877322 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079101294 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067383301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069924604 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068184958 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077764311 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095214171 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078636178 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06926826 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067831309 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096177386 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079252755 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068000192 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077606446 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395057555 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079409871 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067206874 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07991728 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06751795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110193927 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069045754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174664079 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068250421 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078154726 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068012005 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066586859 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067873556 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109194615 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069464026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067865355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068151548 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069253638 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078513469 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131752108 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069598152 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160174946 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132649027 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069131353 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118099921 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067523718 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114830885 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069306258 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068675281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066280878 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.712228384 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067028044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067126531 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068528942 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135358962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066560696 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077362144 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075075177 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065208349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685916817 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076469194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.203941042 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079389871 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070148949 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068152186 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06757738 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069731992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108641679 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.143107871 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069803891 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068193616 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077630093 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109540071 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06724671 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07719526 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077869463 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076749985 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068423361 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069453811 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079929721 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116131042 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078091588 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.133524056 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.515421891 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068198403 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076854281 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142030072 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068083607 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083633065 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067415314 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081903684 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111210917 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07674761 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226643592 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112858992 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.138711069 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079478387 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082268506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06672208 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067770428 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079132488 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067926324 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069292638 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077661603 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068858693 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068890073 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082723635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067692994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.17173288 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067107206 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077709739 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066539853 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069453897 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081835036 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067394351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069179679 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078506677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069065954 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076476985 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.642407376 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076637442 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066979438 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068890909 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133302098 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110989775 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067022328 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067057107 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068901179 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107816236 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15475639 seconds)
  done (took 27.824750806 seconds)
done (took 46.520939681 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.204969624 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147961249 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198291737 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115973156 seconds)
  done (took 2.100382464 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119589234 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099852065 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093714894 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064396622 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100413644 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064073472 seconds)
  done (took 1.912786466 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302522748 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206341052 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178473547 seconds)
  done (took 2.057183239 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.193844788 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184374327 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389827778 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249904212 seconds)
  done (took 2.494637249 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141037682 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087305524 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06594736 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081992179 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131494339 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157721559 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099400206 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12333291 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076962725 seconds)
  done (took 2.387722223 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142349788 seconds)
done (took 12.473790583 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11923617 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102934388 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.185163372 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.235328657 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165030532 seconds)
    (6/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.19323651 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142591595 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.099987019 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068909403 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07645521 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154869664 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.0717438 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.149264251 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068682158 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18742438 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089051203 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.206848056 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.202980426 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070420045 seconds)
    (20/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.152305297 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143904884 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.141873378 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073710898 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07038768 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093027578 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144075806 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.145394285 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072538236 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144014817 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104869628 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09690025 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071474392 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074453317 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070416359 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106702586 seconds)
    (36/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.098492124 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140899334 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104267685 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073248953 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107050496 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.200473893 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.13367506 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064043867 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075567999 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071507695 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094713452 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071244254 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070321372 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157186229 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.070970551 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.135038128 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06423812 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13008092 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182050893 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.086826 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066011679 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059755122 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.170346071 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073842351 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064584106 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075000267 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065861788 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084908303 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.160778841 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.092877188 seconds)
    (66/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106606092 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.178352238 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090402095 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068494867 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.159042787 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066629477 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 0.136078802 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.176798772 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186655916 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089198421 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078460252 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049882883 seconds)
    (78/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141292899 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050316134 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.145867451 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.049717321 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.129738987 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.064096934 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.219161723 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.094341534 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101056999 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075837286 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149617162 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064122066 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050487101 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064825103 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159068068 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073932341 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068883417 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092868133 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064921183 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06182765 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098689543 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07062029 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071099168 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167655095 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088908755 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064551693 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072637328 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051852171 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071994449 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053376145 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.107349334 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.146040192 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.1798179 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075231692 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073232793 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072891275 seconds)
    (114/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079966496 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072181272 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050276145 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065330075 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063982343 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08741829 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.090241204 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066008616 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132807278 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105068028 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.29548224 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165619074 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141479158 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169138951 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050613382 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117847501 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103664685 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050046095 seconds)
    (132/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068632785 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17342623 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071849199 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07191926 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049980651 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051268345 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.131205341 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072359539 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096783395 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136974668 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071179794 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097127435 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069746567 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070423976 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.135800058 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169746335 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088233559 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087996416 seconds)
    (150/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086412005 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05026195 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062103791 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084914899 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07067359 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066530979 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065654982 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192284751 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050366488 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064821278 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06571392 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064196098 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071214943 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065889363 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050125082 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069959217 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060116148 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.112162571 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050214194 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072454921 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070564972 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066929641 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051564028 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.075272128 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067241121 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 0.125531363 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063999624 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063877167 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066011215 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062225659 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089448337 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.049957034 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051117577 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072305646 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074611622 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060290703 seconds)
    (186/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05072403 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07336052 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050003192 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049922937 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059482523 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075742609 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070303211 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069222168 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142736411 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087583874 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.049603424 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106881742 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.16622052 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077519755 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.233273192 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074105024 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.152037143 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066777232 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06589364 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050195285 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050181242 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118145759 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.135779838 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053061247 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049946166 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051611562 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050412063 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051759975 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063281202 seconds)
    (215/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052098574 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075973106 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051732948 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075224179 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064739435 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070533114 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090668885 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067570786 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111579387 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183519924 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073325386 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071966922 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098875129 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051606396 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066363459 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06792166 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087184018 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11102331 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107922079 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066284301 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064873977 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089721323 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070071316 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069222438 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065229867 seconds)
    (240/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051611421 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051952695 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062984318 seconds)
    (243/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050977993 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095985704 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065674945 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135088925 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135876428 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076708695 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069566173 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077133005 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064880367 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050193655 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072188912 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.12341239 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050199023 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066940846 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071222415 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063810614 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07140549 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06394306 seconds)
    (261/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051249411 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066125815 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052939198 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06416475 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063921599 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051478163 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064877483 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070553352 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173931711 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116384012 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076893438 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061345921 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072035039 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050465011 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092031422 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050241442 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.144950223 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070697417 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124848075 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050103699 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064251202 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143260615 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10050338 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063522206 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087257925 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08581728 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071204734 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064165267 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067085712 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063289119 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05172811 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062920112 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070849406 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063995134 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105702416 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050316931 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071179964 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051878726 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078634757 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.0599015 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0695679 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094972474 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070286613 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050170787 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053840151 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052031558 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070220685 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084887229 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071154755 seconds)
  done (took 29.812547011 seconds)
done (took 31.195577408 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084959452 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092331798 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074672154 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09253218 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080441584 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076790096 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072389043 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077986564 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079503079 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081704933 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078179096 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05495951 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073846084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074105437 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0741631 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090553182 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077729396 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072390787 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072848459 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064208061 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07255165 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065267838 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067168872 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054617121 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077355876 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071111512 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071938289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073461823 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065528327 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065047829 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068833312 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072436557 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065081107 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077319869 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071171665 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072221887 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074010894 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075837526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066935793 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065708016 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073184766 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065500521 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072278559 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072766484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070971625 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071052294 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07245776 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077121549 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090852303 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067402512 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073648458 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075773075 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075390414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071690651 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068754327 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072199345 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070203885 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090336119 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072853467 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067487598 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073372852 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073173915 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070554532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072370169 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072218035 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074874616 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07448303 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07097595 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074411949 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070675662 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064948916 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072257614 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068512815 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065308033 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074999141 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076202125 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063880797 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07091227 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072133134 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07065156 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064287479 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067322199 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066634651 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071008075 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066700487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054271453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068450082 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071169173 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064270781 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072442072 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071139466 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071325474 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06650452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074469013 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064357292 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069666832 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065329887 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.0653152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066342596 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068485089 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06440564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067679813 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07334219 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066102868 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070934296 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078165987 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064662388 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07072911 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063894127 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06417391 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078631033 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074027724 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065550474 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067366696 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063583446 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071002486 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063743498 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064450523 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064268557 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064324434 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070454369 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063579546 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065529806 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070420591 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075201285 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063549654 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066485772 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065435812 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063210322 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068516735 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063520501 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063398044 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.201361728 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06188017 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067553102 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065574361 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072336127 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067859256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072736237 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066651929 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072396477 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069333442 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071200289 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070429128 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064499023 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058462165 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067832095 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067611924 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067336187 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065329886 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0669608 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065038253 seconds)
done (took 12.351555824 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066740893 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14164657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09655802 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094165068 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085046519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066045942 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075282482 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100710179 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067217331 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101052285 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08679827 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08413963 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111264003 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064026112 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065411227 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069043346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066416373 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080689273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099565499 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085637774 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107792037 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064773261 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093730172 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089027279 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086376219 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091324071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066606853 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069244123 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068953638 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098979467 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086019656 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069322186 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066359401 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09923968 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09123086 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08211632 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066030317 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081145201 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065888238 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065175346 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08040093 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096526751 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078780425 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079321612 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069455383 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06823281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066362742 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082143555 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087408411 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077793349 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085956767 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101500654 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067912736 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065540821 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064091118 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084445986 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065229518 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068144866 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065858354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067337473 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065211571 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068453147 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079943273 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085302002 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068807132 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078912881 seconds)
  done (took 6.736727051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082429626 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089189843 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082101038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08290894 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064760263 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065709712 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066088746 seconds)
  done (took 2.015737249 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065766564 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086928859 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088089243 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088175958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083662509 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085956294 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075330876 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066337248 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079864585 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067174832 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087431005 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100493536 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06660214 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072085767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089859851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066053463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089478578 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066129391 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068759856 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089373961 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068148817 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081672752 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069686417 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066211543 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079656607 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066591252 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110996468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070172457 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067409082 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068873884 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064104697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104565917 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078963462 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074765275 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065541306 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079862353 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079940627 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0640923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081380816 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07088008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079372807 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066144141 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066809308 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064194424 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070465902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076615209 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06666583 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066540581 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06817358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084863177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066834615 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078796644 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070309054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068432752 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067227931 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069603762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075145702 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066287063 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085294907 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066862668 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082064612 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081612772 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079288146 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081507003 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068185643 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079293759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079463829 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.067943163 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067336537 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068697965 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081734085 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064284669 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067132536 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076386701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067515978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088067766 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087999847 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067441571 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07483538 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066777016 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066303728 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066368883 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088330303 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068374445 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065691809 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069875978 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068860896 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064007859 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064709172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069442219 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063897612 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067211273 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068308259 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069204106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068263338 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081544136 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067965214 seconds)
  done (took 8.671265342 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06850168 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067148767 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068742072 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066571197 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067760032 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067137633 seconds)
  done (took 1.911683529 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092326601 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068797477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07987508 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071566813 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102891077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085708146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085834004 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077898314 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082764105 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078117128 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085853215 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087178896 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091537713 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071621845 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085583645 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071334831 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086292946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074937212 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077492221 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072096447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085940952 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072052202 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072415864 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080840731 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074598172 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071289801 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067410944 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077958795 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077742747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07753725 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071977005 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074723685 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069686198 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077455957 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085547384 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069866562 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071323957 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076536213 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0717282 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07491389 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086991126 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072329067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073706092 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076245895 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077307943 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069565968 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076237478 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074869023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085407813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07649762 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076353535 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070935442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074581044 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076042316 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070111685 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076968042 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075768659 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085298391 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071861978 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069454817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068241242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074325226 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077427273 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073868165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077537671 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076038112 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069383678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071436119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071965243 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070706481 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076106383 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067921972 seconds)
  done (took 7.00643748 seconds)
done (took 27.812259428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542468622 seconds)
  done (took 2.015991393 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61295489 seconds)
  done (took 2.109808635 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.389454886 seconds)
  done (took 7.883138524 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388879625 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501881186 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.70380789 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128641147 seconds)
  done (took 3.256925805 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.665175148 seconds)
  done (took 2.171060646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208225666 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193678107 seconds)
  done (took 1.919292537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.366312588 seconds)
  done (took 1.862297016 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.081307497 seconds)
  done (took 2.576911822 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255770956 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160494119 seconds)
  done (took 1.915506091 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456696939 seconds)
  done (took 1.954983096 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.816350944 seconds)
  done (took 6.316954873 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.202458006 seconds)
  done (took 1.753151279 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23921463 seconds)
  done (took 1.741208258 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.70800369 seconds)
  done (took 3.210093121 seconds)
done (took 42.188604072 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080168637 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080854113 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080349545 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077923335 seconds)
  done (took 1.809908346 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075943763 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072387614 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076086032 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071788963 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076447287 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071540272 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073498315 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076081601 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071880237 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072500196 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071686772 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072220126 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07394641 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073299595 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071021741 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074040961 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075429716 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072086015 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074759503 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071783607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070519989 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074320344 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074198736 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07146797 seconds)
  done (took 3.262863735 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077550085 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072646689 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074361233 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071866909 seconds)
  done (took 1.805220113 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076692314 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09121445 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088227388 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076592664 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091251976 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085265603 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068395087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068987412 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072556048 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076378766 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067314243 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095105943 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086710666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076340733 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078378585 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06547366 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067727673 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086141876 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076592637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07683172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069476351 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076316806 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067421814 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087489923 seconds)
  done (took 3.378555315 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076884531 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101966062 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077160023 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086780031 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088571287 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064905257 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073502861 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088396852 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122406058 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064830877 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069646071 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065122723 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071997502 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064697583 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075564352 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104392411 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107832579 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068078802 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095277638 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064768649 seconds)
  done (took 3.146780586 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072306459 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068979438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065782326 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068509049 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077526129 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072594704 seconds)
  done (took 1.941756548 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067617703 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066943503 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066981052 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066746394 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071016602 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066437732 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065708551 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066418728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066303239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066969185 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066072286 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065779031 seconds)
  done (took 2.314144249 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334785281 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067999239 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06869864 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065099946 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070120132 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065937639 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079315379 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067744811 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090067905 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066974163 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065977071 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067937391 seconds)
  done (took 2.62325162 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201842048 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075861105 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233201575 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135688314 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110484906 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114199597 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102820475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11202494 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141246797 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100488091 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165519916 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163013942 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106082829 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136149477 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088357858 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097243873 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152913539 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160177307 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102068018 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163438734 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142066924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123716433 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145381205 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100371293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104425721 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120718167 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070416447 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07964903 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167674433 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130210966 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144251132 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110162284 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092517982 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174065539 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169114213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141092975 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132993475 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083010554 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100751723 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13099667 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197461567 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089774067 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158957214 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244917539 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080748526 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13980847 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120024091 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118785469 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106207605 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089979056 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144338187 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180594563 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137326088 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086343941 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111099941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113833156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114493042 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102019314 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178947311 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15899029 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127142547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070997913 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098255911 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151601913 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130681304 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108359504 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125270831 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092591585 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132829241 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153046389 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117195265 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140921376 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127706867 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087949004 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118153478 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137968892 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126630049 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167998268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12384635 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072361117 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123366705 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102493921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080869135 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142046421 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075017064 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173039011 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098849476 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107082098 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11154546 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107482748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107427563 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157150246 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139307518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24324102 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066090756 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102769854 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119808021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145787277 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086782645 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107872308 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114924285 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076794619 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137150551 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074568437 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122821843 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075517796 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124290297 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13163928 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07540339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120753334 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10038144 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099506713 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131758791 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157424222 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088007734 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0819222 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165070294 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12127444 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103359503 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142159147 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154152135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098356688 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101720124 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148695054 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176793787 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088958445 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160879578 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106559009 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083147994 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086916053 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122854546 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111172467 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120836745 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081557574 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117945091 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166193694 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074898037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094425169 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132783421 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078068485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079637365 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101476711 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099058739 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093501441 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099494979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102774916 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135742728 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120826981 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102216527 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268115608 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098007482 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16946895 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088039037 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100398882 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103322305 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069570345 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134878579 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155119326 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079324245 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161304415 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12151879 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104063271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117977438 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08194239 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13942217 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07788689 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069743624 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143157421 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109565813 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109419182 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148873277 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103942757 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125872113 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11797481 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133730369 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130778543 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127615806 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104655715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087577902 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110027316 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124085286 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072601507 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090413613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079482163 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103052864 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095008288 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082825109 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140128863 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122939763 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099379873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110810023 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095612682 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145688315 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076083034 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12725756 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117660281 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092361164 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149411167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149608761 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129213693 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097613529 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141779016 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069737965 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072927233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230809581 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122783083 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083045237 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083643711 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116949081 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145932266 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128290816 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136307005 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110910305 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120318751 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153999579 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069015534 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115637505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145382832 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120423068 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103698195 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089433872 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098571639 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140646499 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107404286 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179252479 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113696546 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125204791 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1519842 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098742963 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079504288 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102326097 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133726232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103247411 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14234072 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104953697 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087244941 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108771598 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073849566 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099118933 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12524358 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118639606 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134092062 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113752986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130976797 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07662492 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115578841 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119696356 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121229113 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063914458 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118372793 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158246955 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092846388 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116127712 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149977478 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078130883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122540999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319632107 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144547278 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083765681 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108609936 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117747811 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126903058 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119699903 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138484442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109580624 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134144716 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108332105 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084668506 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086778772 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096382827 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104093176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09422529 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106284508 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113299318 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094141912 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130632778 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10273091 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10921533 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117141793 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095674397 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08948901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096480883 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171788031 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117976025 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169040561 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098230573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143790552 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161517678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074472117 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07842712 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078073403 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13848578 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083195323 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129652581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097082537 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104701364 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122686738 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139967129 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094280624 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068112483 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107887654 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132833444 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111397267 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097732387 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102879634 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159277353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.09888145 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078253827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112206393 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103259731 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100631147 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165405574 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205081677 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09792235 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076173572 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08117522 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127378789 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151470343 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08056387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102592478 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118288628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109399041 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12705679 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101784138 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09905118 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113156063 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14901696 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127156216 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089295367 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112274071 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128026724 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171487597 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103701058 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094703577 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168350091 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150168116 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158995563 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088055215 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113454924 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112790249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109716744 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137421306 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082678144 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160981595 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081347792 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134720445 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102806999 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089125748 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128399327 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097886868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087454044 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146101509 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116479507 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081891176 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077345176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116536305 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119334613 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104853409 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074848494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135841212 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072432647 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129830876 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165751021 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079958809 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102080137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.24069264 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080416705 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10759618 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101480458 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089875227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098803808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171000593 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08713291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148438387 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140332146 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1121544 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134615535 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09878237 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634604995 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077936103 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150685686 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116018184 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171042288 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096879401 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116933535 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108587943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12244131 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143274719 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103792761 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178000264 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131301408 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115225665 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079024171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101578202 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100940385 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087936767 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104306645 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112439493 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114248252 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092788275 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114745479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121579836 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081560217 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094767325 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154532705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115682815 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142333791 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13864855 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084116714 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116664482 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135759738 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078629538 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119391377 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148671649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104115507 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096282232 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078826325 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247244777 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169187818 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073443594 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160287852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118986248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109122482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112116282 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111712906 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130753084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106746979 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120037128 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09312737 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109520767 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111791042 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081931032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076716262 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104414419 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111008824 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097020396 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097130266 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097444554 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149732812 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071381114 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094917862 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102171369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143518347 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171742801 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087535445 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082131414 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117419174 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111827803 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112136799 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119587355 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078673893 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081660743 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080972806 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076750244 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107582358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111360071 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103479518 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110023516 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161398832 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082285226 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225840598 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095461272 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104562579 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069344243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077728673 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094796687 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096300604 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107433747 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09994306 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166271691 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093348332 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088511272 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090352523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07232933 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081221438 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270233075 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110397615 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118260621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097305542 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062775549 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107796453 seconds)
  done (took 58.299727999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107729859 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083279644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096394002 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149582674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121073212 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211247432 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156660687 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198963988 seconds)
  done (took 2.749345289 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06805915 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093504952 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100105567 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083106678 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067125307 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068303362 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.224346092 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080367421 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065999528 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088170829 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078490428 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068533493 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.400219363 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065587159 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067721286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062414554 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066833929 seconds)
  done (took 3.36482762 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373809938 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363316042 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.371260714 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073335861 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.666074971 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088660299 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075626826 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096336185 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071228677 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268980712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708839774 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.095628121 seconds)
  done (took 13.882230429 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075367286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069341976 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083835078 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083996272 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07272977 seconds)
  done (took 2.010863814 seconds)
done (took 102.154454285 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080414344 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.295456259 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053261486 seconds)
  done (took 2.003337077 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082548635 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084272586 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083791621 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082650132 seconds)
  done (took 1.964187281 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074303366 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075786133 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083936573 seconds)
  done (took 1.859692691 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.22196055 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138787718 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086136027 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081892447 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077726689 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078839366 seconds)
  done (took 1.868907927 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071722829 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074727222 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072239762 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075964312 seconds)
  done (took 1.921617864 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076290265 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052306422 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054669878 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055774667 seconds)
  done (took 1.866833394 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085875305 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078733605 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078387385 seconds)
  done (took 1.871284053 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106133405 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084319974 seconds)
  done (took 1.818844626 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081308138 seconds)
  done (took 1.709069497 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098123293 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112851872 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127720433 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10864829 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135057162 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10787994 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084685283 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085661687 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07627222 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086630264 seconds)
  done (took 2.652255777 seconds)
done (took 21.688137441 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077895773 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366722731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360303626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090431441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668685008 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356378082 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987372947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091643048 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119940118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067077804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083635231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647320443 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980196454 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323827961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96540617 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31791441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650246795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068168207 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067321824 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067787679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97316255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067072296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067627673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068166038 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647528655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370803742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067412865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.31704328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067114573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069015871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354469667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067702124 seconds)
  done (took 16.113095591 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07053425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118156056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073460324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083942155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070173525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06930253 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070973458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06854585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124198549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067510889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083901303 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06729346 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071520262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06806842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086411884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067818985 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068455408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068291697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067832746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067910557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086081311 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067398533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068586449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068362988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068154716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079569924 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068291549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068369355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068156981 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06977913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07103331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068612912 seconds)
  done (took 4.029651324 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115180144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124605756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073902195 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103060662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111722317 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069770478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142720646 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092013309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126604171 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068059857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084263914 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06789913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100614611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068607333 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087185109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068594514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068934952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068216789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068943937 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068864084 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086862722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067904215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068163442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068707405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068207611 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081302616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068651971 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068531207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068461456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069928541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071029321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068576653 seconds)
  done (took 4.283796662 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072309369 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074680261 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082284721 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08327126 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069272597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071226947 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072414743 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069709952 seconds)
  done (took 2.246113111 seconds)
done (took 28.308070804 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078319644 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068497922 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07274432 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080455537 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073371767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078239226 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066770686 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074162426 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071554012 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072641834 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074787362 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067014768 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070625798 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066831766 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073600628 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067378166 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07882885 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071524873 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079716237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079024608 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069590503 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072555311 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073646123 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078914071 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079077757 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078638242 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076958818 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07246303 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06902478 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069862329 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076557317 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083782989 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068386489 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079085913 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068227265 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067462423 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071153368 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067928653 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078714358 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076522593 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069323343 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075687517 seconds)
  done (took 4.719409835 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087738611 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090777534 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084567821 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061237956 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066356416 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064627017 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088343077 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059358844 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059467217 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08752821 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055468467 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058765422 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061845938 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05383853 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059024387 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056410016 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061187 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055859168 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05938297 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058935994 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057685245 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053774466 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06011934 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065654311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056225756 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061877498 seconds)
  done (took 3.342579323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074595614 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083915256 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088735209 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127082988 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103835607 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076769617 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077422113 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086964755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084965071 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066519373 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070674884 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093183345 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087534914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073400832 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067384661 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083484881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082133188 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068575294 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073370213 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090328726 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084450959 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077056828 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.0921643 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080209042 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066522998 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068558908 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070949482 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080401193 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071612636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076144282 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070896817 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070397787 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068835052 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.089299861 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070738299 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068420398 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089449333 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07665517 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0774278 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067735234 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070340897 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068555021 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089013719 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122305861 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066615376 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073138717 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0751245 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076410804 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067388266 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085714537 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078466796 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066952457 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070445969 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066245034 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067157392 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079843211 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068858594 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069448744 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075833505 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070067014 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079693661 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071215798 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08244653 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066675864 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074824673 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066344138 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067930919 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066314432 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092000207 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068627401 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107937183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068409817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06817285 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075833952 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074554723 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073135662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067779882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082103937 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077157187 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070455614 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075577597 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06995536 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070087824 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087547013 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069681003 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06886801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067921142 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072896598 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069776293 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068876598 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079553208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067446743 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070157425 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083616427 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066740933 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068363243 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07283645 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071575807 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066498073 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078301403 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072174426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068024875 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076323088 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066935533 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069885993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07766483 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073449245 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066398008 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072026826 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073087455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068144039 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069092682 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07032789 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06895769 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076297168 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073390025 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071610345 seconds)
  done (took 10.507493311 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160191469 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152801685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070455212 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14410644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076177427 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078633501 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145965393 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093913537 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067852754 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067968045 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068929548 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11455367 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105059001 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12119083 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078031676 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067523708 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083038958 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116378326 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147988398 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141523705 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083076308 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076400251 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069638629 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068800013 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074786606 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081963917 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090421181 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076871553 seconds)
  done (took 4.4157715 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079769136 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100043646 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07318583 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088938012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089732559 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067444721 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069747105 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06933871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080272155 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078119421 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067310913 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073054407 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074226826 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074066546 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068848172 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074185822 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074387254 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068994228 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070500594 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072660353 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077237768 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08005931 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0716124 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067005121 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073567262 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066968527 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063613774 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083438782 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067592999 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089892262 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066066461 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07414276 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081384497 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068741447 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067899032 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067540088 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067059422 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067413207 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069395093 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066075568 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066132611 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057395168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066936731 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07897896 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073521108 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056124369 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07192585 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072744343 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072285463 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065063028 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07030858 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069729284 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070459555 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074351918 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072501882 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.0725826 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068590157 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065749629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075421296 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067222596 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06436919 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065791274 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071720752 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065226975 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075617531 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.0716645 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065920304 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067031879 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069206016 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073260312 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067000743 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070611158 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064871541 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069235198 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071611284 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068786415 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068338263 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065864575 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067107701 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067592495 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055767459 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067228633 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053424831 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069950533 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065407713 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066119757 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067119642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072042628 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07874558 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06847282 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072902042 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068135529 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06615814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069992832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060203148 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070119944 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082314427 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081646428 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067277403 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06536176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081818386 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071501493 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066491339 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056259844 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074480087 seconds)
  done (took 9.111469264 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095148365 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088064701 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069831049 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083026748 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090888897 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086842574 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07410122 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076028205 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069011774 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081631731 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073130146 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075975587 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06803171 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076850033 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094035393 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076435413 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069780574 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076418484 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071574601 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10105223 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082588472 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08172868 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074347004 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067906757 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07569558 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079417495 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089514433 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080114321 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078569501 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07545612 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079747924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089503866 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073427308 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071794407 seconds)
  done (took 4.390786647 seconds)
done (took 38.131056674 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.738779283 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.901550874 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.726113094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09626594 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.797093616 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.052283248 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.817899093 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.719037309 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.064320795 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.761668485 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.978665499 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.796302363 seconds)
done (took 65.114865163 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.813038917 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.862237094 seconds)
    (2/2) benchmarking "String"...
    done (took 1.995100994 seconds)
  done (took 5.519331785 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.054015165 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.254717149 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.964382299 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.719237775 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.728062521 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.014939887 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.523469184 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243519605 seconds)
  done (took 30.111593879 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.903214822 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.92351764 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.379856173 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.409160798 seconds)
  done (took 15.325118703 seconds)
done (took 62.56986383 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.731119596 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.726762415 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.723592834 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.706133301 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.780699187 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.741688258 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.913825337 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.770348427 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.720334032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.712628112 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.723129978 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.155686154 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.727862823 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.018323488 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.723083243 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.729171161 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.776007962 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.27155717 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.879214866 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.734565441 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.726713831 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.734848948 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.724243675 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.730324119 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.744605867 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.72408714 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.166867682 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.733272919 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.34684957 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.726868411 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.752616008 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.024241801 seconds)
  done (took 202.066572139 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.722335822 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.908852622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.915979042 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.756098337 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.34017757 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.923517159 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.857055215 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.399298732 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.725757834 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.752448004 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.898117174 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.723406097 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.949377935 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.675449488 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.730221466 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.724799664 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.056750393 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.958725134 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.725633636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.997941353 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.724273799 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.740904888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.70129708 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.88350369 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.735156476 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.74325687 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.891680445 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756268166 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.921009543 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.013757529 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.754224677 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.769155074 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.946663426 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.595092972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.72508589 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.729962888 seconds)
  done (took 169.040551153 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.110223585 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.722553647 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.722761281 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.723283129 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.736307386 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.722913299 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852926193 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.853730062 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.18873783 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.974049059 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.775006359 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5691685 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.722284693 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789190506 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.736287117 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.722260443 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.738023013 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.747601013 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.725740714 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7237135 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849497865 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.733863277 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.883227807 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.726613615 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.718739966 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73056054 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.086579767 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.71844324 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.72330283 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.978341583 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71852185 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717951334 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.620597095 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.39919324 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809819565 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.718568354 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.722007472 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.716422623 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.936199061 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717718005 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.71832976 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.719890572 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902991382 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719503377 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844033927 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717865078 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.230120165 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.719691882 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717236662 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.436864954 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.414769449 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.719661096 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.715952058 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.715747225 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.719253686 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.717680097 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716406548 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.723639203 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.46842811 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.790030506 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.718942476 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.716556088 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.719548359 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72300499 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.718323584 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.777054525 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720699581 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.908363414 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.771294067 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.820642261 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.835668986 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.715405008 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.77728903 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803700045 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.709889753 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.70884983 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.709123594 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.71022001 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.790266455 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.709881043 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.70867779 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.827659075 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.715691733 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.709438181 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757992091 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.778245705 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.708860681 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.607818364 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.711228588 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.707829863 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043418648 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.777833958 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.708636843 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.707789592 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.708517883 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.829674093 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.708411442 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.833815563 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.473293122 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.711448963 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.431595247 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.71102204 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.849838948 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.70852772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.897594538 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.711158969 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790601557 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.712769974 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.709711528 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.708645549 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738482253 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.709480127 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.767143087 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.711813689 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.080049658 seconds)
  done (took 395.118886875 seconds)
done (took 770.053749361 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.407812698 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.372295597 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489224212 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.403708396 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.373059341 seconds)
  done (took 13.698242307 seconds)
done (took 15.3484914 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.795667747 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.800554241 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.735048152 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.797580715 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.73026773 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.797714036 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.779566131 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.734653742 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.765835687 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.733126924 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.76755842 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733151179 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719980757 seconds)
  done (took 24.542356124 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.941678613 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95487898 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.778994059 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948836755 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755408309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.937030347 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.871841445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.860178623 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859523175 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.72271806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.720800078 seconds)
  done (took 22.003472459 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.944341625 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960757742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780206771 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.945989557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755411119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.949559548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.873535844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.86213692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.85968105 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721863768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716425021 seconds)
  done (took 22.018589024 seconds)
done (took 70.21419605 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.712633311 seconds)
  done (took 3.360954092 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.737490952 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872664733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.717612284 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.716947554 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.712845009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.712812977 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.716305109 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.710201441 seconds)
  done (took 15.545910796 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.709310994 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.709990678 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.707706218 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.708121873 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.707436459 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.710173993 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.709572264 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.707045788 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.709662121 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.708734907 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.709754216 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.707457428 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.7071094 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.706548359 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.710738085 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.709030344 seconds)
  done (took 28.98496382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.708562287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.706602206 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.706956966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.708907698 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.706126453 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.70652175 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.707092726 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.70629795 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.706599947 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.707164095 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.707219441 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.705940264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.706486585 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.705732946 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.706907883 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.708304184 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.706511276 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.705763355 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.710399545 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.705671257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.70716667 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.706613708 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.706948101 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.708042632 seconds)
  done (took 42.616006051 seconds)
done (took 92.154472816 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.419461282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.170858377 seconds)
  done (took 8.234885147 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.709375804 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.707710442 seconds)
  done (took 5.101095948 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.708040229 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.708183422 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.708459847 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.708557928 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.707758557 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.709295314 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.708047255 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.708170864 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.708700378 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.708748586 seconds)
  done (took 18.728430344 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.710018674 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.707960376 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.705199433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.708193276 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.708153409 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.706252938 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.708143326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.708657225 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.708470657 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.70622683 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.708859882 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.706431616 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.70852409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.706994632 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.708785931 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.705761069 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.706748385 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.707494646 seconds)
  done (took 32.382899101 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.708699538 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.708045494 seconds)
  done (took 5.061723916 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.70533469 seconds)
    (2/7) benchmarking "second"...
    done (took 1.707236566 seconds)
    (3/7) benchmarking "month"...
    done (took 1.704965334 seconds)
    (4/7) benchmarking "year"...
    done (took 1.705811778 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.70563923 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.705710046 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.705505349 seconds)
  done (took 13.584832019 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.709153325 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.863881903 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.934353024 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.375957303 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.71065072 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.710474514 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.680618631 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.712165707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.71296669 seconds)
  done (took 19.055673713 seconds)
done (took 103.79341939 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.518220938 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.704286707 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.091150133 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.78640229 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.72044683 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.000913527 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.744076628 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.937637376 seconds)
done (took 42.146715204 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.712030293 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.220762215 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.229678072 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.144142179 seconds)
  done (took 12.240349305 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.687681938 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.229453431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.73890466 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.301196097 seconds)
  done (took 19.624464986 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.069198948 seconds)
    (2/2) benchmarking "read"...
    done (took 2.057759631 seconds)
  done (took 5.774288151 seconds)
done (took 45.994779547 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708330695 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.706372539 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.704025929 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.704994429 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.706888186 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.704082823 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.704608679 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.707042326 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.706560288 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.707691403 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.703969638 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.707484031 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.706082086 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705816923 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704962554 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.704303366 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706706485 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.706833472 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.704649331 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704529655 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704320499 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.707505796 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.704484626 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.70556321 seconds)
  done (took 42.582285776 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.706958213 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.705862823 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.707403793 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.707349411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.705972535 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.707459 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.70683025 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.704539579 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.706437553 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.708168667 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704577919 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.705036183 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.707079992 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.704358144 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.706927312 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.704561191 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.707587057 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705377446 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.707412865 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.705109244 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.707042569 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70506457 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.706112901 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.706761149 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.704547777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705050581 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.706984554 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.707196706 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707071738 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.704841686 seconds)
  done (took 52.830190045 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.710785373 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.712338956 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.707688428 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.706199728 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.707633866 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.707523076 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.707108332 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.707261631 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.707925663 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.707421731 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.707709621 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.707445067 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.708543005 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.707144162 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.709635867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.706823574 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.707276205 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.707584909 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.707895387 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.70789345 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.708387869 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.708136595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.708216463 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.707783035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.707581194 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.707646767 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.707963225 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.708354017 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.708171776 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.708378936 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.708367479 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.709055859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.708274586 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.708431942 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.708809831 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710127132 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.712101883 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.715084316 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.708673192 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.709559483 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.708953996 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.70939021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.70972508 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.711658278 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709186778 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.710142843 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.709972747 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.710265627 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.709206501 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.711348584 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.708787119 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.709793078 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.709774259 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.710230368 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.709073248 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.711709536 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.709413047 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.709877187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.709502537 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.709491657 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.710465542 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.710933517 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.710238265 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.710525807 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.710636011 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.710440831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.710523624 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.712247336 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.709745308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.711240027 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.710023721 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.711060669 seconds)
  done (took 124.710423535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.711370623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.708252092 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.707630472 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.708411664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707669909 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712721437 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.708074909 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711210914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70681204 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.710315155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711868055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.710173434 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708188996 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.710988829 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.711814996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.708815959 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.711774911 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709761766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.711052431 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711742258 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710972523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.709425836 seconds)
  done (took 39.26615625 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713579335 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711800143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.708566177 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711389975 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.708714978 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.711600659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.713462806 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.711315414 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711878784 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709557914 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709261573 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712290122 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.71057915 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708958147 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709667243 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.710066031 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712475283 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710047597 seconds)
  done (took 32.444225061 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.710375088 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.710978256 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.712685383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710077984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.712125766 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.71275537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710317811 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.713288987 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.712769559 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.710306671 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.714059515 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713478502 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.7133302 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710965159 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713664261 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711888006 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.715107248 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711992352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71348692 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71148071 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.710673734 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.713695005 seconds)
  done (took 39.320647975 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714753695 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.713171226 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.710540554 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.711959083 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.710456003 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.714397846 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.714021766 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.711276091 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.713852975 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.714003656 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.71187338 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.715182996 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.711500987 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712651732 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.712106182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712163131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.714143955 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.714094992 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715076688 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712543883 seconds)
  done (took 35.910956452 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714931267 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.717385435 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716267574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716301643 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716075732 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.715877211 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715423698 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.716958391 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715442731 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.71638112 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.715816026 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.716096539 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.716401673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.71763747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716301245 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716573483 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716508262 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717056345 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.715793696 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71642558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.716246003 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715956558 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.716774737 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.715684218 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.716335303 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.717079415 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716407284 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716470251 seconds)
  done (took 49.709195733 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715889765 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.715935086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.713887637 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.713944351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.713616647 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.714161446 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.713992106 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.716097898 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.716150786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.714678472 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.716724571 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.716184834 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717258924 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.71736599 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71730192 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.717090797 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.716972964 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.714235459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713819826 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715937009 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.717140317 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717515032 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.717476331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.715100005 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714617909 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.717604891 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713998633 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.715047015 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.71773424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715031491 seconds)
  done (took 53.126821088 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.738463951 seconds)
    (2/2) benchmarking "in"...
    done (took 1.735808315 seconds)
  done (took 5.128391761 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.715159692 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717992998 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.717759137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.717300574 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.71531897 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.717412659 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.717893503 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714932162 seconds)
  done (took 15.387965637 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.719298366 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.71777926 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.718009114 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.718040485 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.718671993 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.719980195 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726189528 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.717913599 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.720978881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.719653638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.724345473 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.726336097 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.723363199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718849586 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.719286964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720240166 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.71855236 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.719044927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.717904769 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.718232407 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719773262 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72211503 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.720482152 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.717490789 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.720406455 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.730371453 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.725275755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.719121465 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720069558 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.725850473 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.722285522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.716165841 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.719742445 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.719805248 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.719570598 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.719805026 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730194069 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721157012 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.727174032 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720250276 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720470692 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.71758487 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.722176181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.724127336 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722468143 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.720026916 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.719709479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.718220893 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.720121191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.723127733 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.723474471 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72072372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.718274687 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726701339 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.722412534 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.729045367 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.721232335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.724556547 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.728797848 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.731336837 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.733232071 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.727867957 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723247555 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.721166221 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730514621 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.741584848 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.73030233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.718344027 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.718772864 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.720927266 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.73008937 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736726103 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.729246973 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.722397235 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722017475 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.721452533 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725507537 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722218442 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.732653289 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.726397363 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.721610515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72317158 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.73082098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.7402439 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.721751774 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.722659522 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.721602271 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.723226883 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.723817049 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733409222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.721550054 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.72227191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.724261873 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.723003176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.726979599 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.723257956 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.72268362 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.724911846 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.719439008 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.723005821 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.72267869 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.725631468 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.731721942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723064066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724841285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.732298414 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.723336765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724874807 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.733449487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.723970601 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72422887 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.724809487 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.731681406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.720790301 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.72661756 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.731240408 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.724670318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.727350954 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.72459095 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.724197853 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732730783 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.745865477 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.723773466 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.724533183 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.728210403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.733290973 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725311702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.729208292 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.724724265 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.722558775 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.72187567 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.727428326 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.724084668 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.727281082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72497906 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727283402 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.722700201 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.723744946 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.724935158 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.727445671 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.728143963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.727348543 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.727281923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.729073461 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.725476002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.728883233 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733441855 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.726698692 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.727586206 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.726845975 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.721598787 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725335187 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.727765485 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.727405923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.727640015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.725655182 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.726313631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.727427566 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726198104 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.726053295 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.728190016 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.729475296 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.730671901 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.727136887 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.731934559 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.726869531 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.723214732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.726101496 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.72555579 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.726497474 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.726621054 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.72522842 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.728653307 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.73329314 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.727895077 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.726718925 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.732012456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727767937 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727738961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727295735 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.73051307 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.733693143 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.727883597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.735646959 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.727634935 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.72725708 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.726768577 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.731108966 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.727554527 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727989627 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.730679158 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.733761826 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741674378 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736106829 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.728422201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.73083862 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.729086751 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.731557314 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.736315113 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.728283414 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.728612511 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728071282 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.7297202 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729428986 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.73168057 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.729506159 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.728842946 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.728534088 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.728405447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.7286886 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727580111 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.730648661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.731589786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.726288637 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728376026 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728988291 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.729527206 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.726568318 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.728765108 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.730061712 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.729116662 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.729952792 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.739732154 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.727804403 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731403442 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.731732913 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.731741775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.729779978 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.729047178 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73233749 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.731406442 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73916042 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.732992435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.732882958 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738945461 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.731451432 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.7312496 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.733590725 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.730190426 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.726670519 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.733301346 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.73582178 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.730888514 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.730766665 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.730831488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731764981 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.730956584 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.738932433 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.728070651 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.731075074 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.731257136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.734883367 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.727447146 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.734048983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.732377746 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.733784333 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734498838 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.732270866 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.731039614 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733893907 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.732073438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.731879555 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.731942101 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734410827 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.737737825 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.737665213 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.733739969 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.736811929 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.731916636 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.734140827 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.733477972 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.731341052 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731802455 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747248369 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.738776744 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.741378744 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.736149277 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.732191606 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738862859 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.734037193 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.736668434 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732938943 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734420614 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.734046371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.733867761 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.730472343 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735530181 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.732465674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.735755053 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.734437676 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.736396903 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.73210319 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.73371062 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.733789592 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.733311541 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.733183152 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.733892137 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.732654342 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.738572618 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.736162926 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.734055248 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.734436513 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.742626464 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73408115 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.736379315 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.734829616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.735426433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.734462047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.736073212 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.734036128 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.736880482 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.739465553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.736945616 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.744254359 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.735296717 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743395849 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.733392812 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.73754493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.739999881 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.731842045 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.733921629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.736474146 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.734601982 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742971005 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.734431736 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.735640325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737881435 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735255847 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.735429277 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.734399196 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.734716684 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.733801861 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.735004004 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.744631537 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.736818938 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.738608431 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.739072699 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.732465759 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.736482391 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.735332015 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.735661943 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.742308653 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.735382335 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.73727559 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.736171326 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.737067734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.734922198 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.736513753 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.736163862 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.733964824 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.735118385 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743733658 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.737420814 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739293152 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.736082286 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.747584645 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735884158 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.745028253 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.737170729 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.738643895 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.736210341 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.737223022 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.740062578 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.736926567 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.739714118 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.73740839 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.737359462 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.73961721 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.737380886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.740224746 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.737818099 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.737708542 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.737685669 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74670781 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.756372153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.739535374 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739929708 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.734568084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.739442487 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.741456694 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.737704265 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.736361818 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.739888644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746518106 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744264146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.739244629 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.73724297 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.739670495 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73740213 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.738137857 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.738734315 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.738460486 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.7395441 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.740712287 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.738527829 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.745451623 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.7386959 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.740231065 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.741515741 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.739938826 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.750693555 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739537659 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.741030386 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.73989143 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.738376488 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.740326803 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.740695387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.739873486 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741392896 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739596825 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.741007888 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744323625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.743666372 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.74336817 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.740015336 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.739850977 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.741582493 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.741156015 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739112321 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.739708202 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738861903 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.741682521 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.739328187 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.743593276 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.73959539 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.739754356 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.74185893 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739695813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74250698 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.745746386 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.74132102 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.737716962 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.739982775 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741086021 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.739487058 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.741590732 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.751695863 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742465151 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.749378361 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.748390121 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743481859 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.74233551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743748557 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.74781472 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.741789558 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.743179718 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.741333228 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.744776777 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.742164641 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.744097348 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740981252 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.750008451 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.7426185 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.74223653 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.750358663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.743856437 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741787199 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.742832452 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.745429257 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.742822651 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.738421809 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.741428267 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.742322843 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750034369 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.745404869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.74220807 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746071819 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.743092158 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.742896785 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744146406 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741885898 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.744620846 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.739828428 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.742920242 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741857139 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742237386 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.740306457 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.743286173 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.742943118 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.745999395 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.749446605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.739503533 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.745062365 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.744387926 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.744919546 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.742986046 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741612427 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.740446296 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.739691156 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.743799969 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743079338 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.744916489 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.747284523 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.744113071 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.744768793 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.743901098 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743520181 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746893462 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.751833419 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.748212273 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.740172334 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.743429018 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.744859972 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.748131414 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.743692509 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.744451916 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.744975854 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.747983076 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.743752857 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.744213715 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.744222027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.748014352 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760746143 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.74405566 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746055539 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.746674596 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751842988 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.743903176 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.7421325 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.744163397 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.74838101 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746629262 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.751346686 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.744378212 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753070497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.746247281 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.746282628 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.747582404 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.748004231 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.752628557 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749465332 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.745772522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.745143828 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.750552684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.766340755 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754358419 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764352441 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774957438 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.748485165 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.749182728 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.745667393 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745507578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.745576654 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.749490354 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.746529451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.746480332 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74499112 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.746255783 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.74692369 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75112826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.748602698 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74502524 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.7458913 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.746694692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.749302603 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.742707231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.746280093 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.745754891 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.746400827 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.746537559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.746609153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.747790428 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.761763419 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.7568602 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.746280451 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.749665573 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.751213365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761251021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.758754587 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758802182 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.754060587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.747894174 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.747391461 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.750288444 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74752666 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.745143216 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.749587768 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.75003328 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.748528177 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.744454497 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.762174086 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.754478824 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.753780826 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.749902988 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.747995749 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.7479047 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750435055 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.748108858 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747782189 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.751701664 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.748748974 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751788677 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.748568122 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.748687568 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.751597337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.754673374 seconds)
  done (took 1036.097308355 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.747099987 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745514138 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.746426404 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745160678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74548727 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74647637 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.745527469 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.746233586 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.745875367 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746223942 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.746325408 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746300867 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746014139 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.746639055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746276372 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747022932 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74646626 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747527251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746927857 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746576315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746867605 seconds)
  done (took 38.35774116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.749148631 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.74677595 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.746554901 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749052003 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752317829 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.758073426 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.756376727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753611165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751325706 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747661565 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.749200478 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.749406172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.748238738 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.748365188 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747816629 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749769583 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750005464 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748261001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.750657443 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747157754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.751172365 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.748158321 seconds)
  done (took 40.184432042 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.750508741 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.750074183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.750587259 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.747923358 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.75055492 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.749252064 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.750827797 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.750610228 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.750758191 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.75371516 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.75073261 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.752857355 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.757528093 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.75474746 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.754883015 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.750143856 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.895345849 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.752167193 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.751995894 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.751475719 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.748940602 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.758747551 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.74978771 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.748884819 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.75213542 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.751790633 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.751698348 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.751553404 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.75135355 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.754270637 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.755319358 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.751339522 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.752588777 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.754766619 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.752457171 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.753752723 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.755632737 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.753031653 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.749214472 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.753447333 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.762446211 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.767304566 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.754259639 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.760683312 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.752193397 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.753144275 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.756091587 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.759064235 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.750956745 seconds)
  done (took 87.731111952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.752400979 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754031852 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.750389479 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753448545 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.753923682 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.753457241 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.752935291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753402868 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.750016183 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.750460591 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754062535 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.750215353 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.749052089 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.752416129 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751978329 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749568026 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.750398164 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749015487 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.74959431 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.74986143 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.750083105 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.752314527 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.753008058 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.749996311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.753173735 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.74919867 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.749703113 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.752711171 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.750866857 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.750907115 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.753338925 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75375751 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.7537093 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.75155603 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.75045334 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.75312893 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.75361074 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.751644603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.753804047 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.751767025 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.753454401 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753622866 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.75366351 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.755850628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.751820851 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.752447873 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752789599 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.753144687 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.753087751 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.755819393 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.755174989 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.753036445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755613245 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.753181819 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7560486 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.755944464 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.752620491 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.751945194 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.755585205 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.752555259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.752731511 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.755964742 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.753391543 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.755983606 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.756307663 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.753727558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.754035687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756193017 seconds)
  done (took 120.876035254 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756195514 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.756833157 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756710588 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757300758 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757642889 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.757787865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757719771 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.756739717 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75734696 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757651811 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75694338 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756286695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.757177703 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.758081688 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.75761693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.757654151 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.757688205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757491022 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.757913478 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.758853212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.758563536 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.757224813 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757676573 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.758269997 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.758843367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757717399 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.758393266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758336231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758199 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.758081228 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.758692939 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.7582476 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758594486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.758518583 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.759309093 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.759912817 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.758679793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759189748 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.758513636 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.75958189 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759663241 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.759445762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.759278382 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.759804519 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758773101 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.759505621 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.759346969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.760447697 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.759665774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.759244936 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.759611051 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759974 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759785809 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.759391783 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.75938782 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.759660753 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759854469 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.759197381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759809314 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.759657724 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759952307 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.758854017 seconds)
  done (took 110.723638141 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759881348 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.75932324 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.756384372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.756907718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.759299523 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.756657722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.760034975 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.759274328 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.758882093 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.760654333 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759370026 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757680195 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757180066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760965829 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.75696865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757296073 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758251516 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757624934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759984481 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758333905 seconds)
  done (took 36.866308003 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.757760714 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.760542331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.757881246 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.7581448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.76069653 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.75915806 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.760731204 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761009059 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758388518 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761859701 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.761096127 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.761973679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758413225 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758901467 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.761847916 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.758883362 seconds)
  done (took 29.853767351 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.759835746 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.761930103 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.76242325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.762289859 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.759546795 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.758908389 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.76197113 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.759429852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.759633851 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.761690705 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.762168844 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.762365022 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.761418814 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.762370324 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.759125385 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.762564166 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.759942093 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.759741902 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.762725326 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.763057259 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.76065418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.760021742 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.762204001 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.762352324 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.760001865 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.759821997 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.759514983 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.759869703 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.759789993 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.762776981 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.760049777 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.760350741 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.75967386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.760885741 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.764548821 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.760510971 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.764060875 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.763254908 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.764205239 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.763758604 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.763541606 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.762088859 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.76278278 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.764166875 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.761011387 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.7625323 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.761792854 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.761286943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.760812089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.761090567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.764335099 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.76422053 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.763961182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.7642405 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.763408714 seconds)
  done (took 98.591233241 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764740278 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764981441 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761825625 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.764557997 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763962161 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.761839257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.764416339 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761831927 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.762486979 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.764613989 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762508318 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764255352 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761510225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.765606686 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.763185793 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765000956 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.762534353 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762864183 seconds)
  done (took 33.442537721 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.76348046 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763152941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.76546158 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762750381 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.76246388 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765141311 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763061923 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.765104536 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7647814 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.763259977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762789874 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.765205574 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766536954 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.766265836 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764366247 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.763610759 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.766670678 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765798039 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.762801443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762708034 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.765376544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765642514 seconds)
  done (took 40.516666264 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.765793149 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.765394486 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.782912785 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.805164637 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.793330731 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.766705278 seconds)
  done (took 12.380271 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765223882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766766707 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.764012471 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768463432 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767102415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765149751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765386549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764634625 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768067714 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76620377 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765493758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766965724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767095095 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765721746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768299526 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767391162 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765315199 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764305196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767041581 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76771292 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765487382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766887189 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765230352 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764580036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764998915 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765712762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768150294 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765778473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76555828 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767353325 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768504824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765277761 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76765445 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765405353 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768920692 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76737292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766284655 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767868821 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768255206 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766431024 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768420667 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768127134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769060478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765553191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768520133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765977803 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766606018 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765705075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767012229 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769903489 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769381443 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767158189 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769817605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768644849 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769180286 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769058143 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767573383 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766674934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769448516 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768468174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768064151 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769576323 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767477126 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768011642 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769866445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767740771 seconds)
  done (took 118.333641417 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767791245 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.768123424 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76622001 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768691747 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7673108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768016848 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76742033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76871099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767838276 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767761027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770993676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767986027 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768468882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767694929 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767995921 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767943128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768002598 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768009787 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768389028 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771234681 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768185167 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767758096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768572988 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768782612 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768909898 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770777852 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769372927 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768895776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768565194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768343648 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768058862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769545134 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77123686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770218732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770104589 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770780593 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770569323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771455722 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769385002 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772873866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770884182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773655775 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770897099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771892116 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770691177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771146191 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770633876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770266616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770533411 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771226796 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77073902 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769678394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771120783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76987345 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769196994 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770110593 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770765063 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770585695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770339708 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773197028 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770403406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770913089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77413727 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770211928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770562131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771575168 seconds)
  done (took 118.509443449 seconds)
done (took 2414.524646161 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.782339952 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.953779547 seconds)
  done (took 15.443835057 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.944537657 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.894841057 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.779717698 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.777947835 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.78023205 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.773864201 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.799493405 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.779822545 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.781149567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.780604223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.780247199 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.965905578 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.784020818 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.781124717 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.780771168 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.87390016 seconds)
  done (took 50.777428618 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.783696964 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.784567467 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.795526088 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.787713093 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.784168782 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.804297876 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.817785068 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.788705814 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.844722684 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.808074993 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905700853 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.796447502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.784293949 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.845872425 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.796702807 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.79912401 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.88665128 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.860115229 seconds)
  done (took 34.392027718 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.864772655 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.784749654 seconds)
  done (took 10.373903797 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.794073974 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.79231554 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.817567663 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.810540537 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.801486278 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.838350942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.821003522 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.821205657 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.790285025 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.786938051 seconds)
  done (took 69.79342334 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.790330057 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.78630288 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.786149692 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.783990797 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.77801933 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.784934964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.783899466 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.779910493 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.476105308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.821272111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.791182872 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.790039112 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.784124467 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.786570258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.782371395 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.807806126 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.947754182 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.781676414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.781288738 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.791088682 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.785763455 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.844959943 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.798974052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.784678898 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.814811232 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.472439157 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.792966511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.790949488 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.906693529 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.782592452 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.784287651 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.786969918 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.787983517 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.17715272 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.117161127 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.7859782 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.795331698 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.793564583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.783611089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.897213793 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.78809597 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.792139654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.731741539 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097917201 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.88455543 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.8301346 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.142976169 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.792570885 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.788349086 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.816036588 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.789016778 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.787834701 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.800022929 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.30356153 seconds)
  done (took 128.166046968 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.828492685 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.265783898 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93591086 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.782984017 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073611081 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018355058 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.782532531 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.831696695 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805638797 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.033217783 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960543208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902618823 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782505895 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.780371225 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.782579664 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.781451758 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.930805397 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.853613963 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783404474 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.78307001 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817566662 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.050602348 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.908794126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.921300524 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.806393211 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.007988421 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.910893911 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.900918762 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.788273797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.781085523 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850850662 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793796193 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.78305695 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.784192041 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948462817 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.890119432 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879855438 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.784360369 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783529284 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.784578116 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.81783629 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005118839 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892592048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.922631996 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.033093555 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.013364616 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.785214141 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782318919 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.7828266 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.97704163 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.99943818 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.037453929 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.91323338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.785840886 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.128039734 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.782689996 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836125872 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033995086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016946055 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896749677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821329616 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787186337 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783569993 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.100815177 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.786650523 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891863557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.163554159 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.787756611 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.892796163 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899928576 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.018938814 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025736634 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.815705541 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.811708508 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.831742143 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.069735972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.85667081 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038321225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.792076061 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786927266 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877849018 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.791487021 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.959005814 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103432825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.050619882 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82814717 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.786256777 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.78531084 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.034867803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.036674399 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06014121 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030398506 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.95307085 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.791483378 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.787138357 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.786084794 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.790788602 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918733537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788667017 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1463365 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032927645 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.557237895 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818360718 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104989038 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925126498 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.788902526 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.785601972 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786230756 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.991672704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.829284853 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.789141242 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785528346 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.033327769 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.736743074 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.89362509 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.490546471 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.854025431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789612475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.053227101 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.794170841 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035135943 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.828443172 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099636609 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.127685659 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831797545 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.983079751 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032548882 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.790413241 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051909991 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102468734 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.91212419 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036461021 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.528241834 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.787327058 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08058368 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.798148158 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.80796935 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.957979443 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791997302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.965725112 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.789868421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097916073 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813844133 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959758023 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.065151243 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.065534104 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.834417445 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842411898 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.821161029 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92456317 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791573947 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.761735713 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.972190633 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.900261254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788291497 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.360238181 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.788995661 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937399953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089329904 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816028813 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.860778235 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.791078238 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792647781 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885306456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817820839 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.390349769 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.790483504 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.960341332 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.779072616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.243280136 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.788911577 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.099582726 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.002811695 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.790683814 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.788691833 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.5914703 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.789600176 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.946835131 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.949684631 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.397815888 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793210923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008067487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79450553 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92386409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.794997642 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.793614916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.140406652 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862868676 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.79508163 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.796495215 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.789762072 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.791643736 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021277747 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.819994456 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.51217343 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.929189107 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041237572 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.103322385 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.054573196 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.842517592 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.795244083 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.056348933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826643541 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.860160754 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.795222767 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.816927098 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.038694708 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.800358718 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.020920048 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082250207 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.813667025 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843819769 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.796927489 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885199926 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.791786346 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.932639728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888960405 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.79736061 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796782622 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.908973631 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.918854177 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98731913 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.793526534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.80256714 seconds)
  done (took 936.249249388 seconds)
done (took 1246.902303306 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.792051654 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.795310231 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.780653073 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79590199 seconds)
  done (took 28.896257324 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.799991219 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.797900354 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.799629074 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.798079405 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.800460736 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.798700686 seconds)
  done (took 12.527725618 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.81778027 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796408659 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795418925 seconds)
  done (took 21.142561366 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.867643176 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.207595586 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.903668488 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.244755291 seconds)
  done (took 9.95640676 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.800458107 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.800715767 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.799546225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.801135575 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.801037469 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.802246566 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.800140331 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.80201304 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.802236185 seconds)
  done (took 17.943540566 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.049008866 seconds)
done (took 96.246624787 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.035339841 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.445686404 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.752131508 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.140286662 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.798772911 seconds)
    (6/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.045879681 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.876029019 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.924808189 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.862110668 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.833565842 seconds)
    (11/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.89693046 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.825200699 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167273073 seconds)
    (14/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.863241314 seconds)
    (15/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.995896549 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.700676711 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.088435221 seconds)
    (18/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.78303629 seconds)
    (19/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.882646169 seconds)
    (20/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.923274067 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.798285816 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.796466147 seconds)
    (23/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.884509219 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.923706225 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.09646975 seconds)
    (26/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.981251537 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.87047497 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.918608204 seconds)
    (29/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.796570191 seconds)
    (30/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.781681472 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.924819601 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.820090218 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.901671763 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.897264381 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.386858234 seconds)
    (36/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.310132981 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.910193609 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.173024064 seconds)
    (39/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.824316862 seconds)
    (40/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.997808781 seconds)
    (41/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.94020403 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.962358876 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.036812046 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800183871 seconds)
    (45/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.852120196 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.810562693 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.911900187 seconds)
    (48/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.140806226 seconds)
    (49/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.983730694 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.064374629 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.027898689 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.141590598 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.90043301 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.976036756 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.810501759 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.853176917 seconds)
    (57/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.964772976 seconds)
    (58/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.163494575 seconds)
    (59/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.895979442 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.042806181 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.801798456 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.824803365 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.810194166 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.972522426 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.046388765 seconds)
    (66/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.989867813 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.148864719 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.583457217 seconds)
    (69/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.331391344 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.105995295 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.866872039 seconds)
    (72/309) benchmarking ("sort", Int8, false)...
    done (took 4.754944785 seconds)
    (73/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.176483781 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.786842207 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.716763067 seconds)
    (76/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.981498072 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.019035722 seconds)
    (78/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.790291109 seconds)
    (79/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.369222163 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.103169431 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.393012652 seconds)
    (82/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.033943499 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.510683477 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.658419853 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.196037834 seconds)
    (86/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.943593395 seconds)
    (87/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.826601067 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.821193799 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.894669814 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.895717092 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803471513 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.381431375 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.850886592 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.882179882 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.494242362 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.502134937 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.955050345 seconds)
    (98/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.143565474 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.072957388 seconds)
    (100/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.218365294 seconds)
    (101/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.370275539 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.877178185 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.114535583 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.812965937 seconds)
    (105/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.934480621 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.888597359 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.785256621 seconds)
    (108/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.897487017 seconds)
    (109/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.35913955 seconds)
    (110/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.399565832 seconds)
    (111/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.810697491 seconds)
    (112/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.884122984 seconds)
    (113/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.826016679 seconds)
    (114/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.721133401 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.94407892 seconds)
    (116/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.197375829 seconds)
    (117/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.153634382 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.901257587 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.703237212 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.022970911 seconds)
    (121/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.885669013 seconds)
    (122/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.883231467 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.789266573 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.383293665 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.878463893 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.803974442 seconds)
    (127/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.80728819 seconds)
    (128/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.102407079 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.831722414 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.976624089 seconds)
    (131/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.461532875 seconds)
    (132/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.386716149 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.803359541 seconds)
    (134/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.828607156 seconds)
    (135/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.827885091 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.064327205 seconds)
    (137/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.789203162 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 3.621501404 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.827434247 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.134070569 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.804466985 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.063573217 seconds)
    (143/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.802195392 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.261014387 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.06383514 seconds)
    (146/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.084396722 seconds)
    (147/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.805539587 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.848477807 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.597797717 seconds)
    (150/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.839669974 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.169114803 seconds)
    (152/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.789904691 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.822958916 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.90491498 seconds)
    (155/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.92617936 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.861642257 seconds)
    (157/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.396030642 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.109764139 seconds)
    (159/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.809485872 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.938048193 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.042257221 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.832987291 seconds)
    (163/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.218414031 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.105517137 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.032682919 seconds)
    (166/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.318152884 seconds)
    (167/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.743759305 seconds)
    (168/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.182422149 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.827514971 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.944891117 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.80805213 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.452897349 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.132489328 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.472026613 seconds)
    (175/309) benchmarking ("sort", Float32, false)...
    done (took 5.571722944 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.030782547 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.233189214 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.805573402 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.319941328 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.059456688 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.90906939 seconds)
    (182/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.031510197 seconds)
    (183/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.423230653 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.886457666 seconds)
    (185/309) benchmarking ("map", identity, Float64, true)...
    done (took 4.687836544 seconds)
    (186/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942581629 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.811801541 seconds)
    (188/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.827319214 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.100228535 seconds)
    (190/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.318960863 seconds)
    (191/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.314629483 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.839728589 seconds)
    (193/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.82933417 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.80484827 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.196111549 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.86641214 seconds)
    (197/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.096926123 seconds)
    (198/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.793091781 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.450207659 seconds)
    (200/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.817985387 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.905638769 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.238117835 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.807013487 seconds)
    (204/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.482306551 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.005062354 seconds)
    (206/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.166198182 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.26005423 seconds)
    (208/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.05625311 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.797986688 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.348944884 seconds)
    (211/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.044698745 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.878371174 seconds)
    (213/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.767647539 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.868426023 seconds)
    (215/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.317477394 seconds)
    (216/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.90286186 seconds)
    (217/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.792917263 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.905385762 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.102986127 seconds)
    (220/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.827411637 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.454568336 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.878877354 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.88149406 seconds)
    (224/309) benchmarking ("sort", BigInt, false)...
    done (took 6.808134372 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.549136909 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.016591314 seconds)
    (227/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.953207254 seconds)
    (228/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.79579604 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.45792169 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.836964726 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.861796664 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.920068181 seconds)
    (233/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.123985057 seconds)
    (234/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.94107196 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.080787591 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.091093522 seconds)
    (237/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.834646396 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.68060158 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.038982582 seconds)
    (240/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.036930672 seconds)
    (241/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.213363353 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.856175008 seconds)
    (243/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.954346567 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.942511263 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.810490405 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.856516414 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.829273685 seconds)
    (248/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.900363256 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.826688984 seconds)
    (250/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.491627488 seconds)
    (251/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.060045471 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.078358839 seconds)
    (253/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.822188842 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.620932556 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.11546581 seconds)
    (256/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.801859176 seconds)
    (257/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.848680632 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.191371112 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83989634 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.906595951 seconds)
    (261/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.987251025 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.933474989 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.794648223 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.20016978 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150035857 seconds)
    (266/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.695185164 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.812501412 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.860150777 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.810145102 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.811725475 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.494256256 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.152295518 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203212196 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.694220538 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.861337719 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.192847914 seconds)
    (277/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.010933919 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.919107006 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.918485084 seconds)
    (280/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.994824266 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.145446811 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.813633802 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.888147884 seconds)
    (284/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.933413681 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.810717838 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 4.220841936 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.90767598 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.101382095 seconds)
    (289/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.027161911 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.976203746 seconds)
    (291/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.394159743 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.931662615 seconds)
    (293/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.837908666 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.97593852 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.802338491 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.709669358 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.004964948 seconds)
    (298/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.422098799 seconds)
    (299/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.658434587 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.992954009 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.861742931 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.797947619 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 4.229602126 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.904937022 seconds)
    (305/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.800146866 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.687469088 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.842395397 seconds)
    (308/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.828209602 seconds)
    (309/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.838074924 seconds)
  done (took 1007.737310945 seconds)
done (took 1009.486020048 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.84521239 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840332129 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.823755959 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.84534079 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.936035394 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.852599125 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.834456873 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.826970586 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.872227489 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.873587192 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.822842496 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852221959 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.826892655 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.825117752 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.823515081 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838964842 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.133194542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.85183083 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.842388213 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.8341383 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.842347405 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.823342454 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.874141881 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.852475887 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.828558784 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.82731887 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.82940948 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.84632803 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.937469173 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.829494592 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.828042705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.836315254 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.133114969 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.849003759 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.819785183 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.845917323 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.837398667 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.835114153 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.829264974 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.85722286 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.272109446 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.833040707 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.827863822 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.826023832 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.827487528 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.830759017 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.827590924 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.832242435 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.84007687 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840095037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.269893625 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.848056367 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.830303238 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.826818485 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.837643633 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826675601 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.830476929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842717813 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.847556073 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842733369 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.124581801 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.857634604 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.829163443 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.844377767 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.835596276 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.307976522 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.82778118 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.832073458 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.272306222 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.839392489 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.306262675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.842388307 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.828832972 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.842381909 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.859926493 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134333576 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.84790704 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.826851741 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.835859635 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.826971024 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836999972 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841554758 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.832615414 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.829739592 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844029199 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.858462441 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.839014858 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.830068214 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.837636563 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.848273368 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.836121991 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.841164087 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.832074477 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.824154074 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.837810264 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.832994968 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.833447187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831776417 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.833875676 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.839073747 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.273005808 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853060832 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.825590816 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.825556491 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82757809 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.844208312 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273645721 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.836921307 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.852009754 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.877589054 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.830151866 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.127301987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.859608425 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846151302 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.838596642 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.832859846 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.824793194 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.12724984 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.300257506 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.851990019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.831734014 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.82975239 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847028824 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.832786913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.82649777 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.13759862 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.857979879 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.844898745 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.951525461 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.842391476 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.863160042 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.82950555 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.833950016 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.859752933 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847915786 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.863546328 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.834236862 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.848381763 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.849556166 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.827760062 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.842549143 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.841331331 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.832691304 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836894187 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.8258304 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.859880248 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844851917 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843897457 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.853313921 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.953560887 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.829369738 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.129138182 seconds)
done (took 287.626757322 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897707786 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.827186792 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.927679308 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.827944632 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.913576655 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.914719009 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.824827364 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.825286145 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.825467204 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.20709917 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.82500752 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.825375096 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.826504526 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.825388938 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.912510255 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.829571697 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825945666 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.169870685 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.829373837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899649122 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.827000873 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.825653912 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.828211864 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.261898077 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829424696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.822143894 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899942267 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828882892 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.17451922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.824443454 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.830754338 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.174646047 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920064303 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.846917649 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.839663745 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.836433599 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.915563961 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.833391519 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909846269 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.910656524 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.929251496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870049845 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.822326898 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.830327465 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.832172249 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.831084204 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826782868 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.857482625 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.826385302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.829386736 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.171987569 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.839807863 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.82840328 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.828557698 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.827756068 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.862196026 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.828712073 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.831098024 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.921272405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.832093346 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.894080447 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.265435564 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209663609 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.831387102 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.83068694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.828175778 seconds)
  done (took 181.748973439 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898576092 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.904909021 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.89984745 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.835613523 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.881226368 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902919812 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834890419 seconds)
  done (took 14.920868914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.838914144 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.83161581 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882194304 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88301951 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.831788336 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981379597 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831715833 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.844657819 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829278274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.885107717 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.833752175 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832291365 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.83905895 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.830196844 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881711505 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.844696392 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948264822 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.834081997 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.832472347 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.990539754 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830678038 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.839933697 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.887363627 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845028464 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833144747 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.839323058 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.418124626 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.833346735 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831037157 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.832878403 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.829936121 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.873857739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.833131162 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.833775326 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830524577 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950398451 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.833415951 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830097918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.832421639 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.829373527 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.83255121 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.834747251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.833478613 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.830453404 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.833148444 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.858114048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.833260286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.833996237 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833197818 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.834599615 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.885538848 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83414081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.831484948 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832803558 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.890752189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840987839 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.835266473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.831781619 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.834777751 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832213797 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.991817231 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883938987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.834232165 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882845674 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834934554 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.83509597 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.834809809 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.834274614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889755612 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.835382766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.883381285 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.832422751 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.996100152 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.859687779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.836468411 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838619628 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.83847865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.835313569 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835721146 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.842980087 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.83271608 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.837640447 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.843411929 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.833193119 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833081555 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.94389896 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945643352 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.832953663 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.849409195 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.844473831 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.833783727 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.88891396 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.836409238 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.833778349 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88865732 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.952574716 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.893121564 seconds)
  done (took 202.328437537 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.841920359 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.845573139 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.838489325 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.85278718 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.837825568 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837056185 seconds)
  done (took 12.821608886 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.83988396 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.837493183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.836392333 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.837056554 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.837164634 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.837607052 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.838751304 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83849961 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.840580637 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.836663079 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.837467339 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.838420045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.838007631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.837538312 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.838777368 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.837303249 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.838262211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834938431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.837570055 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838527475 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.98234039 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.837853686 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.273925737 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.840424074 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.842746069 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.837582147 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.846957224 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.838037092 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.838467519 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.848179729 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.842195165 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840321378 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.84036935 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.844867001 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843420744 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.841064207 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842251482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.841179901 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.836293706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839624349 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.840118469 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839407715 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.839120846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.841422249 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.843511155 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.845182324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.845172376 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.848617664 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.840879196 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.842950578 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.84235455 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.839098137 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.840785797 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.841406888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.844519146 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846531447 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.845199527 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840301691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.839480576 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.84138861 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.841241198 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.840068217 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.841771462 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.844042373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.84746865 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.84158691 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.842825817 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.844114484 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.840378358 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.840402556 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.842275322 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.83889138 seconds)
  done (took 135.878996617 seconds)
done (took 549.473306413 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.067724035 seconds)
  done (took 8.83899385 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.942260657 seconds)
  done (took 8.790856248 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.260860013 seconds)
  done (took 10.032153554 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.845235663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.869458584 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862011687 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.834838049 seconds)
  done (took 29.193712738 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.136755913 seconds)
  done (took 8.909356152 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.848782309 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.833936066 seconds)
  done (took 15.520887697 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944364667 seconds)
  done (took 8.71793115 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.989938438 seconds)
  done (took 8.768620138 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.849335854 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.849901751 seconds)
  done (took 15.485237996 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.822146109 seconds)
  done (took 8.594931861 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.44919544 seconds)
  done (took 11.227670255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844899617 seconds)
  done (took 8.63091988 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.921015999 seconds)
  done (took 8.693405033 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.955678678 seconds)
  done (took 9.728563981 seconds)
done (took 162.904728787 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.837722437 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.83942389 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.8399148 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.835531357 seconds)
  done (took 29.124765563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.87531073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.876471071 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.876956713 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.886185361 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.879491493 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.877056608 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.868433336 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.867971458 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.888291191 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.878376438 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.877936987 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.878198748 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.874656331 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.868150042 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.877023719 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.879689877 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.887187713 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.879960684 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.872478521 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.881619761 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.843213182 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.88648627 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.878678121 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.84258049 seconds)
  done (took 46.776580656 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.040399086 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.914689942 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.997583411 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.895494648 seconds)
  done (took 9.622979542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.894010647 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.894971542 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.910478545 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.946534384 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972236541 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.904606741 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.869538906 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.864318958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.851045059 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897160075 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.972213959 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.912394965 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.984231591 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.843262953 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.030698795 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.84296344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.843177936 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.8954811 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.947810474 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.973655335 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.844178684 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.895451428 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.899724987 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.912978534 seconds)
  done (took 47.577754142 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.842476887 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.850933262 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.848821983 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.842875409 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.843476714 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.843439758 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.849351099 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.844591496 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.86486734 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.845021728 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.842689891 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.844369501 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.842479241 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.844050205 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.843141765 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.856701078 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.857282319 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845328336 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.847211863 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851027134 seconds)
  done (took 38.725995513 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.838487448 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.692448396 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.190398558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.095009381 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.839794976 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.841274771 seconds)
  done (took 31.273294674 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.85819442 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.90931605 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.853330119 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.9025025 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.982165651 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.852913923 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.846072991 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.912920318 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956418036 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.91967667 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.865063091 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.872704103 seconds)
  done (took 24.50905543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.841927534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.842481921 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.842624292 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.859386241 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.857118822 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.854112494 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.853205515 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.839723039 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.860769865 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864156313 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853959021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.859143489 seconds)
  done (took 44.008926845 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928478302 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.88695977 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.861637819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525875539 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.221216363 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053046092 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.491335938 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.171597357 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.844999274 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115729923 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808670778 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947495688 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098975239 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342284683 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87639822 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.299755701 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131351283 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063907119 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867601543 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477878441 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902259646 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044378645 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.549122394 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894971514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052846507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.97345656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.102719627 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.841911594 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974648159 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875272518 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853223246 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843125257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116523807 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222677242 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947056875 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853734684 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.46237842 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.558972893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.889713732 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.51788962 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50041382 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957737727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853845519 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843180161 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777164279 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.010998483 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217762266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.849233888 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.554267431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843437668 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854477074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939235278 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.847611372 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.659333287 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.756825367 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846274047 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.842212673 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850999349 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415473098 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.913934582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040047824 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.81847865 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.936006909 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.479497817 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220778087 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.986410545 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.848199015 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8481278 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779274565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.56290394 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896669304 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.174345204 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.864880326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.493960357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13805313 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.85101387 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788565784 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130825092 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385921826 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.821155524 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072985701 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845953737 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781308791 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.786273196 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780838081 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104978007 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881573362 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.589042051 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885610168 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173068341 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856621478 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863300669 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868925457 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069878603 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.729692166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846995452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.554255904 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998159832 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869568211 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177205347 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781012833 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.850342999 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104183977 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.057817565 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.933405442 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341209005 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995416948 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428425256 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.90007034 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.997677167 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897250627 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.110173462 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899793162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915415012 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898477983 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.848651981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136654715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433715311 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.985508322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.774492212 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974257878 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.16454253 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873061634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930099248 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856263481 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848156107 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.595890765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396327115 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.846962846 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.850121647 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928639215 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.896975053 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848441197 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.797216333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.477526388 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792604912 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.86231271 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072294734 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.428091966 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163097186 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783493692 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197439529 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93839318 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.071354795 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.48695993 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.91095465 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109260997 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.92439537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.963011746 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898147827 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868184838 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947516862 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871338788 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.008279322 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.144440936 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.853181073 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.853379269 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594496177 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88272588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849234708 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.855334761 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601281538 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115661723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870311711 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855902393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.738581994 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.864853183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914548981 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855634301 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.860148782 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391602264 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563329469 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.857494001 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.442045788 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077621759 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862001125 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.556600858 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963034231 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.931615944 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111809011 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904699342 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.783965427 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561793952 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543721796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850463209 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785957032 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851415611 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860179489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862411224 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.047677201 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.12057089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889946259 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.493226663 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.890754613 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862521082 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.85749331 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853003957 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.365265491 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926318876 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048669558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900925015 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99604992 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.867372354 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.787414031 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855634811 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856353738 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851629212 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852595185 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885667945 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.492781259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222498676 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113048224 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.463989184 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867074747 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.522338312 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.907205155 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.852304258 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591470258 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037993284 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.886358479 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883398466 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.86413477 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.570459046 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.558735128 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.42441567 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157686094 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142977796 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276545422 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.076155915 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.88519197 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189178133 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788947931 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.419584745 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912713437 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194244724 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798287175 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937373649 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491018699 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185124582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868271305 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081506134 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229871942 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.648975482 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879915635 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.065894498 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889500955 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.03245529 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.819181924 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.141526813 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997005367 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.483456879 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050460368 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186104741 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593649602 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870459065 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854736073 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.52031822 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936619322 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.569201085 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027667293 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.050615904 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.73479862 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344427987 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860620058 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080476623 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203862893 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022121871 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.977173421 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793023442 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867373607 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867085629 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.858447884 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.855765105 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.725694854 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.113682043 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867651607 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790507961 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972036765 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1453303 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.754070301 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.861485049 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857098327 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146827009 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.40127528 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025819337 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.968707766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.380945241 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864670678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79153253 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792099142 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.551519667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862580882 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.833472167 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058849047 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.957392714 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776989332 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945816858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941223861 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115156156 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.871669573 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118220711 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127059057 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.558033118 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883330892 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.958684052 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.45334815 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.959867191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858341068 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093533188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612621823 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085489476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.882104633 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.809421465 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.85911866 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072984957 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.858497922 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.711318536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080736503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.581186636 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.870552157 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172888307 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927255943 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.66597885 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.895646844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.950183655 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869669466 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938699417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869984633 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.871069983 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869808347 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904865004 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.683176392 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.974021878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.874149926 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952714562 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929444933 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38223339 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.865628646 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124240314 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205649605 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17649962 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914176718 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860793052 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862088686 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794299909 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009495122 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.085865692 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134125834 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988680581 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.976446683 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890570705 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.460884583 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.076816457 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106288219 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136857115 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.757377822 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.372086115 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906172155 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.863218812 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873032868 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.072642716 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066259639 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176574605 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002722561 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.956545722 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224110389 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137113399 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864064832 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863172398 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455810533 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.871926487 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540922923 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.902219262 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.707422121 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130960606 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873068404 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236868896 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886063989 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.018717858 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.636215928 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.557563135 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150966878 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.844905484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.914333496 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125719133 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.228260943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17184386 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930854995 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874647463 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.970360758 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011247363 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.73304841 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867790657 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863967225 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080919335 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.576123672 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873637975 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133995413 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168965283 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861977533 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.731703466 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891060117 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.874278702 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088388496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120436215 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115442093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874969164 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870536716 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.68560805 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132561932 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918806124 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799252255 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.868381435 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963897203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113655693 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887707469 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.318415272 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.576242588 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137915887 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.866110977 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888996626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.044020202 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224113948 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177806891 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396892468 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075680187 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451276175 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.444956965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17252358 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871160602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.038342762 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172511992 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.870963605 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.966684099 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9076529 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.125961641 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172676607 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.884561492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536602062 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.835501631 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.20722197 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423880859 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80457226 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876302304 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.926896237 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866748401 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998521459 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878849544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.734309579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.045653145 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630820943 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.14019472 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.871474233 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860887083 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.551037899 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16955567 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908903573 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010281149 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868785843 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.582378032 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.218601907 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126029777 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.960594433 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.879932245 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.87146642 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868366881 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856073388 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064848334 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.066094737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148847119 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.990572861 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.909062936 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.872583316 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.085306527 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080472491 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.683340636 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999498251 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966876551 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914707229 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.776201905 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.377194509 seconds)
  done (took 1664.673701377 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.875515167 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.894345929 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.895493861 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.900760082 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.917422396 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962566068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.93772966 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965893569 seconds)
  done (took 57.156020165 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.870252785 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.086227032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.880167498 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.871338536 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.879451876 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.871663833 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.041131941 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.880870786 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.882422293 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.880214725 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.870112754 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.871513612 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.180967695 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.894990164 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.872018152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.869461241 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.880032804 seconds)
  done (took 74.408877704 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.87169021 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.911832358 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.91135718 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.88169227 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.907983909 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884994659 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.713700784 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.891084596 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.87405124 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.008940303 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.508978875 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.880764806 seconds)
  done (took 87.055565575 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.879805985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.87813491 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.878336881 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.878545547 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.879129 seconds)
  done (took 11.20464643 seconds)
done (took 2167.918138589 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.127400385 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083436543 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.107617327 seconds)
  done (took 5.999328654 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.022023481 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.070168061 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.189942855 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.195019498 seconds)
  done (took 10.288927711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.160736295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.246314147 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.084128848 seconds)
  done (took 8.299907647 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.27726642 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.875448652 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.983660104 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.871405703 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.874272157 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.874693129 seconds)
  done (took 22.430574742 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.877827974 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.879749538 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.877224435 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.879874939 seconds)
  done (took 9.32407669 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859222516 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.590802497 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.862253531 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.875795317 seconds)
  done (took 20.998208192 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.625654082 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.637722332 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.620462766 seconds)
  done (took 9.694428866 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.503455596 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.788441038 seconds)
  done (took 9.102830398 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.133948742 seconds)
  done (took 3.943871188 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.008182746 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.140405662 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.3381078 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.37003456 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.436993328 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.751676717 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.189601093 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.126149536 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.26865345 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.315521258 seconds)
  done (took 24.756568313 seconds)
done (took 139.910061267 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.257868481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.115445579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.07867751 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.214645334 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.104869746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.078513144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.095823293 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.200081729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.728071565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.722983187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.215086551 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.10252506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.041033326 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.117623366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.040812089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.117329315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.09822577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.279623277 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.912813899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.109284014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.097633295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.863695694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.059717006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.868545439 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.100740658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.051135911 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.432941192 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.119877942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.065839021 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.447064039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.034100756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.263060081 seconds)
  done (took 172.847692712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.640659698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.876738147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.876849774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.877920752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.236427132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.877709932 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879571391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.877973072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.1743776 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.136848896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.878172383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.220208417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878023701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.877530956 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.878415687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879202897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.255231103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.673334638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.878114356 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.878742063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87796258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.109389391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.878453146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.127401055 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.226450521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.880163626 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.834762574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879893858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879372966 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86789535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886017462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878670371 seconds)
  done (took 207.894006065 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.87829188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88002719 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.880576706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.880125849 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.87964331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.879551661 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.879959916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87907083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.45828681 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.458779481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.887523341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.888305352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.882714022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.880345731 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.889014832 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87935242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.8835443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884421152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885334858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.894370545 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.894561235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.603472602 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.895030006 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.616440722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.893220737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.895777636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881647195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.894842179 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.898407923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.899834957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.899091009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880207802 seconds)
  done (took 220.787310269 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.080953244 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.885881997 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.88652887 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.842950532 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.887675696 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.887214683 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.878514328 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.084174409 seconds)
  done (took 19.27476006 seconds)
done (took 622.627057342 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.357099293 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.201175836 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.06370959 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.909750393 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.176000576 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.95173345 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.907041488 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.970583023 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.097171158 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.985033117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.556091116 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.925526454 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.648911216 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.93007579 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.034724293 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.964421569 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.455756655 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546510285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.085104895 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.00006315 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.082977016 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.850258888 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.981439911 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.149689481 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.667926414 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.89794025 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.0701944 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.46543299 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.916935373 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.07279187 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.64725254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310956385 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.920080463 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.904911596 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.958288535 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.940891245 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.242987572 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.917405154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.030357031 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.646985205 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.99105748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.985533816 seconds)
  done (took 105.236919757 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.879720365 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.8786655 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.877709931 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.878662603 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.87890533 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.877918641 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.877987416 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.878485744 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.878400112 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.877373588 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.878761987 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.880301119 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.878445323 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.880178757 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.878118005 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.878085807 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.879500309 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.880953631 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.878885972 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.878889018 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.879466346 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878586409 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.879816978 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.879136475 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.878846472 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.879584284 seconds)
  done (took 50.691217382 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.890214904 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.035685817 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.117133208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.909572094 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.890492912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.895211124 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910106822 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.89622976 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.89371211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.894004229 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.983468232 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.898073856 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912126869 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117154398 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.906010878 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.891003764 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.890544806 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.891807289 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.043592335 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908825803 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.913009344 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.896592657 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.910904051 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905372666 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.894701751 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.891822451 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.89579129 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.326996839 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900861864 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.983701776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.936294321 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.915877551 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.288592488 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.137377868 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.94530882 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.899245318 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.893431789 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989879161 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.900881832 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.894523451 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911638866 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.899295798 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.12193709 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.389192228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.906960381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.892816617 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.338408124 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.995925788 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.936135023 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.908041132 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125274286 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.910213024 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.895080942 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.894211034 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.930506245 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.903025401 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.894329303 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.202783295 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.905343839 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.912154538 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.902385447 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.894945678 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.052063805 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.90472777 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042391795 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.904042124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.902699679 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.895129563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120464956 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909823145 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.389351836 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.90587269 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.894121606 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.983644624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.044641964 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.364878347 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.907052219 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053900759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.302605774 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.919650734 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.903110424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.315431167 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.92200446 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.902662406 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895928034 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895632829 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.895239876 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.937717522 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.911816729 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.328162187 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.393928642 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.21639907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.921674481 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.910676905 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896331865 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.20307871 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.902992584 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.895497683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114434719 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.403886829 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.908360793 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.903258922 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.381277806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.909863151 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.914139593 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.904507094 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.125621886 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.910952935 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.93964548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.895314719 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.903998468 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.898996729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.915040389 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90354513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896269583 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.366748923 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.003476062 seconds)
  done (took 234.537342343 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.891983796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.8919952 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.891354851 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.891640177 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890573764 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.896502296 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.890134201 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.890909801 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.895643367 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.890744454 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.889152903 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890900007 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89155037 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.895864241 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.377178787 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899964614 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.504438212 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.8960646 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891514363 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.892879752 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.574097962 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.902826967 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892931211 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.918075072 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896131899 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.89495359 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894263617 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.928934736 seconds)
  done (took 168.682569935 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.900666329 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086188593 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.921685746 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.939759694 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.909993525 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.900190595 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.928089575 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.928646996 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.911712435 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.901063288 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.898330205 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960771981 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.91350984 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.036962849 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931714079 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.935294615 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.009762077 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905841845 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897811045 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897813444 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92847676 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895716171 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960501134 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030139781 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.919839407 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.016196792 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.907995756 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.900559767 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.899639636 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.016685882 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916102594 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961337002 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930187647 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.918523603 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.022033295 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.021740232 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008913371 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.930642938 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.908799542 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.89890139 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.899461083 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890045145 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017159227 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.917823471 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.902376725 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00918293 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.91965617 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.903370906 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.909571837 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.89857951 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.914552813 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.920192693 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970200457 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.03587596 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.933417299 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.926113906 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.927388384 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.198717453 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.911712454 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.003953255 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.895072455 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017755888 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.922516188 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890609547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900494317 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905999834 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929174971 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.935094796 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012387791 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.909599298 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.004848272 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935898213 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.908546207 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900207962 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.903276255 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018632866 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.021431221 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.93695409 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.940680426 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.935910705 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.900195473 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.901556274 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892326783 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91983822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.906078251 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018091963 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02389312 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910596208 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903707356 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.903646154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904372705 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928429156 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.030988701 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.93743117 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.004177096 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972053308 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.977399044 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.91614701 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.915304377 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.908135305 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.96678045 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.91769136 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.913821071 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.246926367 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.979322263 seconds)
  done (took 206.175738796 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.996156189 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395191453 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.95785013 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.959130891 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.183912509 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.329233324 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.711666173 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.953116001 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.952159925 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.978380327 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.116774305 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.011497328 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.965420744 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941991626 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.375960207 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942826219 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.951506124 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.972994205 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.956748798 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.493588874 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.258814356 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.087739008 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.975981607 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.071621622 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.935486125 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.237174153 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.461177654 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.334457762 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.987120932 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.306545388 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.29041929 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.634046128 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.162605906 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.200366548 seconds)
  done (took 75.930472888 seconds)
done (took 843.070816789 seconds)
SAVING RESULT...
DONE!
