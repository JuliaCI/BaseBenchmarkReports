cset: moving following pidspec: 22026
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.221034744 seconds)
loading group "string"... done (took 0.624514671 seconds)
loading group "linalg"... done (took 7.643504143 seconds)
loading group "parallel"... done (took 0.170955156 seconds)
loading group "find"... done (took 1.111338403 seconds)
loading group "tuple"... done (took 1.748805378 seconds)
loading group "dates"... done (took 1.217202889 seconds)
loading group "micro"... done (took 0.213815513 seconds)
loading group "io"... done (took 0.894078202 seconds)
loading group "scalar"... done (took 37.097485261 seconds)
loading group "sparse"... done (took 11.744194855 seconds)
loading group "broadcast"... done (took 0.938622141 seconds)
loading group "union"... done (took 12.03514167 seconds)
loading group "simd"... done (took 4.427028768 seconds)
loading group "random"... done (took 8.888892756 seconds)
loading group "problem"... done (took 1.845625047 seconds)
loading group "array"... done (took 20.526136631 seconds)
loading group "misc"... done (took 1.677022985 seconds)
loading group "sort"... done (took 3.250647475 seconds)
loading group "collection"... done (took 16.752465157 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.518387891 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122814822 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131728516 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118583722 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148316993 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11102999 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124725098 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086480613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.885983351 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149511121 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115699207 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.395598345 seconds)
done (took 5.393133384 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176517803 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083668921 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085247302 seconds)
  done (took 1.333956038 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067963046 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126577671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069990046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070327326 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070398013 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069796689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069073861 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069393159 seconds)
  done (took 1.712495605 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076348876 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07183941 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068846088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070837699 seconds)
  done (took 1.454417494 seconds)
done (took 5.923428191 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.744958154 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212948297 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18585783 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.384127003 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.123432048 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169136924 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.646728885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309646896 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187100618 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.076121072 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107372228 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.338350062 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120478894 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652747781 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07617996 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090835108 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140113692 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43082063 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068293842 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084537535 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09123584 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130669705 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086381529 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075905433 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145397532 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069988397 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132671633 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083206319 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068159979 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213409964 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174833007 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663599144 seconds)
  done (took 10.285520702 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100023055 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100054986 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071492522 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127308392 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099249068 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071742326 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077090179 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070316824 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091546915 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130450404 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092908854 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106605984 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06832117 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070877646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085443751 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210385036 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084219405 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083171349 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072843196 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080107895 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109540231 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079611191 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082034483 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08185109 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130096113 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182866548 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100975896 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101329858 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068375527 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084135293 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117060432 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128815127 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068426091 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070291087 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128479231 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097172281 seconds)
  done (took 4.734751199 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.954612957 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141666924 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090526482 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127669483 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067466714 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107431721 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0681879 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082829889 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203473605 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341702925 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574461494 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.129963259 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111620907 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103679436 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06997971 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070428327 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069164388 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.426297168 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100199003 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102561095 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082484208 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072323722 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071168303 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067911139 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069933107 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066014763 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070432546 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114789833 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07625259 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.325183892 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119794423 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070231886 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912930485 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.16327653 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068950091 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102378028 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.306895827 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091284832 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.137849019 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071027633 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068367064 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156702364 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06769833 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072949987 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068489461 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086708933 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107273366 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120016285 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068327332 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070523476 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092081494 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16453965 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067950497 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077728923 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068398045 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.109811624 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154174646 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070963891 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280256166 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091738679 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072900476 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067915483 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.166157183 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12424844 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070217847 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069525982 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070678136 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07080156 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380102528 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069580714 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.026315388 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075304002 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078736423 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06668743 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071007734 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071780326 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07444444 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07494278 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090071598 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068638147 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076141504 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068748336 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068625567 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068790732 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066799431 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084217471 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.364068243 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068901639 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06930112 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066864137 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091099712 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098023697 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068409 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067100204 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101760272 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069375853 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067551347 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067826925 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083662519 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070748459 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114136506 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067432396 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090928336 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095480984 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06931828 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101908387 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078539664 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068481729 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395826753 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067274956 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068899067 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06670045 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068592444 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067076768 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078089629 seconds)
  done (took 21.593017368 seconds)
done (took 38.734425632 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254095766 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079335265 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078202788 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079002414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078209262 seconds)
  done (took 1.828951205 seconds)
done (took 3.110621834 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120401696 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098479257 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067228954 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096848333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069667732 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100017158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099326244 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077975967 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09854833 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067181577 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097110124 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066770799 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067004156 seconds)
  done (took 2.382953944 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085962144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085979925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072533605 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085350719 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065944461 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085904053 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083851257 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092994099 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084046313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074486194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066178058 seconds)
  done (took 2.121096088 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084310305 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086291232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072249481 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084486162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066107854 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084767455 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083966366 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087543584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084239633 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076453798 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066372421 seconds)
  done (took 2.109449534 seconds)
done (took 7.845003011 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079441669 seconds)
  done (took 1.302906145 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.518939775 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.621406781 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082472473 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106389975 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185060007 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112233868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.242451005 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086889259 seconds)
  done (took 8.35306172 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104257445 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071645702 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071424237 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073694482 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071930512 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070831161 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073108618 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070801645 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073905001 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073551006 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072544545 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070480837 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072785283 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073877626 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070572442 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074070572 seconds)
  done (took 2.490909412 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093379099 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091888242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075608393 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076185099 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073801074 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073300469 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076535729 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075321322 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072641973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074111798 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07714879 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075263653 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0732686 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066164042 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075380714 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077321167 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073031197 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075589782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076481528 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077577927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076638948 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066444147 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07323415 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07553064 seconds)
  done (took 3.149682065 seconds)
done (took 16.529331197 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105993791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06961701 seconds)
  done (took 1.403979426 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081092364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082789547 seconds)
  done (took 1.403254838 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082030098 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067362808 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089811797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079367382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068155846 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067433857 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087432827 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067832039 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067689172 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068207352 seconds)
  done (took 1.985513519 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069893726 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077197047 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071756392 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082130141 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07457438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06606635 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073386237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069356749 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077741597 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065513952 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072755645 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084405956 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072743082 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08581835 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073201144 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070237828 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072467459 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069503957 seconds)
  done (took 2.571699562 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068230479 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068959571 seconds)
  done (took 1.385391333 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068803379 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066235024 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068552131 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068110445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065908623 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0649398 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066047936 seconds)
  done (took 1.712709145 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357338082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118813561 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300020554 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074050637 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082891349 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24209001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069647055 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073363855 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073204659 seconds)
  done (took 2.675940714 seconds)
done (took 14.384759165 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081569388 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088577622 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098295619 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368492283 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09341523 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068916497 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115605016 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176594594 seconds)
done (took 2.351046376 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210625207 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.644566798 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.392418746 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197503732 seconds)
  done (took 2.482475266 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3203249 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090298425 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062825359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069579707 seconds)
  done (took 1.802949596 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068491023 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072131764 seconds)
  done (took 1.39726817 seconds)
done (took 7.152091754 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088583904 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068523717 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068201484 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067045088 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066559203 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068918557 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066092996 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06609524 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068537705 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068489153 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0660286 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068085486 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068949283 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068161177 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066336946 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065821864 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068142377 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065836654 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06586459 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068177355 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065980828 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.181951498 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066108054 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066061923 seconds)
  done (took 3.03378898 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085687456 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068248074 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073491164 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07307846 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071564199 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07293674 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072700377 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06805189 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073145474 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070705465 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070600907 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070626006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070826843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070756598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070040982 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071333538 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073092819 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068112574 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070020953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071229669 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073309239 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068195176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071084887 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072868884 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070925873 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070959538 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070245991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068132388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073403869 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07118678 seconds)
  done (took 3.412370449 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071317395 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066173751 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066212155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072071174 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065578409 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066917105 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065864903 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066220924 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066624534 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066068586 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066516065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065856508 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06611922 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06660969 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066318147 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069582418 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080787588 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065796336 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06583156 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066308998 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069173247 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068543484 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065827173 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065631996 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065801837 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065525323 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066252061 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065968358 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066660162 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065828589 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069036777 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069528576 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066101614 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072528778 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069587539 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065897804 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06970755 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065865587 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066399538 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065646984 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065564834 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06606037 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066199654 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072547152 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06605929 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067072537 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066244182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066897758 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066135477 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067593219 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065236387 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065498077 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067762533 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06708418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069982309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065521247 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066327824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065350956 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066501515 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065825905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065404909 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065732308 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068747896 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066419376 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080454452 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072854457 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065737595 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067048664 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066242835 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068528458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067932205 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079831022 seconds)
  done (took 6.136160772 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089164475 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087699809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067832856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067557853 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064101242 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066218086 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071440431 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065990104 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067671423 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083685702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066304161 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067753736 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06743098 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070008868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066629852 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067426284 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074130807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063883692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066060849 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069765744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06651692 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07101531 seconds)
  done (took 2.831272892 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.147182212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072589724 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105655659 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077654743 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071827963 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076298097 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071748172 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072156261 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072151518 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069577345 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069653911 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072083926 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07182069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069868094 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069659751 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069954981 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071654895 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069738462 seconds)
  done (took 2.675580502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078121409 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067814723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088508531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068113558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068207381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070332618 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071824372 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075521789 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070806955 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068181401 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075370614 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070504404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070523239 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068112157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070501647 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067969552 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070750553 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068037916 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075523508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072463801 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072141922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075315604 seconds)
  done (took 2.8596921 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081310402 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069907499 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082110409 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069857612 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064085891 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067021303 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071811614 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067840684 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071968541 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07006926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067751576 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066476367 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071070149 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06849807 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070208956 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068038152 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06997636 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06833379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07043497 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064021364 seconds)
  done (took 2.678222455 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086500189 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07035168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069921146 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076550787 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070465586 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069522689 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07611617 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06978529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069737822 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089524709 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069890148 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070067378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075837554 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076035449 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069952647 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076843609 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07591574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075947773 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070161787 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069836501 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089992228 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069830372 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076054761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069869316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070407249 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069939837 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070131732 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074773249 seconds)
  done (took 3.348391524 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068907715 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069063159 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066526203 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065873272 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066406577 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066135782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066402918 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065857999 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068800028 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066083734 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068334262 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068531556 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069036467 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06825397 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068196919 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068237543 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067985165 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066370742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066262802 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066022867 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068346102 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069078809 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068253873 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065984599 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065966236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068505868 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066054735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065942244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068287284 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065966127 seconds)
  done (took 3.30450997 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074041882 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072747534 seconds)
  done (took 1.430619949 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065145409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081892815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066508106 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072435706 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071701398 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068998522 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074846922 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071048538 seconds)
  done (took 1.851650189 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082834798 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078032012 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069656761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078343783 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077542706 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08422687 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137839037 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06867536 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074264785 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067320899 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080995068 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067913889 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074904377 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068950859 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074120292 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075205642 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06624264 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072724979 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069475533 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066445767 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069422011 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07622418 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071451541 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064154707 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069929388 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089876271 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078828085 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067723265 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071168625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075541579 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074268278 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062882573 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067958607 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068240672 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0667771 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077565097 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081959938 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071608759 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076769061 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068586303 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076538933 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063848235 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072832011 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074802672 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07843868 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06854515 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068592545 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064006916 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067007289 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070964096 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063927724 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068832607 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06334776 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075314071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071930834 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078974463 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067723454 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070409111 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071081091 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071764669 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075326705 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070432014 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071396199 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068110361 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078735712 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073735835 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075992858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063713573 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062855586 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06637204 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077667905 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090197795 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074072897 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068585466 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068768293 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066604827 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071974203 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068727379 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073974338 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074622715 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068138067 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072906895 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07557847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068951108 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070929371 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074508122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067056912 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07114194 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066651712 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083351474 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067401778 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068974045 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066524916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077784787 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071821138 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067826876 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066933831 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075812648 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062659468 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06786125 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067968843 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068930046 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076862908 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07146947 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071477688 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075623021 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074389406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068455199 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07018248 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064540202 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196960609 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071141715 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077719037 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063527058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071748293 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070878505 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069284539 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077454397 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066865554 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068907268 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076539598 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074339191 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067278636 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0657555 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07186196 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068712045 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071263113 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076727231 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067898535 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064273344 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063892168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072216907 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068406009 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071913841 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072530479 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071546445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063155677 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067385998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072533764 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077226171 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069062105 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070049445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074302339 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070253373 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067353059 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075262106 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071482043 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068170621 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073819017 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070356596 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064026058 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070826732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071525566 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067389079 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072565205 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070575232 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070549282 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067916385 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066924723 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073940611 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06920689 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068565176 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069257358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067585122 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079103935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070562042 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064257309 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065926134 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075137389 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067352533 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068074922 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068112219 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070775284 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068862145 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066868542 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068429474 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070807538 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076467204 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071153292 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069475822 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07410467 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080184791 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067969848 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071047038 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068224558 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069419076 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068948557 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077746996 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074598974 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072370243 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071724438 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065698929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073417503 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07605997 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068914327 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066552881 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068188171 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072302438 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074395953 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071955013 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068957784 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067316804 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069794629 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070828126 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070710673 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067407698 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068326409 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073106212 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066537793 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073607264 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068566515 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07827149 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071500922 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063610601 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069532326 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06603059 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073859942 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062889997 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066622875 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067394671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067933678 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066685792 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070253781 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062327841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074446875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.210477702 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070887535 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069199188 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069032379 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077319595 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071558797 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073328205 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073397248 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075611872 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080030097 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068683014 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072235047 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081878338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068957448 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063961372 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074773305 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067796254 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067917654 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068088899 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067234127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072608599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076126686 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075527731 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063287106 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072052409 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066877327 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068662788 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064247411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073079894 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071759044 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07016085 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075450051 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069496487 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069331714 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072838967 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069180634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068841388 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069885997 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072222633 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069396351 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070119144 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068782946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072526485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068235906 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066763105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070880491 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06893063 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069542681 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073372049 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067788642 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069266617 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070960431 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069168634 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069339487 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069448859 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068872719 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071739499 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069725194 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069477279 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071575475 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064212603 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076036917 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068416163 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075985901 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069604012 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066021081 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074034856 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071455101 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073054883 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069018 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069307087 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070631661 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067904314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072065109 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075985016 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067443481 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079016825 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07559696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07054037 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071744084 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069368179 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070876001 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068206346 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070868866 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069654153 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069584837 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068261664 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072947168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071600821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0691668 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070079916 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069100064 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069240173 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069308715 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063171092 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067913539 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068211328 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068010252 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077311439 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068217054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068344866 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067395498 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068438381 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067292246 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065813029 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074354474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074665016 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067529559 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07382228 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0677141 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069639727 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077974157 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062410533 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066426942 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065841811 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06635765 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.210745073 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070118484 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078240999 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069967226 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069520452 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066667369 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06921204 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068572203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064193783 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067179045 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072406924 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068940262 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068119313 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069552121 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071847105 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069177017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078691927 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068700623 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070694004 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068887439 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066900136 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069287682 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069431833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072571682 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068931862 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067479147 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066318376 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068189668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070267432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070539066 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068664106 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07091298 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076239418 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068241319 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072069682 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071342177 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063690432 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072196593 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068205713 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068559701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06870069 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072844031 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075373062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069368743 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078044458 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067837974 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069619654 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069479081 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066872479 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068287899 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068242463 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068480685 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068652334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069622716 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076587403 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066624606 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071858172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069351922 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069661793 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075791614 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069067328 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072420674 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073833905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069762752 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070587566 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076717884 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072008211 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07184166 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069011539 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070377141 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074873909 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06815473 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074955319 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069205394 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068729608 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070429629 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066900567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068106282 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06886526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068227061 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074669889 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069209146 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068223673 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068355519 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066625838 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069936662 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070755246 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076226445 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070768779 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071472654 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063800231 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065897618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068911898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067146229 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070566899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07158807 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074454007 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070480054 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069100197 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067868456 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077266663 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07397028 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072046726 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067193863 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072261966 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068678565 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070881816 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069803538 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068572686 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068826943 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071323045 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069691906 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067238032 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073857243 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071426859 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067956226 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069567498 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.20357008 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070936545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065185758 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069977383 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071633209 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07368975 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072001777 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068885672 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079267178 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067431251 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069736689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071580111 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068193636 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073991483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064511936 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070483444 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069094985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069472998 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06431738 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069193878 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067358805 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070781667 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068876804 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064380621 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078930517 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07777372 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072120868 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067958739 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067713365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064006952 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064444946 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06882402 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068710276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070808751 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079414982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068530246 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068517782 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065071348 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069008964 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07155466 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071718782 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066104647 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064618872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068560257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071583714 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074467236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067944852 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06799846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071637808 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070301666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066585397 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07116766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066184389 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072272009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080460249 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068626525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070378888 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074398744 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076503352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068772515 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064762133 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068516895 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072216046 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069938403 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069322443 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070196755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083338931 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071697191 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068289293 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067378576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071545025 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070950552 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076700609 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069004044 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068617198 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073222616 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070662875 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075490153 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071983395 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075709784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072122707 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072362566 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067954789 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069305519 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066826784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068576293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070267895 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069038478 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072853638 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075196932 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068828762 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079093579 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07762635 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070433766 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066495389 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068371552 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068601004 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06374414 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068491189 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066573904 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067121122 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066501398 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067250756 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069497531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072941471 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069556155 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068515654 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067625343 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063123404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071085563 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070416212 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068929059 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064897481 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067314594 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067865871 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071776253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069831002 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.202310784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072621297 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072524269 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070512809 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065027309 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075954247 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068284366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071420643 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068758944 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068946618 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069741023 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072468863 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073451469 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070245239 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071374864 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072562436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070832667 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066221278 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065962781 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073550897 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067451345 seconds)
  done (took 44.067828255 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100678477 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065501426 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064614682 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064507782 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075220134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065181729 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064218864 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065110114 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065110847 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067143262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064214389 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06412039 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071688661 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078673709 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07412298 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068640716 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064586797 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065456064 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064080301 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065032541 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071892888 seconds)
  done (took 2.81007204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074376333 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.079899304 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07580919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083603538 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073212416 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071721317 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075810862 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072110926 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079290694 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073894588 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079242734 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072066716 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074258212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073794459 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073887152 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072399017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079427744 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072487781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072312019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075872254 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072224834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076529755 seconds)
  done (took 3.005625138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068951515 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067865138 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085315348 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063291855 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067335857 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063457477 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070681876 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067049324 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070189194 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067377801 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067949796 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06768516 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069958797 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063598237 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068168312 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066576095 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105960719 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069890063 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067318464 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068446661 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063514421 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069544091 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063905486 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064365436 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06741011 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070510625 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068661 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066325296 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067225146 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067469212 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067800626 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066094618 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069408975 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068325075 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067277589 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067386525 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067408179 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070467932 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063722512 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066529023 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068539569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064040869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068113587 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069191613 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066319235 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065792729 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070207876 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067530699 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063411953 seconds)
  done (took 4.708637491 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079671363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10884587 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069485146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089704994 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080794997 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073773815 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071475763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090325801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065984463 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065879927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081426546 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079285402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067020381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071574387 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074093925 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067171126 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068091257 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066199358 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070610878 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066969403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070452745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07371113 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08053877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079052582 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070683105 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066589419 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06729212 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071612695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078291178 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071269403 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071803733 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072848638 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080804272 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072313254 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066881201 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069432805 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081725007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06760386 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069842574 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065249201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069207216 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071683923 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073888546 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082057713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067496595 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07193851 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067526615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065157517 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07829475 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06950979 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074084664 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079255545 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07102247 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067658558 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071241361 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081202061 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067409564 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065854921 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070287113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078204826 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065383808 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071282434 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079354897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069124655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073664407 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079187688 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072216642 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070570807 seconds)
  done (took 6.481128672 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077927364 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09621907 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08374439 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083882766 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076596345 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076582032 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076952431 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07669401 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076463387 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080515902 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076933213 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123087191 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.072625446 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078626232 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076905461 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077031492 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076801745 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076869078 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076616244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07657253 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076858754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083274632 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076951484 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083106869 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080393824 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07274847 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076271768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076607574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08278206 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076432254 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079848338 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076226748 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07658532 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082929824 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079653737 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076681841 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06712431 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076505735 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076279817 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076358522 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072524647 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08311827 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076791657 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072275927 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07619557 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076254821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082968546 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080041938 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078601966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080780607 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077042714 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083037193 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076202205 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076978857 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083071893 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085834334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082604473 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08314672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076590554 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082917492 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083056803 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08630331 seconds)
  done (took 6.326798999 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083257782 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074562746 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082999214 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063819374 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069862044 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072981641 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066512206 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066195843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074575467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074594549 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077020481 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073353469 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075359913 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076604595 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073451676 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076366395 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073304365 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073397619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074554746 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073256032 seconds)
  done (took 2.87684858 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075445144 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084325655 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069127758 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073287404 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070858585 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073229085 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070340349 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071424359 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068665549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070696733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076925115 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07724196 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068699281 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072733187 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076527544 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072769729 seconds)
  done (took 2.560117401 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083121474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074074496 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079874306 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068387902 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068930311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065144291 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067879212 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063332723 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064488089 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078952713 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068327263 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077830236 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067454115 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066615423 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064736869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07265852 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064935774 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065393733 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067526055 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079027393 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071166629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066412801 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071131498 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067777787 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069779543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07146584 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066836435 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068741006 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065763273 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068065362 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070742983 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07100554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064728407 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065873728 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067012398 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065231612 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067705642 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068536966 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072975618 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06819564 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066622848 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069832945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067890484 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068772574 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06470192 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068528554 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064753296 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07009385 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065573791 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069984867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067629148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07034577 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068180944 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074319633 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070688223 seconds)
  done (took 5.19335899 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080933281 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07206119 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064458401 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065987874 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071145082 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069383552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071006345 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068986523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069076151 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065958952 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069303969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070549195 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068720444 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071272263 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069542526 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071509047 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063821333 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068854337 seconds)
  done (took 2.654785396 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072826154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068835398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074582742 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068397923 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068274956 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069831619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064395892 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066566662 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066556897 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068190489 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067972889 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070299376 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066451819 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070364247 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068140918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067790894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070264323 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066458809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068169365 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064004909 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070362826 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066791332 seconds)
  done (took 2.898046219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093769267 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083593421 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137161941 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.07990978 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086982592 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073956047 seconds)
  done (took 1.949378411 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092386281 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101081401 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068876736 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071187965 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076663292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071909452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07131299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071297511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078838467 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076455604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071563982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081259378 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078763799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078222518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076506609 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076595611 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071457889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071726556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06801808 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083329866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072062987 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07902029 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072338093 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071760539 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071744928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078769313 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07890202 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077271381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072027796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07919234 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076798341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072062581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078807564 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077054162 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07136838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078799832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071860949 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083408658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076647829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078223626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071034386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076808243 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078899192 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075864666 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079405378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07212485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075582054 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071775946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072921171 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085328835 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077824222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078096887 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077223049 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079549995 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079018537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085830818 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077630527 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078174582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077103123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076955102 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078397762 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076731499 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078058887 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076682164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076723615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077846349 seconds)
  done (took 6.468611614 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105142943 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068893687 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072509811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076954663 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078314691 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072052123 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072082706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072072044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071764835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069091518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10738049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072158845 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078205258 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078232355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071907725 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071695715 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071975338 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078033483 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068868545 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085284629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071949441 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078730792 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078398192 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078566333 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076851949 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076656209 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071689502 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071687337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071769304 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071564392 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075603817 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071792382 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078333854 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068665914 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077804132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071886961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071719535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075588557 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071530095 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077115102 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078176899 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08319202 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071460924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071995144 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076721045 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071900277 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071842905 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069087049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071816296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068728601 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077051029 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076962965 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077128661 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078116817 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071896615 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071975309 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071756856 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072500272 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071983032 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076636229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078064882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071903615 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085273656 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071911782 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07209071 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079321419 seconds)
  done (took 6.390873972 seconds)
done (took 133.212962326 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19598592 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17275418 seconds)
  done (took 1.756421485 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070288896 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098608169 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078225843 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130543093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06869177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102036151 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10082167 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078677496 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068144207 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068276822 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067939523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070590865 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133315515 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068050844 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068158632 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070870102 seconds)
  done (took 2.750006737 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097898878 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156550203 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102794206 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067082463 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098579312 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074310083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066845347 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.087799256 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073147437 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067425203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073879179 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072052264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067250706 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072249847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073646512 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074348731 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067589755 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073876948 seconds)
  done (took 2.875004207 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097810008 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091775038 seconds)
  done (took 1.604017553 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152297881 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134734453 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.199999717 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330669516 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154403409 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146785237 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143048259 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141483744 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11366418 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137202226 seconds)
  done (took 3.063312512 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099930126 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148814215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266195173 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115531261 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074724799 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092321372 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116773761 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080216094 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080489415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080670694 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081230657 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077672879 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099962339 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075228085 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076201144 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07826951 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102672637 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07511676 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076604796 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076936348 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100853469 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068517348 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075769564 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075315131 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077876112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078226964 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068192808 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068126905 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077251325 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076599296 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077553485 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091675486 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07825785 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102831549 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072992667 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104451416 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077537434 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074881928 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076877493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074277929 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078783448 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078901435 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074834856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077369898 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068256837 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078024572 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068309811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068419971 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078452274 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069509273 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079165385 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077843346 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103176883 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069423477 seconds)
  done (took 6.078443285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108321202 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107525096 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072128692 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113735386 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104764582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071253255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105625506 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09871243 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108380593 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071812444 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069926392 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071883092 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080984861 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08206533 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115464255 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108042433 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074012457 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071307606 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107826846 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107831176 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070711119 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102488461 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097151248 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107249652 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069688873 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071968895 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070484189 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07195962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077673426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078974622 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07037729 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080143326 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084704125 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078529617 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069364685 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070209402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070584654 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079760872 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080308611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079424101 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078027455 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069670389 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070095967 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071234984 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071054006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070060407 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078946955 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080206173 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078405894 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070046525 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071308364 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070230857 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071301647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080225034 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077497881 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080694502 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080071019 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070818104 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070106719 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072962899 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080708474 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080007106 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079416523 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071222031 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080129836 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072541296 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081098521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08364508 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070876873 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071447109 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070151889 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070136609 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071346782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078053294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07840432 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071536269 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070342086 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070146714 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079928787 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078656476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070178691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077361025 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068990426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06983324 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071347967 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071229786 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077589519 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079181293 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071345985 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069884771 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070302307 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069766533 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069041047 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075919668 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078019821 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078086596 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076490472 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070002508 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076785912 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076204599 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206559243 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080248073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071842285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072218115 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072036164 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079382038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078538685 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080629675 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070767533 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070768748 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079526002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081707187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070825718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078230509 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081216451 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079046711 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070143376 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081943637 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071163079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081397536 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070840084 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080861138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070563434 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079608728 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070795959 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069586596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070563841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080027547 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071819603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070748728 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071580101 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070912514 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078432409 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082372279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072701163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078998315 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07815435 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072018756 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078798083 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070504112 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07945934 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070727022 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071048972 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069561748 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081065595 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070699744 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070726173 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0706104 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080110888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070271648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080281999 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07817407 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070116981 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081865427 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080366045 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077304635 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080307287 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071693591 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069987537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07056319 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070625204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077995119 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079715487 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072168396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070477965 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078025408 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080719268 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069304769 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078542473 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078317213 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078686025 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071076288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070486826 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080978021 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080437505 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078552232 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078672867 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078516108 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070555691 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077840417 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078439603 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070286255 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083687485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070565467 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082808482 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078159837 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076590622 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078929925 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079690852 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0800594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080071252 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082647632 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069336191 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069617309 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077506153 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069228666 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069185882 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076650668 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070448223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07017435 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080476544 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069101512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218773694 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070452425 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080380826 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07029408 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072245126 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084277004 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071099155 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07203154 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079953162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073082352 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078225828 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080626937 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078911684 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070795031 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072341382 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079510814 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079519442 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070511262 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070759017 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071510564 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079129859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078047251 seconds)
  done (took 18.964738133 seconds)
done (took 38.516715706 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191928465 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1438217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.155381963 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110542706 seconds)
  done (took 2.100997253 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110583886 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097087007 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090001207 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06842636 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09581585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067615561 seconds)
  done (took 1.971075586 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266498712 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184270395 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167928317 seconds)
  done (took 2.061681378 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190619675 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177891307 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418242007 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255567634 seconds)
  done (took 2.58630441 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136286313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086419213 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069134941 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084244525 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126470739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.152647299 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096401929 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.120229066 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079993489 seconds)
  done (took 2.444658487 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140237465 seconds)
done (took 12.749336784 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197912629 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091942874 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081588047 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.21988231 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073394236 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082095715 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217663302 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077641313 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070154746 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070917468 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084250905 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090630444 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.083543544 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077429007 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069395103 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068114288 seconds)
    (17/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.144947408 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.204559204 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1584229 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155414347 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076016743 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134393945 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117564844 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156059058 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076652539 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073868599 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11060732 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177033667 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077703309 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112719303 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073728361 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.083299583 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092650531 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.15206173 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.20989049 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076171498 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11925882 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.206685902 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075386916 seconds)
    (40/309) benchmarking ("sort", Float64, false)...
    done (took 0.127888472 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.351526019 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066312399 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054244403 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095058597 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092013419 seconds)
    (46/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196831944 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 0.152359101 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098231405 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200557453 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 0.06867053 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 0.144384098 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083853947 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.172789091 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088286106 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087769099 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055478326 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08001841 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072680911 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076014573 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147549451 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105795908 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.076528319 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066781401 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079808679 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090525115 seconds)
    (66/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.211127586 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067204224 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079131801 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073652381 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076689856 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077182872 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071936342 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054725644 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079648588 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075568824 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.065045943 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175225894 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07765699 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.190497641 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091877287 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086953068 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076147787 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098467268 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.333837557 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180384655 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078296245 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090826766 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073128273 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069800468 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.217298055 seconds)
    (91/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074115037 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074713731 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082347939 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.142990108 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099898368 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179991105 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100450018 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088425458 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104978914 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099282972 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090905191 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079760261 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143437212 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.159675543 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074587816 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.066275063 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076755708 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156731243 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.158859251 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054252123 seconds)
    (111/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055643568 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107815343 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09525516 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053783179 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093411628 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068326731 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099101208 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0663891 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076963094 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054044727 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.112119997 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169303694 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073780976 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077954667 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176426593 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111345358 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09081109 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066274131 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074709131 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18470879 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079783701 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066003773 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.177281024 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053974424 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.083835324 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054415737 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092824993 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054500077 seconds)
    (139/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.074570787 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.118828793 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097948385 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077902178 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.066604542 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.066543038 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15825335 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066604555 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091084812 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054623608 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06767252 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06827439 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077573947 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188522839 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072120278 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054007726 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141813578 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154978848 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073618209 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074075677 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.078420016 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.066709398 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121371327 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05534513 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068067568 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.065405235 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072648528 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120091741 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090553741 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072231401 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076752372 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053839441 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073134075 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176117703 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079624333 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077467818 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091807637 seconds)
    (176/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075832651 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065178117 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158254889 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.097156956 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.065828197 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13723379 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067451067 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068153692 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067159901 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110141329 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077576344 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082269762 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.2447832 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077949041 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.156768256 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146376819 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075427128 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069472733 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065221604 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058011761 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05432483 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076719929 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09039484 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068286787 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.169851725 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.129683492 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053985101 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054040372 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054341175 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073576788 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05565229 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067347563 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 0.129633943 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07724111 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152053978 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072812536 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076614147 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076067456 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056050255 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137068953 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066593065 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054198164 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069093101 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165931591 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055295626 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056111365 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070572325 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070453986 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089240958 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.066511432 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067974759 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053845948 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075362182 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068597349 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079807154 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111035927 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.098762806 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054603745 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068713073 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054010638 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068682984 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054279158 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0686392 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079941971 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072913149 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118980039 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073405754 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054095838 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149298049 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085989087 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.16556736 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.054934138 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069339379 seconds)
    (249/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05630963 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19239234 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06633332 seconds)
    (252/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065417717 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066095956 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135387423 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081252742 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066364638 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065892702 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090695281 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053907342 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087525561 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.119669042 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072151193 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174887865 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054175732 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055535816 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171878702 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068249471 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066051852 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054060583 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055086504 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06397509 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075395665 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056202694 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079171599 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097738209 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073539162 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068429412 seconds)
    (278/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055034539 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06725157 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.096172972 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069849713 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070042143 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053710436 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068478247 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080519944 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067094977 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053916507 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053582427 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071561168 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054984112 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075314723 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093189705 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093623805 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088677011 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056048884 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.065853606 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065408572 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068356985 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072641964 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054299352 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066426923 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054730562 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.116769702 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06843063 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054905777 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071624617 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053681102 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068845378 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055884768 seconds)
  done (took 30.999867215 seconds)
done (took 32.457113235 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089594476 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092870751 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078617887 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09447379 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083557496 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077614473 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076264819 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081833728 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082653122 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084549183 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080950079 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057998685 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077438749 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077393218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077279638 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090688696 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081453232 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076700865 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076337045 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067480151 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076217006 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068007989 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069922394 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057921812 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079652215 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074333518 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076813005 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076733941 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068091027 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068094133 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071932868 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076574206 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068593203 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081639955 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075560422 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07583872 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077210114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07767369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070141545 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068733622 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07709987 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067978405 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075490747 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076363568 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074368042 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067077212 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075633854 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080446524 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089266229 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074359331 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077174538 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077482887 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078592091 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075344154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072100025 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075847099 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067241843 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089479881 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075808853 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0748494 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076538097 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076166719 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067315561 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076038307 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075792148 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077455071 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078961508 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.067124047 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077134556 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073972085 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067353332 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075583927 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07150338 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067805991 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07835597 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082176006 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067140582 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07459025 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075712351 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075913238 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067393625 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074144798 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069113966 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074425798 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074266347 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057463195 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072239712 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074825478 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067050793 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075791027 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074537215 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075135683 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06959538 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078795046 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067680228 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06697525 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067965969 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068144694 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069119425 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072307326 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067659677 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074228036 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077360685 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069191051 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073878851 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080014669 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067526278 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074916832 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066878739 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0667602 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081715453 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077160512 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067552015 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074009686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.074611698 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068992526 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066360706 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066872401 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066889762 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066765567 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07278183 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066637375 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07312067 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068063705 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.222288669 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068632756 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072817123 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074386611 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068528296 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074629375 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068189841 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068110325 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076789491 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064386199 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075109784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06831976 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069581582 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07384274 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075732471 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069388011 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076943707 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07324685 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07458653 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067583881 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067014484 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062275552 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074041302 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073889003 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069748533 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06777411 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069408632 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067578802 seconds)
done (took 12.929482588 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071066649 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131636232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097181898 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096111376 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.087434519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068902156 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078956463 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.097922268 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071257803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095750746 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08853535 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085577855 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109308397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067659534 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068213359 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071804858 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066909536 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.06966822 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099869859 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084559813 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.109081324 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067763536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091336257 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08666225 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087022684 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092469913 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071984028 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.0720167 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067922796 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100068441 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088328272 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068582312 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067887894 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095685435 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092587503 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083003628 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068563276 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082753858 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.07115567 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070572584 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.084345696 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096875678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080849425 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080887333 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072096525 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074723328 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069801663 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082862917 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088302123 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078851448 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081187884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.097815933 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070313766 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079629113 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067536479 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084868815 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079492037 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074475725 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070878352 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074839049 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070731681 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068175532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.069367857 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080504745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072283052 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08242652 seconds)
  done (took 6.884564822 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082910908 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092375473 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081826899 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083797544 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067882557 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068589943 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069017827 seconds)
  done (took 2.102499461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069816321 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088642879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088807858 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089127827 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082584074 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089048144 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077817533 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069090744 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092242881 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069834478 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087592377 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09823648 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071843005 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081043146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089977252 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068759015 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09027733 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06899291 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071303618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090575865 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074638534 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09704441 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072458261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069158871 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082094621 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068989709 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111967729 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072226921 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070386076 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072003411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066979078 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104883381 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081399781 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075757725 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069109983 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083012168 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082739915 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06802562 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08388266 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076956936 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08156695 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069536343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070073063 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067123488 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072749881 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078253666 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069994394 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069402365 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071362868 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086851777 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069951131 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080950442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070966168 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074467925 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070279795 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075139725 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078210893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069987473 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087154339 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070353403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083689865 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082676469 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081459752 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083213902 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071149121 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081090962 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081546031 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071682482 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070438311 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072458882 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082902781 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067974564 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070339816 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.07854994 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070453949 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089264178 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089668488 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070878759 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081111888 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070298351 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069350676 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069329265 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089575515 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073892108 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069132942 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072305409 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072480513 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068275125 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068764391 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073363623 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067028056 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070701045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072240398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071752357 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071943427 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083844722 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071618825 seconds)
  done (took 9.02763894 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074243612 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.072807723 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071713613 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070316388 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073388813 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072880527 seconds)
  done (took 2.01574825 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090991901 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072000508 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.076719388 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074052186 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097352884 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086944757 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087308573 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078234854 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078393551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075088862 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087519253 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088168358 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091286351 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076278888 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087194438 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073460685 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087173207 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07615678 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074238438 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076532695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084708741 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076164599 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076658363 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082536971 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076956721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073379785 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075804276 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075148191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074324403 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078918736 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076158692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076590004 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07216916 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078159828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087404398 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072371814 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07438299 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078198287 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075982888 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080162033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087959422 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076244846 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076576899 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078250793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078496721 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072270324 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078173047 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078039448 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086942704 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078499267 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077961111 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076994811 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078205457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072472171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078525068 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07858935 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087292327 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075716739 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072066296 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071447465 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076941028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078403922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077443373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078493784 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078178861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072322552 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076059597 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076598707 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073907074 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078670145 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071870539 seconds)
  done (took 7.203770376 seconds)
done (took 28.770291823 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532876637 seconds)
  done (took 2.065823571 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.592003622 seconds)
  done (took 2.157949556 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.506777578 seconds)
  done (took 8.070075928 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362363349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46267137 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.690224334 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1342962 seconds)
  done (took 3.239682664 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709295441 seconds)
  done (took 2.283884584 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228433184 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220183515 seconds)
  done (took 2.035996379 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377272683 seconds)
  done (took 1.943141661 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076063564 seconds)
  done (took 2.64223287 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.229615899 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174155587 seconds)
  done (took 1.97378774 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447584419 seconds)
  done (took 2.012506803 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.830986431 seconds)
  done (took 6.399268192 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213140266 seconds)
  done (took 1.82067989 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239408207 seconds)
  done (took 1.805785123 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739480805 seconds)
  done (took 3.305894452 seconds)
done (took 43.331755657 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085676817 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085932231 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085945086 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083797067 seconds)
  done (took 1.891520357 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07922022 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075418664 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078599663 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075044232 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07860667 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075390152 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076592903 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077800742 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075055252 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076122766 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074870424 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074954098 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07746588 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076775407 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073578964 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077139534 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07821142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075647943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077538999 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074876917 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073592585 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077131256 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077572715 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074196542 seconds)
  done (took 3.401961589 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080270332 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075398371 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077558113 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07457362 seconds)
  done (took 1.88640856 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080487474 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091624188 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089825645 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080315535 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092842107 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087566286 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071442781 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071477505 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072973452 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079949187 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071162278 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095194895 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088722091 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080206142 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082538056 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068181383 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070160373 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088193844 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081394568 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08092564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073242003 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080733629 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070637058 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089622289 seconds)
  done (took 3.513096802 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087098365 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101579153 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081675081 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091676809 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093155357 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068758654 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087939672 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093153055 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127457982 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068043033 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073970947 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068264551 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07607435 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067864828 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082751825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.099764718 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.097773452 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071841381 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098922626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068237731 seconds)
  done (took 3.290253528 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074999332 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071788076 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072926217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068453803 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07886913 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074893124 seconds)
  done (took 2.027420742 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070697854 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.07116202 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070007328 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069925289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073991263 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069946991 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068578322 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070212605 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070306765 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07046126 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069373281 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068675007 seconds)
  done (took 2.423618232 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184083495 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071173514 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071959067 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068745232 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073110654 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06938759 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083109289 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070462088 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093236469 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069701701 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06983631 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071276309 seconds)
  done (took 2.578720645 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194903841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077925549 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221891745 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147804197 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107955694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111557336 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110546135 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11554616 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13503265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098663865 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157546264 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159225321 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105871225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133431943 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089655002 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099841799 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148136055 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158670947 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105364207 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158642006 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13894737 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123590679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141834216 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101162521 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104831885 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116987682 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074092562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080790328 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162549725 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128232219 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138300708 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110240663 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091761233 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176353323 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161056828 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138984555 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143278304 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085316404 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103164874 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128843056 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187902838 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089050889 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300741818 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110799578 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082096893 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131019628 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124339187 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126898473 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103856538 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090271522 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141913239 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174908257 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131108078 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087688106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121632494 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111920839 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11103707 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111776189 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17004231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15323565 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12601012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073939934 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109583029 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145367973 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137736819 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105118873 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120653659 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094535225 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12903 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14818917 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119024261 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137072612 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114206679 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090254617 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126108247 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133516227 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123354028 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154363382 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121261681 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075158563 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118636371 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098886592 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081630201 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143901954 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076538207 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166167508 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099487359 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104756925 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120318007 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111147665 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106963783 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150744426 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.288707895 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104192916 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069277101 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10528692 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118175021 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141647576 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088988326 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111856282 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115035293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078796489 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132669663 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078047268 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121014551 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078393811 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129656754 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127967174 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079232804 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120614131 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103529378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106773301 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127957197 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152766669 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088745007 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082578474 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159728463 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120389892 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101284877 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138860874 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150434551 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106551604 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099309049 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143251461 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164754837 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090254831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156570294 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104410906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084529464 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087927245 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120960867 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110953718 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119134061 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083174554 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117122065 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158058804 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07619548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095990593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130653635 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080014958 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081967131 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103561205 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103425489 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09641544 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09768117 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100712866 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130947345 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275386335 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10866045 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123017202 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099491784 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161358859 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089068342 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102106065 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10371167 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072825212 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.128863385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150508111 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081241435 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155322767 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127730961 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113227289 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125068819 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085490336 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134345682 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080339307 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073078053 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138321471 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118636541 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107339047 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144544634 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114058411 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121307592 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116139774 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128113868 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126487568 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126358133 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106131244 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.094410377 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116690246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125575998 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.0759591 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090706223 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081848975 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104835589 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095372902 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084489055 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136145597 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12128036 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111019694 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116137272 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096340222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13995961 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07746533 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122512461 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125439413 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095782165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145184994 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144816326 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127421243 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.250799551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135808584 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073720652 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077252805 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088996971 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128773223 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084983527 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084811972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113596289 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141292505 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133232516 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133259971 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121659809 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118391646 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149198966 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072672766 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119403995 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139966093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119345845 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104620829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09198965 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098806608 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137840365 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105252527 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170141491 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120667673 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129906783 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15709047 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102073695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081520289 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107205936 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128440102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103456136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137673028 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103978716 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090050723 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115430423 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079966748 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094760615 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124370905 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115742684 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139440828 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111922322 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128638706 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078969342 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111204836 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118251561 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117973789 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066297126 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122820177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151758598 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095035928 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276643119 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147692265 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081965097 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134506615 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16619464 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148625584 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086740709 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107074823 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118159834 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124173204 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125974123 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135080631 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105599193 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141937873 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108825522 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091934635 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088336101 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097811596 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103391044 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093604265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103158859 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111491731 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.097015029 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128496558 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103406653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108991721 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124176894 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099896509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092726861 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097248273 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167336788 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116306796 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162614042 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100405196 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13773042 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155063562 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077694295 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080974534 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079931574 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134159136 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086249766 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126845036 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10949826 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114306397 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11952151 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133132079 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095355801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070777864 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112388777 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129015567 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120209574 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097885325 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099399555 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307095286 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099673044 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081834332 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112695806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114289137 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103697692 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162576348 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064956742 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10450654 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07932929 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08171583 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123752154 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145491574 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082277625 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101498593 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126967475 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110710863 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123242233 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098824084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110608124 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123452045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143066503 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124673187 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090254774 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109536389 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132168613 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149285108 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101905507 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097446168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167232054 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145557539 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.152535156 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087472312 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121118255 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120967204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113248882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13433275 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084705527 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155133777 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083729314 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132372294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102857774 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088726259 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123287794 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109311825 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088237097 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139681113 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114312741 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084237968 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078792144 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113108328 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115802012 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256659049 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078976914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135306754 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077034962 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1311075 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154413884 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082937245 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105094542 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10248509 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082390818 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105664996 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102141995 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088967543 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100662271 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164056629 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091649381 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143205742 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130645608 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110218266 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13889625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102577862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639666833 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079399852 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145819411 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113207555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163161341 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100209038 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124148712 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114085833 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117932158 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138893948 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102147773 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178187464 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128525589 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114735723 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080904601 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101693932 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103420204 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088038422 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106460003 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12089919 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113350229 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092964034 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112909172 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120083013 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083419693 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095703747 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148196055 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112860268 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13817839 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133110347 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.238814125 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125745052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135222922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085631651 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116962729 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146885075 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105459829 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100140191 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082946042 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10035014 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154076804 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076037865 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154117411 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122256106 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114325067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120087102 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109619744 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128306644 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105680456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119419928 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092171766 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115384712 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112244772 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082985462 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079400822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103816668 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109232063 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104259022 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096814164 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100696881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145037869 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07515279 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098576156 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113345471 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138366289 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1650451 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093549052 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084169525 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117752518 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114199681 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110776905 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119548434 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080783678 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083548719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085514622 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082943563 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106436219 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111067227 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111587191 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11498038 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151744646 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083410863 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223984045 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094750604 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260069788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072844617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08134663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097445391 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09887109 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106129586 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111751776 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153695439 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095737824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091121516 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092666847 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077528197 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085645037 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124808672 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108612987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116961664 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101215954 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066047674 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10664319 seconds)
  done (took 58.521819281 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109899384 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085505147 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095436432 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143683007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129170672 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201248876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152503288 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190020193 seconds)
  done (took 2.809178569 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071282223 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.08374459 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105149326 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085779514 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070000372 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071645802 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.21901909 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083217638 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069168643 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094891058 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08004394 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072336818 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41429547 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069076722 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070151551 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064790734 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069743392 seconds)
  done (took 3.484436221 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37997774 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620204819 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.336683198 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079912234 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.952812612 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093576184 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.165488376 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136889937 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081254023 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546742528 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405955451 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132380563 seconds)
  done (took 18.632931185 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084924634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078059899 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092450067 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091209036 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081468815 seconds)
  done (took 2.129185431 seconds)
done (took 108.207958921 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084994035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.588275242 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057377991 seconds)
  done (took 2.373438393 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08950168 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087457889 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087802895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085519609 seconds)
  done (took 2.055716585 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076671857 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078757229 seconds)
  done (took 1.85464152 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226096958 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17359922 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097095173 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085027776 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081793349 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08186197 seconds)
  done (took 1.956490719 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074991182 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077522924 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075394208 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078777597 seconds)
  done (took 2.008326593 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079228416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055574537 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058322324 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061331618 seconds)
  done (took 1.957061061 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088120093 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083513793 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081170043 seconds)
  done (took 1.956590204 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100663461 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088989224 seconds)
  done (took 1.892020459 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083913321 seconds)
  done (took 1.788490905 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094217681 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100307211 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12856992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11037154 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135918179 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106875962 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085088714 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086834727 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078458257 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087593131 seconds)
  done (took 2.717624898 seconds)
done (took 22.839422163 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080652177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366363592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36247662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091552066 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672113958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35989918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970396178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094543878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.139311647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069953625 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086776052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652100282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96062052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324110778 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948442727 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324959376 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652452706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071266478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070886778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070535854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957551184 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070232924 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070174669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071557967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650756181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374099684 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071249104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325280435 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071268672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072729855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358743384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071125085 seconds)
  done (took 16.214642058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090221061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121331503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075520536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086773144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072404514 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072422567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07407792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071920334 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121017312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070544678 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087952214 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070453114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074053084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071638751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08974574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070827626 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071932923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071873101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074130631 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071505749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089601022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070686122 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071231227 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071615428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071381071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08274251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071505579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071555689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071912757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073326036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074007726 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071960658 seconds)
  done (took 4.218221671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116244832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125924334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075930257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106155013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113591613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073448092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143091971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095547848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129131075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071363697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088547107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071221505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104456311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071921403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09128179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072082953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072347366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07197872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071713672 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071470884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090376448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071748736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071655207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072232194 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07165157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084117271 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072044995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071997193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071623138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072741975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07479421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072260552 seconds)
  done (took 4.44940058 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075537417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078006401 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085962376 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086354948 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071944848 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074418698 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076414142 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072185204 seconds)
  done (took 2.33984454 seconds)
done (took 28.93248166 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08117691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071990734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075480224 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095269865 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076442919 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079798486 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07523795 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078165797 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075986207 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075877861 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077370648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069880493 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074279519 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074780232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076613908 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071069909 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081094152 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074585106 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081452012 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081645586 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072927016 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075845768 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078182096 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081241163 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081735223 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081063022 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080114677 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075989382 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076610219 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07389047 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080120853 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085808 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071304444 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081530169 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071155805 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070733605 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074563692 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071501492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08143141 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079267617 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072560807 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079618673 seconds)
  done (took 4.933244316 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089285207 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093269957 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.0862969 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064456197 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069229919 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067481995 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090661066 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063180266 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062818138 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090021596 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059188346 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062461556 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06620082 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057703513 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062721056 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06049275 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064451906 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058909991 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063165801 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062450655 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090483285 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057385689 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079930447 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065709636 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059400606 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065086583 seconds)
  done (took 3.545103015 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077113737 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085631155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091538162 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154289663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112878147 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080514521 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08222539 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095403286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096478919 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070174944 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073995353 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095447158 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089431409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076517079 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070544657 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08694756 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088586242 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071950528 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075318401 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093300695 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08801186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087893218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093304074 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08594735 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069915815 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072640652 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07411984 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083628799 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079230805 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078757802 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073170927 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073187358 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072408238 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085005715 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07279278 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072172186 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095478053 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079869692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080598543 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071172557 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077722726 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071580762 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090818398 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.119621352 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069024722 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075718383 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074169703 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080005463 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069710296 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107020437 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081144592 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069897667 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073328913 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069501583 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06972207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088300908 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071640685 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072658379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082836863 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075315603 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093499641 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075274611 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085813229 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069764178 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077642265 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069704132 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070884302 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069432281 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09464986 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071468612 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107781063 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070875364 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071141749 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07858047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077800805 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076365929 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069315125 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08556158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080522622 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073391396 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.084117725 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073240672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074038476 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103587927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072318684 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07233077 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070975832 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075016726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072777365 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071053106 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079506005 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069985035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07255972 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.092158024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070288909 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071354118 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075363479 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074282192 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069759949 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080840116 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074280189 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070728322 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079521952 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070493122 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072868819 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081558855 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07594185 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069057773 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074070525 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075242561 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07141804 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071829695 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072467549 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07141481 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078179697 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076617209 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074014142 seconds)
  done (took 11.035801689 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16087116 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151853472 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07369291 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144250846 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079112526 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08173423 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145125301 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09448695 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070781738 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072210296 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071126215 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109650487 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105732463 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115900523 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08082129 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070265497 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.097896819 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114369724 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146896207 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142311047 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.098301337 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078177328 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072964472 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072240858 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073382989 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080184778 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086961008 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078884796 seconds)
  done (took 4.539676797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083008118 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103388813 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077385169 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092073661 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091850137 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070853255 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072909999 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072820268 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086570488 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079776784 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07046107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075424996 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077130604 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073631263 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071034983 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082138919 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081872761 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071735186 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073698915 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074760686 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080331564 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093517595 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073878675 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072134729 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075323142 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069677514 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065934254 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085265823 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070915791 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.093949084 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068313622 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075350388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083481907 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072052723 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070746676 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07088533 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070477376 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070372464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074561204 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069209209 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068857889 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060853716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069662167 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081007342 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083391641 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05931698 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074751362 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075444822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075478801 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067912892 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07402016 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073376153 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072837292 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077867931 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072635033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07575379 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07192013 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076414201 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079088601 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070468654 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068043603 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069074482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074852309 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067459437 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08508512 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075576851 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068996691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.0702799 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072149515 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.083641566 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070740979 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.0756292 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068065575 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075875898 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074683084 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07275894 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072005004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068985482 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071007906 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071370891 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058588188 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070572978 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056831522 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073464625 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068620229 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069335776 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07016349 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075096458 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081297741 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07172459 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077022126 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.07162295 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069669245 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073405804 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063212874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073232568 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080728965 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084403907 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071177478 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068753361 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0827307 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072242432 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069844827 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05942494 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074487507 seconds)
  done (took 9.548554621 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093153233 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072361241 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084444826 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091131631 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088793177 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077952846 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080721563 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072082314 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085382004 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076158823 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079033403 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070674893 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080442419 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079569886 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072385221 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080709615 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074098479 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08492721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084527147 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07073192 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079195867 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082646036 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091345532 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082857209 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080923457 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082982465 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091812031 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07990545 seconds)
  done (took 4.043459307 seconds)
done (took 39.358288736 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.820401463 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.971250044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.80018799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.129369614 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.128991157 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.817376817 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.993043863 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.79591784 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.099366116 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.835031549 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.146229726 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879598272 seconds)
done (took 66.277223529 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.809106242 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.932887071 seconds)
    (2/2) benchmarking "String"...
    done (took 2.046010038 seconds)
  done (took 5.705951431 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.047309341 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.390604172 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.039296136 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.792841435 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.800566216 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.110543013 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606203233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328003455 seconds)
  done (took 30.796257079 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.999750244 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.024304569 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.522084654 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.560366374 seconds)
  done (took 15.889749613 seconds)
done (took 64.069821343 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.834988172 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810218987 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82994955 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.780013767 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.856550245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.813105715 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.172428364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.826116329 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.79414674 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.786528982 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.797219723 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.226389883 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.796809095 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.188074919 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.798155747 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.806981116 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.846364493 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.313169827 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.954854748 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.81724649 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.800941731 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.844293312 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.796609576 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.807813853 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.805092708 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.797634748 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.200393345 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.808503691 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.633314671 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.799907675 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.849572353 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.315911221 seconds)
  done (took 205.237317409 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.797316269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.847299185 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.912913953 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.827703424 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.153675098 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.978786252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.881026078 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.326152361 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.802273735 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.826570181 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.939259731 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.798099458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.981499612 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.756461549 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.824718866 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.811285038 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.956233603 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.017109546 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.831644587 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.948904918 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.817003554 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.765751324 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.74066553 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.963616722 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.814679845 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.899246035 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.808247979 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.807663155 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.991025774 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916904389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.802096814 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.846374492 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.001428709 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.670718261 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.824143439 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.820751878 seconds)
  done (took 170.439355895 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.994854034 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.799524951 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.797576927 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.798859089 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.803979034 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.798623807 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.927447058 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92551892 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.423045073 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.12309727 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.852642634 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.798851813 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.614235549 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.798675096 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.866716438 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.81179883 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.80044864 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.813784197 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.827461611 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.799721823 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799136963 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.927745261 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.811876507 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.798612104 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.806796196 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.800091332 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804698649 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.170764843 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.800209797 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.846276378 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.800081166 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806377064 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.040720436 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.801784016 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.800045469 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.658765198 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.34263624 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889781367 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.802657827 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80550496 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.799798777 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.017084779 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.800936361 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.799667021 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.800542203 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.80340445 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.953301332 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.800890566 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.932344969 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.801256223 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.800570559 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284259425 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.801269459 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.801216658 seconds)
    (54/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.800810378 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.494207658 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.384297829 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.801386097 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.803150842 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.80132762 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.801043988 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.807198397 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.512925217 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.875326296 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.80442202 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.805738667 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806964726 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.802012799 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.941920277 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.802329867 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.117601771 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.861122316 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.921501174 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.801977172 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.801468605 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924408607 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.870059969 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.896813978 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.803409238 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.802053863 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.802548869 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.801407447 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.882563035 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.802797291 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.801955915 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.931003278 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.811027815 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.804404442 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.85375596 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.871715096 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.804262421 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660222221 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.805758142 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.803333952 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.081226483 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869240936 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.804433368 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.802623119 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.931009121 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.92673632 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.527220771 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.805745488 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.494582215 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.943232713 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804951456 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.961859596 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.807325447 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.886554275 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809392593 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.806113772 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.83614601 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.805347299 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.864286349 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.80369915 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.176410732 seconds)
  done (took 404.673531712 seconds)
done (took 784.131348583 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404243624 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.377755769 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.469107898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.388011732 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.365738225 seconds)
  done (took 13.741579196 seconds)
done (took 15.476185742 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.893436264 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901240331 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827882205 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.895394435 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.825918207 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.894607688 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.879188916 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.829275377 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.86337182 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.830631768 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.865207881 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828809999 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.816835345 seconds)
  done (took 25.888446885 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.040713333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.048076291 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.874334997 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.04098696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.850640908 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.043294304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.968583475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.956156368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.960379483 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.823052644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.818044069 seconds)
  done (took 23.16264801 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.048215958 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.048370923 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.882931181 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.049251885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.854124795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.04732376 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.97112574 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.966474219 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.963859764 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.822268131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.818577905 seconds)
  done (took 23.209896897 seconds)
done (took 73.997360649 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.813970355 seconds)
  done (took 3.552711926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.841816003 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.009840253 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.821812939 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.817733728 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.813572713 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.813503017 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.817291082 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.813233066 seconds)
  done (took 16.487754084 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.8142842 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.811217547 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.811068638 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.812253428 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.811492042 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.811223915 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.812907095 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.811281835 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.813523654 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.813821051 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.812167197 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.811646625 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.813224862 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.81433491 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.8112609 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.814568708 seconds)
  done (took 30.74055921 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.813342014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.810881233 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.812190612 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.811956708 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.812995819 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.812030738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.813716127 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.812276182 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.812283934 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.812290452 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.813381903 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.811471497 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.81286988 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.813103666 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.813401195 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.812856692 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.812951616 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.812713916 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.817060606 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.812106113 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.813276425 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.813350126 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.81355461 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.813248974 seconds)
  done (took 45.252417886 seconds)
done (took 97.771155341 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.543634026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.685684936 seconds)
  done (took 9.969707862 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.818034716 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.81572573 seconds)
  done (took 5.444676329 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.81640146 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816989597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.815820417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.816266479 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.815798117 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.816379468 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.816212143 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.816097537 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.817139109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.816772278 seconds)
  done (took 19.905221176 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.815996615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.816637425 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.814412393 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.817115868 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.81772637 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.81542793 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.817206014 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.817298084 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.816970445 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.814472294 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.818360285 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.814603595 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.818480241 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.816045106 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.817217389 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.815439192 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.815901776 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.816587424 seconds)
  done (took 34.438801453 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.817841387 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.818359787 seconds)
  done (took 5.379780084 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.81596414 seconds)
    (2/7) benchmarking "second"...
    done (took 1.816876905 seconds)
    (3/7) benchmarking "month"...
    done (took 1.816203352 seconds)
    (4/7) benchmarking "year"...
    done (took 1.816179043 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.816018311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.816261456 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.815553037 seconds)
  done (took 14.456529262 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.819112916 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.961398139 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.023987952 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.482351922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.820178936 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.822223688 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.815742447 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.823072397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.824024037 seconds)
  done (took 20.136080604 seconds)
done (took 111.470416618 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.676139942 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.815968643 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.136419355 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.875038654 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.867845956 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.155694426 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.847007198 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.10135651 seconds)
done (took 43.218330542 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.850615621 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.524612166 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.574876691 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.8474916 seconds)
  done (took 15.692164092 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.81104983 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.10844949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.82405439 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.641368012 seconds)
  done (took 22.132628037 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.183403495 seconds)
    (2/2) benchmarking "read"...
    done (took 2.169405209 seconds)
  done (took 6.102529964 seconds)
done (took 52.524264004 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.820076543 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819797072 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.819807358 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.816932901 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.817242087 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.821307673 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.817828221 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.817044373 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.820674923 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.820132375 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.818840227 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.820617674 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.820275315 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821023014 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.81753748 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818211564 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820567946 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.81854789 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817633849 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.820066782 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818495054 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820749102 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.818386248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.819140971 seconds)
  done (took 45.40578932 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.821778566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.818820503 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.822180119 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.820609801 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.820469455 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.821738756 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.821554519 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.818730907 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.821865456 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.821644894 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818695298 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.818826105 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.821735571 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.81972011 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822441944 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.82014298 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.821498551 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820354699 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82254618 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.81866771 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.821935628 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817793683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.819574888 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822167217 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.819960421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820515158 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.822902804 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.820640659 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822040242 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.820904509 seconds)
  done (took 56.369646097 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.827059309 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.831023488 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.822900735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.82272127 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.823348096 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.823740877 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.823523436 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.824955787 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.823310858 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.823859722 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.823602946 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.823936148 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.824148511 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.824260163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.823016145 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.822995513 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.823455191 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.824051047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.823599896 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.823417652 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.82374293 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.824714586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.824163287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.82456226 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.824163553 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.823811236 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.824172355 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.823956774 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.824994705 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.823392443 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.823548659 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.825173225 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.825455909 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.825631525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.82450926 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.824970278 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.830799847 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.832929502 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.825038524 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.825498875 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.825528201 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.82533739 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.824483888 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.825287627 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.824785692 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.825285525 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.824308782 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.82473807 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.825747084 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.825276514 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.824751901 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.825347536 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.825016254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.825241712 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.825843355 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.825567546 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.825797997 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.825787689 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.82613544 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.826373083 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.826246199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.825772121 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.824612166 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.826530919 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.826482956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.82604448 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.826507114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.827980638 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.825549417 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.826785098 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.825846947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.827240253 seconds)
  done (took 133.159707928 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.826736996 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825166636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.824422905 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.824696266 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824946979 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828185959 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.825130159 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826433198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824840402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.828016173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827704518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.826193062 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824752889 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828026168 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828090301 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.825157815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.828056285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826263936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.828619685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.827510852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828525966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.825858942 seconds)
  done (took 41.934580535 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82804103 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.828479231 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.825340996 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.827837427 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825454297 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82839969 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.828108657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829077859 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828433096 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826612771 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82640737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829056232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.826825347 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827654142 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826711893 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.827507236 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829607567 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.826518226 seconds)
  done (took 34.649620257 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.825652299 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.826342228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.82946026 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.826887877 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.827252551 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.829592074 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82672853 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.830715558 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.830051768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.826729879 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.830499515 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829752936 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.830536361 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826806947 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829392787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.827556711 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.829885987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827168305 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830833227 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.826553239 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.827620122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830776689 seconds)
  done (took 41.981567671 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830062462 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830896491 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.827986009 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.829172768 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.828383395 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.832366689 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.831482223 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.82918522 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.831736058 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.832488113 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829127559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831679983 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.830287545 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830441668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.830161773 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829475078 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832731728 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831117391 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832435827 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.828689633 seconds)
  done (took 38.365380289 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832374598 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833229338 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832594068 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832831411 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834232737 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.833756007 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833397672 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833927995 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832966968 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833156833 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834045144 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833946712 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833103251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833133293 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834207486 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833529756 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.834129983 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834182589 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833749352 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833832524 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835528493 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83431047 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834202085 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834356383 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834556794 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.835116058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83481567 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834168829 seconds)
  done (took 53.104875424 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834631976 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834844068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.831471696 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.831941309 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.832395628 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.832706643 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.83198001 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.831370774 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834905751 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.831480243 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.834802782 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.835281207 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834213141 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.835531531 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835535878 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.834633355 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835246585 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.833215112 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833498005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832147956 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.835311203 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835513198 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.836492099 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.832372155 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83197151 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.83590973 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832532634 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.833523668 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834508358 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.832628364 seconds)
  done (took 56.771254582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.887471752 seconds)
    (2/2) benchmarking "in"...
    done (took 1.887498047 seconds)
  done (took 5.534773745 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.83255548 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837404264 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.836068599 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.832899688 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832978425 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.835528818 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836620065 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832571686 seconds)
  done (took 16.437046822 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.835687908 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.836952165 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.835824257 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.835029039 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.836569459 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.836259417 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843588947 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.836068117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.838239524 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.83740027 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.843040601 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.845145115 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.839590267 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837726031 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.83680195 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840118498 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.837427512 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.838339852 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.837803874 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.837493729 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.839295162 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.839329908 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838965081 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.835437661 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.839481125 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.848099414 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.842939782 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.836699546 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838691405 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.841029816 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.837278569 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.835682067 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.838858837 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.837938207 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.83806218 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.839359723 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847000943 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.838182271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.845866724 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838607876 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838720692 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.836074625 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.839896631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.840480299 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.840097227 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.8396712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.838503323 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.836096211 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.837590377 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.841118961 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.844486472 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.83808924 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.837072001 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.842250961 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.840357788 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.846764794 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.841261491 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.842594795 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.847738394 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.850926495 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.853593356 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.847748743 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841780813 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.84038632 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.849333232 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.863567579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.846849532 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.838061504 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.838149279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.840035475 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.848157697 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853754832 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.849444832 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.842040029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.840984226 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.841461601 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.840467537 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840831654 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.847461784 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.843211115 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.84156032 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.840611333 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850632281 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.863299503 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.840204812 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.841731027 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.841838998 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.841060793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.842128475 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851656573 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.842444439 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.841276715 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.840869327 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.840974736 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.842072137 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.841772839 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.840627958 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841145793 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.839410967 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.842299569 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.841443648 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845857477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.851401538 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.842045888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842094895 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.849043551 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.842635797 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841796963 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849681127 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.842762386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.843013633 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.842377658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.848681434 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.839711032 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845515183 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.850764359 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.842861593 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.845576419 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.842946775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.843017022 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.853644053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.869784938 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.843173251 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.842767231 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.847197615 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.856395528 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.844290241 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.846002049 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.843420931 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.840288752 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.841259253 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.84563601 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.843356258 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.845198268 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.844881405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.844718432 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.844351833 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.843354722 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.845276749 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.846571653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.844653746 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.845620888 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.844889601 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.846417133 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.84499584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.846161999 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.852479456 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.843815005 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.845944776 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.846383422 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.842158119 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.844878061 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.846714136 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.846262795 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.844798787 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.845231865 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.844888796 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.845574194 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84563348 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.8456583 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.845646811 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.84504603 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850133971 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.846654063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.849503002 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.845386992 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.843853375 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.845619247 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.846430163 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.845818444 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.845946684 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.845033476 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.84916126 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.854623937 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.845339664 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.849029091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.848593597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847674132 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846509524 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.846389519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.849686603 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.854145428 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.84754771 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.853421767 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.847440592 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847267425 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.847780529 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.846673438 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.847851615 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848246186 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.851013062 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.854942395 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.859953464 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.856709212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.848215892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.85179612 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.848785598 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.851596201 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.851817285 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.84743899 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.848505251 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847448368 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846862566 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.848176404 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.848782914 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.848305935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.847549713 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.848389435 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.847679639 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.84853836 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.848107419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.848885489 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.849393759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.845721105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.849262638 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.849382649 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.848246854 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.846963497 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.846856288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.848275024 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.848866996 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.849152173 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.855179489 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.8467179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850050191 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849682579 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.847887624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.847551618 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.849364248 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.850967062 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.849010114 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.855693684 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.85017804 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.850475462 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855744714 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.850096124 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.850069801 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.8519061 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.849098266 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.847170668 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.852497713 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.856820696 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.849831881 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.851268104 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.851240039 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851310587 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.851339091 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.857227192 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.848154575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.849295259 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.851355463 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.851511122 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.847221428 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.851309787 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.850886162 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.851320376 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.852650781 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850933795 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.8505444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851227203 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.851152335 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.850383417 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.851592945 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854541488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.859787835 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.85682921 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850998538 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.853259613 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.85214056 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.856339779 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.851067302 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.852090134 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.85150847 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865406619 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.860140397 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858543289 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.852880538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.853187291 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.857323972 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.853257867 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.857648396 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.852346582 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852497929 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.851260158 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.851605527 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.849767119 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.852237414 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.853305957 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853992456 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.855365718 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.856705084 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.853543742 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.852345303 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.852711902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.853203589 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.852583718 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.852005885 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.853128528 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.855352129 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.856015398 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.851874214 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.852962081 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.858821368 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.853475657 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.85495068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.853007407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.852791764 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.85324731 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.855676618 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.853894239 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.8572661 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.863326569 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.857585143 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.863304109 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.855544561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863765016 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.855158393 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.857225382 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.86217081 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.852284625 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.852903334 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.854377438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.854526586 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.861976621 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.855300907 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.854855064 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.859465314 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.855189597 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.854930874 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.855563065 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.856734538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854997039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.855704528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.863459668 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.857023834 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.85882406 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.857773725 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.853932897 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.856731281 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.854915367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.854547775 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.85974776 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.856371834 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.856429668 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.854630641 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.855788145 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.855527536 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.856512659 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.856419114 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.853830236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.85722822 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863007342 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.857155178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.862150698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.857002744 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.865219531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.855734388 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.864999389 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.85765746 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.857370614 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.856718211 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.856164652 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.858533813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.856957261 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.857108032 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.856856417 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.857410346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.861374231 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.85803016 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.859786516 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.857689917 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.858206416 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.856255715 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.866680831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881490989 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.859186023 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.8622415 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.855146462 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.858231242 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.862435242 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.858681717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.856887549 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.85985149 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868032749 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.86543577 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.857830821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.85737204 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857298217 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.858800979 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.857904426 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.858536506 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.859511256 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.858408843 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.858667063 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.859058032 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.862175395 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.860073167 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.859688535 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.859514183 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.861347319 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.870721609 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.859328548 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.859862758 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86000971 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.859780169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.861053848 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.85980493 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.859416346 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.860636713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859997061 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.860124489 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.86733526 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.866291469 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.861100236 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.859021131 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.859604052 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.860311248 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.860272209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.860805936 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.861302282 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.861248457 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.861300904 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.860493197 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.861167053 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.859031777 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.861116493 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.860014028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859642589 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.863097602 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.867402041 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859433724 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.857765158 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.860358786 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.861533506 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.859526259 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.860794557 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.867685226 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.863232306 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.871497001 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.870611156 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.865606412 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.861485663 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86556753 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.868772995 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.859278528 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.861249713 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.86179655 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.863279792 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.863313223 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.865005115 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.862617882 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.868541826 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.862069698 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.862650585 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.870378074 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.863778254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.862520436 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.863025638 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.866006658 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.861961999 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.861384392 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.863314501 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.861424344 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.869727127 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.864488993 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.863297396 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.865224949 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.861110724 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.863259995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.867364702 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.862292977 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.862985549 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.858972431 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.86289743 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862668116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.863879226 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.860461374 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.862772641 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.863150857 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.8671661 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.870323348 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.860917195 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.865958462 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.863467097 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.863859802 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.863872701 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864787269 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.864012071 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.861042556 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.863357225 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.864532314 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.863643933 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.86683829 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.864209757 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.864629116 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.865515035 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864788806 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867154177 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.879745668 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.872548516 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.861355981 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.863647143 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.865108298 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.867679303 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.865348441 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.864724783 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865088516 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.867338042 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.864225997 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.865299435 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.864987571 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.868379137 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.882225219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.866527226 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866681223 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.865797554 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.869033267 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.866618463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.864289806 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.866767948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.867737149 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.868714718 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.874159671 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.867314084 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872147941 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.86626159 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.867515407 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.870148507 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.868252717 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.873893201 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.868885522 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865784644 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.865127123 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.871768725 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.884178446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.866915365 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.876084096 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896514599 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.86719322 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.867606697 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.867616331 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865828597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.867279971 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.867436245 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.867387741 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.866631981 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.866834258 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.867890659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.869020871 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87277615 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.868478235 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.867084094 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.868044577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.867361204 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.868079213 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.865348437 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.867148997 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867299638 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.868493195 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.86806233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.868885267 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.868695715 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881951222 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878048418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.868951356 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.86912891 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.865120038 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.871619672 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.8718116 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87826791 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.876480556 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.868521129 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.868560426 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.870159033 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868919241 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.866528518 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.869409742 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.868090452 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868768402 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.866428326 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.881542536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.876352849 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.874583456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869175635 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870218731 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.869324588 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.869518772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.869714464 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.869267037 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.870590532 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.869745521 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872474438 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.868858613 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.86963676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.872504737 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.877349195 seconds)
  done (took 1107.402571278 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.866681596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867394899 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.865364029 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.865774941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86630415 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86712886 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.865621534 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.867090014 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.86601358 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.865851029 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.86577067 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866357102 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.867655718 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86574396 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.866546082 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866428953 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.866972564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8667738 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.867220573 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.866092331 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867615878 seconds)
  done (took 40.98838274 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.870684829 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.86837054 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.868001653 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.870162919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866993446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.869805631 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.868169198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870479677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871149443 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.868124642 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.870433366 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870137721 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.867156621 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.867070711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866612811 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.869366552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.869130532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.868280821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.87054918 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.866065379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.8694598 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.867435657 seconds)
  done (took 42.90714369 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.868724785 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.869726225 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.869635292 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.86589828 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.869997442 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.867416028 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.869850572 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.872227764 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.869207866 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.8677343 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.868393726 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.860790217 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.867036224 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.86572397 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.861645963 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.860975555 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.002858049 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.859349174 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.859355142 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.8587881 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.85722517 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.865053699 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.8567618 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.856248697 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.85777105 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.85818599 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.86080467 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.859579636 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.859697594 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.861532269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.864308655 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.860399721 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.859219596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.861645781 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.85817322 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.860373481 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.864449952 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.859749886 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.857033511 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.859366936 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.869271375 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.880454067 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.859993226 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.865889506 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.859310184 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.859482074 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.863427392 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.868164247 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.857553011 seconds)
  done (took 93.232577398 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.860524332 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.860451074 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.857489513 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.86111952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.860231043 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.860056433 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859166115 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.860471383 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.858415598 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.857545851 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.860430222 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.857693397 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.857820796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.860570444 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.860699413 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.856759134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.85829221 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.857421687 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.857519486 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.858649354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.858098253 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.860217121 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860247303 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.857023601 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.861078488 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.858051883 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.85824239 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.861194774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.85727856 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.858374226 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.861131981 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.860768219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.860092376 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.85824844 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.858158354 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.862538594 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.861232113 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.858453917 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861083517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.85826102 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.860199675 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861052815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.861494656 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.862270513 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.859405037 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.85697049 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.858003625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.858481618 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.859467765 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.861522323 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.8602569 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.858813727 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.859433389 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.856240115 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.860037456 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.858859908 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.856721392 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.85826535 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.858174349 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.855748574 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.855810608 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.858218168 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.850986732 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838296019 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.837852801 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.834648936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.83442488 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837486084 seconds)
  done (took 128.085196067 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837796208 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.837394629 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839069498 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838494239 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839783047 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837974724 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839568909 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.836057126 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838434647 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.839272535 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837286785 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840185062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.839092206 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.838312931 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839436024 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.841049751 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839312832 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841529448 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.83859456 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839716083 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.842396783 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838079072 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.838090071 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83888182 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839342421 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.837644503 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839205791 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.839679073 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839619406 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83891728 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838820232 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840686036 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837378494 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839580091 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.839158928 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.838840494 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839137443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838718428 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.839145877 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838271046 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.840391808 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838207684 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841623376 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840344645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839348511 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840059055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838560375 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841002755 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842307223 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.838590212 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.841044793 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839204335 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840616595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844172217 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.838659473 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.839908313 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839433862 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.839611419 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845099093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.839714382 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840116957 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.842349613 seconds)
  done (took 115.811234076 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844637857 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847542018 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.835048181 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.837625511 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.838121822 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835189355 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.84117105 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.839285607 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.839076325 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.839431495 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838183041 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834161637 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846588909 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837363528 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.834108538 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836279552 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833481692 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.837659656 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83881932 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.834680925 seconds)
  done (took 38.527184934 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838228219 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.838327925 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.837841934 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831565479 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.835657235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830216828 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.837014201 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8427093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829690335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834239444 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838193125 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.835191413 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833621105 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836839169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83909748 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832818092 seconds)
  done (took 31.131603706 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829806237 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.83583614 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.833158838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.837069995 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.832853672 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.834208577 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.837050475 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83160768 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832119049 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835523764 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.834288333 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.836093386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.836329577 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.834392982 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.834030723 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834654958 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830190941 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837484079 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.831350893 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832590397 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834717395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833089134 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.835389612 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.839188209 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.831034146 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.830856316 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.828702694 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.835027431 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.837684671 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.834128589 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.834807493 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.831066888 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832754104 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.834606814 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.838854467 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.831348257 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834093171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.835945125 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.835001468 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835969458 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.834108214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.8319003 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.8339896 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834305192 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831123196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.839546532 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.830715221 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831096883 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.831865991 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.829770952 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833511462 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833064575 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.835832828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.836212995 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.834302022 seconds)
  done (took 102.624255077 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838065472 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833867358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831569621 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836540305 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832586514 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.833476709 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.831642097 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832738353 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83258569 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833636858 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830105334 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833611814 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829449884 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834624147 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833009334 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833221828 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831868334 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829110342 seconds)
  done (took 34.743833928 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.832558543 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83184698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.834363352 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.830719585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.831346074 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830380638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836424534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83470411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842215341 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831625927 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833067947 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.835738088 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832287878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.839212428 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829714996 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828844017 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.836169144 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837167037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830907863 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834108386 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.830785177 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835480124 seconds)
  done (took 42.093246075 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.835042146 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.835731797 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.853103151 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.852920659 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.85597826 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.865066354 seconds)
  done (took 12.848140164 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830509225 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83398878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832033524 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829839486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838527518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834983299 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828834763 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832140983 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833392282 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832918506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830659412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838482118 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83513044 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833463884 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836721349 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835677098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835574739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835846545 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831559429 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835877707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831698764 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837081976 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831453499 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831091276 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831710246 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832908072 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837480901 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834891313 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829890649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835125688 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837017656 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833733479 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833327766 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833264016 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831984784 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832183878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833937615 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835585816 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840331858 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829611117 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833571839 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835720479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83757631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83386849 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833624293 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834225534 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83008985 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830920144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832411992 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83786723 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834827806 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831455287 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833312225 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832181017 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834742899 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835913021 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832810214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829123654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833075461 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831180861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833535297 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834392961 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83043529 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831461036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832251352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835611845 seconds)
  done (took 122.769447024 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830052428 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833939883 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83312407 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832488213 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833241843 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83417746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834092637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833103667 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830898184 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832957096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832380884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833965774 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829222715 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831839451 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831529006 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836077911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830397476 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831972392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829937084 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834787587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833353683 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835682044 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831394734 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831445912 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831732697 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832329209 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835280824 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831151506 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831805933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829728165 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829807494 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832615912 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831170957 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.832115023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8269169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829596136 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831597715 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830292253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.829590048 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833158697 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831194931 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833448749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830670921 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832359854 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830669626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833155769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834325579 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841446677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830134938 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834348503 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832128686 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834429633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833042038 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833200246 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830663796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831449906 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83085231 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83168737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8389749 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833968309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830846437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834148416 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832437567 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831031412 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836652736 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832623507 seconds)
  done (took 122.69706467 seconds)
done (took 2561.325141894 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.877357153 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.835754704 seconds)
  done (took 15.467763424 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.993883498 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.944711616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.833044787 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.83977321 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.831072601 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.857995331 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.851705188 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.830879018 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83245136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.832022962 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.833735165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.017422676 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.843065936 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.835358802 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.837036692 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.923628162 seconds)
  done (took 51.697136431 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835786033 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839427169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.849623822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.846548205 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.835386832 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.847583597 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.870549851 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.83754245 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869057888 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.848967012 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904026895 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.846798465 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836609582 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887109924 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851418518 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.852407676 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.92897393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.909119202 seconds)
  done (took 35.253537435 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.913543228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.842936508 seconds)
  done (took 10.519382258 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.833877124 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.876334948 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.898010181 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.831350565 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845476801 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.845007722 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846429101 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.85182757 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.841590431 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.838664515 seconds)
  done (took 70.272188184 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.849559196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.83716295 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840127231 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.835263275 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.832194999 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833975348 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838596368 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.83108288 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50022712 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.870458423 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.84402624 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843764216 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.836615448 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.842896369 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835947038 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.861002636 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945668132 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.834460121 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.839263148 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.843922974 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839265573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902420332 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85206618 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838827929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.873863975 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498311898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84670456 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.842451857 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.940483842 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.841982362 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837717971 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.838167022 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.839985881 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237904142 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.11943317 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.835375344 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.854310526 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.845113148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.833324018 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976848764 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.839597615 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.846023706 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.60204183 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.092332764 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944317907 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.877581526 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.140394627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.851500902 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.839505997 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.875681557 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.841233297 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.843442452 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.850928453 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.333041623 seconds)
  done (took 130.630122178 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83850314 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.187364691 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.007038016 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.836757685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129037431 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.048429988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8406112 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886877554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.835683525 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072131164 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097612946 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94259796 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.837309502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.836473147 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.837929971 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83364419 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.993676216 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907386004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.834300195 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.837538879 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868155978 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089398659 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960875696 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.840326198 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.869073967 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056918414 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.957403856 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.947928859 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.630138229 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.840792445 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905328557 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.84307247 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.840688382 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840222361 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.995280413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.933211885 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.931071553 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.840352202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838060768 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838319464 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.504179861 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04346785 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93361482 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979599219 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.041507339 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.04637337 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.623748559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.840053793 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.585872535 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004874644 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.076448043 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.086996238 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.965165086 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846195734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.378942945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837856704 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839570034 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093785621 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988180183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940520854 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.844286241 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.841311209 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839023371 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085282 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.849185545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936139697 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843505932 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.842652549 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942706881 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940827637 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.978750593 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054427022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872456087 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.800635882 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.379811669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098018206 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.912068064 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.093496661 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.845506242 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838559124 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925027952 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.684911224 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10139426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092267103 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101078889 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878151183 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.572400029 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840939546 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074259568 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.06588851 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.120428394 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.054001169 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084861049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170119925 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.845932348 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.843859345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.065709292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982188262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.845279217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190453399 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078517301 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.436661863 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86592904 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.155197377 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976184998 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.851514905 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.487005827 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851445344 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.080306126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.888574326 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.85116604 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.846507618 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.067712124 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.839113309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847409064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.489307612 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.909765024 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844511797 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086010526 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.847485861 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.122698853 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.846394417 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086565329 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.846052271 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883614868 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.075841999 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050524205 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.844496397 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096031905 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.096341505 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962999329 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065660396 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.549737032 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.84551991 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14416772 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.847287665 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.848504811 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.01929885 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.850207284 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99132439 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849907252 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.146976573 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871470223 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.084361291 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.848153143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10718575 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880716617 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.901005247 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.849877332 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985405433 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.85012565 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775272877 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.010168409 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851567594 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84989464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.648748676 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.84644727 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.999566103 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.089533761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.874363077 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.923450295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.519668818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.848475113 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929043434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873006137 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.245873012 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.847520267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.104123021 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.849548654 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851481 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.849265147 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091461273 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.035149941 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852840189 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.848124272 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.75911624 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851251817 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8532282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.034106741 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.285682289 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850452842 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052006354 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851066307 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981213617 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.849217207 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.931948624 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.195845199 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852606809 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.847198206 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.852608658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.855753235 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.852661556 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.109517184 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.877632038 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.366964703 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.991763937 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131693161 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.161979954 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.101217054 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.891393884 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.85497051 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.107463357 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853871922 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.918883407 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.849295603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878274681 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08702208 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852746174 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066704394 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.134688303 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713227663 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.899593693 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.852753774 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.850245417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.849027801 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000466477 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942618042 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.850056232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.851873058 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970576684 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.9733075 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.065865424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.851776838 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.937013862 seconds)
  done (took 898.280626445 seconds)
done (took 1213.874181217 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.85653864 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.851001205 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.83684595 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854788317 seconds)
  done (took 29.176352379 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.863708848 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.858489834 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.855917117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.851883775 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.855734324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.858505045 seconds)
  done (took 12.921488756 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.288607014 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.854107015 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.849008546 seconds)
  done (took 21.766166317 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.924999903 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.242085529 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.965118144 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.277337335 seconds)
  done (took 10.183187044 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859757154 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.856173104 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.861091011 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.861099778 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.860127775 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.859064038 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.857892283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.861699333 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.865032183 seconds)
  done (took 18.518266255 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.002376254 seconds)
done (took 98.341674376 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.955073186 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.922258547 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.99165345 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.217636976 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.925668255 seconds)
    (6/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.856814609 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.95436893 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.035823273 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.95983406 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.032280585 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.124689981 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.865497148 seconds)
    (13/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.01246619 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.876623596 seconds)
    (15/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.938501423 seconds)
    (16/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.85890901 seconds)
    (17/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.037218814 seconds)
    (18/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.090507258 seconds)
    (19/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.078310097 seconds)
    (20/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.926263812 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.024532547 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.927239971 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.763498012 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.855511249 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88279477 seconds)
    (26/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.99659791 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.364855703 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.404465822 seconds)
    (29/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.855380174 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.004433288 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.241994647 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.946375607 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.659133179 seconds)
    (34/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.145782822 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.840816647 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.135665966 seconds)
    (37/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.73714587 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.845543356 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.286065354 seconds)
    (40/309) benchmarking ("sort", Float64, false)...
    done (took 5.591330816 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.890945032 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.965981458 seconds)
    (43/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.949287516 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.489721305 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660160053 seconds)
    (46/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.418783981 seconds)
    (47/309) benchmarking ("sort", Bool, false)...
    done (took 2.083781657 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.213248609 seconds)
    (49/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.324816038 seconds)
    (50/309) benchmarking ("sort", Int64, false)...
    done (took 5.587004273 seconds)
    (51/309) benchmarking ("sort", Int8, false)...
    done (took 4.770595305 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.116435571 seconds)
    (53/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.263707334 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.974630804 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.27202511 seconds)
    (56/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.358619622 seconds)
    (57/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.531870998 seconds)
    (58/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.024280441 seconds)
    (59/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88172387 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.907997119 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.84961127 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.349026878 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964375178 seconds)
    (64/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.028069609 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.335020497 seconds)
    (66/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323913805 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287490643 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.876848333 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.151865042 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.062406376 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.93536913 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.235327021 seconds)
    (73/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.86040851 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.977327249 seconds)
    (75/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.894177355 seconds)
    (76/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.047457118 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.189672768 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.879578104 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.154374483 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.875873874 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.922656205 seconds)
    (82/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.905451809 seconds)
    (83/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.944558578 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.444726764 seconds)
    (85/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.877517171 seconds)
    (86/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901019929 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.890263858 seconds)
    (88/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984993713 seconds)
    (89/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.24722178 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.272806321 seconds)
    (91/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.898299953 seconds)
    (92/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.957034812 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.880987249 seconds)
    (94/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.939808128 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.970024054 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.079345312 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.941868206 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216471344 seconds)
    (99/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.123414476 seconds)
    (100/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.289187226 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.895191857 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.89084514 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.876720684 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.298672467 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.094964883 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.900849191 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.897401896 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.022278802 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.082656376 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228452847 seconds)
    (111/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265294079 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.843966867 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.919930496 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013479295 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.589840694 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.888874882 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.275858981 seconds)
    (118/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.200436189 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.903447219 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.112095245 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.948067829 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.876851889 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.064770987 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915601138 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.052160243 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.004133937 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.204780565 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.957949709 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.442198756 seconds)
    (130/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.883319307 seconds)
    (131/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.147513352 seconds)
    (132/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.064474119 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.869029151 seconds)
    (134/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.357105162 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.125821386 seconds)
    (136/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.193287972 seconds)
    (137/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.883954501 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.260413179 seconds)
    (139/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.976781086 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.891264478 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.946470593 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.024714857 seconds)
    (143/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.216590558 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.929555699 seconds)
    (145/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.326681141 seconds)
    (146/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.90687401 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.52871563 seconds)
    (148/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.982885574 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.221697125 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.172243717 seconds)
    (151/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.968924244 seconds)
    (152/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877258241 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943819343 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.305960232 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.878190057 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.117624142 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.2096712 seconds)
    (158/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.013319688 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.182268228 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.906311196 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.94895699 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.841405307 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.57005412 seconds)
    (164/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.002360805 seconds)
    (165/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.267861733 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.868524108 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.103511887 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.896114791 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.9024429 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.174547282 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.384035054 seconds)
    (172/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.880238273 seconds)
    (173/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.591106011 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.045678958 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.528289926 seconds)
    (176/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.896896073 seconds)
    (177/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999717892 seconds)
    (178/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.061250192 seconds)
    (179/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.944432819 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.906951425 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.875516094 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.28759836 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.880057764 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.387011029 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.130437037 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.195635794 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.716677614 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.81681634 seconds)
    (189/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.90080854 seconds)
    (190/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.98030806 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880937474 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.950382605 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.189837166 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.379399528 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.303037912 seconds)
    (196/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.422341381 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.898688381 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.826456022 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.150083446 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.79436851 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.005103221 seconds)
    (202/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.985335882 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.922370219 seconds)
    (204/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.794865254 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.12215654 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.173097228 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961752303 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 5.627561527 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.045365402 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.033407966 seconds)
    (211/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.122491668 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.732652734 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.081614364 seconds)
    (214/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.382722325 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.741197394 seconds)
    (216/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.871093901 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.170729696 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.884233298 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.069416019 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.870035609 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.248136925 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.884750639 seconds)
    (223/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.228605989 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.862742228 seconds)
    (225/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.92050247 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191398661 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.125727172 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.028573958 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.881809641 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.749854146 seconds)
    (231/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.129925555 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.981466732 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.061409613 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.88399213 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 3.371964195 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.886115487 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.124496366 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.577845593 seconds)
    (239/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.966970509 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.023159185 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.874080933 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.117656477 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.157856554 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024368476 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.824169164 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.042955636 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.029423617 seconds)
    (248/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.982730332 seconds)
    (249/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.869415022 seconds)
    (250/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.878214446 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.191042973 seconds)
    (252/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.030573795 seconds)
    (253/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.147122534 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.887037442 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.835670774 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951637212 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.076759762 seconds)
    (258/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.12742138 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.248332416 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.03815974 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.015751152 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.142704423 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.88667166 seconds)
    (264/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.990136372 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.872273515 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.886222218 seconds)
    (267/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.883848478 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 3.2768399 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.10093693 seconds)
    (270/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.883276072 seconds)
    (271/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348013666 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.235912282 seconds)
    (273/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.870583248 seconds)
    (274/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.253664744 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.131881949 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.880762358 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.923403943 seconds)
    (278/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.37826059 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.166595014 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.88168056 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.122368245 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.195228897 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.627873777 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.02612578 seconds)
    (285/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.733920018 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.255010518 seconds)
    (287/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.266154411 seconds)
    (288/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.000590041 seconds)
    (289/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.999154027 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.154579085 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.700170144 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.008767551 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.916816371 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.913430913 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877058916 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.016475977 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.046038131 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904765152 seconds)
    (299/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.906136886 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.006544406 seconds)
    (301/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.979351665 seconds)
    (302/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.29479542 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.021468197 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.890655907 seconds)
    (305/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.070255538 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.113343168 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.075996396 seconds)
    (308/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.987978218 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.877135503 seconds)
  done (took 1011.448668786 seconds)
done (took 1013.292402816 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926846432 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908545753 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.901452955 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.923286483 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.014034468 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.930691424 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.913673421 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.902302608 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.948929055 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.950523498 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.900903966 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.926928107 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.903260462 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.903501598 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.901212925 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902308728 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.216969612 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.934460802 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.918256492 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.910370208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.923963672 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.901698465 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.950254075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.930161103 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.906150951 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.910572467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.904918899 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.921932076 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.016497598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.906866208 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.904923638 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.917011702 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.215940467 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.932071878 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.89835225 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.926264944 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.914997244 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.91233439 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.907280031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.936124574 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.303097425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.945563162 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.905584851 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.90478778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.903569879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.907067695 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.90886899 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.911187055 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903095683 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902455691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.297319198 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.962391629 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.90690716 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.906027139 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.915822662 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.906325311 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.907900247 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910296124 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.924565175 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908708496 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.201917292 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.941492429 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.908877566 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.922568958 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.910971075 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.332352174 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.943419765 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.910097696 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.301758682 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.952377504 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.330870597 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.956835574 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.907074094 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.918409624 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.937098546 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.219075908 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.932780056 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.905879538 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.914364423 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.902682231 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.915419389 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902931889 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.912783292 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.90715136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903984894 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.933565503 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.917229493 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.907055449 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.915395871 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.926229938 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.916557045 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.920703026 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.911636215 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902869995 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91662451 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.910482871 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.90909038 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.909459928 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.911669172 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.916550304 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.303370876 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953365002 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.905958252 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.902901041 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.905471851 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.921579161 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.305131109 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.95004632 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.928320624 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.95438372 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.908311594 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.203261972 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.941754659 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916446568 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.917182198 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911933746 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.901739771 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.206322485 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.335247029 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.962559289 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.908566823 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.90661965 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.914831377 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.908220068 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.905419293 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.221418996 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.94243339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906983462 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.02982149 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.920627482 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.941383404 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.907719099 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.913553472 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.939187896 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9166508 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.938236021 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.911577507 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916853048 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.926128954 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.906583223 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.920005884 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.92150397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.917289497 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912824334 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905255132 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.941661225 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907968895 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908264645 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.932551154 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.032622592 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.908870118 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.206946381 seconds)
done (took 299.360422059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.986321719 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.909528834 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.006098499 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.907246763 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.991328138 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.997161292 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.908047485 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.905083639 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.902753281 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.326287058 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.906008582 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.911243688 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.9052485 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.903015295 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.993692377 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.906244143 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.903091014 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.286156224 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.906839715 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.999392302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.908457711 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.904014496 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.909743744 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.368664548 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.903692492 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.908611038 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.002665411 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.911371492 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.3155749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.899886366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.906388075 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.317581573 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.017343185 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.926363943 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.917138104 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.915437518 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.992247799 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.914448645 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.996286237 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.994498466 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.006755809 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.947744057 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905631592 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.903577082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.912805107 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.911023712 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.906749937 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.942016021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.910233082 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.906196931 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.28924959 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918324924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.906642148 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.907242608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.906668306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.942591463 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.907448177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.909752108 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.021941994 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.912139369 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.982815154 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.440042936 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.327537316 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.909138342 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.90987876 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.908383811 seconds)
  done (took 187.5683263 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.005543384 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.986413197 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.006758426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.913006849 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.957133803 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.011209541 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.913525766 seconds)
  done (took 15.618780961 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.914194382 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.911630715 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.964882302 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.958721304 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.911945971 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.059181969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909001733 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.921341928 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908127792 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.961905619 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911204757 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.907916307 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.918257785 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.911049506 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.959582605 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.922307849 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.026834201 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.909803415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912771321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.060466427 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911345493 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.918591556 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.967104011 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.922133843 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.91275202 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.917212887 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.512206427 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.913161454 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911837971 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.912306753 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912857794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.954507466 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.914499318 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.909444885 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.912285422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.027336661 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.913855328 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911603578 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.912837998 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.911444308 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.912839424 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.914743607 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.914297629 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.91095254 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.913488152 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.936325457 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.914134161 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.911785646 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.913658859 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.915257119 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.965785732 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.91551681 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.912666425 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.909443998 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.96732075 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.922160369 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.91920889 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.912342277 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.913847446 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912262483 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.062018932 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.964049089 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.915448497 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.96381764 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913741082 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.914722688 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.913720005 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.91783699 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.010361477 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.914617806 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.973624431 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.913474451 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.078190397 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.93727045 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916124428 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.919122504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.915972888 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91761687 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.916245934 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.92288921 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.917763691 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.918672552 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.922069317 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913398103 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914934003 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.028860448 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.022881206 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911489206 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.930208243 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.921050946 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.915414625 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.966490509 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.914332198 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911945185 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.971835531 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.032275079 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.971209048 seconds)
  done (took 210.162419902 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917604498 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.920869329 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.915127654 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.933647447 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.91504483 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.914222102 seconds)
  done (took 13.347973077 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.917034954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.917275278 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.918147298 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.916115311 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.915747729 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.915352321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.917011129 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915687057 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.919131021 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.913969821 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.91619041 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.915512255 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.916552926 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.917362095 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.916769258 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.915557295 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.918525669 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915509621 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.914905071 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915085534 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.06781 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.917534147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.915655547 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.918610408 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.920165003 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.917000206 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.923791653 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.914489597 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.918994625 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.923828745 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.919920468 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.919045311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.917530708 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.922619423 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.92234568 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.919836299 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922793734 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.919369986 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.913406703 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.92069161 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.91803403 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920157518 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.920201876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.920813199 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.920533827 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.922166283 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.922421757 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.92707268 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.919008891 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.92044498 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.919739789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.916939166 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.92188837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.921796032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.922750098 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923239936 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.923333708 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.919889943 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.917596112 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.919939458 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.921025314 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921175212 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.919826999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.925860045 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.926726542 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920466397 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.921039198 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924673479 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921991989 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.920360211 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.9199179 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.918260396 seconds)
  done (took 141.176379374 seconds)
done (took 569.714661328 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.135814034 seconds)
  done (took 8.970170865 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.064541451 seconds)
  done (took 8.944947826 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.435799003 seconds)
  done (took 10.276502961 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.94428024 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.953565118 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92412131 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.922410522 seconds)
  done (took 29.604915653 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.066153007 seconds)
  done (took 8.903043646 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.942006675 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.914423773 seconds)
  done (took 15.73111622 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.09113697 seconds)
  done (took 8.930251966 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.007773507 seconds)
  done (took 8.862362984 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.927231663 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.94528036 seconds)
  done (took 15.717891804 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.894986457 seconds)
  done (took 8.727379063 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.740555779 seconds)
  done (took 11.677003159 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.931829862 seconds)
  done (took 8.874811374 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.92627341 seconds)
  done (took 8.758803618 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.02885812 seconds)
  done (took 8.861812178 seconds)
done (took 164.675762175 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.912768537 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.908148986 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.907304276 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.908029801 seconds)
  done (took 29.468038936 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.949822032 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.949815061 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.951312921 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.962451271 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.953246024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.95013467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.940640519 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.943709937 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.960214228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.953991003 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.953303387 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.953410933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.951109904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.942686777 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.952605255 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.951952756 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.960899799 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.952472722 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.942437805 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.953732262 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.916137071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.961659485 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.956338065 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.917826755 seconds)
  done (took 48.617330575 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.113849712 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.99087866 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.071282884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.971263303 seconds)
  done (took 9.981259763 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.970214642 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.972414306 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.982227944 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.022902087 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.044134013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.981808864 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.94735028 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.938926776 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.928157454 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.974152007 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.047009112 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.966736308 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.076735594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.92013645 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.102722193 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.91774764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.918194278 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.971775236 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.02270458 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.072833329 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.916809234 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.968446716 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.97499618 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.967691921 seconds)
  done (took 49.441932031 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.919262452 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.926598369 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.923489261 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.918607422 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917495534 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.920080357 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.92371216 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.920534148 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.940313834 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.919063076 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.917833769 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.917986243 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.917981061 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.918372243 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.919333253 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.933193307 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.93183642 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.920009154 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.927021824 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.925470201 seconds)
  done (took 40.295186814 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.917131784 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.768454266 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.266417067 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.170388196 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.915450018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.916544757 seconds)
  done (took 31.79035592 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.93543746 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.927624283 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.920866674 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.976493757 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.061381402 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.926041985 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919873762 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.931936129 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.96727261 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984446017 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.941975433 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.94949197 seconds)
  done (took 25.280901823 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.920792372 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.922690158 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91688822 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.937173026 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.932713803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.928051941 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.929594759 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.91661519 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.932306667 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.938282415 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.92844938 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.932178578 seconds)
  done (took 44.97862403 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007501779 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.806208895 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.586170042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644229714 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45273653 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126844708 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43965255 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.088552153 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.919558259 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190629829 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60566068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173994238 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.173093718 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917960118 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.988829572 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.416870224 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221943452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177375475 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950759917 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651805962 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048030582 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.466955771 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.740884431 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055331224 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12964748 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.05277318 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.180177102 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.876806741 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061305454 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959079424 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930464233 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921928756 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192102962 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144232375 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048642931 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931080548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575235398 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.635422517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.958569824 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.65643472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.707808075 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.063394515 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929776341 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921231131 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854117319 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464552635 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096815026 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.923818868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.62247301 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921244903 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93353498 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01137128 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.924983607 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.736532067 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872364538 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.198555983 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.918341844 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925558367 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.499101577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.062431089 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.575821673 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.858511643 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.014601468 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711710617 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.411633374 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.082245109 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.922565806 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92535451 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855365711 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.647204063 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054919253 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066087042 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.937882659 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57103834 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231516747 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.679523755 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.015680607 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226775948 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.744591947 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.857348531 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149503752 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878874827 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855527072 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.781262526 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857082986 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209249436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962505239 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.608901341 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968909195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093417957 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931929944 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942175015 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929820852 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145708939 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.804620466 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923776844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.555507706 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21688236 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94328765 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096386906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856966657 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.925215174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176671506 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.134589095 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.18666667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415822838 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090240383 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923632717 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.011183376 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.862170329 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933646426 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.217721963 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991987601 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.065903387 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063502785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.880684943 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247056053 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954077004 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.099412517 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.603071388 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201151172 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.276334717 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.182497313 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008664303 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930691898 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925295339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.718965685 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.556456388 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.148368521 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.925675443 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443773669 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.932871121 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.926969933 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859566557 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.54385335 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.618215588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.041790278 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149575287 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.804401207 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327681427 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861466333 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069197512 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039083821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.146484518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.591695348 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.011502673 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184966584 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317192406 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.187305869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055561895 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944697529 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044915249 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946381285 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.251564245 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285896668 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.929136785 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.930424896 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.755150686 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.01253474 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930137728 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.931040797 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.726894685 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223609032 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.961356005 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.92625397 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.864859139 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.940399874 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010813494 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933658796 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937707362 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.452744276 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.676717606 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.936590588 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.584089989 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158123001 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936531378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.710118423 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128805603 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.01272942 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213127845 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999870481 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.860427707 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.639306503 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.629810668 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928796191 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863856162 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.930113619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934599946 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940035354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.152366457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226572468 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982200901 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.677648682 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.051576998 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936985125 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.93599039 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929950375 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.431381176 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.076985207 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457797627 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042783767 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065373248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.941381832 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86274052 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933253406 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930722597 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929248537 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.885005952 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980570411 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.720510186 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272838565 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185870631 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.577020698 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944343021 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.737738964 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.067547999 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.953229173 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.574118257 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926339513 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.027409402 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99180522 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.939933971 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.721998045 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.711746434 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498369948 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258290441 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275574907 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394507326 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.328467512 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.262326656 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106443713 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163639764 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.459641998 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991332954 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107321383 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875322757 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015405937 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.594365118 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292591939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947972402 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15780006 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33120586 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.628196368 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106422769 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141609593 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965288275 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.762228999 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963573862 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.450434056 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087201035 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.598962581 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172629729 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101397972 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563814084 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053108277 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.928209545 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420785292 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019603353 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.641523451 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.292886624 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.475882554 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.633021808 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320003093 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930715431 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.378299669 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309647507 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.285690844 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.02073314 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865999433 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944644586 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941371689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.931918343 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.912060971 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.828942264 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.205950106 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942521977 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16605374 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.222217291 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220702582 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.845253204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.937855922 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932941065 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251586323 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.632976392 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175481558 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.280208975 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.505961234 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937563369 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.865939985 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867525416 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.636656647 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942761481 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90861452 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169675381 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.047420089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886033654 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.33615996 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249324272 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187953352 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.945338615 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.221690396 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218931188 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.670879905 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961329676 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.033771643 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561383576 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.692585803 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.155395426 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.168294776 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73323 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162182476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.605434828 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.913529103 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.934685569 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148031006 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156700925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.645120766 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198590263 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.658952673 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.950027092 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30610347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002339895 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.622117053 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.160967776 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.028258574 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945167366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016048978 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945498859 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.946802801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.946844204 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980182289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626156045 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.083126256 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.950523508 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026278267 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.080431043 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.527937381 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.944833367 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227875366 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310598007 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.296579042 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005981553 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935758618 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937684776 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872669532 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070972654 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380480407 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.2095619 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066671692 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.074341059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961160011 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561437867 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254915887 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248231788 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212689303 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.829333852 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937037624 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.024743338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.161817468 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946762162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.146408613 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179345242 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279409916 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411727702 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.086916102 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213910693 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208787754 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.31083753 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940701875 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527838404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.945565342 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.47527581 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.982791293 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.629545584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240334493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948764484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162085403 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960949413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.133042006 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389851602 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703019873 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30896946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.943266036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001694833 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240218567 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366938556 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261426572 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019021067 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950154356 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.637359655 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079150073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.884481683 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198115495 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940355152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147032124 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.652079505 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948925954 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237415315 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259676422 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.937172039 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.903805486 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99818167 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.948826728 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163752433 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2298502 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195352973 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947741272 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.948768786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.755068913 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.237013544 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009543505 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881186379 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.948124591 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047820807 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192771229 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966068012 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.464056409 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.649559713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269966881 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.868374991 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967042499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375689902 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418951318 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303747459 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.477333549 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195503437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.509042179 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.80985302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.322755337 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.953195566 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364038034 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.326993346 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.952452652 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463191808 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059087515 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.233804744 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278955361 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.965867493 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741483658 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.001816612 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171799735 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54053212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886632111 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.950276455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.009669871 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948272008 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.077840235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957270462 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.949013513 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831563797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.786191755 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44055743 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.951509259 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.049746772 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.53995573 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.532018885 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057618557 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103639091 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958581149 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.651437654 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.241317809 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203030029 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460265055 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.019548576 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.95112979 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950102945 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878316283 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144007918 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.146207095 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263622476 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.302416609 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.058710875 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.954046434 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.163583181 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160473145 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.607576921 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12047882 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352207115 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062081384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.877908222 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.666424976 seconds)
  done (took 1711.943624046 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958887422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.964367161 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.968275948 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.990383385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965196115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971842953 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.026731903 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.048196119 seconds)
  done (took 57.764456396 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.957082464 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.99324145 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.964113737 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.955112653 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.981260319 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.958086624 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.137902809 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.966895292 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.977457817 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.966528276 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.957241813 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.96935599 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.248654647 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.97633076 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.955520998 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.352853408 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.958394318 seconds)
  done (took 76.160312476 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.954069673 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.28763157 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.973013096 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.977910271 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.938527414 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.957644015 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.007219612 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.987231997 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.959764868 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.134036169 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.287076196 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.964471149 seconds)
  done (took 91.301545293 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.97613336 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.964203929 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.965645965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.96577974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.963119808 seconds)
  done (took 11.720801115 seconds)
done (took 2230.591454549 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.347614079 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151838763 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.182834399 seconds)
  done (took 6.214110984 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.099074108 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.146751483 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.266522929 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.273371503 seconds)
  done (took 10.661533942 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.272115741 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.327615749 seconds)
  done (took 6.472177627 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.287258264 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.987981786 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.375366074 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.952627934 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.953343169 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.953561374 seconds)
  done (took 22.737280281 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.957218067 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.960528516 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.958567325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.960409338 seconds)
  done (took 9.710722002 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.939089554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.653859496 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.941450264 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.954281414 seconds)
  done (took 21.363479226 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.704454584 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080907172 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.700547165 seconds)
  done (took 9.358484731 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.541136387 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.171477995 seconds)
  done (took 9.58643818 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.117127363 seconds)
  done (took 3.991682646 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.987181487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.23007454 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.476446187 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.488654663 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.585514783 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.806921335 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.275787062 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.190923193 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.406656586 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.420527989 seconds)
  done (took 25.744398586 seconds)
done (took 141.71464039 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.304758963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.979054763 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.161037605 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.316460734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.193646948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.163561265 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.176422751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.306526803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.000017725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.983599617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.320518832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.188235922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.121226439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.975702346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.125971137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974446121 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.186337505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.323555656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.001627195 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.232491126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182721073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.962904138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.155400148 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.976113633 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.186734107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.15213363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.508578632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972606475 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.137194911 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.51079728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.103047102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.369782757 seconds)
  done (took 171.128499402 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.947694337 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94090748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.937794397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.936796477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.483315419 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.934473717 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.935520105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932167708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.376617688 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.364300687 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931025539 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.469856366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931372213 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926550209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.925301351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926750684 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.512438929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.924777856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.919141951 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.915133201 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913322959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.286432492 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.913806921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.290682936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.497278243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911448617 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.907366062 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909640568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908054673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.909724061 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.909941716 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.909424959 seconds)
  done (took 211.309187116 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.91131084 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.909585018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.910905939 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.909841069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.911190534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.91053074 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913757413 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.909947219 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514875211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.512182829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.911066337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.909362475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.91011345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910222063 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.913386566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.909875402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.90845569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.909760215 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.910337935 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.909121308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.915871825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.549140414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.926361945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.570595018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.92318206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.917410824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.912542563 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9205495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.921653063 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922641425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9236952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907078126 seconds)
  done (took 221.557725558 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.164427169 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.914120997 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.914587922 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.846149565 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.915729361 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.914903826 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.907729223 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.169644931 seconds)
  done (took 19.598703087 seconds)
done (took 625.47442437 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.388344078 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.230262251 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.09409898 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.939122194 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.182118914 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.969442651 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.934768269 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.000431607 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.549701783 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.005544342 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.597922899 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.96026315 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686315211 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.965610814 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.054881878 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.994548635 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.517669399 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.605785875 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.111478386 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.00831371 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.103958548 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.86834823 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.022288108 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.5919176 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.704586007 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.916704178 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.014876904 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528086698 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.944947799 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.096847987 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.704380871 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.250027485 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.953082368 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.933945465 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.991775232 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.967991035 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.214201279 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.950691492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.057304098 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.672798025 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.014278326 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.461111329 seconds)
  done (took 104.589317678 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.905383801 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.903253686 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.902320828 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.904539284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.903438325 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.904179991 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.903112897 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.902551102 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.904280806 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.902098235 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.902834072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.904004036 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.903879038 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.903835958 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.904457582 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.902489605 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.904376325 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.905313378 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.903140904 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.903057836 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.904573227 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.903012023 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.920043993 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.903179702 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.905373619 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.904636442 seconds)
  done (took 51.355747653 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.917296264 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.068179831 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.159660482 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.943066 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.916990152 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.921122392 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.935478016 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.92367722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.919643288 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.920286649 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.012798614 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.928083588 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938077933 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.16054914 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.936780804 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.919952198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.920152894 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.916721998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075700733 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93616311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.939161634 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.92493173 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.938724684 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.93184799 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.921846779 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.920503031 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.923329351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.342541538 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.929526084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.015464467 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.9660074 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944487374 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.288869633 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.1766003 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.97789289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.927587999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.920105229 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.017808817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.926473041 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.919700049 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.937346331 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.924751611 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.159233322 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.41973802 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.93671597 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.921032698 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.352052848 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.027078066 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.960901681 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.930517178 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.16411187 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.938777386 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.921747943 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.921255455 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.956262952 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.927718288 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.918585356 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.213189084 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.934119167 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.938433821 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.927438155 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.920889777 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.080793572 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.931932079 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.07264368 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.931851713 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.927364099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.923005306 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.162334798 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.938952027 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.412490579 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.937922016 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.922600756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.018264206 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.077849503 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.383887735 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.936333686 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.085093897 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.310522383 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.948331413 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.930713463 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.334953681 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.951876498 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.931392811 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.924717957 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.927699873 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.924969087 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.966697657 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.937435895 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.347601269 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.422373924 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.232509943 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.948716719 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.937009965 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.923553081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.21530273 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.933665794 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.922282557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.157835629 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.42715464 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.937116211 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.930790471 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410325978 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.940116542 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.941848265 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.931764271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166357185 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.94112108 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.967422583 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.92246193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.929770133 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.925347622 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.94080589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.930369229 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.925254779 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.395085072 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.037007779 seconds)
  done (took 237.784377073 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.920876797 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.940045013 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.919711044 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.942687513 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.918535243 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.923237385 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.918997055 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.917969396 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.924051405 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.918487229 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.918887355 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.920059454 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.920109999 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.922149446 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.953309854 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.938034674 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.541628849 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.932233276 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.932442437 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.94273418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.587017827 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.939337014 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.9324544 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.936172762 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.942017923 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931557422 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.936837091 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944414031 seconds)
  done (took 169.156769648 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.939958109 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.05419147 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.95775099 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966205557 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.946340574 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.935671587 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.959902156 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.954254739 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.943359936 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.936673752 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.936063857 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.000110984 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.95016969 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.037721016 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.971025857 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969333475 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.041362852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.947890569 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.93783797 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.937319846 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.967102309 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.934002191 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.999722105 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.065879448 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.95843565 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.056100245 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.945233896 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.940728755 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.938996759 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.058207361 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.95617508 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.000217971 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.968405395 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.960985489 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.062082168 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055981697 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.04576283 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.970706468 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.942456801 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.938475199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.937699338 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.926824614 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056376114 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.959833389 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.940578828 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046021907 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.95953349 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.941124598 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.949794075 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.938777475 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.953300456 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.957308012 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007262387 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070584 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.975224697 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.96420886 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.965074121 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.231420182 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.947169718 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.039293057 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.936014484 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059856754 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.961452279 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.927862233 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.940837254 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.946864754 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.970095711 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.972045975 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.044618353 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.950622232 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.040279313 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.978206654 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.947092761 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.941556265 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.942936887 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.056728257 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058399739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97871537 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.977804172 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.972544149 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.936012668 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.941279021 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.930017636 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.958008499 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.945100262 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059535036 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.058355245 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.95146119 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.942196631 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.943495979 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.943708567 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.966903125 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.065694056 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.979081559 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.035309765 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.011646337 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.016935738 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.95766623 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.956813461 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.946071343 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.005082008 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.957766071 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.95360784 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.282321926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.011308296 seconds)
  done (took 210.071564748 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.41362243 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.998698026 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999212887 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.278866291 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.292292157 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.968997092 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.988476886 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.991442117 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.015355754 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.18439895 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.064813226 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.010163009 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.979119222 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.964865958 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.992239947 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.013477956 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.00147174 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.309014878 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.099254186 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.156417992 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.974292065 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.306710067 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.270542309 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.401839529 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.027719064 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324908544 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.66148452 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.134074225 seconds)
  done (took 63.686649176 seconds)
done (took 838.472589703 seconds)
SAVING RESULT...
DONE!
