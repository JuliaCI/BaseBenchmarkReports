cset: moving following pidspec: 14121
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.269610791 seconds)
loading group "string"... done (took 0.6196681 seconds)
loading group "linalg"... done (took 7.512186131 seconds)
loading group "parallel"... done (took 0.153029149 seconds)
loading group "find"... done (took 1.189714177 seconds)
loading group "tuple"... done (took 1.776236841 seconds)
loading group "dates"... done (took 1.246661939 seconds)
loading group "micro"... done (took 0.215686237 seconds)
loading group "io"... done (took 0.901485735 seconds)
loading group "scalar"... done (took 36.903438938 seconds)
loading group "sparse"... done (took 11.649667073 seconds)
loading group "broadcast"... done (took 0.934367618 seconds)
loading group "union"... done (took 12.055772184 seconds)
loading group "simd"... done (took 4.441392729 seconds)
loading group "random"... done (took 8.894004848 seconds)
loading group "problem"... done (took 1.82119403 seconds)
loading group "array"... done (took 20.549525824 seconds)
loading group "misc"... done (took 1.690673264 seconds)
loading group "sort"... done (took 3.247306806 seconds)
loading group "collection"... done (took 16.968808113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521193124 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122789521 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132230367 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119496905 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147422735 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117512018 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124346195 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086435081 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.822336885 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147111378 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115026282 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.394828349 seconds)
done (took 5.310910134 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176598492 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085351729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084271353 seconds)
  done (took 1.308460316 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06804472 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128018533 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070011668 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069614346 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069896023 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069591328 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069338474 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069111471 seconds)
  done (took 1.685197355 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076235749 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071010288 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068888255 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070375382 seconds)
  done (took 1.428633885 seconds)
done (took 5.820264551 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74226924 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211201699 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184796058 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.377885734 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130228222 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.167648039 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644085076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325767235 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185646599 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077273112 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107813381 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.334523308 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.120439705 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64266247 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076834604 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090850576 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142193087 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422124009 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06975506 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086021845 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091952931 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13133108 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08641317 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075672469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14608163 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070140033 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131676589 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082592264 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068505867 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214676336 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175143308 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669482227 seconds)
  done (took 10.257398955 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101707231 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099300625 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071084054 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127024007 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099764253 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071871232 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077124532 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069843293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09117169 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130732697 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09238511 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107054281 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068694464 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070963706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085836885 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209008252 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081845454 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083799639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072313153 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080840472 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109980595 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079876793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082183553 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081618078 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130960501 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182819901 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101238327 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099627398 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068824899 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084010687 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11750771 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129091734 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069319659 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070766474 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127269075 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09744998 seconds)
  done (took 4.707012551 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.951022027 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140239346 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088782138 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131053263 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068089449 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.111215046 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106959911 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068119548 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082463441 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203056449 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.429504337 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575108457 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.110556748 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112652955 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104068328 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070061989 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071279197 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069702968 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.43359775 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101266871 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108194745 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082835006 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073310524 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070877994 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068802766 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069672879 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066757515 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070708085 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115697442 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079275496 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.303140279 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120377667 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070266141 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.895601794 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.162141504 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067970723 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.242621386 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164832167 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092816982 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136779451 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071298911 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067941299 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154376059 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06772358 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072623805 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068372363 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088704366 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105186984 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119427823 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068194267 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068406299 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16366296 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067679621 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080006228 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.095649089 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155590539 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068641756 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280363847 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091116398 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071964758 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068003372 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.16179822 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123113624 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07019745 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069522972 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07100302 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071048882 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365550057 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069832079 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.887646209 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072986488 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082610999 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072187941 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072439008 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074909209 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074471372 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06751008 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089799284 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06886279 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06686056 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068295383 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068817633 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068861931 seconds)
    (83/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075798141 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084444762 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.475473947 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069251724 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070735326 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067510035 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091407865 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097729526 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068779213 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068144857 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101299202 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067415964 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069527194 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068201961 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068746435 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084851204 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071442196 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11466568 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070615681 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.078960762 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100837567 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071071369 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103061294 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080509028 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069783793 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.406675208 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067523551 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069829115 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067817984 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069800805 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068368045 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080296468 seconds)
  done (took 21.59929028 seconds)
done (took 38.654607946 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244779643 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074842532 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075654973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075599647 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075605625 seconds)
  done (took 1.773589584 seconds)
done (took 2.991635424 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120260582 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098213101 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067267569 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096639465 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066929288 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102322144 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099474999 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.077919638 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098633877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067091049 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096778035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06726537 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067387121 seconds)
  done (took 2.351389469 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086276619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086323936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072263965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084796338 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066656833 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084612566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083292519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093157722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083428642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074574153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066813995 seconds)
  done (took 2.089693743 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085879206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086132342 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071285309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084090226 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066209442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083918957 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083902573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087728186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084262635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075930715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066750025 seconds)
  done (took 2.074386384 seconds)
done (took 7.718211929 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079787989 seconds)
  done (took 1.267260522 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.520886151 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.662499521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082636472 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106326634 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184026428 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112622574 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.243599067 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086370101 seconds)
  done (took 8.363831268 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090588502 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083157478 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074020199 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071511643 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073204615 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073929724 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071714363 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07107701 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071218814 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070584999 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07297905 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074025867 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070930017 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074379372 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073664678 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072670027 seconds)
  done (took 2.465017858 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092966738 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091799067 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074993042 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076860758 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073860008 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073165896 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076092454 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075679374 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072516542 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073556474 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076927333 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074795619 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073793265 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066785841 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075133055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077970473 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072852842 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075440246 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075946356 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077183634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076630742 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066391201 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073483536 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075332039 seconds)
  done (took 3.118845205 seconds)
done (took 16.416286408 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106320282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069808811 seconds)
  done (took 1.370567994 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083539062 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082487186 seconds)
  done (took 1.373292352 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083679193 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066845554 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089166234 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079381183 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06883143 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068003648 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088198426 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067733721 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067647479 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068057066 seconds)
  done (took 1.954127588 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070768452 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077115655 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071184207 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081385461 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074413102 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066601578 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072821258 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069876497 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077474753 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065530171 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072718767 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084209706 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072471757 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085633423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073342248 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070364365 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072513607 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069400846 seconds)
  done (took 2.540650459 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068556436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068747299 seconds)
  done (took 1.354827416 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069755853 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065246809 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06870275 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068359351 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06568224 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064814758 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065939553 seconds)
  done (took 1.680160526 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.35763057 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11708966 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.298023694 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074168481 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083355353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250614971 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068685211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073166097 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073319649 seconds)
  done (took 2.647548654 seconds)
done (took 14.140559633 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082655444 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08805461 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096056095 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.367780258 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093168051 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068777994 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115741543 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176381549 seconds)
done (took 2.321732091 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209681921 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.652766736 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406283414 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.202508046 seconds)
  done (took 2.481502359 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.331359049 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089222216 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06231029 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069233821 seconds)
  done (took 1.782782414 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069894322 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071510361 seconds)
  done (took 1.365902292 seconds)
done (took 7.070924525 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070140615 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068209182 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08813171 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065743356 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068265802 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066604742 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066130945 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066197036 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068324738 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068362363 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068851822 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068280503 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068062616 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066042085 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066156879 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068529819 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.179329145 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06583928 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066291855 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065722674 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068198377 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065927513 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066030354 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068838551 seconds)
  done (took 2.998775098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086026375 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068336082 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07286375 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072653087 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071449777 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073114228 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073270672 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068103547 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073179061 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070333261 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070585738 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071965614 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070313883 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07082305 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070264574 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07082934 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073376794 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067778781 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070556621 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070706743 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072734543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068251351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070911767 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072398872 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07094762 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070973446 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069968787 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06808571 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072959715 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071552434 seconds)
  done (took 3.381319875 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072824104 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065285289 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066088134 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072483126 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065460651 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066157994 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065189355 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065706649 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066266042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065923224 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06685947 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065513737 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065794415 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066499187 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066291103 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069548486 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080795893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066057562 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06548761 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066339524 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068833661 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068063596 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065397351 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066057199 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065755159 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06549819 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066618822 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065979192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066506804 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065327381 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068910157 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069601295 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065719724 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072560885 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069530833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065659392 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069608332 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065552032 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066575089 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065678037 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06540218 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065872553 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065924687 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072482324 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066121238 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.0671168 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065701444 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067726214 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066835306 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067740016 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065574488 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065743516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067499135 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066593434 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069826026 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065378978 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066765517 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065287767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066786934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065541365 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065508443 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06542391 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068424119 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066606514 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080890075 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072607942 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066161646 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067330109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066868293 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068661908 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0672053 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079397624 seconds)
  done (took 6.102878535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090670562 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086596533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06745852 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06783565 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064135138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066720109 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071421985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066563631 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067481 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083557892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066587924 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0680389 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067898542 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069779467 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066749618 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067769895 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074664238 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064477449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066342447 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069996684 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066607582 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071184683 seconds)
  done (took 2.805996828 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.148098151 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071533428 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10549152 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076481973 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071772699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07681753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071919562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072082818 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071697806 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069584727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069647513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072009573 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071997433 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06961213 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069969446 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069520277 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071921782 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070146204 seconds)
  done (took 2.643102269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079405147 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06781746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087940867 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06802534 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067933959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070102325 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071970116 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075483691 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070467692 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068007288 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075186636 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070377388 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070426307 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068143497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070597285 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068873457 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070403247 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068113652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075366862 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071788458 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072293728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075205347 seconds)
  done (took 2.825375571 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082702855 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069749461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081370265 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068976391 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063828362 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06607202 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071984963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068138499 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072321469 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069948345 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06813838 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066484318 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070161824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067903668 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070676894 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068011535 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069621803 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068001319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070036835 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064424339 seconds)
  done (took 2.64008302 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086777026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069615398 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069399591 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075635289 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069334071 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06967667 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076815954 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069503052 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070244691 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089405893 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070060011 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070023944 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076029284 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076987006 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069678332 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076345154 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076506731 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076136249 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069665051 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069633038 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089351052 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070179333 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076546447 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070274809 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069871641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06969367 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070038391 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074054722 seconds)
  done (took 3.310694892 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070295606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068272573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06580588 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065910783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065649947 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066515528 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065744623 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06560787 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068852239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066338463 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068455247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068396328 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068411526 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068742411 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068481216 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068004418 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068435275 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066062484 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065871164 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066554913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068340206 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06822714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068652962 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066330867 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065833166 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068489169 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06616579 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066203727 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068815483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066379984 seconds)
  done (took 3.268901569 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077909334 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0747309 seconds)
  done (took 1.400513208 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067052473 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081692712 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065500439 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072897899 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072119506 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069381804 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075352032 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072261766 seconds)
  done (took 1.817847572 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084262596 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078047164 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068512308 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078057637 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077351936 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084117907 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13376244 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068811594 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074480983 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067020153 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081214277 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067772016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074636268 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069310851 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074531462 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075250248 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066164196 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072892513 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070024238 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066842975 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069335759 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076620254 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071387942 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064148667 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070030346 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089478506 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078821597 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068007249 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07168956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075688264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07394501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063253135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06855263 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068782449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066515367 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077148337 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082120336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071290332 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076312899 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068668986 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076246804 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063614532 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073031705 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075217536 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079073039 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068323237 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068384165 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063990915 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066969166 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070838546 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063913642 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06891728 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063707522 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075171248 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072293894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079030225 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067347819 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070160793 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072143127 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071539025 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07684233 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070480216 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071581623 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067761347 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078731099 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073534005 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07650639 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06442186 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063002395 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066326848 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077738833 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090502127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073969505 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068752132 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068832737 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066056454 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07223259 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069209218 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07394074 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075602387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068210365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073216266 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075821941 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069215467 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070972053 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074572631 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067156636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069796209 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066440529 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082755067 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067803328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068772355 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066546512 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077681783 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072062589 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067727338 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066561351 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07462645 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062732499 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067657535 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067204537 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068388328 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076711633 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070371903 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070821248 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07581759 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074190574 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067764339 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069564852 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.192007704 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069758145 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068866321 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076266067 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063526714 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07183098 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069965511 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06952692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077013538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06654211 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068539321 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075974106 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074408825 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066898071 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065607126 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071294779 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06832695 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070476821 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07674979 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067246452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064074486 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063706357 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072142348 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067804438 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072006183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072057843 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071443753 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063220556 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065987598 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072219258 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07693593 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068619641 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069855379 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07417988 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069567006 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067315233 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074699361 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07084286 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068666028 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073851494 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070117595 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063474312 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070061093 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070983708 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067028375 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07237818 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070247662 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07125531 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068508871 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067450033 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074176567 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069556879 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068126674 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068749988 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067210267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078908015 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070853341 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0638425 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065529591 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074773475 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06683877 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067644779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.0679561 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07055018 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06925153 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066565677 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067664266 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070943826 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076263679 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071440934 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068883876 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073676596 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079959589 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067702578 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071407932 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068106406 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068718482 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068704727 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077217176 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074003973 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071928748 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070989984 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065530813 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073355603 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075865905 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068333981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066846265 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067938449 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072157966 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074186128 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073051966 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068996313 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066555203 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069544374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070095837 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070837101 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067326142 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06777978 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07271377 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066343124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072907194 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06804558 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077769457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070512826 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063201122 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069219192 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065562147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073983452 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062820689 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065516219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066925382 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068050549 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066713503 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.199619371 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063588713 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076868485 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075900099 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070070843 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069418639 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068311504 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075705724 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070652224 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072475266 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.07233203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074324972 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078766182 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068066685 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072386824 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081480449 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068316647 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062990566 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.073797219 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067962254 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066798743 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067453349 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066545547 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071441724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075188486 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07530286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063069881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071163815 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066860552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067703475 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063885862 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072801632 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070861683 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069110487 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074924447 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068839635 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068501002 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071940542 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067796876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068759601 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068976546 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071028866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068287984 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070153818 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068343074 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071841501 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067796324 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066032958 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070394564 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068305969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069077082 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073036645 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068025027 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068921593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070656894 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06856129 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069085684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069515216 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068187986 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071810975 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069483665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068989353 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071255324 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063872187 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07584667 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067706756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075266156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069569135 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066019494 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073783245 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07103939 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072706567 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06898727 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068950144 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070522683 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067941835 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072033316 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075906131 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067080454 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078660842 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075433075 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06961027 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071159668 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069066559 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070245365 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068446746 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069701316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068758039 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069309904 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068600888 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072710483 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071197824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068983504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070514924 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068506718 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068725425 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068422729 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06327324 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067955183 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067738726 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067978815 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076630651 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068247262 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068529428 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067278391 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068003841 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066600683 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064757601 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073498933 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073817057 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067228803 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073465474 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066840905 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068909369 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077634423 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.194806919 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067269791 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067711925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067575694 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07599219 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068741328 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077894786 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069177903 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068959139 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066484147 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069319749 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067170696 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063478356 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066279647 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071357563 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068312065 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06781638 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068319896 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07142985 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069119946 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07742581 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067371855 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070124688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06787479 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06576313 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068382015 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068738779 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071082003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069030636 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067319538 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066093588 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067599958 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069350238 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070195826 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067752653 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070052182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074901154 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068160323 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071596354 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070855148 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063380413 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071471669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067821646 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06757854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068129468 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071851475 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074324482 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068960861 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077434791 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067775543 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069592302 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068662861 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066683223 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067684739 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067903533 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068334213 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068271351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069371324 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076118559 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066988973 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072744921 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068908441 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069549749 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074854624 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068641971 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072264151 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073835856 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069987045 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070422988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076719909 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071803571 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072053904 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068916397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070644691 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074608834 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068710189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075208337 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069230409 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068838205 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070243974 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066847238 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068429511 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068103224 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067784806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074383701 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068616381 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06891074 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068534774 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066306 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069780973 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07122609 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076938199 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071139013 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072090686 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064178644 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06618619 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068292595 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066431633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070177599 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070689956 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073969682 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070258183 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069179112 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067923398 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077443175 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074373537 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072172994 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066760724 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071317965 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067966493 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070599117 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069317655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067883134 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068207908 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071275684 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069202548 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066939195 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.206823035 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072594844 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069695061 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07086412 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070057134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069969521 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064994133 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068986383 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07071355 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07365377 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070660021 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068353115 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078939802 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066584221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069204561 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070689632 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067909046 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073673599 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064335234 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070043934 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068773036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068777246 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064145606 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068594642 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067677011 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070935493 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069407258 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064018664 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078547541 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077486734 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071425652 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067479631 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067339239 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064545464 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063555536 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067934498 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068673843 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07012041 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078386294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0676842 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067539348 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063995646 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068359526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071139453 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071609889 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065781716 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06372717 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067967294 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071626838 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073489441 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067441456 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068297829 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072078377 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070832558 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06714228 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070692036 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066162756 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072537535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080442005 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068803928 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070572733 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074753954 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07642352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068725507 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064096607 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068800857 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072068091 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069488355 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069282225 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069301762 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083384194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071969978 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068693041 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067647532 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071690061 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071090364 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077044609 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069295878 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069307858 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073352969 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070442245 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075863438 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072320005 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075684386 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072215787 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07225169 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068284798 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069373108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067119217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068818783 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069452343 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069009956 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072999863 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07525454 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068327152 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078866 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07692273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070121397 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065333615 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068394485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068015994 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06376479 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068819869 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066556184 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066696016 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066025948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067087771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068882645 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0720258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069043851 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068196513 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067227518 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062032357 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070128377 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069285772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068635708 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.200139233 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069154003 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069344878 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073201043 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071458247 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067111975 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070684048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071018182 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069814375 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064225095 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07554847 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067839943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071067283 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068664195 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068827369 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069012709 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072153423 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072777005 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069041669 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070790141 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07293947 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070338497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066401931 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066389397 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073443402 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066664394 seconds)
  done (took 43.87347253 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103058413 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06562497 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06383445 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063947391 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073448765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065019783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065329309 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065355109 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065336599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06702965 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064082285 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064189789 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071716121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078689328 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074324131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06816047 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064303285 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065391084 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064249882 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065575013 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072217743 seconds)
  done (took 2.790991212 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077194919 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078575497 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075567199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082777623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072763133 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071992432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076126864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071805722 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080089313 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073831648 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079289054 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07222987 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074040773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073970137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073857394 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072362876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079568361 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072811405 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072249291 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07699074 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072037001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076439517 seconds)
  done (took 2.98730875 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069752194 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067780881 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06981486 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063889494 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067662577 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063094099 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070390756 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065804593 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070771372 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067377102 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067439473 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067532991 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069873451 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063495476 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068830807 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066237615 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106796267 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070784451 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067682051 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06856231 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064072775 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070280326 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063679777 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064122381 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067862238 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070811705 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06882302 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066312321 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067923245 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068015849 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068465983 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066551214 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069876556 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068990898 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067771301 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067294919 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067590925 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070550966 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063686732 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066439811 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068972279 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064358536 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068243405 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069922879 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067041008 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066351247 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070016186 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068088721 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064162563 seconds)
  done (took 4.683032561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080839311 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108722866 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069638701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089145958 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080902394 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07423997 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07184094 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090636477 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065587112 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06617916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082115162 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080013009 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067798466 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071773521 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074638268 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067386957 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068530343 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06683323 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070535284 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067036759 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070653156 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074072551 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080678644 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078674344 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070990417 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066673236 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067050126 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072131442 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078704708 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071295843 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071799456 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072460062 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081972122 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072651169 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067135157 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070184615 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082472017 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06765925 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070155525 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065683905 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070042878 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071923561 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074735339 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082836172 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06846844 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072450585 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067870411 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06502845 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07877257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070014259 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074820509 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079865949 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071207245 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068050004 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071524492 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081481632 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067551896 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066625874 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07025339 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078214081 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065686762 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070832688 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079615908 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.069321223 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07371278 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079779526 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07275957 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071428356 seconds)
  done (took 6.468742615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080364379 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096817246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082866628 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083498796 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076554503 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077237452 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076960599 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077100139 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077754598 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081171922 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077369119 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11559352 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.081186319 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079481954 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077110209 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077313175 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07717537 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076889163 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076816916 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076966223 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077338372 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083577443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0775016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083340944 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080365188 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073214742 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076758836 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076858936 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083576475 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076758616 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080652879 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077012075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076818472 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083373774 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080811458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076560652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067843273 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076819873 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077309213 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077031732 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072910712 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083902897 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076900376 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074306896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077410668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077502746 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083999644 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080746891 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079195953 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081426601 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076948383 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083384295 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076936925 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07723471 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083737864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0859502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083001655 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083380585 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07708045 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083172447 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083439575 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085999719 seconds)
  done (took 6.320151936 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084814356 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074487078 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082419868 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063703843 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069315905 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074021375 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06688269 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066865444 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07599219 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075079491 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077158853 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073909911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076564352 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077829766 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073666811 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076115911 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074052492 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074020007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075346713 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073688857 seconds)
  done (took 2.848084805 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078447909 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085066059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068736536 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07287841 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071552036 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073485946 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070871787 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071502022 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069214565 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072166344 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077288435 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07721082 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069348921 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073518284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077428641 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073155275 seconds)
  done (took 2.52948676 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086620579 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074789692 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080290837 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068401672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069310151 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064997093 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068311679 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064318262 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064987368 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080016317 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068153802 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078240132 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068670354 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067569893 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065528352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073865051 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064786729 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065811713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067993735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.0794636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071546056 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066586091 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071334886 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067923477 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070443872 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072435507 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066867903 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068650815 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065671728 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068636222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071309722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071852705 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065454488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066182893 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067324811 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065696988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068159231 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068841919 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073609976 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067932662 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067062696 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070358948 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068738737 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069882459 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064773259 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068872224 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064907272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070771283 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066710939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070644633 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067885462 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070843967 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069276812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07491454 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071337909 seconds)
  done (took 5.183937798 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084371229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071914441 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064389786 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066367473 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071179089 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069013312 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071685677 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069344761 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069503233 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066705385 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0699759 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071402367 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069397781 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087262678 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069533731 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071902315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063815165 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068916109 seconds)
  done (took 2.640048218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07487106 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068014457 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074653901 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067583602 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067747081 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070480801 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06455411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06662844 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066655561 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068081118 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068095161 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070434043 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066881711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070597852 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068074441 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067849452 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071116975 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06711189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06837617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064400499 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071023169 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067361364 seconds)
  done (took 2.878708061 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095977076 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085008701 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137683922 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079513754 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086255779 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073479253 seconds)
  done (took 1.925103278 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094942487 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100872027 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068525831 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071145617 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076322006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07161127 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071851666 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071773521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078916838 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076979511 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072018767 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082021307 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07934268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078713897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077133085 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076577213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071737849 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071665001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068530642 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084077945 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072366775 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079399258 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071800938 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071794766 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071696179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078831083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078869294 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076867675 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072043676 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079197873 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077361681 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071965817 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079373078 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076895678 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071040324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079214868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072117984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083631545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076906336 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078682644 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071557224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076972662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079778769 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076314038 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079309889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072226561 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075787603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072017018 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072480888 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086010836 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077222803 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078154197 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077189518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079779914 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079314024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085886463 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076959075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078812793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076985029 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077213446 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07843004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077270249 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078158577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076957122 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076892324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078246484 seconds)
  done (took 6.452890394 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106275872 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068836359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071663053 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076696327 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077851398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072106077 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072002268 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072386797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07196849 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069029526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107699291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071905515 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078622805 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078309634 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072014076 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072200201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072035898 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078484999 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06890102 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085817235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072232153 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079037231 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078453791 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078511369 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077078632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077145604 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072109563 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072124943 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072248989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072126602 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07597627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072262567 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078374019 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069032756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078481225 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072939723 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071957251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075994007 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072401989 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077541053 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078681358 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08411744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072166483 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071796402 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077320479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071960775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072345762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069211862 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072163973 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069050714 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076966324 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077105015 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076919616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078368178 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071904044 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07195694 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072036545 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071844389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072586732 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077044934 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078192737 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071952088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085826766 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072677326 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072155111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078861636 seconds)
  done (took 6.378597968 seconds)
done (took 132.37991522 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202562138 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181064481 seconds)
  done (took 1.736424766 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072640542 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099173195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077354447 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131065855 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068149733 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102067411 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101067477 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078858104 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068851861 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068346968 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068110303 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070741831 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133410096 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068827222 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068377191 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070527886 seconds)
  done (took 2.72695581 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10094858 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156483782 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101738906 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067601519 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099651399 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074318602 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067107145 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078881783 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072433608 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067667604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073973971 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072390388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06745493 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071771926 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072330783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074203887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06749161 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073702189 seconds)
  done (took 2.840637591 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100721949 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09340211 seconds)
  done (took 1.5783477 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157444537 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13480672 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201120798 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.328578762 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154475487 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146611624 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142955969 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141807797 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114143438 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137734208 seconds)
  done (took 3.038042913 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102770744 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148198596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264201876 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115420003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074499932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092276617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11695853 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080574203 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080917191 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081194703 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08137467 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077718297 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09921793 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076140074 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076542387 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077093092 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102499494 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075361302 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076936062 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077383435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099919453 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068855808 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0753353 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075666214 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077823835 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078443483 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068630668 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068611597 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076669972 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076616101 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077452731 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091987309 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078989451 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103425706 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073160264 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104558006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078019167 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074733093 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.0767978 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074667337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078818111 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079231168 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075001726 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078383626 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068223784 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077749675 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068744786 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068493373 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079213042 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069430347 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078587583 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077957397 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10326673 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069589426 seconds)
  done (took 6.05911498 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110753512 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107437144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072085088 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112248535 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104103652 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071214357 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105427678 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098456704 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108544024 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071836158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070250471 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071859654 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080732957 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082197243 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11553492 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107980764 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073667345 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070908993 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108028426 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107387073 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070638628 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101485631 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097393643 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106914426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069560903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072014119 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070236248 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071602413 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077073465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078474625 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070612323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080066119 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084820792 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078203705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069580667 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070686116 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070300738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079655515 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079460532 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080132384 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078489288 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069719666 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070267445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071263193 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071260302 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06945307 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079240086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080207061 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078863764 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070391405 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072068811 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070603071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071731883 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079758505 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077911331 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080486098 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079860228 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070320444 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070028287 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073115285 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080268934 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080027522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079566863 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071194886 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08030752 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073272565 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081148207 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084354002 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070355404 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071401285 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070605322 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070937529 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071654964 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077844604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078202208 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071947129 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070672436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070406757 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080173265 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079462051 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069601002 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07687249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069047862 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069637786 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071527518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070982004 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077598099 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079220835 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071520028 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069907602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069789543 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069242798 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068625334 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075868457 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078090124 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077494558 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077176325 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070110223 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07710634 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212591818 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072631018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080177467 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070749887 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073096825 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071616043 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079201113 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078015989 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079716805 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070545645 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070523247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07841942 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081096305 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070510748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078712178 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08073122 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079078037 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069226219 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081307436 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070864914 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080670844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070707558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080134493 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070322283 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078665113 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070353258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069399973 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070470625 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07965751 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071785815 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07006927 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070675428 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070540591 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07849253 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082166016 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071186037 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07768663 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078579556 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071257381 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078760017 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070179034 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079275134 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070291897 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071507765 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070203236 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081726025 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070683988 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070105018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0701569 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080391537 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070876284 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07972572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078108591 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069645406 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081898838 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080168199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077717883 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080339577 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071680961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070045321 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070245042 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070364994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077824938 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079303439 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071595895 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070338246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07813445 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080328305 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069463269 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078620803 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078921055 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078526956 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07116357 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070566135 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080976423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080729278 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078669722 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078636894 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078883393 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071031132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078122773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078687944 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070750816 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084560258 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070303488 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082374001 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0789838 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07660126 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07799745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079375614 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079643145 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079746679 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081506339 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06886315 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069207964 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077600952 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069229483 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069117443 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076216449 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070578223 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070173231 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080975145 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069636454 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078899605 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068108624 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077843264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067890599 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070043486 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08136239 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069259388 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070392499 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077080558 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071077611 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07628422 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078539 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076740255 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069626057 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070092607 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077543941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078459448 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069368794 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069794643 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070344054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07638375 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075843962 seconds)
  done (took 18.742262901 seconds)
done (took 38.115003095 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.194866784 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.146732069 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.158865736 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113215255 seconds)
  done (took 2.106287323 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113975177 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098290217 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091281602 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068595444 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097557168 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068647972 seconds)
  done (took 1.971415425 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271449146 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185886649 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169942565 seconds)
  done (took 2.058158581 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191465772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.177746994 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426129968 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.258174626 seconds)
  done (took 2.590965116 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138170174 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086317341 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069882051 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085259779 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126935808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15346576 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09713451 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121499986 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080870191 seconds)
  done (took 2.442956705 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141173728 seconds)
done (took 12.811157675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.248840339 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.18822226 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.162959696 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098479719 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102753439 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074351202 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199071079 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081536949 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070601394 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078162655 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.233279038 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102549976 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.104365753 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077658409 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.092197029 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111751834 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085111185 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138128361 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202955623 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.171189584 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182990737 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079661505 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068627353 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.165641698 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056074242 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093322055 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082745217 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068534115 seconds)
    (29/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076281003 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.103430062 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192024436 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070122549 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076738261 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.173249005 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078232266 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.428448789 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169969317 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075231772 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.139128726 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091208923 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075511814 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07577428 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079413448 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067223287 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08167721 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079612484 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198291144 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.145791967 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.166619266 seconds)
    (50/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079418739 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.06959064 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.204678001 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075167218 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071945257 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089383744 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112686988 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.068435914 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076874134 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.189815001 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160616196 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06725197 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056686243 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.134617702 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110364163 seconds)
    (65/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119458935 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078154049 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066119961 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.208688958 seconds)
    (69/309) benchmarking ("sort", Int8, false)...
    done (took 0.144268634 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054105397 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077608325 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065411205 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150030523 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056070597 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087177801 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121057185 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152161182 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.065035555 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055442258 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075213612 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184032163 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053698306 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053854478 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07702768 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078760709 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.149821009 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055813298 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073680823 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174930924 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.173572456 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070071235 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.154755186 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.15955618 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.196441324 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075028738 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.176103225 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075554893 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072696179 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053265806 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094491033 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073740121 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087641823 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053165165 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073203483 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091418471 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.173970974 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12417828 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089641704 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.081809618 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066803744 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160438669 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072532521 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159955899 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065398005 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078806967 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109284613 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.154555342 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073235853 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069244626 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066143889 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141713845 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.1151601 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074365721 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053074015 seconds)
    (125/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105158681 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069365648 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066649189 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055196839 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132015846 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087435399 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110088545 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073651581 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07278265 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09064042 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074789366 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073079354 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115984872 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.117368917 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080084018 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152357357 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084214127 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071706049 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.076851138 seconds)
    (144/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053376056 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06504165 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083784681 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072641281 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171732153 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072525658 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065490932 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065697653 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074217338 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075565702 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065530502 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068320539 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089366488 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069866581 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076176109 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064146771 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076507334 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06923973 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.16679855 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073494154 seconds)
    (164/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096590818 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072543833 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.093929452 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.148376143 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.1711021 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065746562 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071575778 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066364013 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13703116 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067837459 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107015449 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068365737 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150829355 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052158718 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071169488 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073082412 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054547494 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.153942867 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052835228 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055146607 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065047085 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.355605302 seconds)
    (186/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.062256314 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055872311 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075952096 seconds)
    (189/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076178245 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073426351 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095579753 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056177164 seconds)
    (193/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057123435 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148115536 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076476153 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100122493 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.0697059 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055290994 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1736892 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056850217 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069272183 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191292977 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089967278 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069521493 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140621527 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075483855 seconds)
    (207/309) benchmarking ("sort", Float32, false)...
    done (took 0.131805854 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084038662 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070878763 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 0.130032923 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091941466 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075205333 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075117349 seconds)
    (214/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070669172 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066712131 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08801282 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092249949 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100313163 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055780394 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067338551 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075810471 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076962285 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069877605 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054763394 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057956002 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137493022 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088599273 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069497761 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076238645 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05493216 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069546298 seconds)
    (232/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08319124 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080099143 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121761984 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075764605 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070561917 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.112126433 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079337417 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058505207 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143266273 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068499909 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056199664 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06620076 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156538383 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094513345 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068571527 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054451998 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076045232 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090219357 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094908061 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112070976 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076163142 seconds)
    (253/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068611659 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092184126 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076232623 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067434796 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054858345 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068581975 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06897583 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111814374 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147652489 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074856688 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055378229 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055164852 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068672791 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071197886 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055383746 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088531409 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075191516 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056489606 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054851884 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054669118 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07643269 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068625302 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.054333563 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07413037 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054589953 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064700332 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175898822 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098629913 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089729485 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055388115 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.112558254 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068397008 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054734772 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067783296 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079583892 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055461658 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109233823 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056173709 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054828823 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055423666 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09468609 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075711196 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054458742 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056275943 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09110683 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055806646 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067010389 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055179886 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074089416 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069351879 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069486078 seconds)
    (304/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072207287 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055060211 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.232651087 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055863921 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056484349 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056080654 seconds)
  done (took 31.19646555 seconds)
done (took 32.643277346 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086616702 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094640275 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079287676 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095133744 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083927132 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078561422 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077522609 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08211735 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08422365 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085126826 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082071598 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059075231 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078463581 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07834176 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078562838 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093161564 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082198547 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077125118 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07685052 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068399123 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076827912 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069738727 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070326696 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057922684 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081414378 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074736595 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07711958 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077002492 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068311093 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069061556 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071944305 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076698039 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069417505 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082334421 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075751777 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07681163 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077263976 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079088032 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069584585 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068540331 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077988796 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068103578 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075451529 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076973306 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074644928 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073937096 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076523676 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079597273 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091840237 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070785621 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077271797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07818668 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079180652 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075682051 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072468454 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076972339 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074357507 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091947824 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077009893 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070435532 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07719673 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076609063 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074149456 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075822697 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075815915 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077977444 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07920313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073419045 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077198685 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074378378 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067814943 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076142561 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071792955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068687632 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078035469 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082280094 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06700028 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074177595 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075908904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076204981 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067355019 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07013329 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069780264 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075420363 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070217027 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05746855 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072654545 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075832762 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067272221 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076397924 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075333097 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075650808 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06975579 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079729383 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067762738 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073719344 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068507807 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06864635 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069612977 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07260414 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068031011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070655573 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078147532 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06952235 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075495261 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081047173 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067831087 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.0748469 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067098194 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06722214 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081132653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077200672 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067988149 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070357088 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066543724 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075335796 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067085582 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067744076 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067591075 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067976537 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074315687 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068061075 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069588557 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.214607488 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082349187 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068280632 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072504853 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070354857 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06809333 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074020037 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067976361 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068424014 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069931427 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064524242 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069954207 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068326557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075944571 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069987373 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075375392 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070172399 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075983256 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073100028 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074129067 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073200101 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066812611 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062364344 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070530626 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070084676 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069565798 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067855224 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068952393 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067435802 seconds)
done (took 12.967356298 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070120572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.130603439 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094394055 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094354512 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085577452 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06937656 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076242454 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095311839 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069701102 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.097840355 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087970887 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086120726 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109753333 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067057359 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068048453 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072092503 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069665564 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081525436 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096841139 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087508036 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111944041 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067945186 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091837854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088794127 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087931407 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101765585 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069541997 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072358737 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072483943 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091118589 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088704032 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072509093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069233108 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095953384 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09394338 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083418078 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068926047 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083467453 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069257623 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069162052 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070128546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096549031 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081055059 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081335131 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072421146 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078198087 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069640011 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083126906 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088782987 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079750345 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085516333 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.098598607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07097283 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084356061 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067755432 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085768978 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077617658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070885287 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069174531 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076038662 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069229827 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071914589 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08146353 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081202622 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072481209 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084349636 seconds)
  done (took 6.956594114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08745508 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095086728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08420341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086752672 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068100613 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069015491 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06905566 seconds)
  done (took 2.155210816 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072411266 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090179139 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088529834 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088890542 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082985702 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092078828 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07763292 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06911709 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092779799 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070631833 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088021793 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098288846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072156752 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081308251 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090648655 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069069044 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090440261 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069137119 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072022757 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090861682 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074831068 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.097733034 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076000804 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069307037 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082027052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069956459 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111957575 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072998024 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07104166 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072172368 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070549357 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106009543 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081970576 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076290578 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069476959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083420741 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083292485 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071616613 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080368655 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077448808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082065035 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069699432 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070165258 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070482669 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07318041 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078818211 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070425661 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0740738 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071727886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087455554 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068229481 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081426477 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071642433 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074694952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071452598 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075633117 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078235327 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070511368 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087341338 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070952608 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084203027 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083584809 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082062114 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083759644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071177496 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08178296 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082161994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071698741 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071633289 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072516015 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083735381 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067998193 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070973706 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078541673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071057012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090698345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090313788 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070907455 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081708575 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070136719 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069521246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069437024 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090030874 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074286367 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069580579 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073233284 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072835173 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072183367 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068657341 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073091501 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067718963 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074738518 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072506313 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072247556 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071821365 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083827698 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072170261 seconds)
  done (took 9.131012548 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073342298 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070012557 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071512402 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.07010011 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07042665 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069943122 seconds)
  done (took 2.047907284 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092940936 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070374165 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08036371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072498362 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102157496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087384107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08761155 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078974143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084071263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079890736 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087137297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088505681 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092141248 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074010317 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087372138 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073679333 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087512012 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075800432 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079556483 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07459958 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086415276 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074828635 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074516608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082729232 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07761369 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073570809 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079595503 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079889743 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079328212 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079697523 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073728842 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077130028 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072942648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078783719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08823151 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073218888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073375192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078874961 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073677528 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080022149 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088397586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074394868 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075552343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078613375 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078826686 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072753727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078750929 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080350267 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.087195545 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078460634 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078304328 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072978119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077270173 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079011681 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072750542 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078746722 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078447171 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088156017 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073676484 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072689871 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070765562 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077247142 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078821792 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077982832 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079221841 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078708597 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072812793 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073778329 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074497688 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073782559 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078837214 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070825181 seconds)
  done (took 7.275675915 seconds)
done (took 29.151464952 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540781353 seconds)
  done (took 2.112831688 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.594933205 seconds)
  done (took 2.20140581 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.524399735 seconds)
  done (took 8.128812704 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.362717224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463777173 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696093844 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135663972 seconds)
  done (took 3.291661339 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706243576 seconds)
  done (took 2.320871739 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231825953 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.219548751 seconds)
  done (took 2.069136979 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376422207 seconds)
  done (took 1.987355847 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.086330386 seconds)
  done (took 2.693769569 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.232506605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174799999 seconds)
  done (took 2.01927805 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453260745 seconds)
  done (took 2.062070997 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.821930641 seconds)
  done (took 6.435064444 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.216225848 seconds)
  done (took 1.870718325 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235995181 seconds)
  done (took 1.845019934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.722043255 seconds)
  done (took 3.333183544 seconds)
done (took 43.987855671 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086806981 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085816333 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086632934 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083171287 seconds)
  done (took 1.933227628 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079961785 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074984695 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077785164 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07430463 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077666706 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07457944 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075738797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076784607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074115501 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.074843632 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074434365 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074872636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076711206 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.075866168 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073776425 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076926037 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077892841 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075074004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077284956 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074689942 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0726251 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076501199 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076715129 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073666812 seconds)
  done (took 3.432335878 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081175603 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075196177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076889867 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073878368 seconds)
  done (took 1.935028997 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081950317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090140182 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089279994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080370067 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091101045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086036531 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071427521 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071297723 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072028571 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079621666 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070564029 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095743967 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088945616 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079927553 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081788138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068080173 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070018066 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088304222 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080669266 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080837162 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.0728721 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080700651 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070828279 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090085917 seconds)
  done (took 3.551536469 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089659707 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101821755 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081465178 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090525467 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09293989 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067460927 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087194473 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092607904 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124185591 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067749024 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073741766 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067766092 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076096323 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067684911 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08233682 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110117713 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110971965 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071070076 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098803556 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068234265 seconds)
  done (took 3.351009773 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076171609 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07105979 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07262671 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067914027 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078875683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074666881 seconds)
  done (took 2.072284004 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072583381 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06977165 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.069356617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068840299 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074309258 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069482299 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067952079 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069587927 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069475294 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069285938 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069045799 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068565765 seconds)
  done (took 2.463071612 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185279485 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07076214 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071096117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068798354 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072353044 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068749835 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082550255 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069962266 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092656247 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068758876 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069165095 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071040131 seconds)
  done (took 2.616647141 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19453966 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076861902 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220694359 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147738793 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10781002 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111139841 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110351253 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109457757 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.134389224 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098213601 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158264292 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160104751 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105242055 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134041898 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089211715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100302072 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147725197 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158009607 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104812083 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158672063 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139091105 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123196196 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141939881 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100892541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104800148 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117391183 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073735808 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080805207 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161869233 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128306729 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138583837 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110346178 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096023842 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167784035 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161535788 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136723569 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143678982 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084790056 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101989406 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129972743 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188535431 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089272878 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300961675 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109530742 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081570945 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129346843 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114806505 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116775476 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.102913727 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089515266 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139429237 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173375045 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129449879 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086446909 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120144791 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110048641 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109780483 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109732781 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168228626 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152105253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124029968 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073391157 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109464926 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144917161 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128671682 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105438041 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.119999817 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093807658 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128600993 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147638854 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119123382 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13679637 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.113157792 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089081239 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11726442 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133770692 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124371831 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154451095 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121852583 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075025822 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119828441 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099543138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081762191 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143361531 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077014365 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167374113 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099234096 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104621343 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120336424 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105412405 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106434236 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151297463 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283966115 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102518501 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068762348 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103965732 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116760049 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139209644 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087132234 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104427166 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114456009 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07876767 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13047969 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077107394 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118997279 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077535243 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119722757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125266192 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078591073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120022309 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101950749 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099440611 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12652299 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15104229 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087956134 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081900833 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158820789 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119831656 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101171673 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136988047 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149575502 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099774679 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09816764 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142296849 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163201815 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08907384 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15551555 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104328447 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084169702 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087076893 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120266971 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1088361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12054868 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082399073 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115332366 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159145529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076102679 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095666111 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13009137 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0791833 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080961364 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103963632 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102507462 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095688807 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097280564 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100995018 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13169277 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270295955 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106029264 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120458853 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09847194 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15791881 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088028325 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101148253 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102176818 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071705426 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12943026 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147578434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080509195 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153663996 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118485145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113306556 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116568865 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084388375 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13194251 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080407803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071816546 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137036165 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108096879 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106957859 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143628258 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113982254 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.12035977 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115400339 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127607406 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126546373 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125339015 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105621244 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088532564 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109854368 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124066821 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075628532 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090810305 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081404866 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103532771 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094932595 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084053833 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135956817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119844642 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111024972 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10996682 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096860522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141137449 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077426809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122649793 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116376019 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094831914 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.146279039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144078426 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127955718 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248210366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131975969 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07223478 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076144232 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086829339 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118543867 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084330044 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083122843 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112004515 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139809687 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123539241 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131512431 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119439124 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11583321 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14689315 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07197494 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117591006 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13826499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118038212 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102984042 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090289484 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097519018 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135692019 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103890159 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169408405 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111808461 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121206606 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148431689 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101706592 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080393055 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100956298 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128268546 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102141796 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136955618 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097364524 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0891318 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106293772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079223674 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098100951 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123524073 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11551549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13131564 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112035396 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130864932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079261635 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112017688 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118031795 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118444852 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.065946165 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114451757 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151528005 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094460673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114260502 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295769545 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080109399 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.132034127 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163651253 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137973194 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085059414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104996687 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117162105 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122096948 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115287712 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13230785 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103543345 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13074261 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107051702 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085260435 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087916 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095103625 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102006081 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093026818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.101590086 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110651709 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095459812 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126848701 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103447093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108544367 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115074634 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099871886 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091918978 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096183592 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166278798 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116103979 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162261526 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099411883 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13670351 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154087151 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07644932 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080476802 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079925894 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133641527 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085601757 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126911237 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108584553 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115655132 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121223222 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134835286 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095246297 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070411441 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106115871 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128921301 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120407415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097515314 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101071881 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15376096 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097346846 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230638693 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10966427 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113295878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102898779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16027774 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064185596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104092293 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078194924 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080649229 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121716797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142050843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081534856 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099160498 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117108061 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110034419 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121685187 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097665402 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109678236 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12184531 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142069682 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123984565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089304835 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108860573 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122805717 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149169463 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101669109 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096862788 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166783637 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145817052 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151432351 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08682722 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111573661 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111354106 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106974973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134032999 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084451715 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154354741 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083094913 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13214365 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102123885 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088745983 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124748303 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109883549 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089019283 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139283666 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1136415 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083747272 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078640923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113649854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115684547 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102644493 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075759416 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284148235 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076456332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129365556 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152980008 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081538286 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102581413 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095210835 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081215615 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103031846 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100441258 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087502762 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.0991504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162846549 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086595344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141193278 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129442792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108978937 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128736126 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100987828 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638267698 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078610744 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144450473 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113420238 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162555985 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099280976 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115296577 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107892516 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117795887 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138379857 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101433841 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177580343 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127784388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114131805 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080569721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101393704 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102785818 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087504381 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105802795 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111456094 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113643939 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093094005 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113972919 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121167662 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083384842 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096729704 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148809623 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112210888 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137961926 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132915377 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084941801 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114550411 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.285359498 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081566396 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115622013 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143083287 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104439896 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099133968 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081897328 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098988518 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151932015 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07507575 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150817934 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11993044 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107162429 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11007663 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.10764517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126578395 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103992043 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118578191 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090942771 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105960731 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110712823 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082839298 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078197586 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103573994 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109437628 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097684117 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096400962 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099602095 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14481265 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074251799 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098666051 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112811181 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138116522 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164127984 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087429987 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084044816 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117188624 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113357926 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110491053 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118401076 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080454609 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0824974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080963988 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082084593 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105906449 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111732224 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112429355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108646932 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155200399 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083511134 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221379944 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094998298 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102292765 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071024351 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078621345 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095497313 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247883813 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10454198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110985327 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152531096 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094309967 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089841968 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091285024 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076438208 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08391469 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122219807 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106077676 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114471955 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09958195 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06491829 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104711675 seconds)
  done (took 57.762941505 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111098928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083312002 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097539078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144612375 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121305109 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199844832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.166793013 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188538851 seconds)
  done (took 2.857993555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073345108 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094609534 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103374549 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084078284 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068683681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070010735 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.217604885 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081958976 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068859283 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094732088 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079908177 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071153797 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412374518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068384218 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070403605 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065189888 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069696405 seconds)
  done (took 3.527495673 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378107874 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.621289693 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.331161568 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079131067 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.920882861 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093495377 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.15814205 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138104129 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080018981 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.545127422 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409098714 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130313132 seconds)
  done (took 18.628382702 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.087030149 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078075015 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091683801 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090740057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081113657 seconds)
  done (took 2.236775023 seconds)
done (took 108.010560756 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087384409 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.58549355 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057429294 seconds)
  done (took 2.407463335 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091236823 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087508668 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087113811 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084954972 seconds)
  done (took 2.098945575 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078752357 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078871291 seconds)
  done (took 1.897332435 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223286508 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167787115 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09664821 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086451201 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081302926 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081860351 seconds)
  done (took 2.001920591 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076664112 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077497221 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074862242 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078684554 seconds)
  done (took 2.050036654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081205952 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055437089 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057727389 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06064051 seconds)
  done (took 1.998966771 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090939699 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083867325 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080731008 seconds)
  done (took 2.000467609 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103836805 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088769624 seconds)
  done (took 1.936204229 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086685913 seconds)
  done (took 1.835093165 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096533225 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099247493 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127941411 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109365898 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13516654 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106980084 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086675694 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086557677 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.0783927 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087627693 seconds)
  done (took 2.759464608 seconds)
done (took 23.297591526 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082826729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374351276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362311214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091508681 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67153825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35959953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978961758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094638539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140154441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070613616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087069482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653497797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969484983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331658286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958587282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333429153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652767474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071149958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07092643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071103539 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966045176 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070917523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070904062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072320372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652554291 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375153468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071865694 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332007056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071612637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07325624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358237704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089250246 seconds)
  done (took 16.349534614 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074702874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120089297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074691919 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086767935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072970312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072309055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073765205 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071811685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12132463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070961633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087995354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070614748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07441417 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07169007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090384344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071983161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071844352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071768231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074190326 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072078765 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089902172 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071490065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071619734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072397688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071571378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083038384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071892652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072021813 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071771682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073500473 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074354555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072430768 seconds)
  done (took 4.254738079 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118102282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125472317 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075738223 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106366175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113368563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07290652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143057145 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095872493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12921952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071186942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088274158 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071050552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104415126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072062544 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090710233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071504942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072075948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072137887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07188445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072349222 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090641462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071256411 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071796062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072753166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07222772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084268415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072314547 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071951767 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072431524 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073694077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075814794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072774261 seconds)
  done (took 4.504154371 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07738098 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077212164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086014404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086457054 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071994192 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074035233 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075823059 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072244028 seconds)
  done (took 2.388094624 seconds)
done (took 29.250934837 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083144341 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071615965 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075810047 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090384725 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075503706 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079765345 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069592673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077599014 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075295868 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075506038 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077465213 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070105976 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074573353 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070460754 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076713975 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070967437 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081734295 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074878159 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08176964 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081727873 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07325399 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07597272 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078545197 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081754838 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081559952 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081432646 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080032239 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07666352 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071888111 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07415644 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080366575 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085911148 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071663109 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081645676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071243936 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071179798 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074957617 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071288524 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081625716 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079733169 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07303688 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079622813 seconds)
  done (took 4.963051793 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092591092 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09293855 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086215232 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064231588 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068106115 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067534179 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090169601 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06290124 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062729664 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089444453 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059538405 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062298507 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065682941 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057305831 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062780951 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060576169 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064430567 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059171193 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062795523 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06248926 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090290192 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057674918 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080216731 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066154235 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059659357 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065402081 seconds)
  done (took 3.588878074 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078934989 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085177613 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091322153 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143821324 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.112738161 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080711318 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08110521 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094817606 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096655007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070485804 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073858958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095377072 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08959785 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076434842 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070956745 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087195991 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087987372 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072732886 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075678366 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093670943 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088253561 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087705432 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093704708 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08640714 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070243404 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072818209 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074229086 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083686077 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073410943 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079061551 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073660379 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073482325 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072597935 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081806542 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073698801 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072729849 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.095545055 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079857882 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080801748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071356033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077976595 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071801557 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093942786 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124985986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069959877 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076092977 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074290954 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080036297 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070880605 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096266049 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081524175 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070480109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073697046 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07010568 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070270131 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073463432 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072429739 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07261109 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078957106 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076148917 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094227652 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075278427 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08654697 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070494217 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078325428 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071054618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071506672 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069634942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095432582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071990246 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109924357 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071422069 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071597534 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078730974 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078169446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076541809 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07026792 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086028891 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080617993 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075383039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078047206 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073582334 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07307047 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09832893 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073039257 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072218326 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071601717 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075410016 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073379175 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071522744 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082602369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070288789 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073431773 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086960792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070306984 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072024246 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075687651 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074540513 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070047801 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080727574 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074492653 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07143056 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079680314 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070555342 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07309352 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081630066 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076326767 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069355487 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074069657 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075266512 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070658272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071767695 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072615761 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072374752 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078778306 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076570142 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074372605 seconds)
  done (took 11.0596113 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161867025 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150793932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074261672 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14337633 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078618728 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080814546 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144402096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094499476 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070922955 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071738306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071057356 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109549592 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10527131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11603505 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081118604 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07085877 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092525372 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114019455 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146727056 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142363836 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092950447 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078918666 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073143155 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072058638 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072953181 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080478872 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087251395 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078873074 seconds)
  done (took 4.574101403 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084887451 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103084954 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076764227 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092453063 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091219691 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070936678 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072873041 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072301449 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086515825 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080299728 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071250324 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075578728 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077223181 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073451687 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071523771 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.077328113 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077005769 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071945481 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074622325 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075287334 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08039791 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09385501 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074787405 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072893418 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075547222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070174712 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066421967 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085914494 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071477984 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094699239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069012218 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075679982 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084168213 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071984244 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070972934 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071606496 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071113377 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070970159 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072643215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069979688 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06933883 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060983656 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070668325 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081520299 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083684295 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060251739 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075448904 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075876189 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076499095 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068494702 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073874702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073795751 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073569853 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077791995 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074888727 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076046815 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072139666 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076385726 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078839708 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071334738 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068741103 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069431771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07524369 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067970925 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085710974 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075452696 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069595328 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070766689 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072673688 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08383326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071220975 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075379695 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068839282 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072842169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075282882 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072434183 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072291547 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069312778 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071219645 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071199101 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058779027 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070947515 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057000205 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073508617 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069293063 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069850473 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071087257 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075210518 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081700384 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072251214 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07668898 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071924172 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070503932 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073514405 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063345462 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073561208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080942716 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084444863 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070974631 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068712751 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082677325 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075249967 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069997571 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059635644 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074806395 seconds)
  done (took 9.614605264 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09507284 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072588158 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083522677 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090611032 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088107878 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077096818 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079802092 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072032979 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086507826 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076690682 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079782259 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070842765 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080966384 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08009209 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072358185 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080677948 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074261342 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085222432 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084870273 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071134488 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078847647 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082776251 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091201226 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083303967 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081563354 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082829507 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091849755 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080089272 seconds)
  done (took 4.089707645 seconds)
done (took 39.64911873 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.869857562 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.015461432 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.84206231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.183104273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.913610212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.028399203 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929548454 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.837003604 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.157686709 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.872362675 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.164626562 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.931768112 seconds)
done (took 66.64665235 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.904276471 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.974838999 seconds)
    (2/2) benchmarking "String"...
    done (took 2.074021933 seconds)
  done (took 5.814829274 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.061374867 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.431201023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078633612 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.837305456 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.841333014 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.149084519 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.645982467 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.350586237 seconds)
  done (took 31.102342742 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.067049002 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.063361618 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.569216811 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.60772335 seconds)
  done (took 16.127680344 seconds)
done (took 64.868103008 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.832421226 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.871993772 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.875511125 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.821220056 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.895644108 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.856083892 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.859640527 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.925150075 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.838285835 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.827095018 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.836384288 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.279116815 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.835699278 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.107198646 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.834755554 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.848572187 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.879705875 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.376668611 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.992922292 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.858926065 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.846000743 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.044988937 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.837547478 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.84759103 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.85557308 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.837960724 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.246149584 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.841792239 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.458786936 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.840750995 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.867612697 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.369971183 seconds)
  done (took 206.110019618 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.837987456 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.772561661 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.845606907 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.843427372 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.283867653 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.017667566 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.947650419 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.29949306 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.840665613 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.842764129 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.946781523 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.83615414 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.957518314 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.843634634 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.867402206 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.921655666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.039536149 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.980481393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.872188569 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.010674884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.844408253 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.754437791 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.725751887 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.937034515 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.872179204 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.894420151 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.838921317 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.862878278 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.029476875 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.014265625 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.882359557 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.863725446 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.034341158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.717137438 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.841105007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.847818204 seconds)
  done (took 171.533712508 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.032468751 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.843407098 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.840626495 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.839689525 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.845600403 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.839867266 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.839323757 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.96640123 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964688007 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.46733266 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.569570167 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.890607317 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.839957671 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65209725 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.837735109 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.909595255 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.851509329 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.84002642 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.854226131 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.866298354 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.842758187 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841051375 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.966311011 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.851349412 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.840340405 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.846669792 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.8407501 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.846583812 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.213923541 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.839348893 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.94632976 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.841011128 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.846021898 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.082429008 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.839207662 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.840261218 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.688262868 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.349352117 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.928576579 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.841180767 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848231325 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.840863302 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.062815063 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.839620839 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.841218086 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.842659467 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.846606763 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.981191233 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.838658022 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.968385079 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.841419997 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.320228397 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.839057089 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.842906371 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.756218552 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.669899985 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.842333984 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.846980834 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.842752556 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.84188758 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.85431537 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.564651936 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.919957667 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.843461717 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.846343758 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.847208792 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.842255388 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.844655522 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.841359302 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.544351713 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.899825217 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.076466007 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.964701938 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.84423817 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.910587454 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.935828164 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.840439279 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.845517738 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.843240642 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.844162981 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.843645414 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.92329125 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.841230178 seconds)
    (83/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.842508001 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.007064689 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.848751003 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.84501649 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.898955923 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.915532528 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.842070039 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697939249 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.84156695 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.843379538 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.109742612 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.843157297 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.911803471 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.840937529 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.844792136 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.984030378 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.964373441 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.544925546 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.845208772 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.504014411 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.99421491 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.842603304 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.989729937 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.844121611 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.926599772 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.847429413 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.848035651 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.880228987 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.847651566 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.900308713 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.844662208 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.219745947 seconds)
  done (took 410.554651195 seconds)
done (took 792.055814405 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.442786119 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.41486391 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523974007 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.430550686 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.409166636 seconds)
  done (took 13.99413647 seconds)
done (took 15.767003263 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.939455862 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.941454966 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868613136 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938130941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.867633236 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.938106378 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.922159971 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.872292543 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.904345058 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.873773586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908275881 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.871043357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.858931551 seconds)
  done (took 26.474492605 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.083978576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.094265865 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.916480102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.084986732 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.892439907 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.08855255 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.021198885 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.999267114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.999606059 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.864737345 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.860898273 seconds)
  done (took 23.68108114 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.092577839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.093209875 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.924273271 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.092827473 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.899004847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.089515294 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.009534416 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.008707486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.002944529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.862736728 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.857908604 seconds)
  done (took 23.708877331 seconds)
done (took 75.638432052 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.853739042 seconds)
  done (took 3.624661151 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.880529724 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.049787171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.863053272 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.857432352 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.854965428 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.855813821 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.856827887 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.85399044 seconds)
  done (took 16.84591304 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.851355159 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.85334094 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.853850211 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.856375398 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.855548807 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.857131392 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.854062847 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.852484226 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.851454979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.852643013 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.853600003 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.85607065 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.854238646 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.855475506 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.85549484 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.855925113 seconds)
  done (took 31.443126794 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.854249197 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.852415119 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.856868522 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.853056445 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.8536163 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.853560282 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.855914809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.852137138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.854978364 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.853114918 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.854049749 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.853150952 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.854404761 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.857042124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.85016249 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.85028851 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.850531446 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.850185526 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.854703251 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.851299304 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.849367645 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.849052085 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.847790966 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.849619878 seconds)
  done (took 46.238422992 seconds)
done (took 99.926363473 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.623318668 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.484397785 seconds)
  done (took 9.875266082 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.854463177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.849948035 seconds)
  done (took 5.540973646 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.84968148 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.851514966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.850875193 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.851089887 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.850254164 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.851320523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.851114955 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.850516258 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.851273606 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.85108707 seconds)
  done (took 20.278840393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.852167803 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.850881464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.846867481 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.850673677 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.850709647 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.8494533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.851784461 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.851690233 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.852332874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.848817892 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.851712301 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.85282166 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.85203025 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.849506597 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.853163339 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.849349641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.850756987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.851473225 seconds)
  done (took 35.085937156 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.85142206 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.852290889 seconds)
  done (took 5.47421939 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.852761916 seconds)
    (2/7) benchmarking "second"...
    done (took 1.847551081 seconds)
    (3/7) benchmarking "month"...
    done (took 1.85076433 seconds)
    (4/7) benchmarking "year"...
    done (took 1.848562932 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.850394848 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.849519361 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.850139571 seconds)
  done (took 14.720547392 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.853456133 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.994689721 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.058384055 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.514676232 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.853226689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.855132126 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.788371239 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.856289765 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.856702336 seconds)
  done (took 20.401452397 seconds)
done (took 113.148703974 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.719903242 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.849343936 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.075380898 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.905158554 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.894101192 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.188395064 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.864459067 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.122088076 seconds)
done (took 43.389013499 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.858427255 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.566810873 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.603955395 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.915863926 seconds)
  done (took 15.854666169 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.827277505 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.149100121 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.859621263 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.695467918 seconds)
  done (took 22.301329821 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.208815196 seconds)
    (2/2) benchmarking "read"...
    done (took 2.19070137 seconds)
  done (took 6.17033124 seconds)
done (took 52.957416561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846252301 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.846882466 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.845432352 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.844278717 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.848401721 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.844068928 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.845414767 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.843162345 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.847566511 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.849662541 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.847172543 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.847156777 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847498988 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844280807 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844735332 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849526195 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.846023604 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84456906 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.845619744 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.844108083 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848628021 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.844271774 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.846122696 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.846916094 seconds)
  done (took 46.07542272 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.84871163 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.847799646 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.848643069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.849353494 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.846119713 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.84901643 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.850154252 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.845964938 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.848097018 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.849864064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846164308 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.848449944 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.850657801 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.84523877 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847751595 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.848068356 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.84853519 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852766947 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847681072 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.845986825 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.848629213 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844499689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.846750589 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846563956 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.846120744 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844170291 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.84645295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845348656 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.849009967 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.841811459 seconds)
  done (took 57.190120735 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.849128822 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.853757212 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.848541951 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.844849659 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.84532146 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845717955 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.846121911 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.849072354 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.843995439 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.845565481 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846158698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.843570907 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.846331117 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.846372789 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.845306723 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.844602011 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.843908313 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.845192202 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.847213806 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.84416519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.844061918 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.844072185 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.842028575 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.84343603 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.845803205 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.840493154 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.843516773 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.841524526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.842015197 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.84319283 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.842819384 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.839990499 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.842296684 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.841815354 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.841055918 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.842701383 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.844899747 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.849669763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.84147966 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.840336471 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.844146611 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.841680693 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.840878083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.841974832 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.8412621 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.843400643 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.838756837 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.840298233 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.84099482 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.840507375 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.840957915 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.843159276 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.841703489 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.839534861 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.841442941 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.840663011 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.840938719 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.84072838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.842214452 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.840508056 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.8413338 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.839597383 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.844071572 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.84041727 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.841724877 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.840151002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.842302678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.841195271 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.840486801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.839493258 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.841039236 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.841180856 seconds)
  done (took 134.467147202 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.842505236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.840141125 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.838898653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.836415699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836556748 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.841567522 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837950961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838753821 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838694557 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.840835018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840146582 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.840859072 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.837793475 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840283998 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840811298 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.837301831 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.842254952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836541665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.839726444 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840176115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839528958 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.838223713 seconds)
  done (took 42.226734131 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838627805 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837904204 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.834700323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839761299 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.836964947 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.839331681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840660432 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838923907 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838589719 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836780542 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836610957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838406053 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837887882 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836936368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83739494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838893627 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838981294 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.836839992 seconds)
  done (took 34.843107726 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.835406118 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.838791069 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.838180435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.834984178 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.836313499 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.83947627 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835390025 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.841020732 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.838333993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.835172336 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.839479758 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838651978 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.840468581 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834967048 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836893248 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.835938449 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.83665068 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835927302 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839117756 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834196763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835835506 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838401891 seconds)
  done (took 42.177587654 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840298581 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.839359586 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.8361007 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.837258837 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836457791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838989377 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.840150375 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.838667303 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.839927505 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.838670671 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.837305952 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.841022919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.837155063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836562829 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.836156452 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835608173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840567479 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837058276 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838562365 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.836059675 seconds)
  done (took 38.519922213 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8380519 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839731534 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83870609 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839935433 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839998685 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839934949 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839034725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838582714 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838725677 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.839304633 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83880275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838117381 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843409117 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83655788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837506255 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.837818826 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.8382363 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840577507 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838398998 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837866351 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.839232228 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.839103156 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.838941027 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839573537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838157272 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839600427 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837766555 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839114458 seconds)
  done (took 53.250104716 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837680638 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.839867135 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.836809712 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.837116059 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.837183976 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.838189396 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.83695621 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.83580652 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839016558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.835964793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.841442418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.838699606 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.838312834 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.83951062 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838321359 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.840615293 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839261696 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.837979523 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.836408979 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837182111 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.838400487 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839553705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.839713113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.836588067 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836666932 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.838247051 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837275536 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835640506 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.839577219 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.835195906 seconds)
  done (took 56.90032645 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.85692379 seconds)
    (2/2) benchmarking "in"...
    done (took 1.860265906 seconds)
  done (took 5.476282104 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835802678 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840562543 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.83928285 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.840291384 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.835795394 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.84001972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.840641735 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.839036933 seconds)
  done (took 16.470257039 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.842945567 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.842009231 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.840872541 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.841792098 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.841083181 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.844450281 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.848445481 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.841416249 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.841940334 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.840754747 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.845292952 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.848133016 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.844311266 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.843062984 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.841789206 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.841915365 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.843886154 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.842216641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.841551218 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.842306973 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842939331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845487296 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.842768505 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.838776327 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.842623938 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.852070691 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.845614686 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.844077322 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841877216 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.844698139 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.841771557 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.840083982 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.844368862 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.843062583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.841549336 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.843612826 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851292719 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.842845835 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.852079501 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.842397889 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843400765 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.83956668 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.843566306 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.845498334 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843880284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.844810835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.84240098 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.839982057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.841318345 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.846428033 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.847113428 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84213007 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.840463867 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.84603462 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.845738085 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.850106885 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.844363036 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.844820971 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.851294143 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.854654751 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.853699081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.849920002 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.844713343 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.844337476 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851188251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.864949123 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.850562239 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.841037703 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.843041279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.844009288 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.850239325 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855865283 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.853861692 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.845572526 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844682176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.844361106 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844890158 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.843597429 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851386865 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.847465243 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.844887222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845295535 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.853878928 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865026611 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.84493224 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.845843206 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.844805741 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.845673934 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.84710666 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.855313163 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.8472183 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.844174881 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.845319123 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.845992337 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.846485208 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.845584088 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.846203586 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.846605669 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.844438895 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.845979896 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.845788559 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.848502163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.855616164 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84708133 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.84625327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.851249457 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.845939488 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.846126001 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.851350428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.846933673 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.846898372 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.846608937 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.851707494 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.843776564 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851713122 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.854167395 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.847153061 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.84701953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.847748397 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.848544484 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855810949 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.870528743 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.84746662 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.846715018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.851176795 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.858840603 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.847982634 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.849547151 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.847279513 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.846126586 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.845644305 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849569162 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.847272215 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.848857424 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.848190199 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849129758 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.847924169 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.849067472 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.848592754 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.84842386 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.849376741 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.848700453 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.849834569 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.850614579 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.84918002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.849800493 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.854474595 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.849538934 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.849760461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.849713566 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.847082206 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.849034175 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.848567945 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.849908217 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.848660499 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849418454 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.847968587 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.849105393 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.849653297 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.849876996 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.850294844 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.849886368 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853552896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.849590907 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.852642901 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.848847111 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.847391803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.849956797 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.849419815 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.849359513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.849965311 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.847246364 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.851129695 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.862368645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.850184753 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.850501487 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.852005046 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.850014347 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852805575 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.849568912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.853298048 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.858276593 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.851158483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.857430763 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.856864109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85167089 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.851168617 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.850305381 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.849943725 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.853113474 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.852992718 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.857285991 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.86344041 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859646488 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.850995183 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.854589828 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.852340144 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.854408598 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.853608752 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.85092037 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.855915592 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.851327622 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851558557 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.85097769 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.852979525 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.854850531 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.849789885 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.851399911 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852397943 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.853568894 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.852775722 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.860185503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.853761944 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.849871918 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.854505147 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.852600809 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.854943351 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.849650565 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.852274971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.851640432 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.851170388 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.85322764 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.860430448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.850338853 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.853224838 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853762635 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.853606303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.855200499 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.852418499 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855493923 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.852238579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.859320067 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.855605684 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.854080733 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.862185621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.856013051 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.852640732 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.856752229 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.853944995 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.853171612 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.856043603 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.862357046 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.854962095 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.854989061 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.856360084 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85550902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855710378 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.860051285 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.8529752 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.854526362 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.855288068 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.85629466 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.853041672 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.855872975 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.855955321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.854618888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85574929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.855175737 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.855224586 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.856437649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.856098937 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.856071798 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.857360261 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857776992 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.864697169 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.860424387 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.855922313 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.85765847 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.857090597 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.859568901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.856906955 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.85632545 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.855116322 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867105778 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.865808559 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863618468 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.858483279 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.85771525 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.862542161 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.855405634 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.860184015 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.855900673 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.857008179 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.857089452 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.856338663 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.853902911 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857640036 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.859572179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858664515 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.859247269 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.862547638 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.856672752 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856890894 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.859586881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.857118631 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.858568854 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.857896458 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.858548168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.858715645 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.85931522 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.856512528 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.857400255 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864667583 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.858311151 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.856335274 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.857370384 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.856506483 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.856548648 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.857987322 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.857691588 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.859999791 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.865049575 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.859917513 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.868726789 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.858112339 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.865197068 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.858363924 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.859555303 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.870601304 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.854783868 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.856433 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.860009624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.859380779 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.866763672 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.860045991 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.859571827 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.863074794 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.859596536 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.858753994 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.864190215 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.859552957 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.858394 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.86042462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.867966063 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.860275227 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.8651903 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.862279532 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.858264951 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.861854973 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.859941958 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.864469447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.862895094 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.860851028 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.862025705 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.860208451 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.863920582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.860409845 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.860671207 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.860752315 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.857679011 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.861211057 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871312813 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.863052185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.864901167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.861143158 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.869915414 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.864450249 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866766735 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.861091068 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.861038864 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.860621485 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.865511536 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.861565891 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86080799 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.862411723 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.861842086 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.860601613 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.866130627 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.860972647 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.862416444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862137629 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.86117772 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.863832091 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868761009 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884421256 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8640562 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.865188963 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.858707547 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.863167945 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.865211588 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.861371292 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.860410764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.862738396 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.874057693 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.870276402 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.864107452 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.864021068 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864080648 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865749836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.862715095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.865144198 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.864206143 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.863347681 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.865808005 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.867378955 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.867278372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.863285524 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.863566969 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.862771197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.867507217 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.872817992 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.863995772 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.86525305 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864229953 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.865255943 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.865096534 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.864877535 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.86362169 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865225938 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.866568177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.869431983 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870604101 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.871167125 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.867899145 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.864541574 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.866153458 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.86521332 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.865018157 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.864059577 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.865511795 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.870283052 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.866989252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.866258709 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.865084248 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.862962756 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.865524582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.867654182 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864063994 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868067796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.869970124 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.86728995 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.8657398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.865546119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865832344 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.863110869 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.866371408 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.873179822 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.869925429 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.876710037 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.875366113 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.871037877 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.867611805 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871170604 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.873717314 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.865220622 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.868125791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.867486985 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.872263288 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.868328109 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.870956177 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867953787 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.873352957 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866279217 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.867739665 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.876980294 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.867994209 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.867575786 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.866497944 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.8722038 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.865563673 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.862990382 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.864918583 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.863962273 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.874888299 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.866210415 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.865689431 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.866815675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.86231389 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.865704341 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.874761031 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.866779897 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.867343991 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.864614823 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.869205007 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872249276 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867247016 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.86472838 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.866630436 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.866173581 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.871636498 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.873907984 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.864228626 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.868914222 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.867452312 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868520251 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871287373 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867367514 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.867566482 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.864758642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.866130952 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868343825 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.864644171 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.867529726 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.864687579 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.865616941 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.869149627 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.865740743 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867594435 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.875724737 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.872891361 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.863590317 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.870265989 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.866028578 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.868757681 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.866245549 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.866182547 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866898529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.86773714 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.865603223 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.866772438 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.865615598 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.873339266 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.879014882 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.86519922 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863336128 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.865281591 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.86689069 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.867364671 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.864435263 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.865849196 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.868911821 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.865993001 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.877814629 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.86590135 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.872766913 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.864362003 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.868220651 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.868629935 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.8659904 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.873867512 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.867271645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.865865227 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.868410285 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.87178668 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.88114017 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865017604 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.873800525 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8929487 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.87279949 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.866985115 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.866465631 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866789036 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.86687602 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.866462047 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.868884851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.866884583 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.865898358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.866466248 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.867105789 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87645938 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.867778709 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.86807941 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.866974268 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.867581497 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.870409828 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.865746119 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.86881714 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867936912 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.869258616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.869576648 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.870418642 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.868120502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879311383 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878198418 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.867787375 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.876757008 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.868067612 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.872761507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.872437108 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.879993495 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.878134523 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.870921181 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.870367909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.871634576 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.869811032 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.866224382 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.873061964 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.870578993 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868046759 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.866500665 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.88310091 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877972358 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.874060352 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869836904 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.871076101 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.870536269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.873466294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.872094718 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871153745 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.8726035 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.871801076 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.874496297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.874976692 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.870871455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.872226122 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.877882792 seconds)
  done (took 1109.597233379 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.870523049 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.873149718 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.868808947 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.867844047 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.86846902 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87450947 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8698777 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.869710313 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.869647772 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.870161996 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.869523823 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.867423095 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.868993427 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.869575129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869309342 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.869036834 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87252646 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.869939653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.869165588 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86975346 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.869271429 seconds)
  done (took 41.054045237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.873082346 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.86997768 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.868240992 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.871552085 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870859306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871947568 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.871130753 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.873726567 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.870265993 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867653559 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.880056085 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871792326 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.870576599 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.870794842 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871354189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872676245 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.874565677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8719578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.87328632 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.870663365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872164821 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.872759375 seconds)
  done (took 42.969285804 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.872507557 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.872280609 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.872098661 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.872893878 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.874254144 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.869644973 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.87000454 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.872799051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.873651867 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.875325195 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.870467222 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.873641501 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.876547447 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.87826723 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.877648364 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.873085164 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.015962104 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.873124289 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.873568321 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.874685147 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.871311187 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.876975801 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.870444266 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.872526794 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.874306803 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.875741456 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.87468585 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.874683817 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.875216295 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.873221178 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.88056928 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874289688 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.875843265 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.876188642 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.873040315 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.877191913 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.877355342 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.877951654 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.872922358 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.87617999 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.882686207 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.8957445 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.877480634 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.880120717 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.875022829 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.875249774 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.879180702 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.883148303 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.871242872 seconds)
  done (took 93.820771402 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.874677936 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.878784309 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.871784732 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.873513987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87478965 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874841362 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.875292375 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877737721 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.87537698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.873708099 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.875858992 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.873510955 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.878072867 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877529327 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.876619572 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874774936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875258285 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.875876405 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.874632835 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875289701 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.875845356 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.877421094 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.877353469 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.877867006 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.87622313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876286212 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875431604 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.876951516 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.875199472 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.873575437 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.876902996 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878003285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.879823223 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.875180283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876174993 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.878191339 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.87632599 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.87580794 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.878951932 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.875277418 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.879906218 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.879668891 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.8780684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.878567881 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877352294 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.875612589 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.876574331 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.876269882 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.876448148 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.87873383 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.879387769 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.876874176 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878776673 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.876726896 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877960539 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.878846526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.874788361 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.87449561 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.87776426 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.876665716 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.875797299 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.878591536 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.875202986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.877290246 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.876737047 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.879155426 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.880625141 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.87985281 seconds)
  done (took 129.406262825 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877994783 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.877907681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879655197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878622077 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.878895335 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.878070439 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.878427811 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.881670094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.879389488 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878778709 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.877469068 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878480391 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.880255731 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.879440989 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881104973 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879906456 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880215899 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.881117435 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.881650571 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879280605 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.881301355 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.880134372 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.881897147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.88193246 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.881271937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879623498 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.883081862 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.881950136 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.883472482 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.880630422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.881140233 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.879395471 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.881540498 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.881514623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.883455748 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.882299604 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881485617 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883821616 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.883103771 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.88507136 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.882398791 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882135484 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880527652 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.883409684 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.884932173 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.882978282 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.88500494 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.883207603 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.883317832 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.886717522 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.883604946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.88239375 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884058348 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.882761146 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.883594631 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.882117502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.883507079 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.883133041 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.884339256 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.884262179 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.886063703 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.883272798 seconds)
  done (took 118.458746171 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.882824986 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.884911673 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.884117058 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.881442565 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.88650354 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.883444558 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.885359648 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.884983252 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.890503524 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.884438961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887380818 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883417926 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883342923 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883930478 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.883785448 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882325749 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881977367 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.883310195 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.885998829 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.882087292 seconds)
  done (took 39.489130476 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.886092265 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.883298298 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.8844082 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883555556 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.886683829 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.883093459 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.88451769 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885923109 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889275898 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885815135 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.88690894 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.885501132 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882540743 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882218984 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.884839187 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.88295774 seconds)
  done (took 31.959021371 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.882957785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.887456847 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.889806998 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.886209958 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883400604 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.882898901 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.885063045 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.889006234 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.885142522 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.887090339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.885796999 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.886996008 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.889319608 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.886139682 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.884410559 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.885866669 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.883575538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.884181285 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.888160106 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.887826751 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.885873147 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.884067532 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.887066358 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.887946716 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.886435487 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.885792159 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.886525567 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.886330342 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.887797849 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.89048511 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.886261757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.886773839 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.885411216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.88698755 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.889812573 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.886563099 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.888004399 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.889381813 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.889088828 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.888427264 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.887798739 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.886588483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.890345996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.88811257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.88668408 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.888911862 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.887220665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.886702864 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.886540288 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.88787785 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.889301218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.890196523 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.88682674 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.889084902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.889096127 seconds)
  done (took 105.591101103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889628693 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.889887577 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.888185341 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.891546771 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.890269123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.887576727 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.889164371 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.888045056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.886523736 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.890713926 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.890184767 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.889773446 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888157914 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.889992896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.889212601 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.890942178 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.88781258 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.887962199 seconds)
  done (took 35.814472295 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.89030793 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890814053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.89140739 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.88912329 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.888386889 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891973987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891146285 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.89180474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894325362 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.887876994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888519569 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.89466262 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887672649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.890901671 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889011073 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888037481 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.891721511 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892419958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.888396634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888940973 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892353008 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.890764651 seconds)
  done (took 43.398285479 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.890235906 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.890123176 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.904720753 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.908558039 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.914450739 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.923482837 seconds)
  done (took 13.240377765 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889399962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.891629066 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888803424 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898339822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.891887249 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891281918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889294743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890117307 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897289053 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890467137 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890393134 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892235287 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892618516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893416864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893098595 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893274872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890027826 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890507032 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89118264 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895941787 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892557361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89320923 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89060935 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892284334 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892270533 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89270239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894447978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891957252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891928995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894994502 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893197955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891720172 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896043336 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891452207 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894131103 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894198778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891170787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894053959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893484725 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.889653904 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.891767619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895430197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893605942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891162251 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893818941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893601808 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893286698 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892453257 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891921778 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89584826 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893660679 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892474325 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894871436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895981398 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894385926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895716647 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893821239 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89287743 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894875255 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893539006 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893592397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895678995 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892547563 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893915592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895724082 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892123358 seconds)
  done (took 126.744616911 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892952288 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895954381 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892866826 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894409062 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895330364 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893982315 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892980852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895494841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895562266 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895139756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897463049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893525131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893801178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896600747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894264921 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897592308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895618851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894874497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894712224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897859394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895928998 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894100367 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896092118 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893684083 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895331347 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89582803 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895105487 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894195877 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895504516 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894735695 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894788299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894758121 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894838319 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894205377 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894028699 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896494298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896195268 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896574814 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895122106 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899131406 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894839259 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899470039 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895832745 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896165194 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896403931 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893579087 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896528898 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895476469 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895121035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897138385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897305006 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895591033 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898440653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896069512 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89699068 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897168118 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895191801 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899109128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897702278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899523312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896026867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897516819 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898392308 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896088567 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89597537 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897112526 seconds)
  done (took 126.938227578 seconds)
done (took 2587.849738834 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.901528092 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.909412345 seconds)
  done (took 15.625779034 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.063072473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.016986126 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.904845568 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.953176623 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.899980199 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.926759643 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.896926411 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.898911509 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.90202146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.902504286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.904304204 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.088597362 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.908120462 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.900625292 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.903529803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.997916429 seconds)
  done (took 52.895157515 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.906100683 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.910181566 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.917260603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.908958799 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.906861458 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.919172914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.941579025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.908258227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.940227987 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.916724604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.974637531 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.914884196 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.906042927 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.953759911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.916501887 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.920537613 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.997428962 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.976661222 seconds)
  done (took 36.555889824 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.981760273 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.90613827 seconds)
  done (took 10.71565033 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.924598516 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.939049072 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.981989783 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.899926594 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.916815333 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.935830201 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.942572791 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.942347434 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.902924944 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.116276586 seconds)
  done (took 71.329372691 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.92250854 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.917092895 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.917529926 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.914855865 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.909360143 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.911936943 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.914729143 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.91412738 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.591525451 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.967528235 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.921968771 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.923112282 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.915154734 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.917348474 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.915522634 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.940742844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.037405428 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.915190462 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.914790295 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.922767128 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.917005715 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.97631542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.931932334 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.919608086 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.948489859 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.583657549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.923915091 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.923250664 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.016360811 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.915484112 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.915702685 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.917482587 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.919874519 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.333296935 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.186827295 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.91713172 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.930523307 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.924895911 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.915256525 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029292059 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.918897722 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.921469229 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.708083104 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.163833504 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.016006806 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.960603236 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.233972634 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.936073685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.919192633 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.948631093 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.91996636 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.919691207 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.932412514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.415398595 seconds)
  done (took 135.004952648 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.916867344 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.264689779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.083551594 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.91320516 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200743094 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.12458452 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.913866122 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.964033208 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.912767544 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.149509838 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.169703054 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.023555216 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.91507454 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.915528207 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.915278987 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.911042933 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075981132 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.990549711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.915460419 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.911836595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.947329521 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.161171243 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.039280611 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.917035019 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.94472004 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.130366499 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.040396806 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.021216908 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.701316771 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.916304857 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.981464479 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.914451508 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.918091573 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.911431169 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.07481551 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.013002017 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000680852 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.915493767 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.91330313 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.916625294 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.587334913 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117416054 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.013600946 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.060752363 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119750262 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122809834 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.699621178 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.915117968 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.6682407 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.083969017 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.149044426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.15532644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.041321167 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.917901081 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.178774576 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.913660425 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.91665732 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.169077953 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061578035 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.018839203 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.916420549 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.916318892 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.913867692 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164849832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.917157845 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.015527844 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.917641976 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.915393659 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.018133191 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.019266153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.057181207 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131313924 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.956411797 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.875708618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.45894406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.168586027 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.985000779 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169281982 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.920439572 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.916166189 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000670824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.75791656 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.173894336 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.171412875 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.17404332 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.955187786 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.639472375 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.916284135 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.151990332 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.142163419 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.17922938 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125967262 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.162814484 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.248867096 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.917519788 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.917451437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.144954709 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.055465532 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.920250934 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.265227193 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151777648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.472376405 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.941654357 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229025154 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.052256285 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.91913157 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.560573882 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.920801787 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.151382796 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.963947701 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.919132775 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.917996797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.145241301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.909755531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.919366881 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.56771284 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.983041225 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.922150211 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162104966 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.921022586 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196882693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.923237116 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.163818248 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.368383461 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.953602055 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.094812997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126312034 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.921512081 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166689464 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.169299775 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038778206 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147325939 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.619840081 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.921294377 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.214352836 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.922081384 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.921372024 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094100377 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.922428854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.068277283 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.920553624 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.221086825 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946382526 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.164437169 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.922430609 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.184270369 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.958069351 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.972962983 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.921874874 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.054398242 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923688245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.745788084 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.082635353 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.923113051 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.919878795 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.470146691 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.922389845 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.074137356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.158920943 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.946784963 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.000157937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.594250092 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.923217325 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.006091547 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948286731 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.315456194 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.922820572 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.177748975 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.922187849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.920336127 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.92233505 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.168588545 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.108423006 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.924151738 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.922225491 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.834124362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.923078711 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.921478076 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.108347687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.267794328 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.920722878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13147499 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.923446706 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051698156 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.924466619 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.993846882 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.260131934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.923380957 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.921021533 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.923704571 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.922948449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.926184771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136781436 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.96188525 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.445605542 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.065697046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.20274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.237427227 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.180203121 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.969356665 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.925285733 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.18174287 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.924169725 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.990784014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.928073671 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948801674 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162537903 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.927758761 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.136884034 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20984247 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.775920883 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976672306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.926361394 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.927073393 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.922131387 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.076125335 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.01053377 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.924957339 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.925376474 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.045002532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05026544 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.13732253 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.925008069 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.983477052 seconds)
  done (took 913.613978694 seconds)
done (took 1237.555294501 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.925692839 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.925845313 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.909780468 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 7.365838405 seconds)
  done (took 29.973204471 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.929693789 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.928015326 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.928957826 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.926969203 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.931193663 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.927376637 seconds)
  done (took 13.415401404 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.9665474 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.92005471 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.922808304 seconds)
  done (took 21.654575126 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.996410195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.312835406 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.032525459 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3600035 seconds)
  done (took 10.54581678 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.930128865 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.928636648 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.927935929 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.932437245 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.931079151 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.932982744 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.930596725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.931599074 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.932311767 seconds)
  done (took 19.225054594 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.931570974 seconds)
done (took 100.592592858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.22687921 seconds)
    (2/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.863197889 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.067298879 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.974683618 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.497050256 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.996897111 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.923480988 seconds)
    (8/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.922804063 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.134768627 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.022826622 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.908282991 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.213030863 seconds)
    (13/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.813956496 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.94711211 seconds)
    (15/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.437442334 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.729802294 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.258727668 seconds)
    (18/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.922559639 seconds)
    (19/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.492088938 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.912379097 seconds)
    (21/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.533873684 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.9437726 seconds)
    (23/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.152836478 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.084776602 seconds)
    (25/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.914181844 seconds)
    (26/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.023942014 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.505967464 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.213024935 seconds)
    (29/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.0897541 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.279786128 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.912548663 seconds)
    (32/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.129399451 seconds)
    (33/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.948919072 seconds)
    (34/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.056980879 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.029340636 seconds)
    (36/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.445152463 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.077138613 seconds)
    (38/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.020588671 seconds)
    (39/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.29020173 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.703829028 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.069685824 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.100704609 seconds)
    (43/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.059582255 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.033105119 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.623304148 seconds)
    (46/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.941491563 seconds)
    (47/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.912604758 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 3.423460917 seconds)
    (49/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.453389642 seconds)
    (50/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.935029572 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.617780839 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.19631021 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.182062496 seconds)
    (54/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.988625999 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.269898515 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.170611569 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.086956758 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.948322528 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.486812109 seconds)
    (60/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.072923842 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.025707673 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.914158637 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.142392597 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.94261482 seconds)
    (65/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.930008518 seconds)
    (66/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.085617404 seconds)
    (67/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.995823584 seconds)
    (68/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.244552684 seconds)
    (69/309) benchmarking ("sort", Int8, false)...
    done (took 4.830090074 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.234447847 seconds)
    (71/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.953429039 seconds)
    (72/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.025953282 seconds)
    (73/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.918273917 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.454414881 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.330713196 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.918332548 seconds)
    (77/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.490162079 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.024645204 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.249635509 seconds)
    (80/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.930775068 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.79113824 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.358411581 seconds)
    (83/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.298740832 seconds)
    (84/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.024023456 seconds)
    (85/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.930504291 seconds)
    (86/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.21758776 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.917474321 seconds)
    (88/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.034479879 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.926149696 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.097378534 seconds)
    (91/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.081571885 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.412687782 seconds)
    (93/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.414828872 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.919444114 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 2.620932767 seconds)
    (96/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.832976226 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.946819164 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.949156524 seconds)
    (99/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.022536554 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.979930808 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147544267 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.863815256 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.855107991 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.073792883 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.935601845 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.187070351 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.960628271 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.593570274 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.132974595 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.938249261 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.931892663 seconds)
    (112/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.957895263 seconds)
    (113/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.216872095 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.340351808 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.107101866 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.17281209 seconds)
    (117/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.319984638 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.964828096 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.992148087 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.931644751 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 7.009421189 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.951133997 seconds)
    (123/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.940738274 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.221097504 seconds)
    (125/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.370305648 seconds)
    (126/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.952965245 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.932857475 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 8.803235743 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.029488038 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.881031128 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.009426361 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.965350345 seconds)
    (133/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.932459015 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 3.54942119 seconds)
    (135/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.957611098 seconds)
    (136/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.057252589 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.919951494 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.157053121 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.189156325 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.037238436 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.868526867 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.199884886 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.326548196 seconds)
    (144/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.02443947 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.277298396 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.869946674 seconds)
    (147/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.961814756 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.932639739 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.039786596 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.243108132 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.621254584 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.9559385 seconds)
    (153/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.070692823 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.260026114 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.999769749 seconds)
    (156/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.959748681 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.921375783 seconds)
    (158/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.646551099 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.949932444 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.229495999 seconds)
    (161/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.042082938 seconds)
    (162/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.894061367 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.960604315 seconds)
    (164/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.000523534 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.961001098 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.923752571 seconds)
    (167/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.128448648 seconds)
    (168/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.301007581 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.940523834 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.119381018 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.939153223 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.008536748 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.30519148 seconds)
    (174/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.187619602 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.078139277 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.170980855 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.031874445 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.322250014 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.960112173 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.920896078 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.146555069 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.247319045 seconds)
    (183/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.927807941 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.415258691 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.962071556 seconds)
    (186/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.030231608 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.31310703 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.39541496 seconds)
    (189/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.323508827 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.006934595 seconds)
    (191/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.100741107 seconds)
    (192/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.111011226 seconds)
    (193/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.356315041 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.943072687 seconds)
    (195/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.196939141 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.009977274 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.251113337 seconds)
    (198/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.042151658 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.939341281 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.440244784 seconds)
    (201/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.273328129 seconds)
    (202/309) benchmarking ("sort", BigInt, false)...
    done (took 6.940800899 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.857916004 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.259010029 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.937815385 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.007472461 seconds)
    (207/309) benchmarking ("sort", Float32, false)...
    done (took 5.647499137 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.798768358 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.076592647 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 6.722489031 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.942812665 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.188949087 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.173533411 seconds)
    (214/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.016630209 seconds)
    (215/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.070881668 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.083128703 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.779349359 seconds)
    (218/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.238481704 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.356657168 seconds)
    (220/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.028598765 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.14342206 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.788640621 seconds)
    (223/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.019901879 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.36021773 seconds)
    (225/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.928020479 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.017000372 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.968400947 seconds)
    (228/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950275611 seconds)
    (229/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.221333829 seconds)
    (230/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.031054581 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.092215886 seconds)
    (232/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.855983461 seconds)
    (233/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.639813506 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.037377897 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.963841084 seconds)
    (236/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.037217111 seconds)
    (237/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.171979364 seconds)
    (238/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.94596387 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.325592174 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.070822264 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.125443354 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.907529811 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.060238108 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.015872521 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.069459315 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.296950772 seconds)
    (247/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.098096368 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.971994525 seconds)
    (249/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.955906718 seconds)
    (250/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.982634985 seconds)
    (251/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.130485566 seconds)
    (252/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.036647567 seconds)
    (253/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.327870809 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.651529463 seconds)
    (255/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.984573647 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.077895583 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.180701165 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.334698432 seconds)
    (259/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.945211706 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.123379515 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.002044671 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.967158273 seconds)
    (263/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.977923433 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.247537574 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.301215652 seconds)
    (266/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.085304449 seconds)
    (267/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.109355888 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.084947564 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.033275069 seconds)
    (270/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.338702078 seconds)
    (271/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.288042246 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.105495858 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.292986723 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.569007448 seconds)
    (275/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.124947958 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.971002185 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.175445606 seconds)
    (278/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.402870094 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.947437043 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.269909737 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.753188948 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.025390627 seconds)
    (283/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.182236058 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.34882617 seconds)
    (285/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142740184 seconds)
    (286/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.099348591 seconds)
    (287/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.454975789 seconds)
    (288/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.952438571 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.019525815 seconds)
    (290/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.420791702 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.044432481 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.932220971 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.047415014 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.769572954 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.120169427 seconds)
    (296/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.371368795 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.602026067 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.22028934 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.10408835 seconds)
    (300/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.054223853 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.978532985 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.941889572 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.101817952 seconds)
    (304/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.058356382 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.224360185 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.166886078 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.564223991 seconds)
    (308/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.00987608 seconds)
    (309/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.932075006 seconds)
  done (took 1028.872769086 seconds)
done (took 1030.778580757 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.977625521 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.969761572 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.953416276 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.975063356 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.064416685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.98087305 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.965038097 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.955847336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.001913911 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.003497047 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.949152924 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.97969196 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.954290549 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.954588168 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.954555661 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.96540672 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.266671682 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.982683923 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.970681186 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.963128923 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.969653361 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.95022352 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.005089978 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.98105402 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.96055473 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.959729591 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.956514286 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.97318621 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.064858149 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.955451007 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.958943301 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.965243926 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.267344561 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.983668863 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.952774062 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.973082081 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.965524406 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.965783709 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.960685109 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.985587799 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.354389832 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.992164131 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.955026699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.957212359 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.957015262 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.95926096 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.956699834 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.962837782 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.967117359 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.967528759 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348011379 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.008625775 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.95680954 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.958009894 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.967858652 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.955153254 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.961543167 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.971239423 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.974122899 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.970071377 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.253893804 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.991994371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.959346893 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.97238435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.963992925 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.382563436 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.992583735 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.963942598 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357001438 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.000814372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.384189429 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.001441223 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.958971103 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.970918912 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.988569069 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.270685282 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.983561463 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.957744131 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.96480722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.954447141 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.968043222 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.969763609 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.962854326 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.95981341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.969885907 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.985429842 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.971402548 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.958729823 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.967852126 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.976833635 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.964123326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.96851221 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.962349547 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.955113578 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.968900079 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.964164518 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.960695661 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.959057456 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.964314815 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.970906227 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.354701335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.012248607 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.957005445 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.956677136 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.959990527 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.971765647 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355957573 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.994443116 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.982071014 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.00805182 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.962111376 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.25717436 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.987472108 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.972835587 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.970873749 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.964519155 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.956951776 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.256050038 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379620825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.011216604 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.963272659 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.955919752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.97611366 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.962927467 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.957434434 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.27223231 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.991650282 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.973417704 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.081248597 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.97249935 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.991778425 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.956601376 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.964684461 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.990088014 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97485959 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.990783001 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.965013061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.975208974 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.976063282 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.960887504 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.97139747 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.971896453 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.964815142 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.968526124 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.956508975 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.991084191 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.972841148 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.973323897 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.983373406 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.081590344 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.959565278 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.258262784 seconds)
done (took 307.418099148 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.03205213 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.950703273 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.058268877 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.958569966 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.040295578 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.043033654 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.954873937 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.956344069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.956836851 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.338728593 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.957655055 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.967098195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.954857905 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.955586933 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.039451212 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.956552264 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.956346267 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.295081486 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.96058466 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.031796043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.961268464 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.954494338 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.959006555 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.332800632 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.95632951 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.953654722 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.032808126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.958421012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.298799465 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.953220742 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.951953539 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.299559165 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.049999515 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.97715564 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.969743836 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.966358225 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.040352163 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.962547007 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.040921254 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.042621329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.060738981 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.00036162 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.955377945 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.958731443 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.963969562 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.960934953 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.957600544 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.988278551 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.953826559 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.957927393 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.294851218 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.971384032 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.967080824 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.958424837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.958072088 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.981060323 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.959675925 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.962562774 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.051353323 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.960399576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.022719965 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.336506703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.33293991 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.96120105 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.955642702 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.959068237 seconds)
  done (took 190.288265833 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.027521535 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.045613503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.026945046 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.962404633 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.012888996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.030127478 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.9677188 seconds)
  done (took 15.946774969 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.968779857 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960966919 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.013409897 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.014631733 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.96159165 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.116886764 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.961854357 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.973853312 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.967689761 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.014555205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.962692649 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962222975 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.960421153 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.963673653 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.014303541 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.975219602 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.081179463 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.964189328 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.963590123 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.111867381 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.960006641 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.97145182 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.997348552 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.975994237 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.963411452 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.968649074 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.550117759 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.962282748 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.959507054 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.961788691 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960702601 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.005038548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.963903633 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.958787702 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960262586 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.079107988 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.96334842 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.960125674 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.967808144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.960419128 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.964109097 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.965556335 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.964287327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.9613476 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.963949736 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.98907635 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.963367454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.963910358 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.964819438 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.966149113 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.000129081 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.968503462 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.962959281 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.963250429 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.020789445 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.970825595 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.970191138 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.961308655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.966169486 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.963071811 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.115495387 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.020989088 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.965459546 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.017052696 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.965281292 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.965948096 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.967381283 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.964947286 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.062784485 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.96359962 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.018154701 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.965511068 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.125918187 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.989362401 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.965827549 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.96809884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.970888551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.966057717 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.964200603 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.972732377 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.963051255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.968772975 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.974867315 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.964802647 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.967346416 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.080761752 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.074082324 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.96336123 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.981294789 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.976381903 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.963941782 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.003830751 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.967655771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.964661486 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.028112854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.084369692 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.022718818 seconds)
  done (took 215.120421368 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.972499735 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.976651435 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.967772294 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.982763307 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.965463535 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.967893973 seconds)
  done (took 13.71283329 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.969599999 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.969938828 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.967907762 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.966846318 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.968421951 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.968775042 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.967356195 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.968635753 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.972000365 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.967841475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.970160405 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.967541551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.96910037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.967501009 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.968140977 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.966667112 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.967975192 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.966011142 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.968551151 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.96866841 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.122347919 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.968946702 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.966579837 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.967480669 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.974132667 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.969385558 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.978135608 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.968696289 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.969798985 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.980275421 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.969708382 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.970624654 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.970162734 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.977616657 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.975585162 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.972341506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.972578772 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.972957844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.965336279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.970692568 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.969881032 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.968077032 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.971113414 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.971639876 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.974112985 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.974903192 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.975659995 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.982681628 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.97076332 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.977686401 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.969683563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.972437022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.972895408 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.97105762 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.973493047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.97971272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.977671203 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.975701437 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.970441702 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.97160992 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.973233082 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.971063207 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.971383542 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.980170689 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.968782896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.971192898 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.974419781 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.976532034 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.972618935 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.973965835 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.979110301 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.969699226 seconds)
  done (took 144.986725403 seconds)
done (took 581.944588644 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.174447877 seconds)
  done (took 9.058358028 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.132905681 seconds)
  done (took 9.058218234 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.401589581 seconds)
  done (took 10.289041333 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.97742742 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.007845703 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.975638023 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.968554555 seconds)
  done (took 29.835514799 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.073394168 seconds)
  done (took 8.95676473 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.99038527 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.963553207 seconds)
  done (took 15.870403565 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.080605976 seconds)
  done (took 8.965511481 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.047318624 seconds)
  done (took 8.954958595 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.971089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.999718326 seconds)
  done (took 15.870009599 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.951074607 seconds)
  done (took 8.833948484 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.748498488 seconds)
  done (took 11.733522259 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.984923938 seconds)
  done (took 8.975503423 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.014683132 seconds)
  done (took 8.899609679 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.04957782 seconds)
  done (took 8.932798748 seconds)
done (took 166.117156765 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.966430089 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.962040726 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.963229565 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.961359399 seconds)
  done (took 29.737118409 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.004282754 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.005014551 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.008362612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.015029864 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.009118749 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.022322387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.995950166 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.010229723 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.015890869 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.009915599 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.009154699 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.008458938 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.005688166 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.999016158 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.007398676 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.006146236 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.019147694 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.006253132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.997691668 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.009410477 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.973501815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.017256819 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.006998457 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.972183531 seconds)
  done (took 50.019445032 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.169228349 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.046932013 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.127690096 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.026627426 seconds)
  done (took 10.256252218 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.024110389 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.029137585 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.037379291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.076200527 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.099043602 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.036398873 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.000056773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.996824871 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.982561877 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.027397816 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.101971547 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.022756879 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.117508841 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.976032368 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.160079558 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.974553067 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.975223016 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.025134296 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.078920707 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.091578171 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.974396361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.025758338 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.028699775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.023031402 seconds)
  done (took 50.773206689 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.972892373 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.980627792 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.980314803 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.973406346 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.974614896 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.975086696 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.979983079 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.974302265 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.997469502 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.975885485 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.974286679 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.973556271 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.974570049 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.974256611 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.974819034 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.98623859 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.988574142 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.976640598 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.979962361 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.979348566 seconds)
  done (took 41.451541732 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.968250714 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.820859017 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.321433029 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.225313146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.970073127 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.972224026 seconds)
  done (took 32.164166474 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.988129344 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.979353473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.974615149 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.031517213 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.113145719 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.981150756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.975781978 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.987514399 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.019161797 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.03686999 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.991509194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.004523846 seconds)
  done (took 25.970393073 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.969910866 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.972550225 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.9692043 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.986296443 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.987055675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.979838477 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.984723704 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.970318924 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.986321214 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.992992854 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.980964966 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.988068187 seconds)
  done (took 45.65926095 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061276574 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.859451598 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.633524107 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691023246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.504277229 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179313253 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.497610938 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.150932525 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.973727025 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245787571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625627872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218925074 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.223677548 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969344022 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.037083842 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.440693379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272065181 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203193608 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996904367 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.726498193 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094481652 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.504404188 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.726379003 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104763754 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177669598 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.104338471 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.232186762 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928180442 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110672108 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010680679 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982155519 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.973900807 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246807055 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195834384 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102020468 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981241518 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627669737 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.687254266 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.964183567 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.679463298 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.731609464 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.108202085 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981615779 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974349986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.904248372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362915023 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248397592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.975426045 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.675851194 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.973976921 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986380553 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064049617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.976924951 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.788905158 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.927602618 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.24781051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.970320665 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980108855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.540883192 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.07980425 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489938028 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.006478198 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.065185488 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680739767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.451687697 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.131395831 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.975949083 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973319987 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902266907 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.733993469 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097535847 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.118762971 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.988344245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.621711762 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275486439 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.685964913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.059163764 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263955175 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.653141125 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.006217052 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195980493 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926684054 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.89924037 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.824610064 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.901109355 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237701572 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002491215 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.635001133 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007387101 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.138638125 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.974115672 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990140192 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971227374 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.187251202 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.847941654 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963829431 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.546852919 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255827778 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992795513 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.145243942 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905720686 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.973623362 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226360061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.184865833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.104143939 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.545544467 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135208991 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971632375 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.05775968 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.782284888 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083565041 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.255252824 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.039858953 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.079235629 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108913737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.933109567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28128108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000120843 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.145467196 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.63919715 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.244367675 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.299839826 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22489784 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058372062 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982070938 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.974922006 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.745816367 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.605922869 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.199600135 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.979003203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364106561 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083339954 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.978265418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90740244 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.631739562 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.659361009 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.085190804 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.198269385 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.82402162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35229438 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908674663 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122964962 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083714248 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.193345704 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.633394057 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.061132507 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234585032 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362446769 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.212175689 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086243818 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991852666 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092948315 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995282854 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.287633698 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330171073 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.979378071 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.983749941 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.737337589 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.056119538 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984626544 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.986661697 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776099203 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269326403 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013503598 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980916914 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.916018063 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.995828907 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064058483 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988129155 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988315562 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.502584252 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.731356927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.988015087 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.627778666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203341116 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989903869 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.752616894 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180828971 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.061893648 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263507958 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051138883 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.913651338 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.68210676 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.683208591 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983233352 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917033391 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.981099404 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99088424 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990635419 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.206352052 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270771399 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.036697198 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.683772889 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.105468078 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993752954 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.987944461 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98420161 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.481394864 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.109085251 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498809922 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.093271034 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118084688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.998215067 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.91763436 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.987741555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987787104 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.98466913 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.948212683 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034430123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.711648669 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322329995 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241940899 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.630450602 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997067032 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.801536891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.118203765 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.005135226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.584951637 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958517522 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.077437725 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048792565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.99496648 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.770217571 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760999896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.552353816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295872019 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318801889 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441685404 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.36307093 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307141597 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157332649 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215580863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.512878304 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046308791 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159552269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924287782 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067306505 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.641779472 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344889533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998565816 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209470219 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382916248 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.642440148 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149727056 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194794511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020960912 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.792412806 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.013597207 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.509519208 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140701495 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634336832 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218472121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153282703 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.591023093 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.100095012 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.990918686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466984284 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067497651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.694559884 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.347190344 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387908719 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.746791958 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364902711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.985864445 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429363733 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351500736 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.202936687 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.174497824 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92040198 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997861841 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.996923139 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.988695181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.964685768 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.866391948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.254429442 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000919623 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.220782645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.149943375 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.364641022 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.899889354 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.9915369 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98896856 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29590803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.74053574 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228091768 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.334757977 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.560635213 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9949788 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.916811067 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.918078093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.684240196 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.995075432 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955179842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209535916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.085010195 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931024691 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375688344 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290103973 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233634056 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.993648806 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.266287684 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265675461 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.714276399 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008086519 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.080588411 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.601880994 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.743055863 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.212024345 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.223164661 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792339241 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.217897289 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.682691251 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.961730956 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.992494066 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20268426 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.211798043 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.654028517 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24527427 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.715340331 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.000375983 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365656016 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058636142 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.659848917 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210887507 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.085287235 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00065325 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074230767 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001926613 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.00131865 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.002680158 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035611899 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.680934889 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.130315062 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.004578454 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081550319 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.12428104 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.587996595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.002308603 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282328552 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366902719 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341523483 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062138621 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.994823387 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99472791 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928470395 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128152326 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.436846481 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266017621 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124192662 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.129295888 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016822525 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.606458781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284663569 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306328232 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264867959 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.885612303 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993844808 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.080260353 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.216438728 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004190048 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.196857757 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215179623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312419991 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.456221385 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.126636291 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257630549 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261026423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354205283 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.985378799 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579599761 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.001130504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.526597096 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.033197145 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.691244075 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.285977808 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004418441 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214970126 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.013593956 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.187441834 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.446701955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.719879517 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3609053 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.993882496 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053656511 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282184255 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40946788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312638223 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078716657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001151051 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.69189543 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128437893 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.906153299 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.241523292 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987331084 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195505418 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.698870539 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992331803 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276505685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305831146 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.981845359 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.931045656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032648212 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.984095367 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198566003 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246292677 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224436619 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988065588 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.982102642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.790518993 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260676388 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041094291 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903025408 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.97184961 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067987381 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212883595 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990073124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.491237639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.67095148 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273059761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.890716893 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986079141 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366686848 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414862665 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31414648 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.498902263 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193120483 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.517700202 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.813141564 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329107243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.963423591 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358101734 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329874616 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.960911051 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461961158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061129707 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.242605678 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289878978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.964341509 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816752168 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.037418779 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206294049 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582060358 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924082672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987663091 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.049424881 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.983465229 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.116113771 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995170768 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.965172456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862370607 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.825768374 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479496433 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.98878153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.097601033 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.602184089 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.539481769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087895727 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142498881 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986004064 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.688087545 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.277443284 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23829523 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.500411826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.053714371 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.989601751 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986929209 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.912661892 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.179494899 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.181012767 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292247433 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.332699829 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.090865146 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.990627893 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.20135328 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195609801 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.685727627 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157927361 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378827454 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094495268 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.917160562 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.70000899 seconds)
  done (took 1732.878169601 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997426851 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.002744678 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.989644992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.986198043 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.012235116 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005855821 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.042278604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988019701 seconds)
  done (took 57.92973101 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.986870763 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.190114494 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.996153528 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.989568941 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.021233595 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.988705445 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.188304597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.999124041 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.008175746 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.000287968 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.992386802 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.988257402 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.719575307 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.014230759 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.987950228 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.00071354 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.000307233 seconds)
  done (took 76.985999227 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.989444911 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.378794787 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.006613954 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.01463241 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.964802269 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.994855297 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.013565747 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.024626113 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.993875455 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.170971177 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.323382559 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.99957139 seconds)
  done (took 91.780708262 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004663961 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.994975015 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.997232986 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.995026723 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.996839849 seconds)
  done (took 11.903705185 seconds)
done (took 2259.405590564 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.232725609 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.180691849 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.220683563 seconds)
  done (took 6.306295427 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.137144268 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.186461688 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.306195116 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.324952473 seconds)
  done (took 10.866027881 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.287002777 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.359738887 seconds)
  done (took 6.551574379 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.319803082 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.019572649 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.368067397 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.991320773 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.990974544 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.988275875 seconds)
  done (took 22.883395175 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.995576155 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.996876513 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.993918575 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.996569544 seconds)
  done (took 9.889648396 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.98004156 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.688998086 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.978507228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.995341127 seconds)
  done (took 21.550835152 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.741330277 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.118862261 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.740023981 seconds)
  done (took 9.508282728 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.590720792 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.227521644 seconds)
  done (took 9.725744502 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.155332481 seconds)
  done (took 4.061681028 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.024424282 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.264823315 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.519526189 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.530160656 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.607151753 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.842909272 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.321746765 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.225862673 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.434602594 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.450680844 seconds)
  done (took 26.127980004 seconds)
done (took 143.316383756 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.342351407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.021172574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.191674108 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.3537082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.231415228 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.193306905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.212594087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.347318693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.034776097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.024321104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.355805784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.22688147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.161610946 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013783811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.16818931 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012919963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.223760206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.367023085 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.043647103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.283344701 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.220485528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.002474983 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.194361411 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.022072022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.228905385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.144141076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.549732106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.014727758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.186042152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.558743587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.148160123 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.417730486 seconds)
  done (took 172.405589404 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.997012298 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.993297203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.99263599 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.992374726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.451321098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.996109654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.993617792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.994503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.410153303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.400691854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.991592435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.442180452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.995639517 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.991925217 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.994102929 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.993911921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.585501479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.992638957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.99306107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.993623712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.992878831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.279973687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.995115993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.288388844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.572896023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.99458526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.993716476 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.991659774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.989426615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.996129559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989570163 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.988821982 seconds)
  done (took 213.181926193 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.984584318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.995268358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.981762887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.977597506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.9834141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.976939095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.97911807 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.977613158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.761368031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.751038669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.976279371 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.977338568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978797794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.975142838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973974996 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.974417851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.983567645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.988745516 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.990534086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.998059875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.995450581 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.743999232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.997022245 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.732960349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.981922264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.985212725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.971446494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.98522929 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.9881736 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987763693 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.992412721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972945431 seconds)
  done (took 224.434976383 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.234399476 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.989390411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.980697261 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885914844 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.978280254 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.978079511 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.986302338 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.223729342 seconds)
  done (took 20.170228974 seconds)
done (took 632.10935416 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.453363041 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.293863857 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.149803813 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.996464645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.257993443 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.023235121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.987522914 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.054341504 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.608238988 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.061027511 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.640664553 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.009737588 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.730024574 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.018772357 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.1152275 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.044914687 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.581929552 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.677571155 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.164067582 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.064833953 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.161261175 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916120009 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.076039607 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.647595875 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.751909135 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.971641891 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.064454038 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.58908604 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.999672109 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.152698294 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.742893568 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.303142477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.002522254 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.98446606 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.043686953 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.022696814 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.266114421 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.00152383 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.10885617 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723165429 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.067598647 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519326258 seconds)
  done (took 106.936765891 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.959714768 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.957065596 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.958906201 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.955577163 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.957074509 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.957556033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.954944528 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.956430573 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.958667973 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.955797918 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.95851671 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.957986766 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.958112492 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.956157004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.956293738 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.957284722 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.959681504 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.958308647 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.956184105 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.956459996 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.956585993 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.959466156 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.970925707 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957876768 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.958376269 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.956689552 seconds)
  done (took 52.800450186 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.972021231 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.121864258 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.213224088 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993313896 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.97022442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.973481542 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.991229129 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.975931648 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.972145312 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.972961222 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.071701762 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.975977832 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.990660911 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.214116988 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.990311947 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.971344327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.974205283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.971474925 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.130353408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.990643747 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.992120896 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.978574382 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.989934675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.983733373 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.97354257 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975048511 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.976934971 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.412733348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.985407537 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.066603515 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.0208843 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.998425765 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.335463111 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.227170485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.028978707 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.982990862 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.970634871 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.071333203 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978874426 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.971713772 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.991161928 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.974188065 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.213458882 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.462924876 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.98845482 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.974454159 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.420002056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.078120749 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.015154309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.98402214 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.215101581 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.991819381 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.975677687 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.973932263 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.009118215 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.979230742 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.973239561 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.279031673 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.983494501 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.993543435 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97844408 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.977932747 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.134181762 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982795927 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.125272734 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.98342585 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.978116481 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.978567244 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.217122984 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992815005 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.462896183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.991621307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.976911904 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.070422414 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.133136829 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.455632698 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.989163311 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136351386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.352825094 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.002947543 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.983306544 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.40339525 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.007028354 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.982349272 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.978588777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.977856618 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.977304406 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.023872381 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.995839675 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.401791317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.475057369 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.296616736 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.004063972 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.990202301 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.978481946 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278933836 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.987682422 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.980021387 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.212957114 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.478230582 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.993216345 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.985440583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.456896214 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.995345412 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.99720339 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.990235626 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.222166363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.996480207 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.02654189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.979159687 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.987310331 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.984332437 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.998920377 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.986017699 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.979656196 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.452711825 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.091574247 seconds)
  done (took 244.17695651 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.973378256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.975901687 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.972560006 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.975204891 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.972407763 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.97810791 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.974445398 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.973115416 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.979077015 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.973272914 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.973264572 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.973197583 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97693751 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.978078477 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.001938454 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.978437458 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.576841057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.974485367 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.972106453 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.986978072 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.623226147 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.973201894 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968302776 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.967181085 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.968364563 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.967919228 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.976353661 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.990209956 seconds)
  done (took 170.467715652 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.9762488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087421785 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.994106052 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.009598757 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.983658334 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.971183406 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.99575559 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.988377166 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.979872357 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.970203722 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.969540109 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.032955902 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.983279989 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069642376 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.002419666 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.003167598 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.073606673 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.980159334 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.970032346 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.969525443 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.001778712 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.967184479 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.034487249 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.097419271 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.991367969 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088613615 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.978958311 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.975529773 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972078677 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.089578591 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.988246737 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.033341292 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.999727933 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.990470936 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092395601 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087756319 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076449574 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.001905086 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.974761471 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.970874587 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.97046528 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.961066825 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088422044 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995144195 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.973529035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.078117782 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.990195717 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.97406774 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.981885403 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.969740818 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.988994065 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.991310292 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03967652 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.104989446 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.007369145 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.998028268 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.99728143 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.258983305 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982455743 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.070541321 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.966386274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09027964 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.995022658 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.961543693 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.975113817 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.978767556 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.002178495 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.005232022 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074881643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.981173428 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070890411 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.008571295 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.979951476 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.972350279 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.975262624 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089262248 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.09016229 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.010029019 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.015748321 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.000956829 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.965485352 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.970583011 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.959777321 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987939493 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.975111516 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.085106709 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.087523299 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.980471921 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.971158641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.973352628 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.973401306 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.996186585 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.093903839 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.009891438 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.0636117 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.040238551 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.045421117 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.987183806 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.99421275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.972640359 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.032246793 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.985106732 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.980274978 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.30801223 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.038899982 seconds)
  done (took 213.457703228 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427709549 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.026223284 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.022760668 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.297393579 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.31114071 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8905305 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.013289832 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.01474523 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.039535678 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.204138729 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.086900592 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.035346328 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.000014282 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.987761487 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.014103703 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.038697237 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.02459249 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326229055 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.121273135 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.129720001 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.994866502 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.320499767 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.286664153 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.423267444 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.048868596 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.353346172 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.664727541 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158993175 seconds)
  done (took 64.149885731 seconds)
done (took 853.876093568 seconds)
SAVING RESULT...
DONE!
