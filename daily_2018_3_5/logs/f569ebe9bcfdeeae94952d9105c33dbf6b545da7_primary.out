cset: moving following pidspec: 9607
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.970957044 seconds)
loading group "string"... done (took 0.514562046 seconds)
loading group "linalg"... done (took 9.426735373 seconds)
loading group "parallel"... done (took 0.171020942 seconds)
loading group "find"... done (took 3.555476153 seconds)
loading group "tuple"... done (took 2.044846159 seconds)
loading group "dates"... done (took 1.389844078 seconds)
loading group "micro"... done (took 0.189429279 seconds)
loading group "io"... done (took 0.511798723 seconds)
loading group "scalar"... done (took 57.095760309 seconds)
loading group "sparse"... done (took 14.027077774 seconds)
loading group "broadcast"... done (took 1.352453757 seconds)
loading group "union"... done (took 10.467324846 seconds)
loading group "simd"... done (took 3.618431377 seconds)
loading group "random"... done (took 13.483194082 seconds)
loading group "problem"... done (took 2.213222836 seconds)
loading group "array"... done (took 24.344999721 seconds)
loading group "misc"... done (took 1.161153394 seconds)
loading group "sort"... done (took 3.811708088 seconds)
loading group "collection"... done (took 22.231403899 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.693494977 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148320684 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.184808765 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.224628609 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277215153 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165114125 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155942684 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.151230469 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.617448479 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209560339 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139867042 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419989534 seconds)
done (took 6.133097719 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305857871 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060991484 seconds)
    (2/2) benchmarking "String"...
    done (took 0.156074538 seconds)
  done (took 0.913964057 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093254949 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159424418 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10948678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097556248 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094265748 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108688852 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094425484 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.168550112 seconds)
  done (took 1.523203751 seconds)
done (took 3.5299057 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500001727 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.959567762 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.551034751 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181519077 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312123069 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311688058 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27019678 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.223966556 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091659013 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085956288 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.19225219 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.441406302 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.403187798 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.042879063 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069782085 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095189815 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.152982531 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.856790971 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.07951202 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110904492 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542012667 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216318827 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116047852 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106925878 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188346419 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134818031 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.141458487 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103432943 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.727517381 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133717383 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.220226486 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083616621 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139028614 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164802372 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222262508 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111479884 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.737013083 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201291695 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100245237 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10118658 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.740977274 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124287149 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.205146502 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107528037 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068692072 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.173261728 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.104107963 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093838368 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094615729 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086510521 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176807333 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.509414801 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105883795 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.192460356 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09439456 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.777885237 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098182111 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278135571 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.12787718 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094823704 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091680899 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089561732 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.173600793 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097702573 seconds)
  done (took 20.860313368 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.174175089 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.190767928 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080350709 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163944983 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126539907 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097666866 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089324783 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078629174 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.13218918 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.184002905 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141941195 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.195283726 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077079753 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090335659 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.171697137 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.231803202 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126946476 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105027636 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090037778 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112739874 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129196032 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097056514 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112122729 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096831122 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178871531 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204878166 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109960975 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123353422 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089433052 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100187612 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14366979 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148766157 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091290912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089105297 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176059252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12292389 seconds)
  done (took 5.390625673 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235937144 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103223527 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252761391 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.199578057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135783451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.201770578 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176469093 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305055826 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.284773311 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161634691 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126476681 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096537074 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078938134 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080132706 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095860542 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.825433661 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.173322398 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166929656 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16683981 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116300036 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097324652 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.723545702 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101648172 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087020513 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096085489 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081035142 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224709936 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096454152 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.491695978 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084621764 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117060768 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114177077 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.211933528 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124590249 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12297446 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113857553 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086963418 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216531851 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120481931 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078738682 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079375973 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130854126 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115797304 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10922098 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108015823 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138093004 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.10948188 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087411683 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131015718 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.117384329 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196880561 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.160577964 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086284556 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292048776 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12893515 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104986267 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109714306 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.811892562 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123677217 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098152547 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080438276 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09686837 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095871169 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.809592787 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109940397 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.525650378 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083841364 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161417339 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097940427 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118984719 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.178825115 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086894182 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086694967 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128483987 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089254954 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080130957 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104872605 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081110807 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084091031 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107681301 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113689146 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101648149 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081306752 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149092727 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097614035 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.125346895 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110189671 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106649663 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091252031 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127992737 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083556154 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091085182 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.186825694 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099284965 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132648075 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114943756 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128636036 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105853699 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.29346898 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084467687 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122946617 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101082942 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126603024 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099726635 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081137237 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102612452 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082081113 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082168014 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159294257 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088349958 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08144768 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106388355 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084299146 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093236817 seconds)
  done (took 28.494927469 seconds)
done (took 55.438936498 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.419631656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083781296 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083020159 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102166277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084652552 seconds)
  done (took 1.542088141 seconds)
done (took 2.286545483 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308066853 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200435923 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088560247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190227217 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089120796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196678904 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167486569 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.119744475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209419569 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086469543 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1933172 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087108338 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088053168 seconds)
  done (took 2.792328409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106035063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107129936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103251204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121700154 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086781284 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103131392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120731276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108997269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102005705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114159591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087043793 seconds)
  done (took 1.907715067 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102716772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104812655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093689452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120370167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086893956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099757979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117276105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108709946 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100961432 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114799284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087663438 seconds)
  done (took 1.884214226 seconds)
done (took 7.326068244 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229831622 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.017805648 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19303599 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.248313253 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347809326 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.30163172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.617997203 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202002008 seconds)
  done (took 16.036593986 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116251878 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.195558398 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096327552 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097098273 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.113550501 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091297896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092659917 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113209597 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09822779 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096334847 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091369927 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112110524 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092142559 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097132432 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108268277 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096864745 seconds)
  done (took 2.520239595 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.138160953 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118076366 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117469433 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099710332 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095409942 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118270656 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102796409 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098920375 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114726108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096151744 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10467646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116628717 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099402345 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095480016 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117003815 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120177635 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094789788 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.117523162 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118697266 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099470979 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117044688 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097256645 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115277739 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100537815 seconds)
  done (took 3.448054474 seconds)
done (took 22.754973736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147354884 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102296139 seconds)
  done (took 1.004614247 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.163620103 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.181832906 seconds)
  done (took 1.102339481 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113590954 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090607772 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139016366 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105409748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091223746 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108513642 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117948242 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108862037 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093665336 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092907709 seconds)
  done (took 1.825086717 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096813779 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096502747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123697364 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169607266 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118001428 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0956256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09703278 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112992525 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097454946 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090856913 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11573461 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10982625 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09716457 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128668593 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095619474 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097685114 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117908145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094754079 seconds)
  done (took 2.7190112 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092605186 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092809039 seconds)
  done (took 0.948902959 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09483558 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091885167 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093532507 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110574172 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090625623 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090651655 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10793319 seconds)
  done (took 1.442921784 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.5326139 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.242567719 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.381028149 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073705455 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124633991 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.325345293 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106293616 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074613459 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092720264 seconds)
  done (took 2.751149947 seconds)
done (took 12.555703802 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092731336 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.440065063 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.634114783 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131699057 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09213646 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.14814918 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.333735793 seconds)
done (took 2.643203696 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357800559 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166424568 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085704967 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09287596 seconds)
  done (took 1.466283101 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082990943 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099808954 seconds)
  done (took 0.956509403 seconds)
done (took 3.195225648 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09110478 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113225114 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108870399 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091015973 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.090507268 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.0896071 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.110266131 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089684898 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089421205 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089243009 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109801296 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.089518743 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.090207227 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106987524 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090089538 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088643196 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.21296374 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107487192 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090207526 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090540953 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106911306 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091588018 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089647907 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088439379 seconds)
  done (took 3.221678345 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114342998 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092156078 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111566566 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095145872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094669643 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111825379 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095220361 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092791089 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112706862 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092814078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095063701 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11193908 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092802629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095434379 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09096311 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112738668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095603416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092536667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110444803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095471082 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094169364 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109693915 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095848827 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093867997 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11275836 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094859629 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091714861 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.111988444 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096628211 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094687207 seconds)
  done (took 3.779342851 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098788233 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08801835 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08996371 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115978471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087204288 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090379498 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10507557 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092495429 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091716025 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089814244 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110431506 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092637753 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090273726 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109892915 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093005505 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094827098 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118270023 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091517355 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090451052 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091967067 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11090772 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.092375742 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090498152 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.1085837 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09198079 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08751767 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091191589 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109393589 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092236788 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092526199 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093496521 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.112520177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090764162 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099312589 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.111901218 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090768301 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096516985 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105593788 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092654139 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08742598 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087116792 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108771648 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090929943 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096181804 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110876858 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093270523 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090879841 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092293535 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.109361635 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094180303 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08891023 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110128445 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094501486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092011004 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112086307 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089078992 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091302189 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087644889 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10976376 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091301906 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088349064 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086662682 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113512404 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091420693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106182346 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11449204 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090873302 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093934125 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109799811 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09886214 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092907817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.11874631 seconds)
  done (took 7.806813999 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116090839 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100494112 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109850002 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093193302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091633714 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09326903 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114616874 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093936459 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092479284 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115174272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09301817 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093210189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110375778 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094099901 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092143673 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109822992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.098832038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091165183 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09091427 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110000213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093525406 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096394053 seconds)
  done (took 2.975392465 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244098882 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098927302 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141430984 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123685284 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110811166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123131648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097889425 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098447518 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114569491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102217845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100981425 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113624925 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112710311 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100544083 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120904827 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102774227 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112766756 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102654835 seconds)
  done (took 2.906785718 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106447618 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094227652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156516633 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093929222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093534069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111334573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099740234 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113856026 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112101829 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094379218 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099996439 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111802178 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094739726 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093417673 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111063528 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095600766 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093730135 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093372186 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118436952 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099149226 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116878739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101636388 seconds)
  done (took 3.09199003 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108211482 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093770901 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12985629 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09805888 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092704799 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092661494 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.118644582 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093394177 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099388686 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111335227 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095320354 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092339776 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125411621 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093652754 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100160637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111826481 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09402323 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093721422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110982739 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093915717 seconds)
  done (took 2.839247032 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.198216487 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130034129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10972654 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116918911 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129648136 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109946075 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137244247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111763914 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11035236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138036561 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111111679 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109394907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136789934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11543016 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128334131 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121900337 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117224658 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136230803 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10938889 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128652886 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123356792 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10848779 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136443662 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110111822 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108294825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129367736 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11017402 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132998007 seconds)
  done (took 4.25702198 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092823306 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092099941 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091881853 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109992843 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093258691 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092429699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091450696 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.11169942 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092529031 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092608485 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110692297 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094084442 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091487203 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091937455 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110110817 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093403335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091330417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110243212 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094124436 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09178641 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09192854 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10970065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093940594 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093003814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109767315 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093316671 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091299576 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093891992 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110959452 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093757468 seconds)
  done (took 3.712610685 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.106107231 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102855601 seconds)
  done (took 1.004116294 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10072337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106610336 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091862312 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111999168 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09959391 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092083524 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119782548 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100022906 seconds)
  done (took 1.618570234 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167506466 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191421646 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098621382 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123782348 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171218323 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.181328437 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132398492 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118902059 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.09347406 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085212393 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183328263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084710004 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112918726 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090602393 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092688614 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118530441 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095361548 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101756157 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119465094 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097161583 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098902969 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116312401 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098426935 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104724843 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106500958 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097617713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096479556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.122853318 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09098952 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094046851 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110080585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095204412 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096883288 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096582116 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113842464 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.169995813 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121428067 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091073322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095146792 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119335432 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126465709 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093607586 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.114551669 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092901341 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097761744 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117918507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099697298 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094560773 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104783144 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089474887 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094211567 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108277516 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095850202 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094031349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092763475 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119797726 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096024025 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089034265 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107967663 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090290928 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091644533 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108735977 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096962081 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096955707 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114081974 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095970607 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093511006 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112657065 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097567998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094800078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111139161 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111016536 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094340611 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.116880469 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100819997 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094512386 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109226829 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101535045 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092340219 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11288897 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099843611 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123927017 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113941158 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090756113 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089730132 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10044347 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.114741559 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097369813 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086477962 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122050848 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09621244 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094418069 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105284328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.094935994 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089440519 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116318881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089113096 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096517404 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092941014 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.118105377 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099774001 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093312508 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.114534577 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099778763 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100767759 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113538217 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.158957163 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111854306 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090181268 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096822349 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120454588 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089490502 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093207747 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093245743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111490668 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08925868 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099208551 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113444587 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095453666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098604273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115244102 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096646786 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096118281 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113764625 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091536119 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098829259 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121625943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098536587 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095562381 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09434962 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114440435 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094049036 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.09723412 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110538667 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100360637 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091302459 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112939242 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097104015 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099678134 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113717307 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091563078 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093208527 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115098828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094579785 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096374288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095044176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110356231 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08630251 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095030762 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109507425 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095104284 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102589107 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111127459 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098401712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092257344 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123768074 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092957351 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.0995024 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117472606 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100615568 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099678602 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086398374 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111510395 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097642587 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096552414 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111437311 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095996525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094861151 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.122509965 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088758272 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098812022 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105789785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093025987 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099085872 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096588759 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117799131 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091293133 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132510199 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1279178 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099504438 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092963434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11526896 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098977785 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093766804 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.120284957 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101690057 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098690751 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111708819 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09587757 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100174898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.111204945 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099373838 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094015871 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0961289 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107382643 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096807022 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086310873 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120494138 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097253717 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09905275 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.121478884 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097785365 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093324374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125176668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092664166 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099027442 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08698795 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.121890625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104829823 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101010077 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122080428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096721987 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091933229 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.116847305 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10335745 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098162591 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113895379 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097881947 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088507348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088493706 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121362888 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098696423 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090805537 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.115449052 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097950395 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097415543 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112449656 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08903708 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099085511 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12146477 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092622852 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095313443 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111203867 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093852416 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10291733 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109264536 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09252856 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096214655 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100085138 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.115094139 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095147177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0967953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.121411237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098325946 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096083428 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111949527 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103498184 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093296603 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094069912 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.113013858 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097302264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088701585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.1173734 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094756729 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091570791 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111694138 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099551383 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100290486 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.121157982 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09331843 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098498172 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.131384745 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101477934 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092800331 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100903226 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112215122 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087741496 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090783872 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108465719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098655957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091437215 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.120292125 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093567826 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093848981 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.119084069 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098273013 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092561265 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.121173937 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10612648 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088124685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108184866 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093417131 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0929336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11162512 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093575208 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097613821 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096786772 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.120058323 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09893365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091526844 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.116036119 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101927826 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091245556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.123020333 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102164518 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101446515 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111769586 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100963194 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092573435 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118497521 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099933346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094344546 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093823031 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116689956 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093070799 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093319578 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112562683 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088855123 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090995265 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121914922 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093910019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.09917879 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115291028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094808765 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092145398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111190255 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10221959 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092968996 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102059844 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11755287 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089597798 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088679911 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.120291738 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095150222 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100585208 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.112363241 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099712807 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101645035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098362183 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117579003 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104797683 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103157149 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123085707 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10023993 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087568648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113588064 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100099268 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096322805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119417817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099374307 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.0888098 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118028269 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1013853 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096428378 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094247275 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.111030945 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09700434 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101625587 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119443233 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099351842 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097598918 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117001759 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091159029 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099798822 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102203061 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116349179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101901069 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09500397 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120875521 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091915184 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101440404 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117378964 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090944494 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090173394 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112544503 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102805839 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089798297 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100714756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.122430588 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092143929 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095460939 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122485134 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092683794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098953613 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121713957 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093858814 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105145033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116328558 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09411789 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.1014794 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101899633 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111898491 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09416747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095837794 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124211157 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093307495 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102327792 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116863499 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101590626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100173158 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122388667 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101608946 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101953351 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.091617945 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124861338 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100152471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099548685 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114164033 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094071889 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089892541 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115345562 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102377153 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092692744 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125413076 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103387785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094287651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114594888 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102369241 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093905382 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102580635 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.114226564 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096895595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090081456 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120124412 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094551717 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103069475 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113782159 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09020845 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101428745 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120941494 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101818501 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097813195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12273748 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0913119 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090517607 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099385029 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114692711 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106872685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098666144 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116023434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094370758 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098825517 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119363622 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103201512 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09025459 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113204442 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097950814 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098162832 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115206936 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092052199 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09964686 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095769113 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119277383 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096150215 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0910604 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115748136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103869506 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094599962 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112864857 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094008654 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104208325 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116422652 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094585326 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090729857 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12352089 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099731853 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103259344 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092493963 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.118518679 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094643738 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099927366 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.125622987 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093861127 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097119827 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.115109344 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102205107 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103214911 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.111868525 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095116032 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108567239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12213843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098000055 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098866759 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116454877 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105651556 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104337812 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099242328 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110884414 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091610932 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094499131 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.111949055 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098843702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101477093 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116218227 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.095333566 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099833855 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101470951 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.120672691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099919673 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090579635 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124377464 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094041596 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100069464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111105269 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090335968 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099991357 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1028761 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.118455756 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095921327 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097616484 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119960407 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092102225 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094273253 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121342875 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100182616 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103217257 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116651646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095385875 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100162716 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127301844 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098200495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095592905 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103744792 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.127229296 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09629361 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096591947 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121965795 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103222093 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099957722 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124701738 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093967383 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097609851 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125291623 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103997539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106867544 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116903377 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091752981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.101218021 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114858931 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092690366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100562239 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103901835 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.126237499 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096658909 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093924628 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126453021 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102465818 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098109466 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.116581222 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09446173 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101322332 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115113006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100405915 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094283565 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.127214212 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103950263 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104214012 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105614531 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113359447 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101621494 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098770572 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127476354 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098441917 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091122653 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.113207235 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100287729 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105372244 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12339949 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102064813 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101047532 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101035753 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119513512 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09697614 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094600429 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.126196427 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102660531 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098617639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118208423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095973669 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098046789 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11918252 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105692856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103272016 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097419438 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129172612 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102521483 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095233364 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.116549252 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096513 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099901257 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118115062 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102093922 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094838545 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112503888 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103787948 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103323282 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096019077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126918955 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104465141 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095346842 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121619545 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104145185 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10250452 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.120220005 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098796915 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100275847 seconds)
  done (took 62.925937479 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147437424 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10509917 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120688463 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099190392 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116614331 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123519122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099460845 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100786953 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122008125 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10893712 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099844875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120547968 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114500294 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120733783 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138027232 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108659704 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120340134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10212003 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098727719 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099403863 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.135621568 seconds)
  done (took 3.25193344 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11690034 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112958421 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131374501 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113357316 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105472145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130174666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110392217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.132170438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113171922 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107351161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134117859 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112089393 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128774548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108494033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106802011 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129905894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112689061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10564664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133547581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110521843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127809579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112019804 seconds)
  done (took 3.442696199 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129485523 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101718591 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096883609 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120083142 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102082387 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098573275 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12306363 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099822335 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.10794056 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093401411 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110937858 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094707375 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097447782 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119812717 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093995203 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099962084 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128430531 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10225311 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103403554 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099262105 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112256486 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099422154 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099912746 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109818702 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103615499 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104147035 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098186831 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123267757 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090189782 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101735649 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120142672 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092922738 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090612085 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089133877 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111729203 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102632989 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101899965 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120399994 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100542043 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09033121 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120145788 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104473873 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090313549 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098400114 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120610891 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093712401 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103140116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119782225 seconds)
  done (took 5.889377392 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127568838 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158000144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102984456 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129193379 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136991866 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108758283 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101709402 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130518698 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102445656 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124364227 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114910809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113719897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127462092 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10719086 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102130035 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126375058 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105587713 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102422616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129413398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103361581 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107652797 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127577869 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114474115 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133118222 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106786308 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102641291 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102032089 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126750886 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112361699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129172449 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107158095 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108821324 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135695698 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102569103 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103387351 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125117935 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116141871 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103842734 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.378663122 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101448002 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104941142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128443948 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.106734769 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114034636 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12729932 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104361593 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103002343 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123123335 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112993937 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102863024 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131679673 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114816007 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127411436 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104134246 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106755888 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134892844 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104168258 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102664054 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12607211 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11193799 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101124026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12818834 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113850969 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104902305 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130769969 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113194079 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.127013046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105378833 seconds)
  done (took 9.099520803 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133570666 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107639017 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137671748 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115494893 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106414098 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130147207 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107575546 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107402469 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130298508 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113209313 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12849338 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226186473 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128613524 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113848848 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.130165548 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108144614 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109644788 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130105729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106832368 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10638222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128331279 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115251881 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108676916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138242936 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120665826 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104042265 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128792633 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107968369 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13699867 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106848804 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120822397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130843512 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10711486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115219344 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141094547 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107481656 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12300108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107791319 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108001071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130818614 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105468464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114747112 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129806 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106076944 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108389993 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129394122 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116509829 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141601107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114255341 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112673198 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129898432 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115778159 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108247957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130235268 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115687256 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147113779 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116515903 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115190615 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128996435 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115753345 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137634888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122786748 seconds)
  done (took 8.38972512 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100959747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100326139 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100739739 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12117849 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100816488 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100874223 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100737876 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122940265 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099882341 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100732465 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121385259 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101800723 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099996354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100025571 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121006951 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100917167 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099525395 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120861083 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10090344 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099064935 seconds)
  done (took 2.980076941 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110213442 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117866789 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124830894 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109713667 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102777784 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130334344 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103232222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103556874 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102343634 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124652891 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110704794 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132344466 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104029718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108139121 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132126238 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108143464 seconds)
  done (took 2.691224915 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119971359 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119775337 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210047555 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104658882 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12564856 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111020675 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103129759 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127119991 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104185357 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107414091 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128025903 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105792615 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103874216 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104400072 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126089872 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10507282 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101570272 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128690719 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103520467 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218201344 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106520532 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104605817 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128048708 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106934275 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104295684 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131556589 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108512079 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10288188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126273561 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103484251 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10466868 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1315148 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103423062 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106445084 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103859206 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126788655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102098953 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103936213 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.129331615 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102953206 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10514401 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126476437 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103250709 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105527303 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123112295 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104396625 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101372045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.1085351 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12508484 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104911867 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102769374 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129445759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106555882 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110804178 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131745711 seconds)
  done (took 7.253838747 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114939076 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105575018 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136613856 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103172258 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103893265 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104864477 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128310832 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106402679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10404168 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124393483 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104536268 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106311045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126129504 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1050721 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106147396 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126896002 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101770765 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104674565 seconds)
  done (took 2.883392771 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108240831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103134467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1072106 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12527676 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10278192 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102547635 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124809093 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102990617 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101594514 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102655028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126175855 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102882543 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101794472 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125859086 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103546492 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103658341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125303225 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104004074 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10303298 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101609953 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125711202 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102436218 seconds)
  done (took 3.281372698 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115375923 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21552592 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108613095 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223807535 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100958806 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123535858 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111017522 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101192459 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.141049299 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100736848 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.101413823 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.12195926 seconds)
  done (took 2.439916601 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131809705 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142417102 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12637995 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105538599 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11224774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131136083 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108063903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107124851 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139898356 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118692672 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130406617 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116186739 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116425069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13878588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11317197 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134519943 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108972632 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10825479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126190652 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124162366 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107935795 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139115179 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108054624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10760922 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130809792 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116404278 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137529542 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120065093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10731408 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139438069 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112022817 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107623767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139246554 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119904069 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126994744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117298545 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10752028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146015695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113455188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140046902 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105504184 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112479229 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138330561 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114507263 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138842647 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10905567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114590472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130818517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110395583 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130155412 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136790194 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115967975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135972041 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117680822 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117313064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151582687 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12037543 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13917496 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113238373 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142029178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117036395 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114361251 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139307226 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121453078 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136750774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117629028 seconds)
  done (took 9.001404207 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144001584 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105856172 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130824786 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119745846 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116999739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132047653 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109017162 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132169429 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110234972 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105804657 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176486642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108101639 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11609364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139458649 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111042782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131577982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109136512 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117707111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128764379 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129642472 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109305042 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140859291 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11740991 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140153122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120177348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134579205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109066966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109641091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130075142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109358196 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114250805 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130831366 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117441918 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10597423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140703239 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109852693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107925017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137425614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109891159 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136004259 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119103026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124794937 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131961467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108512087 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140504758 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109455844 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10877609 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12791577 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110501037 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106105286 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143724178 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120184261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145022523 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116826764 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110302201 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131764484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108962263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108408349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131901193 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113057514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117353578 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132313169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129080636 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132561631 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109161094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117952324 seconds)
  done (took 8.946551903 seconds)
done (took 170.464821402 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175730457 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215813681 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196560079 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.187484233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094608468 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166878708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135647029 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.200222077 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09518608 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095091409 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094118955 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.121637629 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.202619829 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094823479 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.1177277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099842452 seconds)
  done (took 3.171725648 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197494738 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.346919924 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111160277 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122679338 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102150766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099351533 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124177782 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102127043 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099905177 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13224023 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100035274 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095210091 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129599929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096369139 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100553719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123148932 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107425266 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100327217 seconds)
  done (took 3.180662988 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120802511 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152483862 seconds)
  done (took 1.171680789 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130987583 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.217588551 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296613739 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171775657 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.1212951 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14269386 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149566852 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135736506 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191887983 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135637026 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113448065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098607366 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149302823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10518522 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.13877095 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098606398 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128942349 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137166681 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114148047 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101753452 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146794017 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103645194 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106269073 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138656993 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181268267 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136539434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10388336 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103637507 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126253783 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113899233 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106208466 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.141268089 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113565913 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18340496 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103522404 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179867067 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107067725 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124559604 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113802775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100117216 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12793193 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104518816 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.13584238 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098936107 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10308102 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129665727 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105271308 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104914205 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13126256 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108143441 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108585303 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.131958301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15343731 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130708246 seconds)
  done (took 7.985698772 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.889273944 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148451395 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099112679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.032444369 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145219732 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113082884 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.88104682 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148860283 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256371163 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.900672115 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117238734 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106863181 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.26295909 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259052169 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.286391186 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363136945 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.737083146 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113353954 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131285998 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164765622 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106546186 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139973862 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11598983 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516783881 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101098409 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100531995 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128224112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108527355 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178828687 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100412426 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105779806 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196638042 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293049117 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215381289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099789299 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121698784 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099893885 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185648908 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275523481 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223965243 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.175029322 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119891887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099697437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104540923 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137214313 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097584 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181455399 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190594133 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169806195 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127803171 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109055388 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108063547 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126831259 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180430025 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099114514 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35939681 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365166328 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122010367 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107163478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112093558 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273532213 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126476247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239653569 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123311176 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220832144 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123203705 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850138707 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163384269 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122803162 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1050326 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105059163 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129994584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103609687 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191954999 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476475261 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129644165 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105460547 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098988879 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23639518 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100985899 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12437017 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183214101 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102768967 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106330257 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1310216 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107744453 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189969826 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249154879 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129824176 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107245475 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128000583 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112005488 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102289803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235673437 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231637522 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177757824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231433481 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106115902 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181520836 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187603965 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105849307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189854843 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107001494 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111656217 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127246006 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228446961 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135203981 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126453485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105292428 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106296493 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160655691 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104690053 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130914389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16917854 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555444238 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188157912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099074559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128586823 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10787076 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182556392 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107230994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268806174 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107205096 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187878024 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128774258 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100072785 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108487485 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183002223 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107864382 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130808352 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105147905 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110083241 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280571765 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226063064 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133258572 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257486264 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180352259 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128541728 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172450612 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130743153 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167678815 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1340164 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104888072 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101444293 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859464391 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112876771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107076621 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128550249 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184724104 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122425564 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10498294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10078004 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09847626 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821361061 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127855789 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099224743 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103327934 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12913192 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10800036 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110241667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128759887 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157384498 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26869243 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1098749 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105668361 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124099951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159388342 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12604531 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101196169 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100973284 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125852541 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108810514 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105991275 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126690704 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168250883 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178623769 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23086891 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655344143 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124621849 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102119878 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244855854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100769254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35366257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107200481 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238591035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187157283 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097924451 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362322898 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185979162 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208438352 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104456075 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191054682 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100208834 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107425016 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179537842 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100639504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131018992 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178423894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.111689907 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107816673 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280959459 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124551663 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25380063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099519636 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190030202 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103939078 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106369378 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32845014 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125626942 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114829533 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180975336 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105640685 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124966195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.60134136 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125287426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111287451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106364516 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258455589 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16323412 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130826886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109862748 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13185634 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158818549 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233293744 seconds)
  done (took 47.854709228 seconds)
done (took 64.252772607 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260995886 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173382533 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376967336 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15460615 seconds)
  done (took 1.955654119 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.275631378 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16839294 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254074259 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098497859 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260189709 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097656599 seconds)
  done (took 2.075346058 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17969248 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.16910411 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14781313 seconds)
  done (took 1.420540973 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211400731 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209444671 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349806808 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236573356 seconds)
  done (took 2.01412534 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285225204 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116591747 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125637753 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.235437165 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25246515 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208876926 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124114481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177585566 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.1309481 seconds)
  done (took 2.624876074 seconds)
done (took 11.01285858 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138051142 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.277020566 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.224569152 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116376464 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.32534149 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.403027655 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.327928229 seconds)
    (8/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.191311811 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.2255195 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.310673648 seconds)
    (11/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129330367 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113517062 seconds)
    (13/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.222888839 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.237946363 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.245093017 seconds)
    (16/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.218473487 seconds)
    (17/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.189336617 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.136276508 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.294372876 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.255687325 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130455659 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.197512165 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.11047601 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.368799472 seconds)
    (25/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.152007986 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.228815146 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183245449 seconds)
    (28/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.300994136 seconds)
    (29/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.277365815 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.158519882 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109635084 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.286021287 seconds)
    (33/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.207242212 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.1476384 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137064877 seconds)
    (36/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111765346 seconds)
    (37/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127971057 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.283508741 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.194836398 seconds)
    (40/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120083051 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101316285 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.172537066 seconds)
    (43/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111251494 seconds)
    (44/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087590375 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.175906136 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136393886 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.116190254 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085799199 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079641404 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147182658 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08680772 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110243066 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127653679 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108082936 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134306077 seconds)
    (56/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216268014 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.14765753 seconds)
    (58/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07988555 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.126705109 seconds)
    (60/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.180658043 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132049421 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.081976984 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.14667741 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.248906264 seconds)
    (65/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.137856365 seconds)
    (66/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079856692 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123243287 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.254504957 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190653989 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.180877473 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.08008755 seconds)
    (72/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082933215 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.140417433 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.200076808 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.080355845 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10517075 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.240177538 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124322655 seconds)
    (79/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.234493858 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136694282 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107766517 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.155867274 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081198501 seconds)
    (84/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082288912 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.143684679 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.087005923 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.245708745 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.113047353 seconds)
    (89/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082427463 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101137499 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.1115018 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.171971571 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108236838 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122421087 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.307674089 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107191285 seconds)
    (97/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159943652 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.105009947 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127778477 seconds)
    (100/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111771742 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108869363 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.081041666 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224487801 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079673346 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087128966 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104710435 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.144057473 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083421736 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083535541 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.131617694 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.131328301 seconds)
    (112/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.142778871 seconds)
    (113/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089606907 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125848411 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103518873 seconds)
    (116/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104189047 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082538041 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.135874404 seconds)
    (119/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083615388 seconds)
    (120/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111888243 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.137986199 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130976336 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093914557 seconds)
    (124/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10169933 seconds)
    (125/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080646671 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.138498275 seconds)
    (127/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18090986 seconds)
    (128/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11300059 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.130921132 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087664463 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087301931 seconds)
    (132/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079964195 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.10425716 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105178337 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081696393 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107214485 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.104426209 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.08610935 seconds)
    (139/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11305845 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102405606 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128521064 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080475944 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12512677 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148291507 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10716401 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087526134 seconds)
    (147/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085388946 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174984322 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106355494 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082574433 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112451042 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129629754 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080365173 seconds)
    (154/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.085908067 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111791252 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130419478 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111313403 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105406815 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.160466506 seconds)
    (160/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087901968 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104785894 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12668719 seconds)
    (163/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104039381 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085827871 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111349754 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125825948 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089351706 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08053621 seconds)
    (169/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081004022 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079890268 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.135702051 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126464105 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08242977 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080839876 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.109520404 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.084340264 seconds)
    (177/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081911333 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1055222 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083397565 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.112295137 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.087779083 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115099823 seconds)
    (183/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113288098 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.105695011 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124100005 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082943727 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.088375886 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.111893376 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08829481 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.084003703 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080963269 seconds)
    (192/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.083894642 seconds)
  done (took 27.515371516 seconds)
done (took 28.446041077 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.224692179 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132185475 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112773587 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11108259 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.231552227 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119751923 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153628938 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114392479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121862961 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.139148294 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102351243 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125068165 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136862085 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207785436 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141080108 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105201011 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103278506 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147466263 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.12813914 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129724366 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234587792 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104206905 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148737665 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104353957 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234719045 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105273981 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111265216 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139157613 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12626707 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112645157 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.1383242 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105347931 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128966472 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151590005 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104039599 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112197345 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102613002 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.111136377 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113960991 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113739454 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.150425351 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11402214 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113159606 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.128565005 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114117516 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113166206 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101533835 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140449879 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102186563 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112115609 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130113521 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129085381 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110667006 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126884293 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103343199 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103223813 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.148246348 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102929891 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125734057 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127343114 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105005785 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102690103 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113429933 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127479305 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111812415 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103195917 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136992625 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114539174 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111038382 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128587959 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103271198 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111875638 seconds)
done (took 10.125253854 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108402451 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147465326 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.23317197 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236054775 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131457617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147451917 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117042104 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127279851 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.14197018 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123100832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140837434 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160707769 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.239970888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119280477 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119477557 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141810955 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116436071 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112185744 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238659317 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128411648 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153744965 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119802484 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154058842 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120665818 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110735382 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158149873 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112860839 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114402154 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130525445 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126087309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128085424 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132323355 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111205731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125435501 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149992519 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119324324 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119293403 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140042174 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108022668 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107878686 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139267601 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123322757 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106715109 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145104063 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116733016 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121351816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140431935 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120625412 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107135962 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139187083 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110295627 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130647785 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145874252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124708733 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120594674 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144789795 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119970418 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11884593 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136565693 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120889293 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108098934 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.133190965 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110043184 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.127038693 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137337111 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121052125 seconds)
  done (took 9.804802609 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128065063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138133464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143827135 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118726233 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113311996 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126053991 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101997744 seconds)
  done (took 1.845498639 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104101084 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246731592 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217164094 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244555437 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243376116 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256270432 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127201827 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102818063 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166337895 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113745792 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246302638 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274827561 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113632845 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118537586 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.246649693 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130001693 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.220725055 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131522317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118853805 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249283914 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120700156 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.162240017 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117777239 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103888439 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239732455 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104493288 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294229571 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148585635 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113215064 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117438291 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143469094 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.184737461 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241025112 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117309094 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138365113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.219155008 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.243437064 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11776402 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.258481859 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136360564 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214845564 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.146804363 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121030847 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118612801 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145035561 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.20467874 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150153081 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119194919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117704129 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.255179155 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142042228 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217008245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.14342714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117748261 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114616284 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147605767 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127400319 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118523101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.251528556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121668136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.246917374 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246335155 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.244981531 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248326141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129345466 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246983217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.206153817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145623809 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114811521 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119142316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247486861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11813024 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.144325817 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238764509 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121681524 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251183374 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.22115313 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144467012 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118433769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107189969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.143992361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104711566 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.240902348 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118299717 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116081674 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151949496 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11789519 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117825391 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137419935 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127902083 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143032345 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117574384 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123078363 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144210525 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121575981 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.252446155 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114768335 seconds)
  done (took 17.125014832 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107844878 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105500904 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109081887 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131583278 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106457864 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105197214 seconds)
  done (took 1.66640058 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143346071 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11929484 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153118166 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121196592 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166368674 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249579554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260578934 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113281446 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166091294 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130398092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253867939 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257368483 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256826435 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123808354 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258745085 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122221666 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260739012 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118531046 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127599432 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1437602 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119289036 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121161004 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145406258 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244590526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121048527 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119810947 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141636116 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128732774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126531462 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141671324 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.124890018 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119556354 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137226968 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115522474 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261639839 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110700359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142888268 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123607523 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121957497 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146554198 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.230559923 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145269717 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126408874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121242225 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.14234011 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112040939 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120554736 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.141089418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261076925 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122325569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122243746 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149456427 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121912259 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122915076 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.139991835 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116345619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122344132 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.26054466 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123610983 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139249328 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120193729 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146804659 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114779372 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.145687732 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147147536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121507773 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11119336 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146903595 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117854618 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12055626 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149485713 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12239509 seconds)
  done (took 11.867211908 seconds)
done (took 43.278954626 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.67729087 seconds)
  done (took 2.676681762 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.113427155 seconds)
  done (took 2.113552917 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.446200667 seconds)
  done (took 19.480895346 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.443990759 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.485974064 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.176782217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148427698 seconds)
  done (took 3.25808785 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.852405556 seconds)
  done (took 1.875132556 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.344889692 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258320988 seconds)
  done (took 1.611060958 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.724740852 seconds)
  done (took 1.743680309 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.747811894 seconds)
  done (took 2.758590955 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.29390779 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248497546 seconds)
  done (took 1.560776017 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.667140519 seconds)
  done (took 1.686818043 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.305384482 seconds)
  done (took 21.329296353 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264059706 seconds)
  done (took 1.291465245 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296596326 seconds)
  done (took 1.322132319 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.713276084 seconds)
  done (took 4.738165878 seconds)
done (took 68.460360824 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12272435 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122922678 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121947237 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146196763 seconds)
  done (took 1.528026474 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125294319 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121690658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148630662 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119646016 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126831026 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118869897 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144631255 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122610175 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118571405 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14729851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119752729 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118386411 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149406821 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119153831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116705563 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14748765 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123185331 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120587876 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146926238 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121237373 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121313074 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147696524 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123265604 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122920956 seconds)
  done (took 4.116539613 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116197608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110877082 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111990033 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134452322 seconds)
  done (took 1.501775262 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127943131 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131976652 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155741881 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127514079 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133325096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158147657 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118365656 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117305945 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145998163 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127870763 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134747581 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161078932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13134358 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121311211 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155981736 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114173658 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120600712 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157427077 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126932062 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128717978 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146820601 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125800942 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.1239045 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155130327 seconds)
  done (took 4.272634877 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196375592 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131368113 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178498338 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16511348 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181038649 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117785635 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148571841 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151719631 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126541946 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120602567 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14878082 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165614132 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152044261 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121487939 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119830513 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151668401 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131864493 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125421315 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.193381307 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125397936 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154270864 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132539821 seconds)
  done (took 4.265957672 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122951904 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110237095 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133482739 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109152328 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123126648 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137918033 seconds)
  done (took 1.771454025 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109233331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10468713 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103754977 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129941763 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109287303 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104119078 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.10305283 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132202554 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.10439748 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104573768 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130143596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103798476 seconds)
  done (took 2.369095498 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207308514 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148194844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257288261 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.413480562 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189869145 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162284917 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.315899697 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191601345 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179714542 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165618823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216218027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163862053 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181303245 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187687429 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169223018 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1618406 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196305235 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210628555 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170734899 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242757484 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159883401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203320102 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191723935 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178654283 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141714209 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193853506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120763798 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129033906 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197398778 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195686463 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179084332 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179151242 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142637329 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224404106 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262480425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180809532 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300915375 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135647644 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199866837 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191812345 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262128215 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167908366 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196619778 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18191145 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130475008 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216604454 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153947451 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216116808 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13578505 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174543465 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215908127 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182458395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202036278 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13837049 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330485021 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161461849 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14422052 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205444571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189462941 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228935722 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20705595 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124544608 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201360043 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190723393 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243447836 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168722856 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168607914 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153141123 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168064879 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235173312 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212112107 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159115223 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.241114949 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131548154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201135145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195751808 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158341695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237099631 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17124662 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148174172 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152822735 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162882484 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126128147 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188832718 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150163678 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245094242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133394748 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.345800355 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210043711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157599138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191005882 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163262003 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192131011 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149126524 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102986799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172733006 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161615123 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187394027 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130698395 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186528786 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141091909 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12570276 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182314751 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122691644 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198887362 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136365493 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194139109 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173378709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.15999588 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178607493 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176610895 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162044696 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198704333 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222774458 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131339431 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132627582 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246990506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198988085 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137478514 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202153428 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197557963 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.181937766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133899613 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195930666 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225066841 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14490597 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229756048 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140378442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163994927 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142531495 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201474974 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160040406 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189572172 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128974171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194471949 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192072856 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.157089634 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140458002 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211441637 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133477643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152896803 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137914247 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136386645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172056139 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.148570182 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16578844 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15492911 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195352021 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165633155 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188300262 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135596449 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204472853 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131685627 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197422073 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150452594 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119614062 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204403 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227268306 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129272 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21072817 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162724244 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213800639 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204272162 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130463921 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213574824 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129478925 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120383346 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192213881 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16958768 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194900805 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217030605 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207829243 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165872604 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193966591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149246963 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199320589 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183406534 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185278435 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142887698 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20467772 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199399354 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121398244 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124295821 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155737613 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13945324 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130701023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166622914 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182598313 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193636503 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207156467 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167406732 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167086804 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191109232 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154520298 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162151458 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204093631 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139157712 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218857576 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219375199 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179573001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169813792 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163449214 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.149128361 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126143682 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133729488 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190487622 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138924306 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16416617 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14165384 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219528396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174203568 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178898295 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218068831 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167814949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229753626 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120365309 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.191828587 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170978558 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197158488 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187600036 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158901105 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.162261926 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224034267 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143241777 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223223956 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195396505 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180712106 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2274187 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165719658 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160132813 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149112372 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190222833 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138395462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192181903 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146977863 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129963405 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182768254 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13717873 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170666639 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217971423 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144732214 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211007301 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158185505 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201792114 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124953645 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172063497 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175501334 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175643116 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106080911 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169514172 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223680808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179522758 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157372273 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201785475 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13000459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347432474 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188267312 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207360023 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135812774 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168745162 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172522001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190261622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19181075 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186613065 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169704925 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208979882 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203041181 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141706089 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160729668 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149068101 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180317533 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141777395 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180859456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163008037 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.172887337 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19134549 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168338069 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171637687 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207850403 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145499707 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.179311455 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140068581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254770686 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167452185 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204358197 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193296806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.166454045 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215456009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125811707 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126823403 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162012957 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186451203 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158869404 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177490849 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195071859 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211217366 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17738411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190464486 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140109504 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157922516 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167015511 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178639212 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213679852 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135209502 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138445818 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222139621 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129819904 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161577935 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1618422 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32073411 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148569358 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203280287 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10787317 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315437421 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130289028 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161656548 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161681631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201121253 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134878439 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211839751 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174553153 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14053724 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19033024 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135151476 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208971728 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213234035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167615986 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205778174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.175950979 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163092817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192189532 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175872044 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176614618 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14994895 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188501765 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195405659 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206190949 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131940489 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200052539 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169828945 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201491435 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203996306 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141252735 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183570796 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159888076 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166411157 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168388352 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126369036 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191457388 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166481696 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159360304 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176810224 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202567627 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131151081 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157881881 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149451852 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196949473 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141439827 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.12854428 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217036231 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.159332521 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184523928 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244954893 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129458608 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197852057 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146788843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159245067 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141540708 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143355937 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162818667 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176106071 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212539404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131637332 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208038678 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167194105 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195155537 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158341949 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176308415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.264316012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158610947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192051594 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181494324 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198278808 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180601459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176803178 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200534962 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151910599 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195856195 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14866611 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252183289 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196252838 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.170191049 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131331118 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175594318 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138495621 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.165088672 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152514895 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199243593 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14262398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135879098 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197361914 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14592833 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.179383698 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141926508 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231857491 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150067798 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220628684 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218334126 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138862732 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207634057 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177298951 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130835108 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164607703 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203343479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143364799 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182993151 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133512475 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167365586 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21744634 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.156258431 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162073331 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205487496 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16957144 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202745208 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135289539 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210832622 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140682039 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207296313 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128260817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.18332019 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170027477 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164175931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127515597 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171917695 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190609538 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.193960456 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144039237 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176341054 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222899807 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123582867 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162605024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287752891 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19159141 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225148046 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139526844 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136323298 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17673721 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159370133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.19741873 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170995394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159658028 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130811549 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1442425 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187696198 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144286479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200061985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182152754 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192724896 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215444088 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135460269 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.285658908 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144648961 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171476589 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.150614763 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13063019 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140888502 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164330815 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142055418 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210994309 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245593016 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162069384 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177636932 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135290021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155236048 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130906428 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162736725 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183975314 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168457225 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179240372 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10443679 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170118294 seconds)
  done (took 86.287366993 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174518872 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.171774374 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.183994733 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.241928666 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214223976 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.306284133 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.24975903 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261005882 seconds)
  done (took 2.91880265 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119688062 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161810261 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.14293166 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146227428 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110548346 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.490661656 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.161825713 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12208536 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16238251 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155079065 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137445621 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.58442189 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117112735 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147268314 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124399333 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137175115 seconds)
  done (took 4.137453109 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.376369315 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561341733 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.216476584 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290604832 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.273261386 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.21609847 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81012135 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.210471584 seconds)
  done (took 13.069958091 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176954829 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173194133 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.459499996 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.316959258 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18555059 seconds)
  done (took 2.436885959 seconds)
done (took 129.691270622 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127005945 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125075253 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124195082 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156435823 seconds)
  done (took 1.64391538 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196303307 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093193322 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.094819933 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122209804 seconds)
  done (took 1.625697043 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.474774435 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093265575 seconds)
  done (took 1.716855468 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150062195 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.145167912 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.169495907 seconds)
  done (took 1.604209991 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138912532 seconds)
  done (took 1.266879973 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120349672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134648792 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.27748671 seconds)
  done (took 1.664886667 seconds)
done (took 10.652686949 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122073241 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933492823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435079837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135909441 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.715715444 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431420636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429497274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178831908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177173661 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138686707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133777758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693462898 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441993007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882125739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.397111275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.911493906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696628968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114196546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147781903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11482418 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408860049 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138478247 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115147696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112620067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720904715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423984743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111309947 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924657802 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112086535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115071806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.429486298 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11344972 seconds)
  done (took 21.076397022 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113957637 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171266901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148979614 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115420578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11490638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142149896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124148938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12451298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208119336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111543832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164772599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112306037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118198863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141737822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1384976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11231598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114280913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146835046 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121196056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114251141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163821465 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111499186 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113239375 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14433846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112575573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135026315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142830777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125169693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112899324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146871095 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117224539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113078007 seconds)
  done (took 5.333578457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161864357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181746672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150517038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15184851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192931186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115021198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229033419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151811749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.2094038 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112928887 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135880877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141491503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155231233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113470146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16789901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112364435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115527364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145679509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120677036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113072781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165643256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112184736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114467893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144274948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113915373 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136383039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142818324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124657159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111647559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146269577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119254447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113251722 seconds)
  done (took 5.663127293 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126917657 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128327176 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135362633 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165551489 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122290304 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125309291 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15817743 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122999313 seconds)
  done (took 2.226416829 seconds)
done (took 35.43284919 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138933366 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130877648 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132752237 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159267203 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.223889459 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.151882763 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131062098 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118304695 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.162981396 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133734188 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111131392 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152267394 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132777153 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12234391 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.257655221 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127936044 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.261847046 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.260382333 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120647654 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.12827462 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152098094 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231632526 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158249591 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120479537 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.257767837 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116990153 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.252717621 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124589911 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122884967 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110747633 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.262038351 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156613342 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121917351 seconds)
  done (took 6.476855448 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.240201973 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153753335 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123252989 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120233935 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121540845 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152385612 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246836693 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153884702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120654119 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120567871 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.151857243 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227906656 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160229684 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117304001 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.1221951 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111241679 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279487034 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121775068 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146383492 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096251332 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116255418 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119665776 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.290671666 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148760032 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121691193 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120691718 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123587274 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158308703 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.124004427 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12326079 seconds)
  done (took 5.686839531 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126486763 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135483174 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138876792 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220359981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151085687 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165026697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1411032 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133297102 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176183993 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117222262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130010985 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183739782 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131727328 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125120294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146344054 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134195314 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132173396 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145608052 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124196812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132774646 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166379226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133044988 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13865054 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154504666 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114309168 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122251234 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124223833 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.15712123 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123104758 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128884338 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.147624848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118826809 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116994795 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181859575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116598691 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.129548386 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.169045093 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127963386 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127577802 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.180692552 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118066243 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115745267 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.174244797 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170667909 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115450463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.16295709 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127672525 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128730079 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144015133 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133790162 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156417385 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.145942056 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.137024952 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112897372 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143820044 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123735258 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11388654 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148041724 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129773554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117475561 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166096407 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122667136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126946068 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116116186 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.157546678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113452298 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113530469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.149931816 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141464958 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122935187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182158983 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114531044 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126651479 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158099738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126945117 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127904921 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11295706 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.157079971 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126431739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120406076 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.159159362 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118075333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117269051 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161854599 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135277858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12935823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157467708 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12890145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116829158 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.146619041 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133455962 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115907614 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150199082 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129986489 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11597833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117968389 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158529934 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126256779 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112017908 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172653805 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119236536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113714457 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171510286 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120026894 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119376924 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.154256089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159142809 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114487291 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155867252 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128177702 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114567942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152971751 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119351034 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114850899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129284706 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162394866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122382336 seconds)
  done (took 17.209539452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.357505848 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.346856485 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187994446 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430864747 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129743791 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.276097779 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347850838 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.353393805 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116065016 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18281582 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.179938343 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315838067 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114895973 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.176905401 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.35512808 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406151547 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.178638746 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.155435994 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.184864842 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129007451 seconds)
  done (took 6.093391932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136108758 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15008271 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168490389 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143652811 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125411651 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.1640484 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116896786 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137118006 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157177265 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125484973 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117190375 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162516587 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129589709 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131817453 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160843356 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151291685 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122487349 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151172633 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138972369 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119326551 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135393184 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142490197 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123975799 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168000281 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13535196 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126318181 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143893303 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120552905 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122226148 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124289597 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.152605038 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134357205 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151600567 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108863118 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127093822 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131509661 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.153471582 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119797619 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120667065 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148681303 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131481996 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12786726 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124175551 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13238198 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135786907 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112657673 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128145155 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.159113577 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109903282 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134512053 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.159119404 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130696732 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122856092 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.16802462 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12286835 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131459888 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157016707 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130450077 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120353725 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142972208 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.11483174 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118543929 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122792551 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160243312 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127046684 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136158209 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161679574 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115775521 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119622246 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.149472524 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118527396 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128578425 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.167063503 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124851267 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121917066 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158256887 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124408562 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096499861 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124148931 seconds)
  done (took 11.856160789 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141691542 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12537224 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134050685 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182736475 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128195724 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120536418 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157024181 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.138350514 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12986912 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165717272 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131278673 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128720544 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.168979085 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126832047 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124297065 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162056158 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129125193 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153166055 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.16472737 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142224526 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129953309 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15200589 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128841754 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125972012 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175791695 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127409737 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14174903 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161716058 seconds)
  done (took 5.182197598 seconds)
done (took 53.649302622 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.325307176 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.508139648 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.28064523 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.277707442 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304456285 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.323801942 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.276779318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.277537333 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.836224814 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.244977576 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.277944086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.276107806 seconds)
done (took 29.38363565 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.413707904 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.416403843 seconds)
    (2/2) benchmarking "String"...
    done (took 1.591079633 seconds)
  done (took 4.181902502 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.266026325 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.267221251 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.513079929 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.26731748 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.269455079 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.268375907 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.273437663 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282164855 seconds)
  done (took 16.307393005 seconds)
done (took 26.337613142 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.276649676 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.540079159 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.499322857 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.246721955 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.268272114 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.268098016 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.270963393 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.319223459 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.278349026 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.249605591 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.698546381 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.526631336 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.279022219 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.644266557 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.247849952 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.28042939 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.284462061 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.589328483 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.268500568 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.269453565 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.262029917 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.255951429 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.293668531 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.304034463 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.280087106 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.283780086 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.296817155 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.26820842 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.538350299 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.285354413 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.259675325 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.288326147 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.293248436 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.286449597 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.279284497 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.275290857 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.54434931 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.279421749 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.253436288 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.304572546 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.546765929 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.281382225 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.270384861 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.285367761 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.259763504 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.273154404 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.270853728 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.390238776 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.302980574 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.271276699 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.329903968 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.673562047 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.271490489 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.296076578 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.281981117 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.579333463 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.299959908 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.370970327 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.317998383 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.299744594 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.271139656 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.27094896 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.300998224 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.281518261 seconds)
  done (took 148.604265628 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.272724047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.274928549 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.275170625 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.280792792 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.275793732 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.276548486 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.271619493 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.271308162 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.276476552 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.304594334 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.272178647 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.271583581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.277587621 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.226253063 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.282559333 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.287830436 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.273586054 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.291615284 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.28541726 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.274178303 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.294469278 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.273707307 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.275484314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.273512907 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.283784323 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.363147846 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.285871021 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.27514146 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.284026238 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.274676499 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.284882337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.281279135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951051384 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.143656728 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.281167081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.313102138 seconds)
  done (took 82.833293315 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.272877754 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.273835086 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276028673 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.310547442 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.275628098 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.908079019 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909216406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.334445848 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.672639016 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.820259936 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.541019239 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.275394601 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367831636 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289037142 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.275906058 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.371625577 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.303110148 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.277322966 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273750945 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912669988 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.291218339 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.256112935 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461820567 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.293376846 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310681907 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.667846242 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276065365 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310044222 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.616404953 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.329569348 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276096473 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642662309 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.126700663 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39180758 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278465648 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310717488 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277381331 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564626599 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276327992 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.277505467 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280714053 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937894214 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.276634762 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912994318 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.281396958 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276955857 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278268394 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.276829311 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.278325326 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.339112693 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.985808094 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.277301767 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.276662946 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.28011263 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.278580671 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278080954 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.313577884 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.504270273 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.186958545 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.276538432 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.281960573 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313424727 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.280730038 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.865261893 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282979363 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.518171523 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.337511449 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.440111782 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.918163801 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.283774215 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.279182032 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375560245 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40484505 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.280310955 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279171221 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280957633 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.279586265 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.392768002 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.278208251 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.279366055 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.005793744 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.463895161 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.29891088 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.838090751 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.382795168 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.279205372 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675970191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.283514546 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.280531638 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039485362 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.375869153 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.279865691 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.280363422 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281017125 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.00165533 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91610818 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.599915772 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.283595096 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.04461245 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.283259608 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.175515805 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.881870501 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.932723087 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.280834563 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3956942 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.466197115 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298895861 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.280082104 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.844513783 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.284454063 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.343020044 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.281341514 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.282391482 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.685907907 seconds)
  done (took 388.130726176 seconds)
done (took 620.736418881 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.151099811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.100162193 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.251496064 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.109251646 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.090729283 seconds)
  done (took 11.880630282 seconds)
done (took 13.059821528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.482648029 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48497603 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350056854 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487331207 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.318581471 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.502179045 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473019718 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299879599 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39894905 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.37007351 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.398351776 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338698567 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317989113 seconds)
  done (took 19.400282258 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576745926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.293817026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348015834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.574176121 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328146226 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.582709412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621395117 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29325571 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463849121 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306975817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305126963 seconds)
  done (took 18.87291437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588894471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.295115144 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370642128 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.561561062 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330317999 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579221164 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.615150201 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294990085 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44956652 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336261471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.305182092 seconds)
  done (took 18.906170012 seconds)
done (took 58.359204132 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.325473253 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.388860096 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.318884635 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.302783423 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303273698 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.30209955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.304817732 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302292612 seconds)
  done (took 11.72846539 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.301801107 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.300942812 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.301428459 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.302486972 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302054435 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.301345913 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301074181 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.302351024 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.300132098 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.302451912 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.302172758 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.301698151 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.301219489 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.302196676 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.302691188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.302985788 seconds)
  done (took 22.010090516 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.3039906 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.302024144 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.300562181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301848037 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.302769465 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.301843186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.304295569 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.301499682 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.302095229 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.302283205 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.303287109 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.30182855 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30246194 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.303003555 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.302912161 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.305159175 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.302409903 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.30269376 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307417349 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.301880648 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.301702536 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30223998 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.30297249 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.304330199 seconds)
  done (took 32.450370173 seconds)
done (took 67.371246228 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.29388963 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.288578221 seconds)
  done (took 5.765535436 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.361837593 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.361802918 seconds)
  done (took 3.908694732 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304603692 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.305174231 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.304720982 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303776082 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303382374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304665601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.303415735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304646076 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305100363 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.304474275 seconds)
  done (took 14.226449254 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.304724989 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.304691685 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.302326019 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.30467466 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.303687155 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.304477259 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.304319631 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304618718 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.304016154 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.304336898 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304796023 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.305647807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.306372893 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.30603274 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.304887864 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.304849527 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.304077299 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.304100171 seconds)
  done (took 24.666580784 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.316947835 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.323123334 seconds)
  done (took 3.824450577 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.432645108 seconds)
    (2/7) benchmarking "second"...
    done (took 1.34663985 seconds)
    (3/7) benchmarking "month"...
    done (took 1.40882379 seconds)
    (4/7) benchmarking "year"...
    done (took 1.399982338 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.346447624 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.325555979 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.346570484 seconds)
  done (took 10.790396404 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.291452325 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.583326886 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.769523672 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.447537437 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.283617318 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.30895607 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.266268156 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.310947438 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.309778633 seconds)
  done (took 14.757923541 seconds)
done (took 79.12376324 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.290516884 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.325787088 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.303153337 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.309039566 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.603500258 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.344362068 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.295944159 seconds)
done (took 16.660510831 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268830359 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273356284 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.269099616 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306241079 seconds)
  done (took 10.304104168 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293294516 seconds)
    (2/2) benchmarking "read"...
    done (took 1.618735402 seconds)
  done (took 5.097194577 seconds)
done (took 16.589584223 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308595749 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.310067934 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.31053144 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.308966585 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.308707247 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.308434887 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.306682643 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.308504032 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.309345934 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.308185749 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.308647658 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.309587891 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.310248247 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308598952 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.309205401 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30888383 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307619713 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310126286 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.310387625 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309853676 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309900865 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310784547 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.308978767 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.30840486 seconds)
  done (took 32.60583917 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.309903194 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.309558511 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.30970069 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.310126477 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.310704991 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.311302238 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.310355558 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.309813588 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.311371393 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.310132637 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309388174 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.310548583 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.309901705 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.310202429 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308826547 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.310879014 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.311556202 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310498224 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310527223 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.309342015 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.310946057 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309606671 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.310446011 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311872458 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.310551163 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.309901766 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.311634094 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.311958638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.311524093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.311986939 seconds)
  done (took 40.503616243 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.316457677 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.319410194 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.309836254 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.311767242 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.311483788 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.311680941 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.312138916 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.312564735 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.31216915 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.311782927 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.313668931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.311683681 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.309757404 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.312148852 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.311856404 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.312995877 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.311874871 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.313181641 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.312630309 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.312070232 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.312313942 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.313326898 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.312316791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.312222552 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.313371105 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.311893249 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.311147611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.313938807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.312177941 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.312747815 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.313284225 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.312595138 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.312491403 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.313912328 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.312895084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.313148231 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.318282976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.321378802 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.314548576 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.313901161 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.314985698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.313173662 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.313821008 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.315828942 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.313345286 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.31323993 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.31415062 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.31331096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.314318641 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.315661174 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.313845974 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31533931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.315933123 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.315266027 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.313832084 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.31432797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.316004036 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.314279684 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.314974817 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.315274046 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.314969248 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.314902516 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.314487959 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.315151281 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.316127056 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.314124365 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.317171934 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.315118248 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.316144319 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.316539674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.315824201 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.316133664 seconds)
  done (took 95.790241762 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.31556876 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316282482 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317804771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315992528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316385947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.31737581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.317033166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31762377 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315282931 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317544542 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316044424 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315436421 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31628695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315582788 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31700445 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.316025887 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.314392409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.315659863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.315175321 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316441804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318357751 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.31769691 seconds)
  done (took 30.155032117 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31824775 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31829002 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.318563301 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319663671 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.319090705 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320036537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.3170554 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318062974 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319399537 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318098254 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319049473 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317805509 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.320508964 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318088917 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.318077935 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.319521974 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32050535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319309866 seconds)
  done (took 24.935080423 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.318953813 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.319836803 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.320240101 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319446733 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.319275748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318057528 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319545717 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320487482 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.317805746 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.317494927 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.319549146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320842142 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.318482272 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320183228 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320030693 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.319796701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.320016929 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318627042 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319600907 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318623881 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.319849694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319803859 seconds)
  done (took 30.223411999 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319269847 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.320277382 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320287431 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.320625511 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.318890129 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.321117305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.318791945 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.319527765 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.321294993 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.319080499 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320076468 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.319752892 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.322860045 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.320433003 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.320372907 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.320262441 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322049329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.320464956 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320819299 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.322397698 seconds)
  done (took 27.606677234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.321137844 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.319937056 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320597431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322265196 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32125169 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.320601896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321540443 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.322354047 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.323063433 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322573426 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.32191854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.322012476 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322796417 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.323200895 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323742365 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323503077 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.323671641 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32091323 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.324111392 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322914097 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.324153788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.324287252 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.322573349 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324501382 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322847672 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.323075367 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324408541 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323896689 seconds)
  done (took 38.23320041 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322267377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.325873701 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.32360274 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.323749442 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.324033979 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.323043698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.323995435 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.323971168 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.322796037 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.323619909 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.324594395 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.324016366 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325091161 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.323428704 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3265841 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.325073394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325062829 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.326043264 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325584268 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324481417 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.32628227 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324101123 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.326081948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.326231443 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323328914 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.324070517 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3252394 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.325143194 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325413292 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327299623 seconds)
  done (took 40.940198256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.34455739 seconds)
    (2/2) benchmarking "in"...
    done (took 1.342111336 seconds)
  done (took 3.888872697 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.325438482 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326134344 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.324656632 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326217682 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326473201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.326456922 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.324716208 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325240385 seconds)
  done (took 11.806349182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.318365772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.326537631 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.326986608 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.32591176 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.326944833 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.319279623 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32617453 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.331604594 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317948358 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.321393181 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.325023297 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.326103154 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.322782462 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.321580658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.321056575 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325056203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331200275 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.329463903 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.329164308 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.329909281 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330555342 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323672666 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326283937 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.332319823 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.321856559 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.332784985 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329149657 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.334243304 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322947505 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.327145621 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.324574454 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.33516218 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.329671079 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.330472824 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.329816295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.331046311 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332678078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330637054 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.333114506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.335620356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331969989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.331888549 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.325359771 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.328772413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328024546 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.333676354 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.331949137 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.332044235 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.323013577 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.328743588 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338998936 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.324280648 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.333790658 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329226439 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.331311615 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335857556 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.33747633 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.326527664 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.332381536 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.334312318 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.342430391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.342025626 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.330833639 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.337703336 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33327416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.348840319 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338109777 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.339204314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.333871925 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334189237 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.333290547 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344204138 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.345265231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.337789858 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.3334467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335192831 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.327148347 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338738185 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334275909 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.337006124 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.338204438 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.332660782 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336364266 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348064842 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.330002574 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.336564834 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.335287971 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.333965558 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.325896174 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340407015 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342510729 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.335532289 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.32627037 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.328657624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.332140355 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.338823907 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.327622947 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332068195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.337591784 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.33408743 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.333446177 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329633162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.336516941 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339854826 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.33640201 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.337553429 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341198612 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.328397698 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.33926306 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.341619937 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336373454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.329282212 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.332827803 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.3390211 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330522391 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337042768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.340554095 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.332761775 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.34021064 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.336814598 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.337329347 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.355412053 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.342340354 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336517159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.330396847 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.347520238 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337571155 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.33404606 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.342223346 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.339294207 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.335854864 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.333227377 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.342280624 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.330918623 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340197875 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33187022 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.339366608 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.337217974 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337388437 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.332394971 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.336430715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.334802362 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.336630395 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.340015365 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345792342 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.334910994 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.345248461 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.337349534 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.334758931 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.338746607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343903387 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337706459 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.334407654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.3433821 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.331216128 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340262146 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.333035637 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.341537148 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33855349 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.338331635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33856633 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.331131293 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33581376 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.340464182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.337051647 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.337658158 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.343575757 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.338822055 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.33897794 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.330943755 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.340833092 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.330346653 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.334460389 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.345382658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.341537807 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.340055723 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.337718373 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34704259 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340276448 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340204958 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.335152473 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.341142415 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.345459921 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.342864309 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.347910279 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341019734 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.339829921 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.334202272 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.336924644 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343369553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.3340598 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.34930266 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348895054 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353609697 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337498772 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.343760699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.334193276 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345559873 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.339631838 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348964831 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.340763634 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340459225 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.334879669 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344867664 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.334642247 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.344373543 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334202898 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.343499973 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.343966176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.340471066 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341384433 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.336213699 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339805296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.34568954 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341535477 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342808207 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.334655283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.34652237 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.332937318 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.337774688 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346176159 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.341460072 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.345430122 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.349500406 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340263883 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.347997415 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.342983961 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.338195891 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.344441597 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342904016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342196792 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.348161867 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.344829424 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.339533198 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349090762 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.34524686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.336568168 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.344588574 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.352406262 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.344210625 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338443474 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.352650425 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.343185532 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343360166 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343671814 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338230812 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349065041 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.346947092 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.352268464 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.337436477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.348099125 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.340021042 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.347580438 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.34266762 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.345984925 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.344152368 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.347533805 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353394982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.344580907 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339145855 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.349073087 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.344269311 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.344916264 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33947268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.352665414 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.347744324 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.347598005 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.343873623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.344666251 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.348678398 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.337501847 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.346427535 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.339681534 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357722569 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.368893444 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.352755255 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.351156312 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.350182724 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349477263 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.351211508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.3421997 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343238564 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345660466 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.343379539 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.342754719 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.351376481 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340476595 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350491885 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34426831 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.349273208 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.349798293 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.346520685 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.341494822 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.351229709 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.34713845 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.348328344 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.339235959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.35091043 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342655191 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.35019822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.349983899 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.342125699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356451265 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353132515 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.34519219 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.344733077 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.343658192 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.341387443 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.345105726 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.353106827 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.342881918 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.354417333 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341931834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349873168 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.346278559 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354506912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.35967567 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.342829371 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.35731157 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.348617965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.340482937 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.342673028 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.350158875 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353668196 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.361308044 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.342708013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.353775133 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349306045 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.349538625 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.349333625 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.349809576 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349947649 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.349113842 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35534112 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.355160993 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.348566214 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351687743 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360790833 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.349754074 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.349799003 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.342726717 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351722404 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.36106214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.34646828 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35105449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346183979 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.353557485 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.351834143 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.351032666 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.351550904 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.350260429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356476793 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.357434094 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354163214 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351918934 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.35614786 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.364097506 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357219563 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365759907 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.347312044 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357226598 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.352518649 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.345413097 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.347960982 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.347906129 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.355382281 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344095128 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.355801352 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.351500074 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.349249759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354921355 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.359193966 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344575296 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355624567 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373024247 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.346608691 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356041868 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.351873731 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.34628487 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.358611128 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.35197246 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.344474718 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.350135596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353853495 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360275756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.346708968 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.356267028 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346744374 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357168494 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.352895656 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.355182591 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.353998577 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.353807536 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347641917 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.356307674 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35514695 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.365640372 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.348628757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354189257 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.351806136 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.3629503 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.36501484 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.350180035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360151215 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.354615573 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.34797924 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353682379 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.359346466 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348607933 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360069562 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.347797397 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352565458 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.354189474 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.357779107 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.358814574 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.358805325 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.348780306 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.351268275 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.35573701 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.356342734 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357774337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.35240944 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.364323622 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.349361771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.349808646 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.358111357 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.349941343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36157107 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350239452 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.356768709 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353340036 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.36126781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.357581872 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355524803 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.34850048 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.350565092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.363367858 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3632694 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.357970031 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.356447779 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360715591 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.351288119 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355250934 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.357916908 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.35287666 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.3513451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.360542851 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.352354903 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.352898121 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.35333049 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359731951 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.364014655 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.364116078 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.352172271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.366759401 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.368621137 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366090564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.351410331 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.356738134 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.354976244 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.360713781 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.357552085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.35186004 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.368573542 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36708764 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363148557 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359708903 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.361037971 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.352015687 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.362608723 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.359810888 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.356987859 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.365933506 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.356028241 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366794029 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359733617 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.360236188 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.350992215 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.351841369 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.357098485 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.359759596 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.362576866 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.359161654 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.364656324 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.357767035 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365380223 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360421671 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.359723738 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.359885218 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.351939455 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362464676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.353895408 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.362214896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364657554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.356425235 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.36374234 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362361731 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35868015 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.361528161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.369237777 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.362324154 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.354560472 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.360971526 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.366931425 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373866849 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.360699603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353698389 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.3592745 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.365513817 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362507607 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.362558508 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.356607889 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.375851877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.376167748 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356808363 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.360350468 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366538464 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.374914552 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.362073358 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.362602797 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359505598 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.36265368 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.36894228 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.362792418 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366790732 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369996445 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.358704282 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.367854787 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.358233868 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.362452362 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.365220104 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.374972337 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.362693188 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.359772613 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.378756108 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375869241 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365571054 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390998978 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371938984 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.365083022 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.371080249 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356451788 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.366935935 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.360113322 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.369774635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.363979136 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.365118376 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.366183331 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.356681062 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366826443 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.373630909 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.374875528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.365795969 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.356637065 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.360362028 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.366663515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.366144775 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.365706198 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.365665333 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.36582651 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.366377121 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.359841068 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379746211 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.386563952 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.373182015 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.366515294 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.364610374 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.370246374 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373142002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.370545013 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.372891439 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.3669358 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.368327233 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.364103141 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376225883 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.368030689 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.360306796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.362494703 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.36192133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.370548959 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.376666389 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.391755781 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.37187186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.371548349 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369743785 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.368612379 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361920371 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372186648 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366677504 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.361439568 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.363681548 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37275217 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.369217844 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.367883229 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.361641549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.374949268 seconds)
  done (took 804.905494028 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.3674718 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368149298 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367565315 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.367895468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367468061 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367801802 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368609841 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367465806 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.367439359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368207112 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.366708008 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368567542 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366783941 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368417681 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36862339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368702884 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368021878 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.370088476 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36895601 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369773041 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370671629 seconds)
  done (took 29.97171087 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.370419294 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.369390369 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.370442298 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.370018142 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369659773 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.369449849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.369734297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.369920176 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.369658645 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371087628 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.369785129 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370739251 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.371014105 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.370978321 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371557245 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.369845559 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.372090584 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371358795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.370530325 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370967199 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.370863513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.370723611 seconds)
  done (took 31.388973146 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.369788163 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.370700587 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.363384682 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.374116677 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.371931124 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.370680877 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.371534922 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.372349805 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.371508283 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.366121986 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.366202919 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.364985831 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.371382562 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.379099772 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.369954661 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.375961918 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.373314767 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.372268257 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.371558031 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.372039574 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.378129314 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.385405209 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.371502865 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.36506062 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.374316118 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.373337295 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.372949883 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.373843357 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.367073404 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.377925362 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.372871371 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.366713314 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.377891408 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.37665406 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.36709715 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.377844875 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.374177983 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.372905734 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.373385862 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.374851754 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.395251468 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.374992911 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.377478363 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.3869075 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.373702453 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.368907484 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.381256184 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.373305734 seconds)
  done (took 67.166528452 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.37441166 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.373383613 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.375536222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.373718766 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.374547116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.374290167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.372922656 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.374464874 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.375333093 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.373383361 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.37392166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.373916482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375706844 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.374369887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.376288859 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.374279313 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.374107734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374109733 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.376969023 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.375547659 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.374967355 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.374977783 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.377231037 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.375017273 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.376309814 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.374643769 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.375762953 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.375704302 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.376408531 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.374290404 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.376896424 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.375401414 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.375729118 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.374762919 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.375892283 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.376402458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.375961035 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.376047293 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.376564309 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.37704841 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.376240923 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.376492931 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.376080587 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.377469319 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.374176905 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.377652471 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.376587619 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.375689882 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.377972569 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.377807957 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.377881278 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.376015489 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.377787676 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.377145097 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.378911891 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.377436965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.376951965 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.378182854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.380802642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.378987179 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.377634889 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.379169625 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.377431753 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.378679416 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.378167773 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.378878272 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.378216949 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.377094272 seconds)
  done (took 94.8240054 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.377672906 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.380446259 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379174119 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378967799 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379554734 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.379029298 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380306072 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.378575854 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.379637386 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.378339518 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.378926401 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.379993366 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.379974232 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.379451913 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.380847916 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38167366 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.378923353 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.379547436 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381218944 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380699941 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.381126614 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.380954953 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.380909254 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.382380771 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.380226672 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.38106312 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.382886857 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.380177883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381941649 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.382209595 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382178258 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.382249157 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381833441 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.38199353 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.381830563 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381912723 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380120978 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381889184 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.382386414 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.381006145 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381714163 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382133725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.38112578 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.381433773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381920365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.383373828 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381887357 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.382484444 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.381952028 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.383512472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.383082675 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.381887454 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.381980633 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38179484 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383416499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.382452379 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383083803 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382026261 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382918833 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.38289131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.382295213 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383468882 seconds)
  done (took 86.887341254 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38153207 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.384023771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.382870437 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.382662906 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.38209087 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.381650429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383894534 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.383234214 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383586887 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.383205748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384632661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38313007 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.385014777 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384734447 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383377581 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384762788 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382967845 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384454207 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384499774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.383805493 seconds)
  done (took 28.920973945 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.385421887 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.383651212 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.384341608 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384504613 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.383149068 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.385463209 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.384851831 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383530258 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384616376 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384880114 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.384840163 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.384685747 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384820296 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.385474543 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.384405037 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.384706614 seconds)
  done (took 23.404139269 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.385418748 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.38544459 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.38582244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.385492637 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.3846629 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.38604065 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.386110854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.384894604 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.385048548 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.386151256 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.3847159 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.386006776 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.386411205 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.38675202 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.387261841 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.386878533 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.38656938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.386772147 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.387046129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.387735294 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.386058679 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.385873241 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.388615594 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.386909588 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.387240275 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.387760899 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.388148469 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.385831128 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.386120275 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.386352222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.387180931 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.387222495 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387679999 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.387169366 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.389214814 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.388586556 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.386578907 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.387616397 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.388567748 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.388754249 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.388870532 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.38701628 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.388031216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.387710567 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.387018089 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.388575986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.388447932 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.388155284 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.388783822 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.387290549 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389017303 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.389170277 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.388192628 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.388394775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.388190684 seconds)
  done (took 77.545577984 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386964778 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.386544249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.387396128 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.389923157 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.388106563 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.389277529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.389436809 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.390250942 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.389197456 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.389346373 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.390125627 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.390407054 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390759583 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.389185705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.38985937 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391578765 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.390356568 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.389365513 seconds)
  done (took 26.263828579 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.391790545 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.390901114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.390539473 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.390206897 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.391088862 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.391857159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.390343529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.390409562 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39119278 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.390729902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388580502 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.390190195 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.390850455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.390846385 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.392360148 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391315396 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.39307336 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39051722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.391200662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.390185041 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.391841112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.390567859 seconds)
  done (took 31.85813259 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.381956693 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.381825727 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.381437627 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.398953632 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.401756065 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.381870655 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.381608232 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.382790367 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.405373973 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.429676306 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.425393505 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.399715171 seconds)
  done (took 18.010005295 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390460625 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392031634 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391841169 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392948245 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392522693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39388186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392929453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393443271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392640662 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394413394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393266233 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393857507 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393730076 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392477356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392693359 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393673421 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393379148 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393293353 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393113822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392718302 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393877416 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394473935 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394975989 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393723473 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393888513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394364533 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394086062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395329551 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394274125 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393470452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394602866 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395283154 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396149634 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395470432 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393911466 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393521474 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394252974 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395505049 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393938933 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393978825 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.394648706 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395520489 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395666291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393507193 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394897531 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396131802 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395668702 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394453132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394701818 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396287158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396709271 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395569556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396446641 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396349078 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396652595 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395372759 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396634202 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395552574 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395734241 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396179623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398374661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397035773 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39636918 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397552269 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396615854 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397717802 seconds)
  done (took 93.306958116 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39611621 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.396516349 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397384579 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397065831 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398138592 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397750329 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398588776 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395502535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396985555 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398311528 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398539511 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39724013 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399515419 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398753341 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398157037 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397907239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397037931 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399045671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.397542749 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400232871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397565476 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398844862 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397570724 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397563562 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398244949 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397884742 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399317829 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398948955 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398131984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397269325 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40055084 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398584586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399992688 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.400839551 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398984352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398901807 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399596343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399986714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399878161 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399808545 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3999183 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400177111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40038445 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400801621 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400949541 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399619682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399933762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401125489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401204497 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400849511 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400495479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40048274 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402183315 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400440182 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401615318 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401765302 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400630243 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400784625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401096482 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40010082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400552053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400395694 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403120289 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402508416 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401608936 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402224932 seconds)
  done (took 93.62417924 seconds)
done (took 1885.954291942 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.557833851 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.518350932 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.390412339 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.467583093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.392351201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.41428966 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.404089322 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.392629344 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.392088294 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.391652704 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.391612242 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.607235123 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.439990683 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.393498973 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.392655156 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.490027357 seconds)
  done (took 28.303777483 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.422733552 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.401434522 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.528570777 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.396142007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.421842225 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.615185431 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.459504216 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.398486309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.597005542 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.418535548 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.390772887 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.422475195 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.398836776 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.40021237 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.4195982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.615081467 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.692591247 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.395295204 seconds)
  done (took 30.662234458 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.925590979 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.407992221 seconds)
  done (took 5.602625441 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.420665257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.399427111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.401348774 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.397487059 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.38853773 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.3908592 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.397582873 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.389313246 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.390757686 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.543863976 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400261993 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.413291897 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.417065511 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.398114313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.406737775 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.449637813 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.568304588 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.40850378 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.406740631 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.404604655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.397793979 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.498248802 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.445235829 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.405992563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.545320859 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.393479122 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.402263433 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.406932027 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.523684521 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.408491325 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.399845038 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.398799394 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.400257944 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.391738062 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.957470217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.39251596 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.429217256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.408208803 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.406862229 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.540086004 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.401197975 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.408438245 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.392471495 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.955666591 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.514815472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534592918 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.419236116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.39987925 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.400793118 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.471863664 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.400837683 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.40210465 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.462297859 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.243548502 seconds)
  done (took 89.229860118 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.451814823 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.393272689 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58244039 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414371077 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.392187178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413189848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.415867767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.732309578 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.414051173 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393422842 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.743530137 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.069106928 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.397937317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.462168812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.431185532 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445007458 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396175756 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.412213329 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.41378882 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.396363573 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.995772506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.412269388 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.395555563 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.468520337 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.438069463 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002292784 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.395896366 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.413096276 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.397654413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.39463301 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.040533797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.40573228 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.441631947 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.395858032 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.708831437 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.85100959 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809912136 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.403386113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.435206499 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.396722356 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.421508753 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999157678 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831333333 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.396397119 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.404430374 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003196638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397279451 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.404740967 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.405441162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.672729583 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.397136644 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396680143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.398447614 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.415914295 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.396858627 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.444403797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.474022627 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005769004 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398875784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.395388586 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402797264 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.398784066 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.406791134 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.402607201 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.398873876 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.835636356 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659225498 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.402096389 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.836092063 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.03165036 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.400534138 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110445254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398452397 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404028715 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.429049957 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.411963841 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.399677896 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99693605 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.411082157 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.398972358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81406932 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.402794644 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.732746757 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419563578 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.399384168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.017710436 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410509922 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.438515558 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.400945995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.404934549 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.399211064 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407790379 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.718883984 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.455759392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.398944128 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.398036417 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.439566016 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.400800085 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.400636523 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.398347115 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111126035 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.41009889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.399912791 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42026702 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399353268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402004383 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.403616396 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.404321097 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.688310899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.401844237 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.408831078 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405716389 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.401252532 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.414611403 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.47930026 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.400767303 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.769961941 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.400370356 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.417571303 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.408048104 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399955645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.435507345 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400533648 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.404836652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.40290492 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.778180775 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.421856733 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.401759395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401599392 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.402843952 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403095309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401964198 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.457843784 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.405479316 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234578091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.442793815 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.402214966 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.4024751 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416536373 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40245277 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.411807322 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402388216 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.718415199 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.720518618 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.65401476 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.40826329 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.403006256 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.264458807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.440184567 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593443372 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.425631945 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.404042537 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.709607009 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.63847433 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.4024466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.403504843 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.402379646 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.690114368 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404055074 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742502173 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.067126363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404595958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.411099735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.235325215 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247153337 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.406955977 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.406021523 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.730790007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.42553933 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.403206271 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.404319237 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.404839333 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.405106669 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.409625009 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.414053892 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.406103484 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.405012019 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.747296018 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.606087163 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.425595688 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.406388497 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007926981 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.431207207 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404776104 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414584007 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.410007509 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.404848204 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.456313814 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.408095928 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.443953015 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.407294175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.406463877 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.078580894 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418406657 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.40866406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.607454606 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.200701353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.406866026 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.408576296 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.409561325 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.462543016 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040478028 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.451915803 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.776034068 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.409751566 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.451066609 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.415664075 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.418047674 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038889093 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.410711308 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.408279311 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.209653305 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.407497602 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.859907866 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.407111485 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.408286447 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.141455463 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.40563258 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.406782895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.405426461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.408423914 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.718236228 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.408389712 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.444315348 seconds)
  done (took 516.936220877 seconds)
done (took 672.002594359 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.409594669 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.413928425 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.412167491 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.41192782 seconds)
  done (took 10.931709671 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.431676396 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.415251124 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.42487109 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.415528537 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.425140983 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.416753488 seconds)
  done (took 9.815887863 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.408750043 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414174303 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.413166607 seconds)
  done (took 8.52178009 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.660014818 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.428612387 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.832947731 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.422740859 seconds)
  done (took 9.629901426 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.427408208 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.42498339 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.426016382 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.426153228 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.42856462 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.428605069 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.428466881 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.427371331 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.427129258 seconds)
  done (took 14.127773349 seconds)
done (took 54.312899532 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.445945698 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.548990176 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.528342396 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.451694342 seconds)
    (5/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.388871395 seconds)
    (6/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.741052434 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.534010277 seconds)
    (8/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.414097801 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.48508875 seconds)
    (10/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.729061448 seconds)
    (11/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.505052025 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.448218003 seconds)
    (13/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.529528324 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.686615828 seconds)
    (15/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387960469 seconds)
    (16/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.810575188 seconds)
    (17/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.504395501 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.746603199 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.578289282 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.778522484 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.499700494 seconds)
    (22/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.415685882 seconds)
    (23/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.729605013 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.758424105 seconds)
    (25/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.531643532 seconds)
    (26/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.391169607 seconds)
    (27/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.913973155 seconds)
    (28/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.389376304 seconds)
    (29/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.427071443 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.500662157 seconds)
    (31/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.450996017 seconds)
    (32/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.652239576 seconds)
    (33/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.397052522 seconds)
    (34/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.69447655 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.485071135 seconds)
    (36/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.448110929 seconds)
    (37/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.482635742 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.573266493 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.390578191 seconds)
    (40/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.430850773 seconds)
    (41/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.562004954 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.481724406 seconds)
    (43/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.445833904 seconds)
    (44/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.397018029 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.516180825 seconds)
    (46/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.45711903 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.523448686 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.994816102 seconds)
    (49/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.390671513 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.470613453 seconds)
    (51/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.390402462 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.459258923 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.514787082 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.511019912 seconds)
    (55/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.532937139 seconds)
    (56/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.604173764 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.682303398 seconds)
    (58/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.390890402 seconds)
    (59/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.577980683 seconds)
    (60/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.649602327 seconds)
    (61/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.513541172 seconds)
    (62/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.652895926 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.582251235 seconds)
    (64/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.443613599 seconds)
    (65/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.501394663 seconds)
    (66/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.497936916 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.508083926 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.581891676 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.656238599 seconds)
    (70/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.552188078 seconds)
    (71/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.440867077 seconds)
    (72/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.634214748 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.483164641 seconds)
    (74/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.416064827 seconds)
    (75/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.401600691 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.687518785 seconds)
    (77/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.392313261 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.502064701 seconds)
    (79/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.48731074 seconds)
    (80/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.581278041 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.543656496 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.504042819 seconds)
    (83/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.392176314 seconds)
    (84/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.624390654 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.575620045 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.693771802 seconds)
    (87/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.614826031 seconds)
    (88/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.406808888 seconds)
    (89/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.736350327 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.55268413 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.452011885 seconds)
    (92/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.654270905 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.550392693 seconds)
    (94/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.452246658 seconds)
    (95/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.498761033 seconds)
    (96/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.543908479 seconds)
    (97/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.497924248 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.58263522 seconds)
    (99/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.494783495 seconds)
    (100/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.566392954 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.489187674 seconds)
    (102/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.4464625 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.396431128 seconds)
    (104/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.405320673 seconds)
    (105/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.016962497 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.446707101 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.429563372 seconds)
    (108/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.404421191 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.782478287 seconds)
    (110/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.591348528 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.4195813 seconds)
    (112/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.466172965 seconds)
    (113/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.410902166 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.511083347 seconds)
    (115/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.543336364 seconds)
    (116/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.457785439 seconds)
    (117/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.523006225 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.462438472 seconds)
    (119/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.688626692 seconds)
    (120/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.455385762 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.418147987 seconds)
    (122/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.450639706 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.431376777 seconds)
    (124/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.486467806 seconds)
    (125/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.510152695 seconds)
    (126/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.505194862 seconds)
    (127/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.399548747 seconds)
    (128/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.453778288 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.45464433 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.435913825 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.692370193 seconds)
    (132/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.400492095 seconds)
    (133/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.411200822 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.593393293 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.432991276 seconds)
    (136/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.635433231 seconds)
    (137/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.398175459 seconds)
    (138/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.663244338 seconds)
    (139/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.461545438 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.542123638 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.590980203 seconds)
    (142/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.396003693 seconds)
    (143/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.593699814 seconds)
    (144/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515428621 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.589778923 seconds)
    (146/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.607701016 seconds)
    (147/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.541909273 seconds)
    (148/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.830255625 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.700205597 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.749471536 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.48476095 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.557811538 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.424451111 seconds)
    (154/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.603989226 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.530486178 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.532723398 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.460309402 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.435100518 seconds)
    (159/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.577592589 seconds)
    (160/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.691809557 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.555930614 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.531167615 seconds)
    (163/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.631302828 seconds)
    (164/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.54097 seconds)
    (165/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.454772778 seconds)
    (166/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.487321347 seconds)
    (167/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.654396596 seconds)
    (168/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.398445693 seconds)
    (169/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.508446435 seconds)
    (170/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.399082371 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.461231144 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.534552534 seconds)
    (173/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.399297129 seconds)
    (174/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.528043029 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.606051816 seconds)
    (176/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.660714621 seconds)
    (177/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.538836208 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.526246366 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.617242721 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.834329089 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.591977281 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.597806862 seconds)
    (183/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.500941828 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.399722223 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.62740403 seconds)
    (186/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.525039731 seconds)
    (187/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.39961536 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.854943544 seconds)
    (189/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.839161827 seconds)
    (190/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.402906186 seconds)
    (191/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.651020781 seconds)
    (192/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.74151162 seconds)
  done (took 344.651296059 seconds)
done (took 345.940652793 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.452774099 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.528616086 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.433700658 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.433198778 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435562366 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.423990732 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.45453877 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.434008782 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.446877638 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.449604301 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.425515833 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.443496969 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.449051273 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.445438327 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.468337169 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.434695781 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.435433812 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.444632063 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.451199937 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.451475304 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436513328 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436193087 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.462613281 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.436365164 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440584259 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443099059 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.44067681 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.42850958 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.443040658 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.450402125 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.433494166 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.441365639 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.450917465 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.446463811 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437252463 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.445107443 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437700409 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530124764 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.455356153 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.446920383 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.444161278 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.452089661 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.440399224 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.441107272 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.448509903 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.46481519 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443477873 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.449969262 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.435806337 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.443844022 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456997319 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.448609488 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.446200762 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.443871332 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.432899984 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.45244447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.447746896 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.458436772 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.443493804 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439841694 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.469456245 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456740031 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.450336429 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.444093429 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.444158594 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.453869039 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.446533228 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.454839177 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.446550311 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439201498 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440480174 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.44529551 seconds)
done (took 113.513008778 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.561361981 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.431678044 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.592176229 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.444598509 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.609276868 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.564114541 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.444373259 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.446115554 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.445375805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.241651645 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.446925291 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.445193362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.433588356 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.445742217 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.562667896 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.446312037 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.446964539 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.150419895 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.44803579 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.574463427 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.435836909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.445608683 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.446541545 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269736865 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.43574987 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.430184739 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.575716708 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.448176057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144304566 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.431461185 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.435254117 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.16621991 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.576234674 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.466060623 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.458393852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.45671744 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.610104298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.449366824 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.563259874 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.564406314 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.596490126 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.486194612 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.431275478 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.435388403 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.450236057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448531713 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.447520754 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.47777768 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.436644425 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.449036858 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.143610884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.4589358 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.459705539 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.448470241 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.451177196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.469288332 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.449442684 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.451391604 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.577999045 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.450446903 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.566145087 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.248171113 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.253130647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.449626336 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.437667105 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.450207735 seconds)
  done (took 115.719374295 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.509601824 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.515936212 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.565035295 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.441215058 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.490752449 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564632795 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.441456452 seconds)
  done (took 11.834022165 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.44769373 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.45112729 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.490214256 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.488903326 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.451308724 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.613952202 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450647796 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.452589659 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.451030413 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.49348584 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.451764922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.450709376 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.460800632 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.440725064 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.488762023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.4550398 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.561132759 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.443045635 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.453315453 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597601912 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.453699715 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.460075509 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.494619971 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.4555359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.454847181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450219125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.22742493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454890399 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453050015 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.452996181 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452850937 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.509922655 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453312001 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.443520248 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453148885 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.557727354 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.45293663 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452757855 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.454892888 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.444006419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.452270585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.454292215 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.454849591 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.45268097 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.451925103 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.469150496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.452560166 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.454278571 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.454469683 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.454891286 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494439618 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.453157867 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.451950213 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.454047631 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.497977934 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.46134224 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455102796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.452951751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.454043367 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.451557152 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.600410613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492371505 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.453850258 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.491709226 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454295916 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.45526176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.456370856 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.454360707 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537933914 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.454043756 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.493349256 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.454266529 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.629039379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.469593461 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456975995 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.448316862 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.449617845 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454979561 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.441492046 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.453317815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.454118361 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.448371154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.452677249 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.453534188 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454902845 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.605505403 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.554816734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.454420162 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.462218368 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.454657766 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.455012125 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.497918655 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.454381109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.456101805 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500279688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.566045087 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.498821428 seconds)
  done (took 148.939826671 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.460448539 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.46059372 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.453862638 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.474605556 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.448338508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.446701345 seconds)
  done (took 10.055962625 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.450955278 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.460493536 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.457499752 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.45601959 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.459461895 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.459333001 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.457622682 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.45052584 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.462545072 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.45607405 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.457532556 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.460643838 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.457340152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.459173991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.458011731 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.458226826 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.458403837 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.459219386 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.460057947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460638063 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.444498454 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459863519 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.459340945 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.451329425 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.463274985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.457147552 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.47535031 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.458424383 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.46104385 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.459340863 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.462395807 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.458992007 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.452454065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.455456978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.46363958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.452579427 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463203943 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.460466318 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.458217036 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.460110014 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.460573478 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460307129 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.459782833 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.461620897 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.452623933 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.457200538 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463709049 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475394952 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.461196024 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.46119315 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.461037143 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.459820234 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.460918266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.463856621 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.453568806 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456636928 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.466535342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.460200259 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.462145468 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.454405998 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.462137646 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.462644361 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455170292 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.464880515 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.459326869 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.462052135 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.455227802 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.466060452 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.464219298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.46275572 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.462495251 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.461427937 seconds)
  done (took 107.403347341 seconds)
done (took 395.256045467 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.88330984 seconds)
  done (took 4.199695878 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.587417064 seconds)
  done (took 3.905658196 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.131713092 seconds)
  done (took 26.455680661 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.49500246 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.461080756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.459586657 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.446530888 seconds)
  done (took 11.178323841 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.813135995 seconds)
  done (took 4.130882147 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.460113216 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.457028567 seconds)
  done (took 6.23572632 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.760331129 seconds)
  done (took 4.077619423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.269745571 seconds)
  done (took 4.594737149 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.477855642 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.458493435 seconds)
  done (took 6.260117913 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.422841351 seconds)
  done (took 3.740759647 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.049679156 seconds)
  done (took 23.369732002 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.46877449 seconds)
  done (took 3.788663056 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.512255992 seconds)
  done (took 3.828824562 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.67158528 seconds)
  done (took 6.989318938 seconds)
done (took 114.074046861 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.446638694 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.45129681 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.454096505 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.450387445 seconds)
  done (took 11.121042618 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.526868933 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.528187836 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.536547074 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.522278885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.520796429 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.531102956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.488913532 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.503002047 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.51987228 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.516121521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.532197164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.521651339 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.531521171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.4905824 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.517900087 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.534442587 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.520011727 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.537845815 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.491094086 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.523412611 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.463469729 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.523123206 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.51810414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.46571798 seconds)
  done (took 37.684777277 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.951654579 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.526154265 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.611670951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.507330461 seconds)
  done (took 7.916901644 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.569644389 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.570448216 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.589890585 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.625166817 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.671791568 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.586190653 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.491912196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.48658704 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.473454616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.569804374 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.654032409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.568815196 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.78734174 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.466522009 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.784021635 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.46610165 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.466022812 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.571880058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.620403553 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.648646371 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.467242795 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.569023352 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.575159661 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.570318192 seconds)
  done (took 39.171307608 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.476123853 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.484102229 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.468409502 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.484978888 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.469018753 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.468475343 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.469898472 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.474527128 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.46736058 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.467362255 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.468282885 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.48327362 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.468280519 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.469192901 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.474744175 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.470844972 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.470804319 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.474968908 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.476785979 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.469034551 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.469576762 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.47831384 seconds)
  done (took 33.726490972 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.451823184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.452001267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.8041069 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.708161895 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.45205008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.451954794 seconds)
  done (took 14.642880077 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.544260355 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.700618817 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.460329435 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.892659995 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975439795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461464186 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461848383 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.747010431 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.123040987 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.139760901 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.528065279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542150163 seconds)
  done (took 21.900452057 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546341015 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465062498 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464928978 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498847028 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464588746 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465722369 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495161145 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223774527 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.471581516 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742215875 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481162999 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548079289 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.715526814 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474163592 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469594761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.432202298 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697611476 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030033585 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467839088 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46550376 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49933615 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471766298 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468880979 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726257475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469046621 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465822128 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.728291265 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465751502 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806029763 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785924217 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787000766 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471546029 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742206182 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176142506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57499711 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706355311 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465237089 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467684922 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.435678546 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.467130359 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488341454 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.470006167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783728024 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471057027 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467924879 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484737038 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240765509 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.474314604 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.467519792 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.467966368 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791030167 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554170921 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.474313151 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468003727 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539454104 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466652231 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.473251699 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605857553 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109818244 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482427995 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480571767 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.473437492 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467944133 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475325442 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208410212 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.477223457 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.475015475 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474720472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468943851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470433326 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.494589387 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468968093 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.490413202 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468463359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451508346 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493541795 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471004709 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085466551 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47063674 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.472146569 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697517958 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46813621 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468830561 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.467661886 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469544068 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.320438088 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478480012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.436913696 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534288664 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232013879 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711701993 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492099538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499625279 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.692823234 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.436885171 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470768047 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.470747238 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493392512 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492565543 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238109699 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471256181 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.476416567 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720718673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.683033536 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484641344 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.443491332 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995493936 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471608606 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.496489562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477352577 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.715748044 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.221179353 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805958485 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478848897 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506206536 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.473132131 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384410222 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473751109 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.484545427 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473892523 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789734866 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.396513075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475540316 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545478641 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483245796 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472874239 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471858484 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474974514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474826934 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.689505259 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483672999 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.801620535 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.480094291 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473475827 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.473852312 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473106249 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.474686045 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.698052212 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474569453 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.747668755 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473472288 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473945825 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473866383 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.693969709 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.491158026 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.487269264 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816432074 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478365859 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477135874 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790692941 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508161148 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589303843 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50752434 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.47827505 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726773177 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.482925822 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.481905654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475249033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475824768 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477391838 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.483700525 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47077551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200725951 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469008977 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482889265 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477406979 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.49370439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550274192 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484624521 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717472875 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488357815 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469454475 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.483342193 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.475831396 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.69925727 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794555343 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.480549191 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653169102 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00159083 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198972179 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491178342 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.47607521 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.476422475 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.475233148 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477069913 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477224312 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.477033008 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717659016 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80159007 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475493102 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.204138921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479646736 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47737431 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.485645567 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793961596 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.486544984 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477951855 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.477912571 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478636173 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479845987 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800330538 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700957587 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.496003414 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480245935 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.997274286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487625971 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47919982 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479811527 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506050867 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478804065 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398114443 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.821858833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475638538 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797455556 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480791486 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.497403786 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.478480245 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47872213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483338541 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.505887198 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487457618 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.721512036 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481677801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481519717 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12021801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408914198 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138529941 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483437746 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.487654364 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486488546 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.248949252 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480423203 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482176462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76380666 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.248143604 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481362658 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00842816 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.497829778 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.392596549 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799988276 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711993046 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483163982 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.482909072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801584059 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.696676339 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50920593 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493892245 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486301517 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.450408143 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09058899 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485510343 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659515695 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253770923 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481960619 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482880755 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.502689297 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.480906916 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940921068 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482365791 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48291313 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482135334 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486492524 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401732391 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490843988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48323994 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228477871 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490413724 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.021224727 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48225574 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726602661 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.803203376 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776800506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.483822596 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.505511388 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.750103777 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80548581 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48510216 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485942567 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151151706 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.343710742 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.491568694 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485712877 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403230005 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487320764 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828275697 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.505432088 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.491815524 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492145775 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48481098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485455215 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.483500298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492942595 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474664632 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055123787 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.498387089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490047015 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504430745 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492022614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.73420813 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.502124119 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209078438 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716733531 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495271339 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519548837 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.491116258 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485323268 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.455832516 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484705974 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485479499 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575435308 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.70882713 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494741909 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.452670087 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.527140339 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.698321513 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485594787 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485778961 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741312092 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.488441535 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.491106541 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455843561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519855016 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48697465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489011195 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491804206 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527956589 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562472903 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731581007 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.811010947 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811987096 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950444092 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488094128 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491215624 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.503409873 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570195242 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48904614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.490686738 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.491322449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210955476 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440798996 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.218923372 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815038885 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.491643944 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499534155 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488857042 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729634152 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487309819 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766790052 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489384773 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.504861159 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512492992 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490814926 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500545145 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706535296 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764647001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489116277 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491973705 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494706937 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.490240214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821317027 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.705207734 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067144274 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122319686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493911913 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501712468 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272369131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766869413 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49022573 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490865646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490361986 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.494488016 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.492647673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.499613206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490720592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716674013 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818248094 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211372121 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.814882043 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.519311645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.420126064 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508248682 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.74192538 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334201217 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.737273704 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225756465 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343533188 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748448558 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566914805 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740435082 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.493765618 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730016022 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.494202159 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49290001 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49307855 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493135194 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.491871556 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816211819 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222687576 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749850329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.499900394 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.495285279 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523583946 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.739101942 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719396589 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.363828425 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715078479 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824323837 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503676668 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493883015 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228313431 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822804223 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497059598 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.499553854 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747960557 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4947939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531674803 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.358697538 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.49393375 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123662449 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.709330883 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516445252 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511103743 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345592942 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227933514 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.503190391 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068541647 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49899793 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509843155 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774613146 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.501806318 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495007542 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778693276 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.500820585 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496614548 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751343993 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.227117242 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.410839443 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.497760397 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503921239 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.498861938 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498312501 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573145606 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497089206 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506292002 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.963461019 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499162563 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498997017 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511712079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.507255387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499937341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.497881104 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497957895 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.507484345 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.481534126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.465458982 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507237338 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632752246 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114031449 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498824177 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.115600985 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.836102476 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.746980228 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498224436 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.466827149 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.505642137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499702812 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499509609 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498233355 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506280147 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141142738 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.501104653 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.828767728 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513181125 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.711045431 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712000369 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499634658 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760536398 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507480954 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519998746 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.467169838 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498957145 seconds)
  done (took 1041.471875238 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.55129876 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.518017629 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.527217133 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.549690868 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.508540147 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515579735 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.576084425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.518318193 seconds)
  done (took 21.618139385 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.504091627 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.501526692 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.49429395 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.505072557 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.500482098 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.065133233 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.502843707 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.500269208 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.515431096 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.499800441 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.502512431 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.222008346 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.503525583 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.506842023 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.509873737 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.504957376 seconds)
  done (took 34.701843683 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.700670941 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.738245266 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.066285188 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.504768845 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.514016577 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.515595144 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.922542963 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.50825773 seconds)
  done (took 28.826542681 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.506730701 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.506738521 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.508240312 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.508908634 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.508538177 seconds)
  done (took 8.895647405 seconds)
done (took 1302.99788018 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.50825856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.509158626 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.508840977 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.50920475 seconds)
  done (took 7.390808203 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.470721545 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.470339888 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.469793028 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.483405142 seconds)
  done (took 10.25004537 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.349492535 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.133523084 seconds)
  done (took 5.838063847 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.080300543 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.074231633 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.083115364 seconds)
  done (took 7.593586831 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.810519467 seconds)
  done (took 3.16685021 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.493212024 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.497609511 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.519386764 seconds)
  done (took 8.868155764 seconds)
done (took 44.463713409 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.503753571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.262530855 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.674236029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.49881443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.678322856 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.671783507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.722077092 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.49385998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.528747069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.50979235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.500542882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.672871958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.715280831 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.266759475 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.71168511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.262378019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.672548347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.49515913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.502978586 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.494781406 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.745520083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.499395309 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.497216344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.495447271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.674048383 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.659645401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.501431007 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.260892135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.496029009 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.49927967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.659934451 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.506474001 seconds)
  done (took 86.692945365 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.507999802 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.496382147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.515959722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.515959188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.496113282 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.494825321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.517756038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.496005254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.508250163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502529341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.496430277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496018233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.496754612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.495548715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.499329062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.496725851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.497081257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497086231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.514952515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.516343185 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.497864032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.496620808 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.518308532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.537514322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.498221673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.498107338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.49738815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.497097192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.497010649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.496138344 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.49828866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.497811395 seconds)
  done (took 81.448281923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.507281569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.496877403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.498394622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.537115538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.497847901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.497501216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.521327506 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498133947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.5025509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502261881 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.516234748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.498919483 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.501183722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.49842787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.499891357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500596665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498130058 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.516021805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.499195565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.499287412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.500110889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.500220171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.505507935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.499353922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.497692833 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.501632795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.53279715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.517619859 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.499556974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.512820141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.499167117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.524615319 seconds)
  done (took 81.538796227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.743923887 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.516075108 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.518253085 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.509713149 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.519791215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.517567057 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.5102005 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.747867546 seconds)
  done (took 15.945891499 seconds)
done (took 266.984237541 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.509204139 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.527999612 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.542420682 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.517380062 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.533367598 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.538048152 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.745317296 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.53865164 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.734414132 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.521043926 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.527830386 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.530046415 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.486761502 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.659280826 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.50353198 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.512890415 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.506923383 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.536849948 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.512281304 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.765255118 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.539957269 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.519283964 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.529209215 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.51273305 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.479373381 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.608165141 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.587571811 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.679838221 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.642760103 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.585065559 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.505406897 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.523270561 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.532536208 seconds)
  done (took 70.860025164 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.511077229 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.519647773 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.519218339 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.518883085 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.520927896 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.518504091 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.51097488 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.519397889 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.520393631 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.521244358 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.520950242 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.523482409 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.520864494 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.52134828 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.519619883 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.492319351 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.510255255 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.519887186 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.510342536 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.491300577 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.519688686 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.521827999 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.522680722 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.519718977 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.520914043 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.521227344 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.521299486 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.523159143 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.52165152 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521546836 seconds)
  done (took 46.891386817 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.520580776 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.518092082 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.505586369 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.545251078 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.512585836 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.517596116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.87365772 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.524806509 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.517767608 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.517020146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.506822027 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.546881021 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.568729265 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.514795607 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.516588932 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.522698795 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.523033106 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.515280456 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.507735004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.55213775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.879337186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.523905672 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.873943982 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.530756453 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.518940421 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.515477466 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.520978687 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.507754141 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.544567819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.508937197 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.543453622 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.873215367 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.507077623 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.509368895 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.515089225 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.531435365 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.524550436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.523365422 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.521303834 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.515872734 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.872333269 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.517311767 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.517143702 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.513711713 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.521297029 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.525320692 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.510525411 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.514269438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.829877367 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.528043421 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.508863511 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.524566579 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.526978089 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.517711366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.826175454 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.525155806 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.516574023 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.508895101 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.527439779 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.885264147 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.530432027 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.5192951 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.522183609 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.523350134 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.511896563 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.526094055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.532432198 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.518906701 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.523273912 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525987915 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.511233522 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.525398596 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.527487236 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.511717856 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.539731285 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.516496006 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.52604286 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.525465733 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.514497969 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.888319149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.529212798 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.510595366 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905209175 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.528189507 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.531508962 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.530640098 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.527446317 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.593674836 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.885221408 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.499825589 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.539989748 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.518598482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.897911074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.534190064 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.522600785 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.513115129 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.535029706 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.5301534 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.524660001 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.518485594 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.526518074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.535607501 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.514120445 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.529618055 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.889435757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.532587834 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.513944569 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.527202715 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.593521548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.531858654 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.53455544 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.526090698 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.902047056 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.530614544 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.529077049 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.514464744 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.520383265 seconds)
  done (took 222.654149481 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.516161306 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.546076612 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.515468202 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.522142701 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.514587788 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.523244806 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.514749467 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.518547436 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.521677419 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.516548971 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.520717326 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.525769731 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.523076984 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.514561114 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.531643753 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.520699682 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.516008243 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.533409993 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.525516065 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.514782521 seconds)
  done (took 47.810638492 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.53284906 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.248687829 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.203060736 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.537934216 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.531831916 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.524329593 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.593812088 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.53694654 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.532568806 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.906780955 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.749625457 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.538084441 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.534650781 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.531849448 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.202285768 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.508899881 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.890557545 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.213120017 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.534382421 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.214704411 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.503175834 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.531836785 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.523254652 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.24135379 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.916937391 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.894815213 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.603261687 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.251525458 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.539063342 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.533832871 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.21976626 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.536275294 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.524199142 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.224854853 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.540087162 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.54842719 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.533790256 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.59721106 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600671373 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.898781571 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.239869195 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.907885388 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.550534556 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714993834 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.542294783 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.504712544 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.258732652 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.540080256 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.503893366 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.536390848 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.53994999 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.210896108 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.532504795 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.210884859 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.542269569 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.535990352 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.249810201 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.216440186 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.206503565 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.75315357 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.531934664 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.893896912 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.541076709 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.261949052 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.541545522 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.536272409 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.537504951 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.751364454 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.258415658 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.901119581 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.915564847 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.910543588 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.540743256 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.610580033 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.540418033 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.90941254 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.610510731 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.982462012 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.906314642 seconds)
  done (took 141.189454695 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.850772046 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.662135589 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.975906631 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.172461917 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.09655608 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.683173407 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.660436822 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.808893733 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.53779269 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.640091225 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.355923325 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.640265781 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.389979137 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.614458457 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.648748425 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.681603586 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.993322205 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.522877378 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.228868391 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.320724687 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.53855043 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.668704469 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.34852218 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.951434408 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.549943624 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.332200381 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.54946729 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.1152615 seconds)
  done (took 58.919739927 seconds)
done (took 589.690258115 seconds)
SAVING RESULT...
DONE!
