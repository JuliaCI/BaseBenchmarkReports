cset: moving following pidspec: 6934
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.29321274 seconds)
loading group "string"... done (took 0.602394939 seconds)
loading group "linalg"... done (took 6.9742394 seconds)
loading group "parallel"... done (took 0.15604706 seconds)
loading group "find"... done (took 1.086671692 seconds)
loading group "tuple"... done (took 1.799793485 seconds)
loading group "dates"... done (took 1.229286327 seconds)
loading group "micro"... done (took 0.224425649 seconds)
loading group "io"... done (took 0.996985999 seconds)
loading group "scalar"... done (took 36.168242132 seconds)
loading group "sparse"... done (took 11.28125578 seconds)
loading group "broadcast"... done (took 0.90047857 seconds)
loading group "union"... done (took 11.828825733 seconds)
loading group "simd"... done (took 4.284531423 seconds)
loading group "random"... done (took 8.37808531 seconds)
loading group "problem"... done (took 1.860191327 seconds)
loading group "array"... done (took 19.796839309 seconds)
loading group "misc"... done (took 1.76617072 seconds)
loading group "sort"... done (took 3.079695508 seconds)
loading group "collection"... done (took 16.472539422 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478254615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120744326 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112566311 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1167059 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130521267 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113418664 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121796573 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082951282 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.767662145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.1443503 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11771849 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410215064 seconds)
done (took 5.02429348 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17140357 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08219852 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080590446 seconds)
  done (took 1.288493673 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064872939 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119630964 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065893881 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066477019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066196489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065434088 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065511166 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065160307 seconds)
  done (took 1.640606467 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072418648 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068182938 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06790142 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067745908 seconds)
  done (took 1.402916735 seconds)
done (took 5.704848932 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.757310725 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200384093 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181518423 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396257607 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128006478 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153563616 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644829675 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.319639898 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18126348 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.0814408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103765576 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315135698 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10993237 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.634130993 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075629376 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089429252 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137898283 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413635363 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066878293 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081700271 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088577506 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127488533 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085945224 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074256106 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143423011 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067560971 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128759106 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079503607 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065620313 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206090778 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171843712 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.637230752 seconds)
  done (took 10.112538111 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094901073 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096378739 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068008632 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135930777 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095369997 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068972659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070092679 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066664453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085881392 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127340551 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087948199 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100375611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065202665 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068309013 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08358903 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203144764 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079152501 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080362186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069400598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074466795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115332069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077124045 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077805953 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076836638 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127200193 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179264563 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099390117 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098086028 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066173292 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079637748 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114669774 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125826623 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065325381 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065676226 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123550487 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094663282 seconds)
  done (took 4.571106335 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.922503778 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138418937 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089184906 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130962948 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064385306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106197427 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064800247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07973602 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200968051 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.281134765 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572475864 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11056094 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100165542 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067227317 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108742391 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067634216 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064186854 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065991987 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341407422 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107693007 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103609915 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08119039 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069792848 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068651448 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340950783 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068062733 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063273298 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067329994 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057661459 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121203966 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067259439 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.002763399 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.0706159 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123234637 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065655101 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062591143 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099339675 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.219104867 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142064831 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068390008 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064583872 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149121445 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072966073 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066450628 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082942184 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103179502 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111943529 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065456286 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06586741 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161732195 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064982659 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077660961 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.978949229 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154385808 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078569898 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063468373 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246431634 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086163399 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069626984 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06434119 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.190554194 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135816091 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067833585 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066315596 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06736362 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068395007 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.353479834 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065796632 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.804151705 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069280749 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075178843 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06876667 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068885452 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072180073 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071921504 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085080495 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06615939 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074543159 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065889626 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065697935 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066939732 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083945629 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356975276 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066221293 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067644748 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064471696 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08561765 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096000705 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067638518 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06437659 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099004836 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067071193 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069353936 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103539856 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065219338 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082991248 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067600273 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111480953 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068868947 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085105143 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065854529 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094716461 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068234131 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097389717 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079047345 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066374545 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.385304986 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062749615 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063823643 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063105422 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066388512 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063742876 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065940011 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.064593163 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077027971 seconds)
  done (took 20.679099332 seconds)
done (took 37.411585889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.273028965 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07487707 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074637161 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074745349 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074906411 seconds)
  done (took 1.794206006 seconds)
done (took 3.02223387 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118474769 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098097812 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064054804 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095051418 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064060644 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099456487 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098553627 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080249848 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098780371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064181495 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095400977 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06382874 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063888781 seconds)
  done (took 2.325691443 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082511016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082651087 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069862242 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081630824 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062995248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081523988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080274603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087995141 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080274331 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071797378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063507638 seconds)
  done (took 2.040766867 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081589564 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083105957 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069462981 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081092021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063516406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081446506 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080290232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084509538 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080603393 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072904535 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063120089 seconds)
  done (took 2.033189692 seconds)
done (took 7.590443736 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077195309 seconds)
  done (took 1.260854203 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58471982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.031942228 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080765392 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111075024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182594481 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118995922 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275688989 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08587905 seconds)
  done (took 8.833699139 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100389896 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068952915 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072047205 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070384289 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068289051 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06895602 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069108613 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067473118 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071585189 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071418615 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068547299 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070473089 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068296158 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06826569 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070853526 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071199973 seconds)
  done (took 2.399286937 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091199256 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089920731 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072617888 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074721233 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071679662 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071814046 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074046786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073268507 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070555639 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071537234 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074119621 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073163582 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071317386 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064702205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073292936 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075003944 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070731465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073990625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074596522 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074492315 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074021485 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064505961 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071469329 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073292828 seconds)
  done (took 3.057850661 seconds)
done (took 16.744141098 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109901069 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071135797 seconds)
  done (took 1.370886544 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081574812 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08218533 seconds)
  done (took 1.361033979 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081400882 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065555183 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089478752 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076758333 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065803409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065477011 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086316871 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066122401 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065286345 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065539435 seconds)
  done (took 1.925746158 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067931602 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077342893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070558479 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080127062 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073181439 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063501348 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072314473 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067487505 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077420295 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062549198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070971349 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081413275 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070663998 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083647802 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071914155 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067815577 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070018301 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066668455 seconds)
  done (took 2.495913978 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065504112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065784004 seconds)
  done (took 1.334402816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066251866 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063592163 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066084044 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066302249 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06289038 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062186452 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063420891 seconds)
  done (took 1.650728714 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383367838 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110420237 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293038662 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070804142 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081516613 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.24961133 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065012137 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069922354 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069889578 seconds)
  done (took 2.635426984 seconds)
done (took 13.978302144 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.07871447 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084775747 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093439615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362242439 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091289029 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065364375 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113247881 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188872331 seconds)
done (took 2.2930855 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210750347 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609271873 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379976316 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194171852 seconds)
  done (took 2.390495577 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323872882 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086102188 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058810318 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065971395 seconds)
  done (took 1.752120047 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065514275 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067754393 seconds)
  done (took 1.347870617 seconds)
done (took 6.913932986 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065821157 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081789539 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065422019 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062722863 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06530216 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065444768 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065346259 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.062903231 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06326828 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065387784 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067972277 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064945746 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065023041 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065379974 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062708518 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06285916 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065260051 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062768523 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062545743 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065830925 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065446429 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063287529 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062831434 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063876187 seconds)
  done (took 2.812970424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081667291 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065459063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070964679 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070792004 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06969654 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070512338 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070630983 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065474791 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070520643 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067432382 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069155885 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069887873 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067491968 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069663425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06762862 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069193838 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070609997 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065563556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067605384 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069393216 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07049574 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065542881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069346496 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070191821 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068954122 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069035403 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068258118 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065718189 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070931935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069342469 seconds)
  done (took 3.300546197 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069356901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062745514 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063470082 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069571163 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062813529 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064003098 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062849045 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063354319 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063893672 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06312325 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064049925 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062923505 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062903532 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063761404 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064106094 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067494522 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078356238 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063525024 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063118167 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063737918 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06623707 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062904333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063358859 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063016634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063228512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063134394 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063570063 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063270262 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063774759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062916308 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066007731 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066455601 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062761968 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069835219 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066614576 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062822435 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067471916 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062714095 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063809682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062716263 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063008698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063456097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.175588264 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069952211 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063010546 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064533674 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063111588 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064312508 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063426064 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06536758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062638021 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062616201 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065066767 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064097494 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066636786 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062476164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064021895 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062435396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064064835 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063042436 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062727788 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063540148 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065321714 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063832061 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077351289 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069802353 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063248013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064634778 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064004314 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065523936 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064322859 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076202752 seconds)
  done (took 6.00436084 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085541153 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086284399 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06479923 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064795856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061884675 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063784357 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066996305 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063741335 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06510505 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069274624 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064141367 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064578347 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064992657 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076331269 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063859186 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065160262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069123958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061377297 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063657497 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067016646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063910855 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066739094 seconds)
  done (took 2.722114418 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152687562 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069731719 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10520317 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07279088 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06689531 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07223617 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0690956 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069627734 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069594894 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068034082 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067678189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070159562 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066903838 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067577638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067689091 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067641354 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069002476 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068028127 seconds)
  done (took 2.592470269 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076836259 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065399079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085607594 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065139002 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065724508 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067738272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070073579 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073628042 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067536799 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065232214 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073335469 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067984612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067526936 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065280007 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067710942 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065255882 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068028697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064980927 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073322083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069635348 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069815351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073573254 seconds)
  done (took 2.760039742 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079000135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067326597 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081532575 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068136781 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061456061 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063744792 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069516595 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065719834 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069176728 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06720888 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065605992 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063993642 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06902037 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065192348 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068644241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064998283 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066626516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065255543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066638484 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061535395 seconds)
  done (took 2.582031699 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086431345 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066937415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067137772 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075396357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066726488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066343291 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074777678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066628179 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066988879 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086329202 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066962223 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067007659 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074730401 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071323172 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066964199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074174765 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07432556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074448484 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066689585 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066814818 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086534488 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066975941 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074079283 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066903427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066908888 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066396668 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066512452 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071786617 seconds)
  done (took 3.226669602 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065831394 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066034331 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06263317 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063038642 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063271088 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063295126 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063233425 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063188486 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065514592 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063067386 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065390608 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065616295 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066069595 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065712597 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065253536 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065604806 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065375018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062928105 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063117434 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062835841 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065262717 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065524592 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065490318 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063388232 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062724477 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065561443 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062876364 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062715837 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065142102 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062836651 seconds)
  done (took 3.165208682 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075323508 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072083258 seconds)
  done (took 1.385190375 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06229694 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079346524 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063024152 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069213303 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069678758 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06625098 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072771177 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068965712 seconds)
  done (took 1.785835796 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081047126 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077421265 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06784058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079152693 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076142595 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082315355 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131685436 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066615397 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072792941 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063893583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079600351 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065317512 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07185807 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066176753 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07126421 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072329867 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06354281 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071846655 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068155405 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064151869 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067006265 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074402962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067988616 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061178655 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066583583 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087418963 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076485109 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065497034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068615165 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07284598 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071130049 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059837125 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065409273 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065895363 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063476796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075285114 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080619686 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0686559 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074628194 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066791325 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076430645 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060701567 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070074503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07224701 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075268315 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066014431 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066286381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060591367 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063570946 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067911644 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060988691 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065528683 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060462666 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07461148 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069247614 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076015922 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064440358 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066889344 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068286869 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068584005 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071940709 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06724768 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068108543 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064943822 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072312252 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.0702217 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074231813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060683961 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059562739 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06352533 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07545432 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088043882 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07209908 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066509129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066758178 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064033505 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069092362 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066508555 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071057376 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072005772 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065811922 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071271263 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072826739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065714591 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068401016 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073759072 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06395446 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068700526 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063780313 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081671303 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064487682 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063791187 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063453903 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076000022 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06850666 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064812142 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063243805 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072696954 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059774926 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065770248 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066029526 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066163923 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074942849 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068832468 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069381919 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073347307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071769007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064981542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067608983 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061688902 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065335268 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063805141 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07191477 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05883232 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067424436 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065436474 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064740356 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.196901881 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064871038 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066673039 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073809272 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071922829 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065441218 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06321452 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069077969 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066991165 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069292875 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073541327 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064878003 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061947074 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062208029 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.0698672 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06647068 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06953404 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07078936 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069625802 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060874293 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06437251 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071282847 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074170862 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066895036 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067396155 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072163153 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06796915 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065417056 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072355529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071133257 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065185351 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071846123 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066595587 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06178129 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0698547 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06953329 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066165832 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070205013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06958143 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068227826 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066820837 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064894325 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07401773 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066853743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064665196 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065290341 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065608139 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076543207 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.0677193 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061435479 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062771355 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075148478 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063962585 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065484478 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065176003 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067998747 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0674002 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064317333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065324386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068034761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075980248 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070506782 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066712766 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07118653 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077447277 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065862872 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068289726 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065383079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06706389 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067205392 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074137678 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071731133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070609486 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068254696 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062788336 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071240558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072880958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065230459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063567802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064989736 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069932406 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071623932 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069993254 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066931576 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064198557 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066981806 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06890422 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068749491 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065756631 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065014207 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072688064 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064628693 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073157845 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067418203 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076246445 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069572299 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061155812 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06902133 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063972053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071980209 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061047404 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063615641 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064956091 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066889156 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064479198 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068425553 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060076381 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072316367 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072573335 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065537611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064259031 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064360214 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07133757 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066157841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068292596 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068119232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070763598 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074672721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064389752 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067962919 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074508312 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064734358 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.187980615 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072887809 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065800829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066179138 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066315876 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064926542 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069746275 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075719762 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073650642 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060404044 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068864796 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06544878 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065763097 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062575961 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070777168 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069176133 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067657296 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074157612 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067581562 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067056472 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070396966 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066695377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067254163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067681084 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069789767 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067370033 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06809001 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065967581 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068895276 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066043065 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064706312 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068903139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066765093 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067210657 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072384323 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066267249 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066994723 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068512369 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06747595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067129709 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066660616 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06517677 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06941107 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067527641 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066443151 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068338836 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061583094 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073553199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06633455 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074143316 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066602168 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063040354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074074645 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069006325 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072015301 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067498519 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067139203 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067564299 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066733046 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069084651 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073631064 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064420083 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077034542 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073521005 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067229674 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069320474 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066906499 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068160632 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065263234 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066935561 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066925544 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066915693 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065818659 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070616485 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068401656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066481209 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067347597 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06686147 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066283994 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066755727 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060443845 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064788428 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065387059 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065631598 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075469168 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065922714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065461445 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064712742 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066616557 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064567136 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062813328 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073504748 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074638008 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066303825 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073455856 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064845267 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067264784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076045644 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060892402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06414794 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064350454 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064035313 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073002634 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065802182 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074635106 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06575034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064830774 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062832466 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066195983 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063957902 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060017751 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062994558 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068895304 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064261238 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063808208 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064887876 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066791599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065154709 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073855309 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06450325 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065251895 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.0650902 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061623805 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064067788 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063944908 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.19944209 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067486278 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064261861 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063630332 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065738084 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066780642 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067948513 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066150333 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067224508 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076094822 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066124743 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069369475 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070290946 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061267372 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069818244 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066687886 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066062717 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065438925 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070302081 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070080035 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0673964 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075332824 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06548255 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067632359 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0667041 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064342306 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066060807 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066215867 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066688452 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065449204 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067852565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074602824 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064225584 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069708292 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066358546 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066954128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07281514 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067469037 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069542959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072950887 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066497342 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067820671 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074394418 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070873163 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069631769 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068002661 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068282355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071951528 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065836921 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072392214 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066700604 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067963907 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068388098 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064050626 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065775704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065922335 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065456261 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072447389 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067519568 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065166845 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065336617 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063873629 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067067289 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069412642 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073519784 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068979918 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068859525 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061302819 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063834004 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067335668 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064274382 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067603609 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068797203 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071667895 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068093278 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066360117 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064414541 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074698149 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071695723 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069625387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064363474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069380864 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066666735 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068451285 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066812877 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066267924 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066911742 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06929286 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06749168 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065199984 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072690941 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068795959 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066519991 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067255833 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066722431 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066113179 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061085351 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066464121 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067751865 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07123227 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068002665 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065822859 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076203274 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063601405 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065882218 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068492403 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065363658 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070129261 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060723944 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067160157 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066088017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066356354 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061241488 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064890125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063365125 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067008882 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063680256 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05975257 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074305551 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07317716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067535263 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063320312 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063627401 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060347834 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059875761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195545417 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067568282 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068222646 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076691286 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065522542 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065878042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061638153 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066342621 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069556078 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069526751 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06345281 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061553319 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064932751 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069006877 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071572207 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064889383 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066150161 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069899024 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068407202 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064318424 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069952386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063452784 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070091161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078976362 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06736954 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06716182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07261255 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074770472 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067399231 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062029038 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067173479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06929593 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067348866 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067301392 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0671354 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08141801 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069819966 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065763992 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064808722 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06898225 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065959669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074604854 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067422457 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06701831 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071665113 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06806864 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075360285 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068743087 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073130478 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069489368 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069835665 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065726316 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067418419 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063747291 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065299139 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06707893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066720166 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071852907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074340801 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065325389 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077402264 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075373064 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068046196 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063262597 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065758233 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065818176 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061139111 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066938299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064377131 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063826667 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064079393 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064902439 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067104266 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071332054 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067052014 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066857885 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065983599 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06024314 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06847874 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068112404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067143323 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063052587 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066112028 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066679467 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070392367 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068979236 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063615539 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06770893 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067610678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06675461 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061290368 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072526678 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064520073 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067545508 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065051209 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066399878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066418552 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069196789 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07109252 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066855926 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068100658 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069547841 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067959469 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063565159 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062986651 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070970994 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063771793 seconds)
  done (took 42.290037459 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098718224 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062488085 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062041368 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061512112 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073908441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062244045 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061276058 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062971418 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062839176 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064615895 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0613642 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061555743 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070427664 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077427974 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073110773 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066124436 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061167698 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062669456 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061355648 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062475441 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070305814 seconds)
  done (took 2.732952082 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073613546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069114112 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072406371 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075891156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067215094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069887073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07190136 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069855788 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075407348 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066549901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075055109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069771691 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066699231 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066431637 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066776585 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069878067 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075338066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066802078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069966315 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080290608 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070178963 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071929828 seconds)
  done (took 2.870603359 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066134831 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065899534 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066968128 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060610082 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065231685 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061050512 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068640944 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063474939 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068803756 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064830174 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064834467 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064972692 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067251046 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060674203 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065358322 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063381307 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107008504 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068913381 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065108458 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066000103 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061024827 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067312426 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061232129 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061351681 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064850657 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068740232 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065845667 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063565625 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065324277 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064943541 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065300041 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063140111 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066777388 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065938501 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064312745 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064162758 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065386229 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064729201 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060641112 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06332739 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065958459 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061350306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06564904 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066366558 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063216481 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062983361 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067071829 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065045507 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06024272 seconds)
  done (took 4.5228584 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078674972 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10787509 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067041327 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087427727 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079257597 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074785273 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068534845 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088543097 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062695349 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063645546 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081000013 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078813724 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065805192 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06960192 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068385315 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064838411 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066524856 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064531889 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068952125 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064677047 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068782197 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071808403 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079363222 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077644757 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068567245 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063906074 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064394521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069490052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077465 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069153168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069743495 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070513877 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079208672 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070528954 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064562696 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06693973 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080829039 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065623394 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067662583 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063057834 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067867007 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069320499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071166946 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08102204 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065306029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069721632 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064931127 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062223489 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077575715 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067217031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072525022 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079073097 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068587645 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06525001 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069100869 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078976531 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064737354 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063124777 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067695541 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076805428 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062756644 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068517139 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078039953 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067279021 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071830276 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078333441 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070012051 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068238037 seconds)
  done (took 6.296276535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074341101 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071586652 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080215016 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07969458 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071563888 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071623251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0715339 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07136939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071227317 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076156806 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071797929 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092136293 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067207854 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074158428 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071688858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071967202 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071607203 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071621208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071799805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071549145 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071657835 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079282842 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071519044 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079334556 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097646335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066736765 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071319204 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071320069 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079239513 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071850312 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079024247 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071549648 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071380387 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079658345 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078654398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071776978 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064369754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071259257 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071467217 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071317317 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066940688 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078900282 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070623096 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066405294 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072362514 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071093444 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078785229 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078236837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073711473 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07596382 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071318703 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078916264 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071099595 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071111465 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07885366 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10322274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078930799 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078860166 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071310349 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078712053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078768318 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085074406 seconds)
  done (took 5.978514787 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080978521 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074748086 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07584039 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060746498 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063355734 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068772921 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063180846 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063423481 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074066575 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07371044 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075794478 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068765679 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072157359 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076290954 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069269329 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071715029 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069094438 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068898892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073675588 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069090468 seconds)
  done (took 2.749134013 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07333356 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081552838 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065688205 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070898419 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067992383 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070884766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067345866 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068614383 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06660497 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068080412 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075078844 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074915821 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066151657 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07085609 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074929031 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070895519 seconds)
  done (took 2.461952485 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073574521 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071228694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079715582 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066056089 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063619429 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061898583 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06501234 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060889726 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061896758 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077104535 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065498392 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067344052 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065158914 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064279784 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06219703 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067944213 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062015146 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063094446 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065311582 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077586824 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075569292 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063725967 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065693835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065028394 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065175736 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070471829 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065128541 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062914728 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062686056 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065924474 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065356566 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06841297 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062854509 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063122048 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063565663 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062562629 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065019896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06557721 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06760071 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06485232 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063015062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064953906 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065038154 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065847025 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061587109 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065637423 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061271772 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067091582 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0630501 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065602392 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064907751 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067408583 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065422406 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071627317 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067865125 seconds)
  done (took 4.962944577 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078252303 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068547761 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061213277 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06426555 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068323464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067081249 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068904039 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067355263 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067209615 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063485894 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06733785 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067866323 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066934902 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068880355 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067118752 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06864163 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061028585 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066582554 seconds)
  done (took 2.550204809 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071040002 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065658009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072385899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065705718 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065045622 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067239668 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061772034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064058962 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064080321 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065085868 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065182518 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0672719 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063746701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067744196 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065042647 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064798014 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067589836 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06382737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065226218 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061306923 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067367318 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063651567 seconds)
  done (took 2.780113211 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071499932 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091645717 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136997126 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08339037 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079974638 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07775506 seconds)
  done (took 1.877323841 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089887279 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078543281 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066440185 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086833591 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072581217 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066453694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066367139 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066918588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075336926 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075523161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066683613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075731898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075689636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074623181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072662691 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072785796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067011636 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066928661 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065551338 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083145244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067030466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074721507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066801745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066468976 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066691749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074391612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075300285 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075304337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066497901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075143497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072650427 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066494285 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075750209 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075335461 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068448438 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075138192 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066826245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083500311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072243811 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074378572 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068103332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0725554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07553543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071356048 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074968655 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066881823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071595852 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067217435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066937549 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085195202 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07264914 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074775157 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072927454 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075546029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075210489 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085433119 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075590661 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074648182 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072627744 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077947712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074755366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0724731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074004888 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075477109 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072365061 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07455671 seconds)
  done (took 6.164943836 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080875402 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085986706 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068467637 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075595751 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075429129 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067098448 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066977713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067018242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066930531 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066798319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106879306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067307932 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074905648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074687989 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067046819 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066699565 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066987474 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075028164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066683064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085394401 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067037192 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074374539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074680247 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074737164 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075459173 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07287673 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066942937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066698765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066687199 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06671123 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072058196 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066973405 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074807317 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06633107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07468997 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066910359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066729181 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072562942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066976308 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072579824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075068429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08314311 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067167508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066692254 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075376439 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066653089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067022675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066514626 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066734219 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066662773 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075539241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075812288 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075505213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074983318 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067481501 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067270063 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067080813 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067078297 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067411553 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072609785 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074615159 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067041588 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085148876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06716296 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066816583 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074620784 seconds)
  done (took 6.081030706 seconds)
done (took 127.869107443 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183388842 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168447839 seconds)
  done (took 1.684915931 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068826525 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097730796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076530485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127614207 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066593507 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100103838 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099033405 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077527979 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065974819 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065715293 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065838843 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068076592 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13068256 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066148619 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066222158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068174704 seconds)
  done (took 2.656794044 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095557497 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157504527 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098284545 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064656405 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096214752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072439028 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064295505 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074716381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070740521 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064568278 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072308794 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070055944 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065009651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070110853 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070547224 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07235968 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064738005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072458967 seconds)
  done (took 2.76390477 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100657419 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090691729 seconds)
  done (took 1.540624833 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154692996 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104652053 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149461534 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344237207 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165546879 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228778235 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127610538 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128557858 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115831447 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122439745 seconds)
  done (took 2.987279465 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096692733 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150531834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254314612 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114593985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071738551 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094273547 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115553345 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077355345 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080323181 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080173736 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080060115 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075894653 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098367736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073219288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072799588 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075592828 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101496974 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071690494 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073801593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076161446 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098602721 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065177374 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073117529 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071867675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076449507 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076850031 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064799346 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065249013 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076166887 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073831166 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076626228 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092902255 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076507365 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106202267 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069873124 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107352737 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076453793 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073622765 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073824097 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073944728 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078262408 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078344119 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071561367 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075463133 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065008109 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075662582 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06516112 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064953053 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077224826 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066178799 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077492116 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076094504 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106758321 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066601277 seconds)
  done (took 5.924640914 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101845405 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105763848 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070872804 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108787633 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097011539 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070944897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100679268 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091068986 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10180082 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092599441 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08860026 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070417526 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081890297 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08266797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108841365 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101542972 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094553169 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07078627 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101104186 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102293886 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068232717 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094530497 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090699903 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101175616 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067654401 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070087265 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06748539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069978951 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076683913 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077890121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069720457 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101342373 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083968476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077904793 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066870081 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067450741 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067874074 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078399309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097162732 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078615682 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077734632 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067270934 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067830527 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06979217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091121974 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067532807 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078902915 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080415015 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078696646 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070155651 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069930634 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067937523 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069338157 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079794196 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077341334 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080506013 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079821907 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068158641 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068500927 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071614559 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080532005 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079047203 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078861716 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092019103 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078906157 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068143026 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079798783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084920524 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068389459 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069418243 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068481645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069710867 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06969034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077829703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077587998 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069839744 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069185468 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068153724 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07960988 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077852397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067729758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076665357 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06671046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068405193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069838654 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069390602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076544314 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079005188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0693607 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06744881 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068742926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067760969 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066192849 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075365498 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077611039 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076783409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076394755 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068027537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076914547 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076782403 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068424627 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077477484 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.195877361 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070728704 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069710804 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078747237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080008673 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080388581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069860696 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068216074 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078511267 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081298803 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068912611 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077918345 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081293014 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078640542 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067805084 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080725124 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068496236 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079711518 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069672309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079782889 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068592961 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079663233 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068542332 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068365559 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068682704 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079272968 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069888446 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068568936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07007658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06970669 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078724492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083075817 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070369443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080937876 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079182857 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070789493 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079052737 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068609273 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079837623 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070018956 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070336336 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067209425 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081323491 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068665441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067945286 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06971177 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080718132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068515867 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079184725 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078202834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06827213 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081273441 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079935199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07699942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080435797 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070621979 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068708043 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068866788 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069803929 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077730608 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079746917 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07064486 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069235378 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077648954 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07936992 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067234145 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077821344 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078063053 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078476521 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068561429 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069610358 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080027003 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080353723 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077449997 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078387362 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077829015 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068130982 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076972959 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077862735 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067619804 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084171672 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067652872 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082141259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07926115 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076472441 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078294579 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080267201 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079723614 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079582083 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081875757 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066979859 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067312909 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078787104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067055631 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06891622 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076524104 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068462691 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068175804 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081238746 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067028072 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077646699 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066611817 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076827629 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066205878 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068526717 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.212363144 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069084372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070254751 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078928513 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069685362 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077891128 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080786766 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078958522 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06911904 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070123452 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08061811 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079400127 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068195685 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068674119 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070788616 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07854294 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077750441 seconds)
  done (took 18.699478081 seconds)
done (took 37.61558192 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20950459 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149659724 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179061578 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117485471 seconds)
  done (took 2.106985769 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120277937 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100085744 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093619217 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064713917 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100774582 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064438891 seconds)
  done (took 1.936328022 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.308586252 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209603869 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181021629 seconds)
  done (took 2.083289386 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196854651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18595051 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389865094 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251039509 seconds)
  done (took 2.519339537 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141577169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088601661 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066309765 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082072989 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133445079 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15964471 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100390621 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125276351 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077071367 seconds)
  done (took 2.413423182 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145992802 seconds)
done (took 12.594337473 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097059035 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073888689 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082625057 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.181746468 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.184930682 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121081467 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07019217 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.097302985 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069052259 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08673041 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.228649969 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187309653 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07095274 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070452891 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207511355 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076820715 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073240466 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078945111 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110323804 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.15075247 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073876417 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.108952298 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.175759444 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.167697905 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081565357 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189968862 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.194594954 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.213469224 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074748145 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07302499 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067508157 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070059106 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.170971133 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.194028407 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107939704 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182444655 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.206784382 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068432135 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071784671 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203089311 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.138020878 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097537709 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070878774 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050658478 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120988268 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105990177 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179876967 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052571461 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156233094 seconds)
    (50/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.070712894 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08558704 seconds)
    (52/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.107701527 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121051687 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095364784 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053293054 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135636091 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204914122 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147470023 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111011984 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08836307 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108974286 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071612421 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.094322294 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076853109 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089971101 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070509731 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106863436 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075829602 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064605421 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05195025 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093388192 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.152474665 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066141838 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064000648 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109585933 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147844972 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.097942844 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168030463 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078370364 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149226491 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139731939 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.212692695 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054739042 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.0800098 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073273146 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065763629 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073965753 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.066181926 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071967274 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072364693 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065175503 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063945548 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076875523 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052262964 seconds)
    (95/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051091374 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179830559 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072852864 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.1073015 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091106818 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.164733123 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149907768 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075649217 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075625672 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147938921 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05113575 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081686803 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071747278 seconds)
    (108/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.148969852 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051976137 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072449001 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053003001 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071432118 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069251049 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067097596 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.286253486 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091617097 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061953614 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066851639 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051718238 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220541421 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096486915 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138225858 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096703941 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051441662 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075207581 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089528217 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07136963 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071214273 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088018483 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087519405 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05144738 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.132510223 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072536842 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090415553 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051047204 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069688816 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.074928982 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071087531 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148330059 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074861357 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076647354 seconds)
    (142/309) benchmarking ("sort", Int8, false)...
    done (took 0.137227527 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075112139 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078472507 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071241649 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052590763 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073281077 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.171608288 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.09771494 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086417218 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.097593973 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051859138 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064211912 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103306255 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071538564 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.14819051 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06459069 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066943065 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050958295 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075144996 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091567359 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064659892 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18347128 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07096944 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09591687 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064348158 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051930147 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.147657719 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073136859 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1254992 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051707776 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050490762 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070972508 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0850422 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064517999 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074136337 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157480814 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.153758896 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064779159 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087546439 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051600257 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103879052 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050430086 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.062604816 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061001606 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07043726 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065648062 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064903907 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066973482 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072441593 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065520122 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.101626458 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.139637227 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063645176 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208472776 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175864042 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068318808 seconds)
    (198/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067862528 seconds)
    (199/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070360427 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112598197 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066543248 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063531442 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063934217 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06312047 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177598745 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073704143 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051632937 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05148988 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085283372 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072869324 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073986884 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05174009 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073164676 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131707522 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065787617 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079359241 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087299133 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 0.127859792 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070852514 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065912207 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051186228 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186080577 seconds)
    (223/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06845166 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060685659 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070060423 seconds)
    (226/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.110940479 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064185241 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184487467 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079764365 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06495491 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066399931 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118636744 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075942028 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136161867 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050969563 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050633003 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05175467 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178662814 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051713724 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169850463 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087750065 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066321114 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051280561 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064801231 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105860205 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.124736734 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072414586 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061666973 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157205644 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072531516 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066734392 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064774574 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064760908 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125523959 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064438063 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052728868 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05258845 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051206282 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105929023 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087446777 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050699 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070467602 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050839469 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05086386 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050683896 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089593837 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051378255 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087728482 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072271229 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06458199 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11059676 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06002805 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052701856 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085251023 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085479776 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06580965 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078718911 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052254974 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064530171 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071585871 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166867501 seconds)
    (282/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061692811 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063829512 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060547526 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065633103 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063298493 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051730356 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050705589 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07198168 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064984812 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065814841 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070386379 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051035513 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051802802 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071187624 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066811811 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069834923 seconds)
    (298/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050533653 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05129641 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087680682 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087580576 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135108667 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.090500669 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051448473 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067039196 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053344408 seconds)
    (307/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051956549 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069804359 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066478162 seconds)
  done (took 30.297839713 seconds)
done (took 31.697167394 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085207999 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092703276 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074981251 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092500574 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081543326 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076657301 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072309431 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078129481 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079646879 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081636648 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078240296 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055487205 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074188815 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074422905 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074730607 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090954469 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078293239 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072562851 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072874255 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064783031 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073520184 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066046191 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067087066 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054845617 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07810805 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07161979 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072312095 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074006541 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065793353 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066455385 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068896051 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073128526 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065777637 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077698742 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072156793 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073285769 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074790775 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075979752 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067292264 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06583569 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074267169 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066085386 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073020035 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073150048 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07161348 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071014251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073119891 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077521666 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091322946 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067981037 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074140597 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075408765 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076119598 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0721893 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069250231 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073253881 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070687464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091280546 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073365257 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067887138 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073638038 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073586151 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070623288 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072771161 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073288053 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075028916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074936016 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070970297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074218072 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0706961 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06540826 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072785191 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06840484 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065427974 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075405589 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076763798 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064443856 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070706913 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072215956 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070903502 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064841638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067302288 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067217013 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071358841 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067181865 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054499091 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068766733 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071304881 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064192746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072909453 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071001965 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071390462 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066900951 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074618458 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064346834 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070623628 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065533352 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065144209 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066899039 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068764245 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064837676 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067828476 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073965744 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066361395 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071562624 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079085146 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065091622 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071837503 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064275863 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064101554 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078654976 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073946534 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064798138 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067629071 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064221288 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071792554 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063974966 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064686406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064557846 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064822077 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07010967 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064642111 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066316442 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071172202 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075876292 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063779822 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067088168 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066194032 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064123193 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069378994 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064095863 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064173711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200991735 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062338487 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069118957 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066232806 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073708152 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068598573 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073861273 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066913548 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07325576 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070644434 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072111913 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070757397 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065239006 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059481297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068106628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068394062 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067306561 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066447678 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06697756 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066134784 seconds)
done (took 12.429273967 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066883421 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143209933 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099141794 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095329708 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086019168 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066683179 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076477296 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102115525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067887324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102344334 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.0870457 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085281086 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112358753 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06477959 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065918121 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069859744 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067153945 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081371794 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100606711 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08636985 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115499657 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065371952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094149271 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090005639 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087225434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092333804 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066899453 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070343998 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069594746 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100092787 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086579951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069957872 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066838774 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100643922 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092317419 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083243888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066359121 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082453234 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0666444 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065886749 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067860958 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097779157 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079858976 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080504877 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06983849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069330472 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06678618 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083516209 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088647669 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078298461 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086385877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102715436 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068755359 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06555535 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064762175 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084962009 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065361689 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068804537 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066143072 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068113485 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065921928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069176231 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080905743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081296475 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069454167 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080095555 seconds)
  done (took 6.791949035 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084288101 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0907921 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082817368 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083782246 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066010226 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.0667167 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066541358 seconds)
  done (took 2.033679821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067251456 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087856483 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089228804 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088938367 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08439914 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087411453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075727367 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066789894 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080127071 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067354024 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087403424 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101847932 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067556805 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072770855 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090614487 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066753568 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090201103 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066895764 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069446004 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08999783 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068746772 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08198952 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069839733 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066885601 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080668114 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066807923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112185567 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070554166 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067923576 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069267488 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06420594 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106392282 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079735425 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075066777 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066228231 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080133243 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080246777 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064414783 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082063261 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071238992 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079895092 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066756532 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067326831 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064208147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070413243 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076876415 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067270508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06706235 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068864985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085261772 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06704891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07958386 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069206589 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068707148 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06754886 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069948663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076042489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066873837 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085760103 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067399457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082362734 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082240733 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080223549 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082174289 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068226402 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079311793 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079692817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068719662 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067371625 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069482668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082230552 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064291793 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067668269 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076697715 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067759952 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088998086 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089022224 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067878963 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075392172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066793614 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06619372 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066794142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089093114 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068767706 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066074662 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070290436 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068880747 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064512848 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065263986 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069452991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06413686 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067257965 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069037308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06925088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068393564 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082131928 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068617642 seconds)
  done (took 8.729131051 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068734381 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068044594 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068955494 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067645246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06735832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067310245 seconds)
  done (took 1.925169124 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092864807 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069622037 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0794138 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072073737 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103693871 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086220687 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086979785 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078496779 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083681419 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078614637 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086678528 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088157023 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092305054 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072710875 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086291856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072447205 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08696531 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075840945 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078718148 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073032201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086512009 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072796408 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07272674 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081434497 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075300594 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072408476 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067069586 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078854883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07877484 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078479141 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072510975 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075945543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070901172 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078364786 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086522838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070515731 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071483998 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077168705 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072177405 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075602007 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087620239 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07231434 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074206758 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076783204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078034089 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070403797 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077265316 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075849185 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085656602 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076567711 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076537076 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071372144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074886446 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076950711 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070419584 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07799504 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076953801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087104001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072109963 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070266693 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068981085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07538928 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077778709 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075190434 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078344458 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076781277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070532158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072823032 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072816203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071786741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076733469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069023748 seconds)
  done (took 7.07131911 seconds)
done (took 28.03378868 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.543124687 seconds)
  done (took 2.029396623 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603208333 seconds)
  done (took 2.11173859 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.6026541 seconds)
  done (took 8.108390344 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389319473 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473150942 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685978379 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131382667 seconds)
  done (took 3.218103249 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662315341 seconds)
  done (took 2.181286179 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209327645 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195247849 seconds)
  done (took 1.933641457 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376247472 seconds)
  done (took 1.882338837 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.092659559 seconds)
  done (took 2.602459969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260194408 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162838568 seconds)
  done (took 1.93458467 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45917179 seconds)
  done (took 1.969455141 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.836908231 seconds)
  done (took 6.347492857 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206434957 seconds)
  done (took 1.761833498 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239019085 seconds)
  done (took 1.753716869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.65701748 seconds)
  done (took 3.171349101 seconds)
done (took 42.520197807 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079480445 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080538641 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080902264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077379933 seconds)
  done (took 1.820638553 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076021319 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071496463 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076159647 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071659468 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075641584 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071398498 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073353605 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075999168 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07176568 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072373128 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071848389 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071802582 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.0742204 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074047464 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070311666 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074279115 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075482297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071801558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074791353 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072100506 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070525005 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074347785 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074379191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071127375 seconds)
  done (took 3.274605586 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0778684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072051854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074436176 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072232426 seconds)
  done (took 1.819882927 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076743173 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090403444 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088906532 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076620304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091693272 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085361915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068522634 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068231778 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073029336 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076116808 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067527634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095090585 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086963136 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076013666 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078365322 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065375607 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067971126 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085919884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076479604 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077172393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069090522 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07631407 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067910265 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087245946 seconds)
  done (took 3.392681923 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075970867 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102175049 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076763516 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086495939 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088728118 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064717864 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073919291 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088261839 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121849643 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064778335 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069144524 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064949138 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071708044 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064645428 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07564559 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103407401 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107220979 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067819032 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094844967 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065151952 seconds)
  done (took 3.157109226 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072711988 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069581358 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065249228 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068159508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076882625 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072290164 seconds)
  done (took 1.955019408 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067400577 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06715877 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066769593 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067193933 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07159095 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067008555 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065712574 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066590973 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066608399 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066311407 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06591391 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065275906 seconds)
  done (took 2.329433353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.417995928 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068358836 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068160377 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065363553 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070187538 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065561628 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079158956 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067292912 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089449885 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065980361 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065990385 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067942038 seconds)
  done (took 2.71980436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204074906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075920766 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235051884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13626837 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110569139 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114328648 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103205966 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112449342 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142467153 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100656881 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166313852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164048319 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1058916 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136033062 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088161294 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09697413 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153782084 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160832864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102587538 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164077198 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142987497 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123565303 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145643323 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100698783 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10494132 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120726594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070167837 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079342596 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168478907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130266333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144784469 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109879266 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092436111 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174410056 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169119939 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139860965 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13212805 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083460894 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100730695 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131025673 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196207134 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087441776 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160148647 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243672541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081096139 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132992929 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119770096 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118526556 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105996588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089173219 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145359572 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181773328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137229737 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086497317 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111151353 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114450008 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115901167 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103323469 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180200263 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160619212 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126879714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070362739 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098057248 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152273088 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131159616 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10805395 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126759049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093069085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131929104 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153311126 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117825325 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142743731 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.12729326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087450315 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117906011 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138861043 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126827412 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168705115 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123852128 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071695352 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124111106 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102395288 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08052189 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14107332 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074165861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173328086 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097235019 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105226827 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111774246 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107472756 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107437292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159339569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14030486 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242338218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065191626 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102796472 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119825374 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146773568 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08627484 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107636559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115201595 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077023158 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138711524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074905836 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122704167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074987671 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124468698 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131206111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075014503 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120787466 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099693344 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100147327 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13289294 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159975559 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088231942 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081354874 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165450177 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121214373 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103020055 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142365916 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154750782 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097792571 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101905392 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149110566 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178013887 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08865891 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161444959 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106308375 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082922562 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086638042 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122678642 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111489569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121018149 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081563637 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117419064 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167395399 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074428936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094536136 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131648155 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078074374 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079429394 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101828488 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098989529 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093704603 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098834293 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102797519 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135612845 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121487078 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102805855 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267178145 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098659696 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169615385 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088710904 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099376974 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102692986 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069504947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136205399 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156260409 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078637111 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162427799 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122233797 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103880141 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118413276 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082403361 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139195189 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078174228 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070013093 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143704154 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110195626 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108874867 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148952996 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103508091 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125388673 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118120343 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134312094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13222906 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127757505 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104982219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087303323 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110770378 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124334637 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072629211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090368726 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079362781 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102602998 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094612275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082228062 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141361964 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123565141 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099525231 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111413089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095859354 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146545236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075968567 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127220732 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11796666 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092471141 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149820028 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150346053 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129842945 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09805974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142890315 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069347595 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072440907 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087466664 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264923001 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083262275 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082811021 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116781941 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147168133 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128926026 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136763011 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111351654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121580884 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153168495 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068967274 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114758572 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147357879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120935028 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103967841 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090099128 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098260277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140429209 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107463244 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179750349 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113492787 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125756605 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152093454 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098403056 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078875211 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107305754 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134776959 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104439238 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143425022 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098171282 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087341919 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109077783 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073222781 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099581573 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126239434 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118762895 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135047661 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113804331 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131975894 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076482179 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115451081 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118792897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120444995 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063368854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118186434 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158786912 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092519965 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151051418 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07822327 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121883436 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318077832 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144572296 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084350297 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109442819 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117082477 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126470366 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120073521 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139952707 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108148963 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13410009 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108938791 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084641432 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086334482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095724053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104168837 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094149878 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107883173 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11330959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093991856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131377494 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10256865 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109004494 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116466075 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096591406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089061443 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095479848 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172653618 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117650179 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170172265 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097664101 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144567259 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162733383 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074421268 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078624485 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077429249 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13861207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08312468 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129765083 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097122561 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104974566 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123164593 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140563444 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09414398 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067830115 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107488361 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133761684 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111622133 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096850418 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103375284 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160520586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098999662 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078467302 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111981632 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103250573 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100857892 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167614028 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203330355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097659283 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075243601 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08052287 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127373995 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150637846 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079824819 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102492566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118790405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10988294 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127099695 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101091972 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098649336 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114062091 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14862843 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128401174 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089352888 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111682326 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129115714 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154897724 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104668236 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094827357 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173330046 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151501068 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159432358 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08753155 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130275912 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11284695 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107399395 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137532886 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082494353 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162583774 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080932568 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135060143 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103342514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089342444 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128962226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098342815 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087430783 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146279851 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116639013 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081675611 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077082681 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11660286 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118452008 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104848902 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074133585 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136778475 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072033822 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130536229 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166723966 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080038473 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102439768 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239005592 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079984558 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108404123 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101516579 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088746991 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098037827 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173371677 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087084487 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14865896 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140241279 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111893016 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136663747 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099122139 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634515193 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076753385 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151471735 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115772584 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171998249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096186655 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117015152 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108079821 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122383849 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142925979 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104035726 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175717083 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131915234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115733392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078694879 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101910717 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102152249 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088079499 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103443761 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112781353 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115055491 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092865506 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115294741 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122710896 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081266886 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09437853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154873299 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116552249 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143982244 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139284264 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083814365 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116048817 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137328723 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079142557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120424206 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149915461 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105179969 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096293139 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078663064 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.2449978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17004513 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072940242 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161957364 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118719604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108428374 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113114922 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114059555 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130213052 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107125362 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119979039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092648963 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109511604 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112264066 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081204882 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076460955 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104109391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11111205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096204727 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097204517 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097917804 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150172917 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070789444 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095042575 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102490607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144033599 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173479683 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087983366 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081979491 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118892796 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112023517 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112040609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119582588 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078599244 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081880925 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081243889 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077304572 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10741199 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111151084 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103183936 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110681403 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162896153 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081914475 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225400507 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094301262 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10379329 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069194133 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078293107 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09554026 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096600479 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107473216 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098947629 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16685217 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092416302 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088245082 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090800077 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072159824 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081328161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125115175 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252870205 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119813498 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096304667 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06195687 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108735967 seconds)
  done (took 58.376747313 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108165339 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082446582 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096402035 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149506544 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121497283 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210390867 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156270366 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19878497 seconds)
  done (took 2.760640704 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068355363 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093657716 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098297801 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081720146 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066630045 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06872407 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223634581 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079136747 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066152292 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087424718 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078925086 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068223149 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421264077 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065409735 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066851705 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062443318 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066695186 seconds)
  done (took 3.392403049 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363997771 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359205475 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369867717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072487375 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.794574772 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088324253 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.080418502 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095523819 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070990056 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.276935064 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.695810644 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091332863 seconds)
  done (took 14.000648962 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076499874 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070957571 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084085938 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084602017 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073015881 seconds)
  done (took 2.092141358 seconds)
done (took 102.640887734 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080391654 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391204623 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.0538071 seconds)
  done (took 2.115435409 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083528704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084730178 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084554821 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083350316 seconds)
  done (took 1.984473367 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074248592 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076019207 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084844028 seconds)
  done (took 1.876826653 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223577013 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139901541 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087138186 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082546051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078119325 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07926054 seconds)
  done (took 1.885052389 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071903475 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075140282 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072838846 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07590991 seconds)
  done (took 1.936222034 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076163467 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053047586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054866034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056448471 seconds)
  done (took 1.882249293 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086152024 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078824166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078848581 seconds)
  done (took 1.88690659 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106939915 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084621616 seconds)
  done (took 1.834162573 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081727225 seconds)
  done (took 1.725642051 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099143913 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114074968 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12833139 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109322325 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139270971 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108827978 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085586132 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086968223 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077438442 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086977692 seconds)
  done (took 2.67965024 seconds)
done (took 21.978238198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078661101 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367375328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36180243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091239433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671497774 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35707694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992065453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09240064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113572177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067764659 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084271587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648027902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981424248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323958289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969813346 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32476893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650454773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06888643 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068064836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068053318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97601906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067875936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068187421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068576029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650876586 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372845209 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068438869 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32420913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068104977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069902807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355459908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06838308 seconds)
  done (took 16.17138106 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070671807 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119146899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073442079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084064337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070872572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07022685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071646392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069282435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120229545 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068081954 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084733396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067583751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072234205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068572668 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087304166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068193119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069039197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068766025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068433038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069001695 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087069278 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068091779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06830008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068333947 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068077136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079527947 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068745546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068718759 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068345771 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070155237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071292642 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069269003 seconds)
  done (took 4.054849564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114988516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125241468 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074691095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10372829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112698902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070518343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144084445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092984976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128097398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068168143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084697886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068207694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101280316 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068981192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087876329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06884937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070033607 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069298441 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0691678 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06942876 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087633988 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068911751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06879215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069276445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069149102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081744427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069562811 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069175021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069033067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070860198 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072586201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069462714 seconds)
  done (took 4.31746929 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07242303 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074939509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083213613 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0839681 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070436211 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07301815 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073198614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069746314 seconds)
  done (took 2.262467349 seconds)
done (took 28.456055816 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07913934 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069767859 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073064493 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081651739 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073466316 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078771255 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067330011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074686655 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072713157 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073288594 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074909565 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067915919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071640126 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067506746 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073945565 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068041069 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079434608 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071876448 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079210763 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079511129 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07026796 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073229289 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074361682 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079409836 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079590931 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081191437 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07732666 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073077872 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069423101 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070557988 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077017833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084559744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068787547 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079857437 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068079668 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068067061 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071540443 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068024355 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079683168 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077161344 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070125667 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076465842 seconds)
  done (took 4.757815607 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087812047 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090883499 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084562184 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061773697 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066995607 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065418171 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088638944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059640935 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059691647 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087747027 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055883686 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059511328 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062739132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054223263 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059255788 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056941671 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061864111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055747856 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059415744 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059648868 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058320236 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054592643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060502397 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06578688 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056684081 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062223063 seconds)
  done (took 3.365640094 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074770484 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08456744 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08873806 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127135591 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103691699 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077288986 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078319638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092377826 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085435855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06770146 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070989103 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094106975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088593588 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074233857 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068227993 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085230063 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082800197 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069132233 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073927576 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091316395 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085103242 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083996943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092842921 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080854184 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067234902 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069836643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071856186 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08159953 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072537017 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076298156 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072112602 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071099064 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069783706 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078873766 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071488429 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069551613 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090734283 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077354222 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07791915 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068194173 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070650489 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068681895 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089642837 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122877391 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067108346 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07421055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07555991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077069813 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067824278 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086046665 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07874484 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067344242 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070527263 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066714734 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067538124 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080521563 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069375641 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070039727 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076536835 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070598528 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085977304 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071393799 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082916496 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067508925 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075149909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066725196 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068462564 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066643284 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092646104 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069380042 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108751113 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069140094 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068908771 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077208369 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.087058373 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074224239 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068099443 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082885034 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078368352 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071490988 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076268452 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071122204 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070339856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087869147 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070353881 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069222643 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068861002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074588215 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070670878 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068986746 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08099488 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067767755 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070617103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084227694 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06740825 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068853669 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073775515 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072244676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067468477 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078367281 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072207852 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068607201 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077037698 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067896811 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071147738 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077900668 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074146831 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067294838 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072319936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073634616 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068388775 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.0689498 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070067247 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069179123 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075876962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074161043 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071869079 seconds)
  done (took 10.610080477 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16114561 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154370169 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070767936 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144493127 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076525507 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079241215 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147528597 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094817102 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067828213 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06873651 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069133791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110474866 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10597032 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116109391 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07884586 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067767719 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083609208 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113829201 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149681639 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143034676 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083784794 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076634526 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07044949 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069325921 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07096464 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078807157 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085844987 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076881841 seconds)
  done (took 4.417669028 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081484126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097014249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074601955 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089995547 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091518192 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067900186 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069863504 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069925395 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080696967 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079299356 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068124659 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07383953 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074939267 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071501927 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.0692615 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074813278 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075211034 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069830255 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071224593 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073270825 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077807552 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081117505 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071987896 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067459758 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074248445 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06749084 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06454387 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084756301 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068207201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090362892 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066133588 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075559246 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08199437 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068732737 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067725665 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067861088 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067876598 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067509255 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069951399 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066208795 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066404887 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058063239 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067033892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079776304 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074167539 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057091385 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072833358 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073545164 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072942601 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065798541 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070815378 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070479866 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070914975 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075102908 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073084272 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072805855 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069022639 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065657385 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075707179 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067604562 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064901276 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066384331 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072378503 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066207958 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075847169 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071982838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066460272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067327174 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069725412 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073734589 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067355003 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070807552 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065318057 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069643069 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072126947 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069399602 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0684492 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066294017 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067257365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06809914 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055625126 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067609432 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053646177 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070878504 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065943499 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066341008 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067355964 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0721556 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080028628 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069113198 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073356565 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06856169 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066784153 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07066056 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060207887 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070347787 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0830272 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082589181 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067603171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065535945 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082277204 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072507324 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066803434 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056339263 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075084016 seconds)
  done (took 9.175734979 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094473486 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088805561 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070443574 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083578263 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091396757 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08657161 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075264969 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076996148 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069550171 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082696523 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073930367 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076387716 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068161883 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077245925 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093964055 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07685394 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070067548 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07713103 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072024657 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100627636 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082947448 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082283586 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07509531 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068810679 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076534821 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080650924 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090312145 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080672442 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078891764 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075774783 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.07997281 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089906327 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074174907 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072172691 seconds)
  done (took 4.4294062 seconds)
done (took 38.414671941 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751525944 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.921112454 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744587691 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127784781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.81839764 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.875957584 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.796025615 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.739145016 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.851443164 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.776223132 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.988532771 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.772404101 seconds)
done (took 64.846493928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.794894526 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.891509345 seconds)
    (2/2) benchmarking "String"...
    done (took 2.015748884 seconds)
  done (took 5.58448953 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.044705445 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.268242792 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.987679182 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.737686939 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.745066567 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.044923132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.535900628 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260885318 seconds)
  done (took 30.260537712 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.905470722 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.934765729 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.386789124 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.422472923 seconds)
  done (took 15.372201771 seconds)
done (took 62.818553035 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.742412587 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.742480192 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742113506 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.725378392 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.798328028 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.744370944 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.049777387 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.742879017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.740391538 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.72848722 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.742182624 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172358893 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.746527756 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.995027763 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.742779961 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.747185129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.819848431 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.320678442 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.897184729 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.750431501 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750614367 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.768745109 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.745195443 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.854453193 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.79040588 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.741372671 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195633868 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75406147 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.3669282 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.741950984 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.772172347 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.116118071 seconds)
  done (took 202.968826234 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.740664939 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.660299317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.746597994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.755005217 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.14433498 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.939495487 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.866727353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.204499088 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.746810989 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.743989084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.885905687 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744205585 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.924883233 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.695285775 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.749413719 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.851045486 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926169116 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.950249686 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.744660451 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.997840001 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.755834046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.753638681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.699936279 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.886730398 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.779523314 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.841776491 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.765347617 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.754238483 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935223337 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.89413479 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.749020966 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763265234 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943048453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.614588585 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.76772242 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.747149236 seconds)
  done (took 168.353198116 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.883557894 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743205492 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.742470183 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.74207193 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.747647806 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.743590313 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.867359214 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.86906141 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.203617858 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.069577792 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.795365768 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563859963 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.743107303 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.81031073 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.743481207 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.756270173 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.742968877 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743991706 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.758958678 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.769847676 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746367118 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743166372 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869199413 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.755608828 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.030215919 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753438444 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.743387406 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748905489 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.114110763 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744405989 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749771769 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.689328374 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.992906395 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.745058009 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743869025 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.743682329 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.644267281 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.830514554 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.746855612 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749502363 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.744637486 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.964846328 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.745559804 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.745277365 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.748685188 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.923536432 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.748982882 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.869502004 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.745429018 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247871028 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744463443 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745530624 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.626422263 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.684709379 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.74592022 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.745197603 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.748059344 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.744762633 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.744724202 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.757529419 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.45721627 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.823866814 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.745964041 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.748039002 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748601192 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.744050382 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.801493682 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.743459088 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.118435589 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.800167101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.855226167 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859735792 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741923005 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806218524 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.832713078 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.739075712 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.737840197 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73852629 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.73887551 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.82066727 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.736150654 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.886098882 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.744049929 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.737358051 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.790073931 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.803949795 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.736005836 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643631987 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.739685564 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.734376992 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.05461974 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80257515 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.735291838 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.734308806 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73353078 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867140902 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.858276128 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.527250582 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.735373112 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.397185384 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.734745352 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.874477332 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.733959934 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.925425048 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.73511733 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814797032 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737894613 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.734257202 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.734742823 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.732956485 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765317337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.733967773 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.790498156 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.733745888 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.104046184 seconds)
  done (took 398.993801514 seconds)
done (took 773.933832309 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.398689409 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.3631934 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.48279425 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.390414017 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.363974331 seconds)
  done (took 13.674221318 seconds)
done (took 15.350089158 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.824846333 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.82619674 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.759355696 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.824149117 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.75610422 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.824422585 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.805860435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.760111852 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.791517647 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.761397558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.794456395 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760403807 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747139157 seconds)
  done (took 24.91153047 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.97620923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.978354646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.805553836 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.977496135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782077242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.962928716 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.897256919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888941698 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.885392351 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751065524 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.748149773 seconds)
  done (took 22.329655405 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.971759906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.977416936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.809526046 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.97057795 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.784373399 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.966898881 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900203809 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.888358017 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.88776803 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.7503539 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.747674977 seconds)
  done (took 22.331720384 seconds)
done (took 71.248892958 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.743360284 seconds)
  done (took 3.419125674 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.765120282 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.903145764 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.750567222 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.747559622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.744000551 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.744216545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.747247291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.746035475 seconds)
  done (took 15.825318633 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.741872803 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.739697209 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.743145693 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.743234012 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.739562826 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.737640746 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.738790624 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.738385291 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.741475035 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.740255646 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.741074545 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.737827324 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738663554 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.737914317 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.73972469 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.744384313 seconds)
  done (took 29.520757368 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.738271052 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.738628425 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.735867133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.740780501 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.74111458 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.740501906 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.736768388 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.740573901 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.737804138 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.741482129 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.740274495 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.73537198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.737304877 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.73911487 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.739381625 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.739340268 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.737305895 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.736193898 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.738776739 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.737221787 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.737932322 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.732950607 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.738960647 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.736433002 seconds)
  done (took 43.39779322 seconds)
done (took 93.840905436 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.437350777 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.191591216 seconds)
  done (took 8.301486272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.745436821 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.741511833 seconds)
  done (took 5.199401872 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.740330196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.739095873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.736793411 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.741226779 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.743096112 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.739112015 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.737271554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.743014166 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.740067092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.738727058 seconds)
  done (took 19.071726856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.741765052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.739423868 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.736579982 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.739635572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.744824227 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.736237818 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.742803225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.741772053 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.741709256 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.740279839 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.742723375 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.741325014 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.74529872 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.738642693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.745159847 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.737023767 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.742154565 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.739908188 seconds)
  done (took 33.010681638 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.741953401 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.738587818 seconds)
  done (took 5.154604174 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.739361258 seconds)
    (2/7) benchmarking "second"...
    done (took 1.73906424 seconds)
    (3/7) benchmarking "month"...
    done (took 1.734886771 seconds)
    (4/7) benchmarking "year"...
    done (took 1.737859132 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.737792229 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.73661792 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.739362431 seconds)
  done (took 13.83904831 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.738457276 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.902735787 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967804523 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.414597146 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739277816 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.742730428 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.658427955 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.743636623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.743841809 seconds)
  done (took 19.323219627 seconds)
done (took 105.573673081 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.578847043 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.73607704 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.208815285 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.781327516 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.785042444 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.028573391 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.735355956 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.949066981 seconds)
done (took 42.476526726 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.80802462 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.245501992 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.277840132 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.109624521 seconds)
  done (took 12.299381002 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.708276335 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.238076371 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.756940717 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321081679 seconds)
  done (took 19.695579064 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.088842339 seconds)
    (2/2) benchmarking "read"...
    done (took 2.078003781 seconds)
  done (took 5.82917454 seconds)
done (took 46.301069459 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725719716 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.724370148 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.725761636 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.722888881 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.728330727 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.725144338 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.724748921 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.724187207 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.7225383 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.727599765 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.72628348 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.724876081 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.725279275 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726072789 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.72222948 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723025964 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.727336875 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.72260974 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72364834 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.724648409 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.724893026 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.723535145 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.726311991 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.721518215 seconds)
  done (took 43.054357451 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.725039172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.726321019 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.726522132 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.725985506 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.722440043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.725971044 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.724258582 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.724899642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.72495104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.726903761 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.724015517 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.723186118 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.725597595 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.722467454 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727216486 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.720391733 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.724792343 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723595828 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723899898 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.72330334 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.72897987 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722400347 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.721932012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724833906 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.721025548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722114544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.728433494 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.723090261 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.724161737 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.720594331 seconds)
  done (took 53.388727442 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.730328143 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.732782442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.724308106 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.724820092 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.724662932 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.724148241 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.723678843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.724563074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.721796156 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.723914531 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.72339882 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.724032491 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.727048427 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.721761794 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.724340452 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.72378525 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.723112484 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.722102192 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.729108498 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.723336305 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.72292794 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.722698607 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.722672527 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.72347216 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.726692561 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.721693366 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.723450124 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.722191457 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.722717287 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.722231966 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.724614155 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.722007728 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.722479431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.721235123 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.721632685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.722346101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.728177833 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.730088059 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.72277092 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.722659155 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.722917449 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.726898944 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.72162665 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.721828015 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.72184522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.723764941 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.721544516 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.72690487 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.723597448 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.721723046 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.721574506 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.723221064 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.721673546 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.723935684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.722235342 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.723661722 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.721229075 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.722491466 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.721818268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.722634319 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.72234183 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.722401676 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.721856539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.721367725 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.721299385 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.724264783 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.722115682 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.72072337 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.721904628 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.721266569 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.72488536 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.721097671 seconds)
  done (took 125.745606647 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.722752487 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.720818633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.718727883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.721162582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720002491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.720824551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.718719701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719409261 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719884371 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.723864399 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720380763 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719610745 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720244251 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.722438015 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721486647 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.723852431 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.7222845 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.719576468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.722259386 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.722008095 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.723213154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.724611219 seconds)
  done (took 39.523010851 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72340969 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.723114331 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.718841988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.723115225 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.720578965 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.723647057 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.722892259 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.722640096 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724062075 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722086798 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718735537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722847219 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720054707 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720274073 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.7200939 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.725974304 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72346002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.722934484 seconds)
  done (took 32.654763718 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.720608463 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.719449633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.724392989 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.718297094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.7186042 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.722152514 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720640741 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724004993 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.723047593 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.719117561 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.723343839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723670825 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.723826146 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721072051 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726686621 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.720427029 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.723253579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719044454 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.723605954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723839723 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719748669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.722901246 seconds)
  done (took 39.53682593 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723954526 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724231913 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.72224246 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.719341306 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.719794317 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.723379426 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.72450623 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.719816136 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.724457067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.723776263 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720643209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.725355174 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.720979256 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.721917365 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.725027416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723173326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.724187646 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.720997093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.723968072 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.722263823 seconds)
  done (took 36.110497184 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725496277 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724361714 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.726313796 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.726037799 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724516476 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.725577781 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725561095 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.724943683 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725086674 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.725454193 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.726195348 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.722797056 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.723128886 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725357908 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.724899737 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723755493 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.726828487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.724936217 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.72616181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725110502 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725209413 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.724315309 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.730196665 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725881377 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7252227 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.72515264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725991848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.724506916 seconds)
  done (took 49.971274238 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725759178 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72494785 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.723395116 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.722118432 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.722082097 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.72386426 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.723413481 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.723280955 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725075906 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723740499 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.728597953 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.72411671 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.725834641 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.725031261 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.724312116 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.724785619 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.728406199 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.723855871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722299735 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72380188 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.725917288 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726419122 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.7293496 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.724288027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724018993 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.72768734 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.72399223 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.723737831 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730192701 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723524609 seconds)
  done (took 53.411780446 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.74508141 seconds)
    (2/2) benchmarking "in"...
    done (took 1.745430237 seconds)
  done (took 5.150184242 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.725541502 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726583213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.725736651 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.724497287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.726490159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.728428965 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.724912812 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725196084 seconds)
  done (took 15.466645676 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.727128717 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.726984766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.731982638 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.726737336 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.7268133 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.729753483 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.735094389 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.727888298 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.734349225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.72925056 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.734861754 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.735375107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.733707631 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729404182 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.734820336 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730111409 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.726527796 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.726583283 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.729763992 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.727595637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730173178 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.731520299 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730853684 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.725500093 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.730467856 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.742653736 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.736327083 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.728717614 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.729274279 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.735572166 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.731036396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.727545041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.729572131 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.730116719 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.727427816 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.729776721 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738714302 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.734052081 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.738742165 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.730971421 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.728415472 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.727671486 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.732236244 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.737834115 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.731736376 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.730539855 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.73047903 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.726770796 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.733906938 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.731542066 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.736152943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72915526 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.726326864 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73914493 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.737693896 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740239541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.73085972 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.733750148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.737735287 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.740182187 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.748431946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.739465787 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73117226 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.72802552 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740037595 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.754091607 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742289129 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.728414122 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.728822097 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.728655461 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.739214465 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747259987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.7388747 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.732020176 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.730632676 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.730969495 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.73369252 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.736915118 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.74117443 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.735185875 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.732001038 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.73120688 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.740075496 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756544353 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.728559394 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.731258776 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.73095927 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.729453442 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.733868546 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.747154632 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.731059328 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.73106059 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.731850432 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.733498918 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.736528187 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.731991452 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.731094378 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.734566898 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.728433714 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.733701981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736056417 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736513275 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.740719055 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.732078519 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.73254492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.740324177 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.730746667 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.730695138 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.742295263 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.730205858 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.732696054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.733302903 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.740180025 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.729802662 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.735429781 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.741760472 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.732115027 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.733307615 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.735208356 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.734135177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.741710455 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.756288947 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.734322395 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.733699335 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.736764004 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.741104271 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.733674203 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.736980622 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.732075867 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.731017078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.731003244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.736720577 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.733577743 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.737205168 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738263363 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741773155 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.732236592 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.732582002 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.733094183 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.735301906 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.736174754 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.737515268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.736320921 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.738304585 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.732999309 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.737017934 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.745986081 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.732600742 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.736710975 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.736759577 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.732676021 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.734686966 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.740561986 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.733593957 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.736138685 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.73485376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.732232678 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.73446131 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.73913781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.735679537 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.736339423 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.736149893 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.741084325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.736426133 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.744861876 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.736237164 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.73142192 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.735272866 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.737292965 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.738197453 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.735645664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.737668438 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.738764775 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.742913922 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.735226379 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.742455045 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.742970229 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.736463791 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.735666255 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737830781 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.740233489 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.747451271 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.736437758 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.746143826 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.736663838 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.737493032 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.738021151 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.740490917 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.737013903 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.736707329 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.739140846 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.745147509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753395133 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.746336414 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.73826725 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.741085462 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.737401601 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.740215768 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.747588034 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.736637865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.736484856 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.738186656 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.741800498 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740284756 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.745523532 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.737840713 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.738146889 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.738072531 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.736356714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.738398798 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741558974 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.738190716 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741232476 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.73555328 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737951635 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.740964856 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.73842808 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.736789699 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.737646776 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.740937248 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.738848332 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.74607177 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.751001113 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.734743292 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741882146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.742258495 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.739969 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.741772629 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.739059378 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.74227376 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.741572745 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.748178396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.742663326 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.742710734 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749036605 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.739188586 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.741646542 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.744731323 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.742576037 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.737411103 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.743091621 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.7458352 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.739738737 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.740728296 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.740827063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741014824 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742846243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.747451289 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.739758761 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.741810998 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742095073 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.744855538 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.73818395 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.742046495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.743322772 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.743100552 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745874556 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741595717 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.741946279 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.744977505 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.741301941 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.743273156 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.742292824 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.743686879 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.748780628 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.748011534 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.743701546 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.748270245 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.742778709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.745168207 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.744362074 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.741270535 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.742481007 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.758424329 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.749324955 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.747769512 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746333244 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.741520064 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750846413 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.742471899 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.748267508 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.74287806 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744747273 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.742334593 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.748698796 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.740668412 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.746473232 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.742680041 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.743153386 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.743819407 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.750172409 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.742944289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.740570545 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.742818758 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.743965267 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.742948824 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.747734235 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.743455649 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.749131395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746716586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.745103036 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.747802682 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750717458 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74529898 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.748920919 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.743081602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.744116347 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.74739563 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.745659803 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.74392051 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.745644323 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.752150792 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.746370168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.754479717 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.745748106 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754225276 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.742612756 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.74498347 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.750423975 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.743067702 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.743599631 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.746487235 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.74534336 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753510152 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.744724733 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.745551628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.747856184 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.74309745 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.744709695 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.745979929 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.746208474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.746383468 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.746378185 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754371935 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.749055029 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.751551812 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.753105888 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.742011073 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.744231414 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.744767085 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.745427223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.754712747 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.743749868 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.749234517 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.745573776 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.74681634 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.744632701 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.748707193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.745409538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.742586463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.745625218 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75517371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.746137717 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754388636 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.745086035 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.756259619 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.745414524 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752886727 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.745083823 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.750207869 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.744685757 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.74773475 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.750177006 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.746351512 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.752511565 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.744637447 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.747539988 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.750755028 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.746434206 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.750944255 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.746661582 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.74857521 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.747473081 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755627933 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.767534078 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.747767167 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751546311 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.742941256 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.748345621 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.751068427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.746915248 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.747535603 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.7529184 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.757795715 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.754665261 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.7499558 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.747566873 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.754340833 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.749697931 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.747468521 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.749343267 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.747195984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.747444217 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.755593193 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.748570725 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.755037404 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.746927505 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.750897963 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750467108 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.750642977 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.759596301 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.747520194 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.750322526 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.747381466 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.748839053 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.748480432 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.748200271 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.746736927 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.750704038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.745388277 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.752241993 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754021665 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.753809177 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.752294353 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.749347509 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.747644556 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.752835487 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.751604533 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.750717416 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.747256303 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.748334323 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.749804956 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.750597562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.751931081 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.746670011 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.747686789 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.750632922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752916684 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754662325 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.756635191 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.750425723 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.745706314 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.750245246 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.755831541 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.747744964 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.753062322 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.759040236 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.752446234 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.759094373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.759925337 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.753685107 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.750096263 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.751405794 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.757039716 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.751220813 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.751457808 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.749210877 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.75781179 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.752142536 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.754378809 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.750280388 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.758530754 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.752743618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.750203639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.75989992 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.750490127 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755163848 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.751624707 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.756071432 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.75024238 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.746803168 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.752193233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.747818091 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760385997 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.754194935 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750290552 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754736368 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.75333721 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.751427444 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755137953 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.749497424 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.753425972 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.74912387 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.754649986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.750783037 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.751382249 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.74798169 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.753504482 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.75306383 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.757603732 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.758785325 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.749317126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.755047867 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.754529048 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.754914298 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75229261 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.751343829 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.749786616 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.750015741 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.75253127 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756134282 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.754727172 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.75746065 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.75279696 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.754376702 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.751733206 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.756132654 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.755355742 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.762534948 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.758938868 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.748978509 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.755059546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.754054063 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.756345567 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755150982 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.753925793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754122893 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.759438317 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.753451662 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.75311439 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.753109732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.756215161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.770335973 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.755376737 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.75514612 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.755924516 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.759832855 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.752033463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.754736006 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.75154401 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.757959807 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.757677058 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.759323119 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.755018294 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.765013014 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.753896798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.755870601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.757085733 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.754778772 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.763369692 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.758502091 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.753219529 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.754212115 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.759169975 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.77177205 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.753214494 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.764690048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.782363185 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.756670823 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.754778199 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.754151177 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.756994129 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.752886203 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.758557759 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.754657761 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.754172434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.756141944 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758200747 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.758460074 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761935868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.756851341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.753086639 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.755898273 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.75665771 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.759561329 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.751686599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.756473908 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.753808132 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.755083718 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.75414797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.756662376 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.758694606 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.768549139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.765182287 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.760411493 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.757623966 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.753433601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.761694665 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.757068541 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.767665578 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.765435826 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.757538977 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.758728053 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.758760461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756535755 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.75478256 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.759429225 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.758127399 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.758629369 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.754996588 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.7721442 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.764006803 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.762413362 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.756944047 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759315108 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.756987127 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76098835 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760508741 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756674006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.761106421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.758592309 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.761210468 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.756534027 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.761015722 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.765384595 seconds)
  done (took 1041.906262611 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.756255703 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755617871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.756911141 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755786405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.757359338 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.755286918 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756969215 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757489177 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754872169 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.75715008 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.756140106 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755551096 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.757431625 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.755253559 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.756694028 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.756553124 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.754643604 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755852344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7636807 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75763354 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.757616127 seconds)
  done (took 38.579971506 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.757367392 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.756993024 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761287519 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.759289786 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759722776 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.759354991 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.757364591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.758434626 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761703245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757395037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.758386628 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759069552 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.757243565 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.759974701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755917652 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.759632117 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.758420561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756424837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.758954695 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762700498 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760053966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.756135437 seconds)
  done (took 40.384320442 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.75853023 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.759578493 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.764893312 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.756192058 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.758290734 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.756434144 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.759248218 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.760532793 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.759013217 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.763146692 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.760112931 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.764341002 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.766813266 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.767906878 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.764306586 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.7584262 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.906673292 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.759092301 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.760578841 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.760786784 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.758132239 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.768851853 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.754943552 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.759700812 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.761873442 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.760676844 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.760060527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.761716568 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.760436972 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.763446583 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.76654969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.759852398 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.763530627 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.765845258 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.761404868 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.763196633 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.763635368 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.761726051 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.758144904 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.759802893 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.771436202 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.779770114 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.763041419 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.770678998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.761169146 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.759721554 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.764979851 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.767536087 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.758957366 seconds)
  done (took 88.187102114 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.760952447 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.762007432 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.758417265 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.764459811 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.76269402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.759964051 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.761900334 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.760781799 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.759113047 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.758716657 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.763753797 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75891953 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.75991378 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.760317922 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.761416416 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.758798636 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.75977882 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.76085633 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.760245735 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.759818791 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.75950183 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.762743768 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.7635367 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.760038697 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.762408878 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.761785085 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.760643299 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.763896549 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.761224056 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.757798781 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.761864637 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.762228233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.762751526 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.759544587 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.760859877 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.762306445 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.762856682 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.759598678 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.760938943 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.762259772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.763217269 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.762779114 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.764569039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.762650864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.76306107 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.761672432 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.760902277 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.761356032 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.763105252 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.763507654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.763148752 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.761304485 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.765814473 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.760646749 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.765349623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.76402625 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.76132797 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.760323907 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.76290408 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.762900521 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.761999616 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.763384221 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.761657752 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.765496263 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.764660848 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.761586429 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.761866124 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.764322931 seconds)
  done (took 121.493992295 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763528332 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.765610871 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765688118 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764513099 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.766107306 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.766037087 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764230481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.765061815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.764920295 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765156911 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767416428 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76635797 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.765616764 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768684399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.764727651 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764491445 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.76590942 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.765305138 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.766492695 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764746024 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.765623745 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.765672487 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764170096 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.765165948 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.767444367 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.766301789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.767019962 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766851087 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766095124 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.76625071 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764563225 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.766311676 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.767097042 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.766955085 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.767464827 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.767113874 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.765818209 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766694368 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.766144849 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.765847352 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.766818127 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.766819058 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.766828892 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.76858216 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.765677003 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.76626613 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.766179158 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.766841449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.766966135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.766569176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.768278563 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.766561244 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.767189116 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76654575 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.76825925 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.767926364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.767872891 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.767060142 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768660875 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.767150826 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767043819 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.76839941 seconds)
  done (took 111.212441399 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767605804 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768015556 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.7646773 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.764277292 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.767891056 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764449462 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768562903 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.76866805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.765871246 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.768381249 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767459085 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765843447 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.765613482 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77004487 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.766544204 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767792391 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765506641 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76681687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768136003 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767065924 seconds)
  done (took 37.038553486 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.767443059 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.769124386 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.765087434 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766961149 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.770161602 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.768674068 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.770223352 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768635569 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76717334 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77233611 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77156777 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770732562 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767632873 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.768335562 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771032679 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.768261514 seconds)
  done (took 30.003496291 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.767949447 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.76924844 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.770304036 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.771903408 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.765916018 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.76811828 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.77039348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.768383355 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.767467624 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.771771587 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.77091607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.770177156 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.770337069 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.769360689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.767766373 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.770692058 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.768707525 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.768245635 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.77005218 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.770027562 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.770280922 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.768798885 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.770794784 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.770386622 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.769409785 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.770253004 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.768676271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.770184515 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.769857346 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.771166127 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.767612231 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.770639909 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.770145273 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.76965076 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.773211736 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.768903135 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.772926021 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.772480464 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.772316541 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.771055404 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.772724832 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.770029366 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.772320554 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.772258194 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.768299405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.772440469 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.770510739 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.771395921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.770532924 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.770959601 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.773360548 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.772942357 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.773162371 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.772831574 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.771201696 seconds)
  done (took 99.073828891 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772492717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.771728202 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769606018 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773370573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.773840654 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.770456518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.772277826 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.770505736 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770362911 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.773190043 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772847331 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.773379232 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770683859 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.774440853 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772884522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772267749 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.772027874 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.771316325 seconds)
  done (took 33.602215812 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.772369588 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771496667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.773927034 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.771176566 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.772201105 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.772878592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770417205 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.775267198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772750048 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.770737157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77122906 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.775629287 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774857211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.773219691 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.77190911 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772252877 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.774666597 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772794651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.771271248 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771183506 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.774934328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774901469 seconds)
  done (took 40.706270491 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.775577565 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.775459421 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.791128739 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.81662377 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.804769134 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.775167067 seconds)
  done (took 12.442876069 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773618867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774464222 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.772214189 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775451264 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775781684 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.772454576 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.771780095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770356597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.774851437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773716065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773655739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.775909341 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775629564 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772727479 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776849791 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776336889 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773180104 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773716357 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773766418 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775939126 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.772442144 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.773806269 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774199715 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774637932 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.773693636 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773751359 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776549557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772847314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774427127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.774889339 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77662252 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773256376 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.774785632 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.773730781 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776377998 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.776879691 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.773814444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776011412 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776600805 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774576301 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.778265369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775646806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775349383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774393814 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777387352 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.774586616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775552681 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.774922305 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.774538302 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779420174 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777701306 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.774343784 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778087164 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777539324 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777278208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778012925 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.773865986 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.77699645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777615628 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776144643 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775460982 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778531777 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775659536 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.775174654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777574755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77432585 seconds)
  done (took 118.868669609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773114781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775569623 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.775309835 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777338698 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775613734 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.776753936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775921889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776342499 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77547896 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.776513223 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778954124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775959042 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776584583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775812616 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776327432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776254529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.775904197 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77610282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.775724802 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778266371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.774951777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777853576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7751165 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776312127 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777314765 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780032285 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777423775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776116984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776196241 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777423028 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.776428046 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777673434 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.775711709 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.777519095 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777255977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778323399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777399198 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778665455 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777065697 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782082585 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778186125 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780064748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779265974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778303412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778044568 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777752266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.775281952 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778478647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778622436 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777805657 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77945427 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777403109 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778958297 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778756541 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778951919 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777962327 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779004027 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779301686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.776745154 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78133894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778022357 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778135089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782177865 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778094339 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779339148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778593838 seconds)
  done (took 119.026367349 seconds)
done (took 2428.198650682 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.76242164 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.789130023 seconds)
  done (took 15.262397097 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.953192054 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.902820638 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.788635043 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.830994778 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.78772022 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.809964082 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.789220016 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.786364674 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.787925939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.7894806 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.79182084 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.978689674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.805871651 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.789389906 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.787072084 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.879569776 seconds)
  done (took 50.980817582 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.791878649 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.794096581 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.805419748 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.793673676 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.791005774 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.801987244 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.823374331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.794651941 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.82488143 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.80286655 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.858099885 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.799370483 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.791655239 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.838831313 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.805135098 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.804945941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.877446907 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.861169792 seconds)
  done (took 34.381432358 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.868668802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.79077728 seconds)
  done (took 10.389305433 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.80022115 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.820058499 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.823313174 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.803541853 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.81699 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.796094041 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.810161058 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.810014822 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.831014758 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.804488478 seconds)
  done (took 69.840745212 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.79942574 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.791516622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.794826505 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.791865154 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.785984132 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.78689388 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.791549945 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.786865164 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.459980548 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.822879019 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.797222295 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.796380734 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.789858599 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.796350896 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.789454437 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.817164671 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.909116917 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.789737685 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.787620949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.798987562 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.793572325 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.885167081 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.805235161 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.790908231 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.823797694 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.460462743 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.798748088 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.800330085 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.927164398 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.792153652 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.792072805 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.793833614 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.798252375 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.179226344 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.070615825 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.791688941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.801007471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.803741199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.789145682 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.964358368 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.794482536 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.799817171 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.771856339 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.049784755 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.87573639 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.835070434 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.145887473 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.797454924 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.7972464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.823295764 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.797116055 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.79555065 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.809603367 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.304193355 seconds)
  done (took 128.471033581 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.790596965 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.366211433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954116633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.786489991 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068198657 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030218132 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790045958 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838729411 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.788907929 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.036980766 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971234299 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906615029 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790131513 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.788040489 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.790370692 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789175269 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.940510724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859203659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790219242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.788059362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825959293 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05459359 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.917145305 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792507084 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.812684139 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018312505 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.913443799 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.908995396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.290116432 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.790065765 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857602642 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.791406242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79184788 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.789525648 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956494419 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.897959594 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885866844 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.791825292 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789699865 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789278415 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.448553269 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011659523 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901723529 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.927986506 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037793687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.019113202 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.436999923 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.790112082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42828318 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987307124 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000640024 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.041591715 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.917959796 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.792528744 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.034608111 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.790149031 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.79195793 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.053196525 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01630844 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903429145 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794376321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.792755036 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789584625 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.106103823 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.791096844 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900587853 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793341266 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.791180015 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.90367573 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.905938384 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.017015384 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032626075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.822014228 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.696252413 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.303810009 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075390934 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.86366655 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053362448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.791917063 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790500147 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884538616 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.536898065 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967041338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.105186774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056941906 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832010302 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.395540582 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.791999411 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.038035889 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.042266553 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.020623051 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.037547836 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955463455 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.120234456 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791737314 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.791538436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.00543365 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92544735 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.79346764 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153890884 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040266372 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.523054411 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.823249245 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099150686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929273292 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.792830212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.420800752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.795274176 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.993433512 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835156232 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.792343117 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794738458 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.039467023 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.66466843 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.793208791 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.57959102 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.857570476 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.795056362 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05596782 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793920665 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035764132 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795170525 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.103391734 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.416287719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.835967802 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.985989181 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.036116749 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.594741774 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.059788609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.104664309 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.91765898 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051264937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.625805368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.792470295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077559641 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.796495216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.794542897 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.961961162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79481476 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949812999 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795419255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.054458331 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820509543 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965831268 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.79693017 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.067740558 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838754414 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84712806 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798749305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.91178669 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794715741 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.841857764 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.977074464 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794369119 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.795379603 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.371001885 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.793654578 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943269607 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095266601 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819198066 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.863964062 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.320959113 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794359821 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88991048 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823677321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.400802568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.792337367 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.968045474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.796235671 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.787927678 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.795147619 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.104266397 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045626933 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.79930354 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796662019 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.595477113 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.499318232 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794135389 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.972861136 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.034512646 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.446308376 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016975111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798093565 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92811523 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798828437 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.866532989 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.145726307 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795720745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.799138645 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.796567021 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.797504925 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.796951039 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.028582851 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82437274 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.485291616 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.934068258 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039768465 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.106371507 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.059807982 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.846663906 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800881493 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064099724 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.797884833 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.862875022 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.799459296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822466672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04327819 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798664274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.026128945 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.083646432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.85181954 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849222284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.799481112 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799902541 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.798345374 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.94187691 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896175242 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797988055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.797037903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918495878 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.92397133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98544342 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.397874534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.986187945 seconds)
  done (took 887.160135273 seconds)
done (took 1198.19890341 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.800336118 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798704236 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.786746649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.802581836 seconds)
  done (took 28.921706055 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.807363352 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.807746622 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.806038484 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.804499872 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.807380625 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.80584444 seconds)
  done (took 12.575042554 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.832971815 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.80036059 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.800544444 seconds)
  done (took 21.170344023 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.875540038 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.203837304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.90973594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241590228 seconds)
  done (took 9.969214949 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.809704675 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.807930468 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.807446082 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.807741871 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.808247122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.80864991 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.808769671 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.807986013 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.810225855 seconds)
  done (took 18.013852928 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.941331388 seconds)
done (took 96.32808005 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.833608379 seconds)
    (2/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.881516217 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.049052805 seconds)
    (4/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.932050673 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.889668234 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.153068658 seconds)
    (7/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.904898298 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.782815031 seconds)
    (9/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.872076473 seconds)
    (10/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.858778885 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.662783931 seconds)
    (12/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.787691854 seconds)
    (13/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.20649591 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.931449032 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.168772187 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.846945343 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.828324608 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.804097302 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.567678145 seconds)
    (20/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.816920804 seconds)
    (21/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.941603852 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.969194277 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.942693362 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.097988737 seconds)
    (25/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.988024515 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.027067098 seconds)
    (27/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.399631328 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.92239648 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.891436485 seconds)
    (30/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.863299327 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.872988562 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.834440489 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.833015501 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110669403 seconds)
    (35/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32675362 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.24852526 seconds)
    (37/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.889057653 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.895388456 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.836403782 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.798000495 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.263869757 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.81564641 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.327542284 seconds)
    (44/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.101687376 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.893775931 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.797803116 seconds)
    (47/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.143070952 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.803825345 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.055036293 seconds)
    (50/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.985029574 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.71378162 seconds)
    (52/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.907509636 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.836726684 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.942554444 seconds)
    (55/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.80004636 seconds)
    (56/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.83189643 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.167729602 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.918824549 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.888543423 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.609326224 seconds)
    (61/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.096703206 seconds)
    (62/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.925551867 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.11129663 seconds)
    (64/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829861083 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.073282808 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.027709179 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.32827823 seconds)
    (68/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.814412467 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.184860952 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.802468821 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218128083 seconds)
    (72/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.447567894 seconds)
    (73/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.871260745 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957133721 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.802644623 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.931758462 seconds)
    (77/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.957672231 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.816908618 seconds)
    (79/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.50009086 seconds)
    (80/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030288978 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.820611973 seconds)
    (82/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.95228389 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803810358 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.964907722 seconds)
    (85/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.940098136 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.133974488 seconds)
    (87/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.034068588 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.599268135 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.942911804 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.165848477 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.063110381 seconds)
    (92/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.903746217 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.920195735 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.190867486 seconds)
    (95/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.975092354 seconds)
    (96/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.822329025 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.843134473 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.750576412 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.614326877 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.714247851 seconds)
    (101/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.093122922 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.036105333 seconds)
    (103/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.811003298 seconds)
    (104/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.330936088 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.184803616 seconds)
    (106/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.635545571 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.232403415 seconds)
    (108/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030817209 seconds)
    (109/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.393276227 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.843727654 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.801712761 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.489387616 seconds)
    (113/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.411614512 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.818891556 seconds)
    (115/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.907995727 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.028242657 seconds)
    (117/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.951429198 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.822180147 seconds)
    (119/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.988876121 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.109894659 seconds)
    (121/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.947021327 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.818905338 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.48774931 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.959301062 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.82060509 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.870330815 seconds)
    (127/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84236245 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.841221893 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.072842735 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.226099112 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.32763737 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.276387319 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.843497058 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.09545014 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.811808603 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037530126 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.1976949 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.079281658 seconds)
    (139/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.875395469 seconds)
    (140/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.912290321 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.934166267 seconds)
    (142/309) benchmarking ("sort", Int8, false)...
    done (took 4.779090238 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.157652951 seconds)
    (144/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.50761663 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.93284784 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.803499941 seconds)
    (147/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924837718 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.001878061 seconds)
    (149/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.990128325 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.725211208 seconds)
    (151/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.9652899 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.060474685 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.059462013 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.806045447 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.91024166 seconds)
    (156/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.923638233 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.20881287 seconds)
    (158/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.930733026 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20989024 seconds)
    (160/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.838661756 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.509234327 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.165533467 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.167922056 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.847341921 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.868250053 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.221803306 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.158971546 seconds)
    (168/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.909594215 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.844473837 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.915049708 seconds)
    (171/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074874974 seconds)
    (172/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.129272538 seconds)
    (173/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.84663369 seconds)
    (174/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.644920885 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.928043689 seconds)
    (176/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.927762371 seconds)
    (177/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004864961 seconds)
    (178/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.332821742 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.205939843 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.745302149 seconds)
    (181/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.196573546 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.865784954 seconds)
    (183/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.200608754 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33909795 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.03328032 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.855283415 seconds)
    (187/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917521467 seconds)
    (188/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.975198612 seconds)
    (189/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.792810669 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.991131317 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.821332404 seconds)
    (192/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.415246876 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.82122369 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.097149241 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.195037972 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.823741768 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.879061724 seconds)
    (198/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.901383833 seconds)
    (199/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.905916878 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.893380571 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.820817538 seconds)
    (202/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.414985246 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.877793022 seconds)
    (204/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.805894463 seconds)
    (205/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.831006097 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.829779088 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.020603478 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.712197181 seconds)
    (209/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838414788 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.029030276 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.447211773 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.053712191 seconds)
    (213/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.143468787 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.005948379 seconds)
    (215/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.823553222 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.360864174 seconds)
    (217/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.831124069 seconds)
    (218/309) benchmarking ("sort", Float32, false)...
    done (took 5.608782442 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.854150786 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.475029536 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.893201868 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.812569785 seconds)
    (223/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.894917245 seconds)
    (224/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.014435184 seconds)
    (225/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.849687332 seconds)
    (226/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.259793048 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.961745397 seconds)
    (228/309) benchmarking ("sort", BigInt, false)...
    done (took 6.822822866 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.395363195 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.132793587 seconds)
    (231/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.828083622 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.850581468 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.124568546 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.813573269 seconds)
    (235/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.031383419 seconds)
    (236/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.010781079 seconds)
    (237/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.125462447 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.829157123 seconds)
    (239/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.176798663 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.791548644 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.840602095 seconds)
    (242/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.834996524 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948117695 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.046558851 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.304306607 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.722826734 seconds)
    (247/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836121519 seconds)
    (248/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.117944308 seconds)
    (249/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.023254554 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.850093634 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.907959584 seconds)
    (252/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.175831955 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.117326843 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.950872336 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.922475578 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.719486932 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328443683 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.270355052 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.258066204 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.974022013 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.114123878 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.858038205 seconds)
    (263/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.428501298 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.995720727 seconds)
    (265/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.090089612 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.474490069 seconds)
    (267/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.210928712 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.100448113 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.215882729 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.152510477 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.927764898 seconds)
    (272/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.035651514 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.817747221 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.376518386 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.771972615 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.832730772 seconds)
    (277/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.300839812 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.815062276 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.545239834 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.914597298 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.825859577 seconds)
    (282/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.170978882 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.908571979 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.999043097 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.058560902 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.046363857 seconds)
    (287/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160771935 seconds)
    (288/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.01523958 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.019552878 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.420485116 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.034696622 seconds)
    (292/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.06992252 seconds)
    (293/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.43223471 seconds)
    (294/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.776655056 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855318237 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.950050936 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.867877168 seconds)
    (298/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.134996372 seconds)
    (299/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.877038895 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.478788874 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.012396731 seconds)
    (302/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.831456995 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.885505055 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971181435 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.894136724 seconds)
    (306/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.812078175 seconds)
    (307/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 4.006934569 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.850534496 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.912527669 seconds)
  done (took 1008.038411331 seconds)
done (took 1009.794687562 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85924246 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854608203 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.838317611 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.859658726 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.950323164 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.870115116 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.848267577 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.839407386 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.885990878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.888126894 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.83692857 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.869718938 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.840223588 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.838794268 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.837456964 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853689537 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150840019 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.871857848 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.856143706 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.847930096 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.855341042 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.838029835 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.888243669 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.870414272 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.843753311 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.841086621 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.843193783 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.858942087 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.951371759 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.843166371 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843342248 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.85036123 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.151446786 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.870459944 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.834024913 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.859220399 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.852675516 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.849044952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.843051128 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.872023991 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.299239822 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.848000469 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.842897022 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.842093404 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.842069725 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845664656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.842331106 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.846436893 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.852511799 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855130769 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.297348157 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.862414266 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.843416729 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.841034258 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.852392788 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.840233063 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.843960805 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.857571304 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861071515 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.857368205 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.142966376 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.87694768 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.843743058 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.857957884 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.848317114 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33326162 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.843803666 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.846473962 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.297311935 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.854583521 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333442171 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.857797828 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.84341503 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.855798744 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.873476135 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.154666245 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.868748896 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.840380176 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.848897614 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840067762 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851649177 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855222539 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.846971662 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843201508 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856657025 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.873657738 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.85276547 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844366126 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.851883193 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862490336 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.850752805 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.854314482 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.84500559 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.838441414 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.853417871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847306426 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.845960713 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.846931694 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.84860108 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.855340116 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.298035748 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866827733 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.840101819 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.839882132 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.842863961 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.857747796 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299786488 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851372626 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.865564908 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.890931768 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.845015042 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.143968744 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.876498802 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860276666 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.85328693 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.847325196 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.839740912 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.146713524 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.332068737 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.866272294 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.845490061 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.842292295 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860893631 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.846088181 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.840631649 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.155537929 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.87848506 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.858820843 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.965573873 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.854975355 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877052166 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.84356316 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.848216015 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.873599787 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861266309 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.877888449 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.848054385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861621095 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.861289364 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.842031741 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.855805326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.856048937 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.846763832 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.851965676 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.839987599 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.873362802 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.858550158 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857629403 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867228158 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.967462488 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.844188381 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.147964346 seconds)
done (took 289.963519272 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.915060292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843339636 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.94492767 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.842817807 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.927042769 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.928604471 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.839543349 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.839436461 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.838996164 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.219929704 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.839747642 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.840455432 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.844718867 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.839292648 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.925023302 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.842104216 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.839096489 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.182783109 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.843244605 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.914506811 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836257257 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.8405266 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.842146643 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.224735078 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.83995883 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.839935581 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.915211305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.842436242 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.192042389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.843965434 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.84517101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192412395 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.934146795 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.862017496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.853281087 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.850325133 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.929380232 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.848417244 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.925306483 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.924575156 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.94660997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.883889619 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.841824075 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.838395515 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.8468733 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.845309678 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.84106285 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.87212485 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.842863892 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.841651495 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184440346 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.854090737 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.85147881 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.842459662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.84172236 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.867137185 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.842038561 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.84532477 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.935315119 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.846707736 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.908663597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.228802129 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.222223044 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.845156624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.844102132 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.84303492 seconds)
  done (took 182.611231097 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.914723775 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919686049 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.913207697 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.850360727 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.895385638 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.917625689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.850702008 seconds)
  done (took 15.036639138 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.851989646 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.845791593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.895966709 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.896296789 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.845227545 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.997570482 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846003348 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.857557171 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.84355253 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.900141538 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.847340499 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846491288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.852947325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.846514874 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.895378202 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.858986007 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.961851471 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.848432389 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.846839279 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.003052979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844336198 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.853853562 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.901830696 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.859012741 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.848505397 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.853916579 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.43859906 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.84705394 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.844089529 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.846367204 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843939218 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.890526762 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.846295152 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.847342611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843621039 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.965305395 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.848007831 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.843742753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.847145199 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.841644543 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846574048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.84767996 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.847796168 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.845080192 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.847184162 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.872554702 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.847504155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.847546482 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.847036183 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848520236 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.898455125 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.848129273 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.846024041 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.844622399 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.905428536 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855740044 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.848340286 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.844471207 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.84756789 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84556909 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.00705506 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897584703 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.84825594 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897964359 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848934724 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850051325 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.848849589 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.847588306 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903343518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.848212621 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.898416414 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.847812789 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.011195744 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.874184412 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.848603452 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.852308361 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.853166452 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849367479 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.84846814 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.857398173 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.846991743 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.850885723 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.856572954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.84780542 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.284812615 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.965187555 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.960343858 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.846826091 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.862933852 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.859747103 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.847014088 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.905571878 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.849902589 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.847173237 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.90424939 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.966341393 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.907649258 seconds)
  done (took 204.15257233 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.854869764 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.858480514 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.853225652 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.866888554 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.851032985 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.850557847 seconds)
  done (took 12.916305587 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.853667133 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.851371726 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.850195266 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.849995458 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.85058505 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.852042292 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.854455077 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853854853 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.855087488 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.850590084 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.852933235 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.854141168 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.852964811 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.851863611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.851762401 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.850034046 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.853746042 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.848522779 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.85082892 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.851865653 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.003977709 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.853384811 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852775869 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.853867522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.856878555 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.851758318 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.860501686 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.851390982 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.851657417 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.863104654 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.855757989 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.852930342 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.854187549 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.858507485 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.857617131 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.854132023 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.855493294 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.854576252 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.85017253 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.853905856 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853790222 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.852535244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.851500157 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.854521512 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.855420082 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.859062561 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.858154252 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861219347 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.854041075 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.854050957 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.854691013 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.852916303 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.854437861 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856078874 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.858683735 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859555069 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.85888369 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.854226415 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.85400959 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856368322 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.854968625 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.85570143 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.856540027 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859511205 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.851340512 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85641959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.856863438 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858752545 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854790339 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.85402649 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.857054354 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.851157003 seconds)
  done (took 136.451244654 seconds)
done (took 552.959723207 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.087518367 seconds)
  done (took 8.871697271 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.943314674 seconds)
  done (took 8.80360282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.56465231 seconds)
  done (took 10.349333799 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.85480651 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.877602991 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.862977027 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.850518743 seconds)
  done (took 29.241651172 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.095517817 seconds)
  done (took 8.88046232 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.862168933 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.846963212 seconds)
  done (took 15.556415245 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.917900479 seconds)
  done (took 8.70254633 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.953970322 seconds)
  done (took 8.741728347 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.873641865 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.846225269 seconds)
  done (took 15.516615791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.836044601 seconds)
  done (took 8.620372158 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.525763645 seconds)
  done (took 11.319524763 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.860798202 seconds)
  done (took 8.659392495 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.923631889 seconds)
  done (took 8.708309253 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.066645252 seconds)
  done (took 9.850891628 seconds)
done (took 163.608314192 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.852140029 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.850505193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.850498509 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.852246319 seconds)
  done (took 29.190501487 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.88930009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.888958038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.890018281 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.898865247 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892095084 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.888685477 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.880939392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.881586664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.900067774 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.892104622 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.891308318 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.890699406 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.888221477 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.881441549 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.891095344 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.891293099 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.901054798 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.889999251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.882092544 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.892202216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.855667316 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.901162027 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.892835032 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856984584 seconds)
  done (took 47.095098116 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.054129587 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.929601702 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.011098597 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.908957432 seconds)
  done (took 9.689894713 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.907716705 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.910219086 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.920663787 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.959512361 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.985852659 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.918550469 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.878996937 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.877899077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.864941476 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909859848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.984985817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.92662756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.005621054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.856441289 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.058633669 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.856984299 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.856481698 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.90833299 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.960753743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.974940897 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.856688315 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.907856908 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.915113108 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.926312709 seconds)
  done (took 47.917402043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.853861401 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.863882033 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.862313139 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.85680777 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.856405814 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.857619549 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.862906192 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.85696075 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.877816415 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.85773702 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.85631496 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.856829577 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.856633459 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.857686756 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.856665675 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.870466807 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.870606224 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857745127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.860667389 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.863777761 seconds)
  done (took 39.001308519 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.852491495 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.739575234 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.204708537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.108963847 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.852198315 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.855335806 seconds)
  done (took 31.40186343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.872022568 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.923381427 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.868115169 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.915707369 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.001507279 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.869761785 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.859520826 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.927793587 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.972587339 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.936682498 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.881758455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.888310441 seconds)
  done (took 24.706607172 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.855825908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.855550303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.860370545 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.872552755 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.871443834 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.868236197 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867218234 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.852991283 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.873870008 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.879199926 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.868044281 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.872020452 seconds)
  done (took 44.189978307 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941871888 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.897256522 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.85259944 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537718385 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234967198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066249793 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506802322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185142352 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.859030897 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128151409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822531516 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960475313 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.111979648 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39766826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.893907723 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.308296226 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144712827 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057629153 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878995016 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484373252 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914589154 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088341179 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.615506546 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908647845 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066774403 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.983716798 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.116648169 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855987851 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985845859 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888533268 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867110427 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856485592 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130256745 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22237278 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960686243 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866543574 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.472976206 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.581078471 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.901049872 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.524198384 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.502514858 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.970481694 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867469897 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856828021 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79092324 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061377012 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242720409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.862570649 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.568060083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.857125644 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868253871 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951921208 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.860610213 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.675811776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771522452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.860952982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.854311974 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864138448 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429356923 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921121705 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.131693459 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.839903703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.951234685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.487557732 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231636826 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.999170486 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.860068712 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860209916 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791778019 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.566242153 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910853893 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188116097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.877966905 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.507717771 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151325068 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.836283328 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800759055 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119712026 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446894055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.837226052 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085582118 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857587496 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.792024749 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.79701957 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788412824 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117073165 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887916185 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.628783411 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893182545 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178987413 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862200637 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866826843 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873195378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073753243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.734851692 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847214629 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.547022141 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010775119 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881462944 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195678296 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791272045 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.861891112 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11368367 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.069887152 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990719685 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356892863 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007811799 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.467861776 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.912731822 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.053115634 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.909436427 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.117547186 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909935455 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927733429 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911255872 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.859624871 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148620434 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.506676525 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.002708798 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.817655735 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988484046 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180450106 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887830085 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942538426 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869862795 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86093207 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608513188 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411165342 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.860815663 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.863263393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.985642815 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913031023 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.861001334 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806868887 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.479915583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.806760419 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.875347315 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082081057 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472398551 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172978507 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790693928 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189209863 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946911492 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.077696279 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494637877 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.922088252 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115523443 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978183017 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019811732 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906623407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8744298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953150568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877894236 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.05107218 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.153278034 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.859756524 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.858921919 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597019385 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897532723 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870409888 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.868200463 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615085724 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133287988 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885122483 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.868983217 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75188574 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.876202193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926125961 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866634074 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.871668143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.397244197 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.594835691 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.869021297 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.445315843 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082995398 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870546394 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.515575021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980192618 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.944979752 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131769471 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920169726 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.7970695 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.572812263 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.554549356 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860773005 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.797239598 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.860608794 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868643617 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867969909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.054906251 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125252083 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901851532 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.516606016 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.902813453 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869702611 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.863905867 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85903676 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.367093376 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957993827 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.092346026 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.906959835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999774615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.868561009 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791339602 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856858534 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858987087 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.854699559 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852830061 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884406098 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.517781086 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223597279 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110840385 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.46366381 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863325909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.546172981 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.907060322 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.848041611 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609233395 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.060279697 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.882191875 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868600992 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.859099376 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.60283923 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.558738043 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417579873 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167525743 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155942083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275422313 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.102907894 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.878258579 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177494188 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778739362 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398797851 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.901955959 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186220968 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783524676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922858978 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.482113699 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182342684 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850635168 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064643253 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220032888 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.536708182 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97815055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046080798 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86986395 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.040275236 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.800018161 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.11984991 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972281572 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.517280302 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035523409 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160719197 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.469130012 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95535494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.831207279 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505023049 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917259207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.542013216 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.003384028 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.081281848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.802610741 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298836111 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.836740824 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.057411218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175371916 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.05445971 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.959103262 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767284266 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.840883843 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.841973437 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.832616265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.831670627 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.711739626 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.084126063 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842093295 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765745534 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.00409397 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1223958 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.733267513 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.836910602 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832447805 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132526326 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421078013 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008547981 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.981069941 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.358659556 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840321118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766357747 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766626673 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.524470875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.839762137 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.807007515 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039648869 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.939957767 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747652845 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956304942 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08781559 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090200738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.846962204 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104183452 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109185284 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.530593026 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858690378 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.933805726 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.475983997 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.94218935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833534791 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.069176806 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.587214097 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061298886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.849742764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.789249377 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.833989454 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047595819 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834583605 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.760526889 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068063942 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.557736127 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.891017068 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149371973 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91306589 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.704120144 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.885951621 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933031771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851159612 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918430386 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849861067 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.849158866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851078544 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883553009 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.704238378 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963245648 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.853377615 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933663663 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962907029 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.364751512 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845922939 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112674513 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206111059 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163065849 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898784152 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.83957015 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848484192 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775870259 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988878517 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066770033 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112678509 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.967921238 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.952828571 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86099297 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.48552602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.088669309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081089633 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10885451 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.728734069 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392929679 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877192476 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.830951919 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.842295971 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.044234727 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039887728 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143635193 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.985695624 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.960266076 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.20249867 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104423592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.831062805 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830825074 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424970923 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.906295074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.517819696 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.881957625 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736240183 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113041183 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846165077 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217829119 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859006706 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.995360702 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.607136783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540713831 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125166522 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.82308862 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.899910779 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111775239 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.217852533 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150826062 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903202309 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846305726 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.950784876 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981869075 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.722571148 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.837148899 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.837640038 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885554287 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.546376639 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848558347 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108963289 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150767741 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.833269587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.741083057 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858768663 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.845268464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06041841 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096704645 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091794802 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845427462 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841940049 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.651156135 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105725547 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896111311 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770325873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.838817593 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935520066 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083321757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855876776 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.28866533 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.54758857 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107093112 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.838839395 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856376898 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043071615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198291094 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156291021 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.373524358 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044550401 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.426145457 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.463201748 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14300791 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.840775945 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.037803305 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145411864 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.839810778 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.970124781 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881436781 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.106348972 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15340597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.957076206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538284893 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.809839826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.181396132 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405365137 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778104548 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85077271 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.902610233 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841371573 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.969182027 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852131736 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.746671089 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.054994319 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.624407371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.112540213 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.84533364 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.831603236 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.55165126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.175656948 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880960449 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996953899 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842410343 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.515936736 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.191721487 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096605319 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976800472 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.854100621 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.845356997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842120402 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82904918 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.039189816 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.040178215 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120732805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.002392497 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.883357508 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845969068 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.057872356 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05287487 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.702829205 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980802336 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970714649 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.890222282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.747550242 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.34419159 seconds)
  done (took 1663.483501376 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.879427493 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.883120767 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.861590857 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.892686423 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87796873 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927204652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.854282391 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870696467 seconds)
  done (took 56.82220554 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.842097009 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.061044125 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.851069711 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.841277235 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.849278736 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.842923374 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.010363145 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.851721585 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.849604236 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.849814214 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.845626386 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.842174884 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.151721228 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.870022801 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.856083964 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.827140661 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.849479631 seconds)
  done (took 73.868861009 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.841625284 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.056703587 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.870565442 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.861044924 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.847966731 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.859135436 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.632583958 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.864592738 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.843952571 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.987255906 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.472928622 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.84875991 seconds)
  done (took 86.761412587 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.849912152 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.849495865 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.849142748 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.849205183 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.849694755 seconds)
  done (took 11.024183284 seconds)
done (took 2166.965859015 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.113431095 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.058557234 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.078162595 seconds)
  done (took 5.908852987 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.990110828 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.036688123 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.157403583 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.179302615 seconds)
  done (took 10.139904142 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.130290119 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.228018029 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.044947456 seconds)
  done (took 8.176951815 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.247204191 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.849860771 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.955298512 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.839266646 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.841784233 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.840200422 seconds)
  done (took 22.296486317 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.84259588 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.846036771 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.844260377 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.846367929 seconds)
  done (took 9.152258458 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.825711815 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.608295935 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.826521188 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.838664546 seconds)
  done (took 20.873451072 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.591989842 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.602902073 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.58683873 seconds)
  done (took 9.556191566 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.4332652 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.761828862 seconds)
  done (took 8.969862361 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.105495538 seconds)
  done (took 3.88007927 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.975183162 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.108866741 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.304637606 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.347102623 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.403887347 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.737093944 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.164427322 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.097946786 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.23928236 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.287882918 seconds)
  done (took 24.440860761 seconds)
done (took 138.335404136 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.221406985 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.084468757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.046054404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.178875023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.067172591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.04533987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.063690505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.16490348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.688736821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.684573106 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.177195355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.067350716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.000535537 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.088838067 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.000495131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.842812857 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.065093299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.227641606 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.875416758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.070406129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.061832959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.813926271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.022349084 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.827969423 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.068494423 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.99673191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.392964206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.84445061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.027039256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.403861694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.998649427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.226626888 seconds)
  done (took 169.122516928 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.601134362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843488111 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.845185965 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.844918595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.182113261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.844603879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.844810571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.844219578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.08942763 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.075519049 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844973768 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.162667545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.845298968 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.845079891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846328386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844542117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.21845616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.661570922 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.854899292 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.859757042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.860924487 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.117520036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.863527061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.166193701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.254086153 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865648073 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846262239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.865117306 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.850276958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.860287321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.862945869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.84503272 seconds)
  done (took 207.03760543 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.84643026 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.847509898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.850843394 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.845948544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.855650516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.850601954 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.847406603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846967221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.402782014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411979982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872839519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.853739541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.850988241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.847856126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.854449862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.847471796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.849244164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.851826492 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850895629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.854697573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.85864287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.61945307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.872025759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.618007462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.84921238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.852661686 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847095372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853733353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.855420941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.856916623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.85987309 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.8484831 seconds)
  done (took 219.733375044 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.049865346 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.853081972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.853501739 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.81012072 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.853581227 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.852701996 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.848076655 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.049514994 seconds)
  done (took 18.964963081 seconds)
done (took 616.650503683 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.265325638 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.117470133 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.03055889 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.877431658 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.114842175 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.913032106 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.874230635 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.936014728 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.593475219 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.94275014 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.565489594 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.897834765 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.659148997 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.899828264 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.005422127 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.929370918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.415847074 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.508849355 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.056954308 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.938090691 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.045001091 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844078564 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.94887139 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640684881 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.683089749 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.889788625 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.06296817 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.425330021 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.887095319 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.041156955 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.603258023 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.263389178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.887887766 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.872824421 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.92513166 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.907216328 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.228632089 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.885873604 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.998214785 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.64667011 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.931096601 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.481733367 seconds)
  done (took 102.423340163 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.846586722 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.843046744 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.842893185 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.845151044 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.844109614 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.844154857 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.84298848 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.84404065 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.84462727 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.844184443 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.843897953 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.845748772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.842960068 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.845297204 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.843947717 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.844462088 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.845555073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.846873301 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.844907399 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.844439885 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.845527042 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.844800566 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.845118812 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.845111316 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.845509009 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.844974996 seconds)
  done (took 49.753950991 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.856885839 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.000987444 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081837223 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.877459733 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.857906713 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.862387652 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.878335308 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.862851551 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.862685848 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.862328187 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.951648114 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.864103971 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.876679187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.082596508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.875149466 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.858592208 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.85928465 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.859361822 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.009580674 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.875313385 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.879617613 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.861938204 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.878538962 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.872718292 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.860985294 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859955607 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.863479605 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.296803883 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868037765 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.951365778 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.902504808 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.883306901 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.25313986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.091588278 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.912656024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867921342 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.859058628 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.955637421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.865971393 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.861503069 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.878052264 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.864999551 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.082604271 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357790848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.873593213 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.859890524 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.30542516 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.96362532 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.901809285 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.873264512 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087580555 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.877663019 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.862038319 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.860291346 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.897904415 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.874993574 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.862535511 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.170288048 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.875297603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.878435814 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.866072967 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.862089527 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015796867 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.869817641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.006489158 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.870528058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.869953141 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.862748452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.084826672 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877682407 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.361626838 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.874119943 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.861555391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.953824739 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.018606375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.332872563 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.875101472 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020166339 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.267954313 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.88600286 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.86966579 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.288929578 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890086154 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.869627731 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.863058487 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.863523731 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.861346777 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.905439004 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.878008996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.297941635 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.36673741 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.18252075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.891042103 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.878759008 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.863099418 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.171542968 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.869578808 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.862448799 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.080552295 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.37595891 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.876363304 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.870397251 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.347099931 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.879104352 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.883196242 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.87170225 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.088936894 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878563728 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.906666352 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.863617656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.868758854 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.865920644 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.883199763 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.870467674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.862784127 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337858537 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.973672466 seconds)
  done (took 230.657587129 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.859502584 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.868208084 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.858102676 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.859118528 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.857406185 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.864290336 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.857890465 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.85905625 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.864168153 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.85761255 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.857775904 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.858504384 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.859068766 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.863792984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.892309339 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.866201654 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.470792218 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.85933193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858739696 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.859291111 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.509098098 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.867690096 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.858446449 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.86483896 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.860873206 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.859109558 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.860341671 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.879731249 seconds)
  done (took 167.20543664 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.865017227 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979998847 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.88294252 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.892990301 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.874060473 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.862550136 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.890342356 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.880418076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.871416603 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.863126319 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.862558299 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.926616161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.876389668 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963117197 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.896437825 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.896248292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.971356454 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.871450932 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.863493416 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.863369462 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.893944812 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.860656758 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.926681962 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.992906694 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.882988276 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983152714 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.871828822 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.866165844 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.866407571 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.984306963 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.881135244 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.925433881 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.897365423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.884027655 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.98642324 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983805005 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971718999 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.896047825 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.8728963 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.864308978 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.864327872 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.855081801 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.983559714 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.885831593 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.866970157 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974129344 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.884342379 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.867600189 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.875214821 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.864572633 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.881069039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.88587866 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.933621835 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.000480824 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.900179974 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.891549183 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.892771123 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.149108478 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.875185379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.967457643 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.861411465 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.983640371 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.887597515 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.856386395 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.867168101 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.872208958 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.894340649 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.897546739 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.975133708 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.877156349 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.968635688 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.902288876 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.874499716 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.865871807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.869955685 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.985295383 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.987414654 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.901921298 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.90508186 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.899112866 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.862805892 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.869293328 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.857647743 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.885684684 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.872015041 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.985166906 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.988591578 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.875537838 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.86866127 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.869588533 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.868951132 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.894399021 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.992407544 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.905825212 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.966704758 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.937566175 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.9431288 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.882698322 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.880395117 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871669512 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.932472728 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.884034868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.879024706 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.195618926 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.938889236 seconds)
  done (took 202.28272556 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.963131111 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.344137196 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.923748023 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.925439953 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.166265258 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.29121735 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.641237671 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.917248173 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.917893871 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.944393199 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.089614058 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.978343549 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.93036633 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.906594457 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.331743797 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.907842136 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.915615166 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.938551814 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.919438209 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.506664678 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.2222314 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.036998017 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.918100575 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.06109017 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.901599624 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.204120103 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.238890003 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.303168842 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.952423266 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.265707566 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.26127091 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.612067844 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.123815635 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.166327954 seconds)
  done (took 74.529172866 seconds)
done (took 828.633063538 seconds)
SAVING RESULT...
DONE!
