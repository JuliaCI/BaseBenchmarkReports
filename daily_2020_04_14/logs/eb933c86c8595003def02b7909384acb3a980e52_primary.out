cset: moving following pidspec: 11697
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343491078 seconds)
loading group "string"... done (took 0.574652735 seconds)
loading group "linalg"... done (took 7.470448428 seconds)
loading group "parallel"... done (took 0.15364601 seconds)
loading group "find"... done (took 1.206833452 seconds)
loading group "tuple"... done (took 1.847677955 seconds)
loading group "dates"... done (took 1.240750379 seconds)
loading group "micro"... done (took 0.21642886 seconds)
loading group "io"... done (took 0.913254074 seconds)
loading group "scalar"... done (took 37.019619479 seconds)
loading group "sparse"... done (took 11.482463343 seconds)
loading group "broadcast"... done (took 0.91992875 seconds)
loading group "union"... done (took 12.276540496 seconds)
loading group "simd"... done (took 4.539212358 seconds)
loading group "random"... done (took 8.630062575 seconds)
loading group "problem"... done (took 1.779193241 seconds)
loading group "array"... done (took 19.950253058 seconds)
loading group "misc"... done (took 1.76097145 seconds)
loading group "sort"... done (took 3.122981996 seconds)
loading group "collection"... done (took 17.002978967 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529351183 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128388598 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137049702 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.1239944 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152360681 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123180808 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12961811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090038726 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849784229 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156508975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11842179 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410074808 seconds)
done (took 5.330363113 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176157968 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086688964 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090272431 seconds)
  done (took 1.239005476 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070724101 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13076827 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072186302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072939041 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072819835 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072331251 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072070458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072092778 seconds)
  done (took 1.627460109 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078625646 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073876037 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070973515 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074060199 seconds)
  done (took 1.361053426 seconds)
done (took 5.542126694 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.77010417 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211594648 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189395656 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394771807 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132528762 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177742593 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651716033 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311937548 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190328347 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08000236 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11200316 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.345957567 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124834858 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.64685474 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080760767 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094860297 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141971259 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451370655 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072436985 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087495157 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093801577 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134093848 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.091091647 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07876564 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15305263 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072879263 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138649786 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08521147 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07110636 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.216749031 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177523156 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67297591 seconds)
  done (took 10.349442109 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103252986 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103094958 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074977966 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130663659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10401421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074874603 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080974432 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073099839 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096856467 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133180567 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096151577 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110039299 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071433231 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074150908 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088023262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213283583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086201846 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086306847 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075394892 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083046311 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112428671 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082878477 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085393165 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084739504 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133574122 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185426561 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101155631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103156418 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07091833 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086585989 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119996228 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1338963 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073721038 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071034205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129956466 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099689072 seconds)
  done (took 4.73537205 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.97946843 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145740844 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09300332 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136982574 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070605003 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112138236 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074290269 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08612887 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.444376438 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.212098087 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577952007 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.134067879 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115033173 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107460959 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073515405 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072756999 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07181062 seconds)
    (17/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070253078 seconds)
    (18/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073081688 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110344761 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070114027 seconds)
    (21/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.486473484 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078054642 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081725789 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073200641 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096130014 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074038884 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069546971 seconds)
    (28/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101596617 seconds)
    (29/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084806991 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361083529 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125033467 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062730744 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073015986 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.939482649 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169366594 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.209847512 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107118707 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169251026 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096168424 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070335438 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143154308 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073593826 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071091205 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162642794 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069664264 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075229263 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071240056 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069986171 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089367318 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108660656 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124432919 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071109654 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071351048 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.174474063 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070231766 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084435737 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.135822232 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157373456 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071051182 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291847947 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095239381 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07561066 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070898679 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.165715274 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123214887 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072939856 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072350046 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073616777 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377534469 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07402992 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070702077 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963604065 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075249986 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08285923 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075031652 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074904207 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078157192 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077223834 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093131555 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073574686 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077778493 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071085909 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071741167 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071206642 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087034912 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.476578766 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072746704 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073862359 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071075292 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095622912 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10089309 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105347509 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071167335 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071908658 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072779357 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071920065 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071739752 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08703578 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074838017 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071476215 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117340763 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095480705 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102487996 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073669583 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103815761 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083116559 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073048317 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.412652527 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070782704 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072773621 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.071302844 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072885719 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071660921 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084946648 seconds)
  done (took 22.125591118 seconds)
done (took 39.248347158 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243633117 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074705991 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074485299 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074324159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07456919 seconds)
  done (took 1.688218581 seconds)
done (took 2.819681479 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124078776 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103251665 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071369394 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10325974 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070958143 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104123758 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107155988 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081343746 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102653313 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069926598 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100403981 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069630483 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069357163 seconds)
  done (took 2.32305637 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088561179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088534857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075065272 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087715636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069443186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087112105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087257195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093512384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086058009 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078379195 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069097335 seconds)
  done (took 2.038010425 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08768036 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088113321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075259774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086635285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071322297 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08689784 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086279602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090125586 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086945961 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078987902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068729492 seconds)
  done (took 2.033036515 seconds)
done (took 7.511171431 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081569681 seconds)
  done (took 1.198999298 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.525958838 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.623061133 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084055224 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108865402 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191026606 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114663849 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244355809 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086742058 seconds)
  done (took 8.251182979 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092743865 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086497773 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075617956 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074797949 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.0767982 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076587953 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076003365 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075165361 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074688435 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073470393 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073346657 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075781228 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077421973 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073470856 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075260622 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07387 seconds)
  done (took 2.422706232 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096035437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094884466 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078542994 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078942197 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076789162 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076502511 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078450368 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078064789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075390233 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076724802 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079409821 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077296713 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076176043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068377966 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078449921 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080346594 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07556914 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07835082 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079352768 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080193808 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079257874 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068391874 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076062768 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078475187 seconds)
  done (took 3.099434701 seconds)
done (took 16.093299835 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110510588 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072359186 seconds)
  done (took 1.30555248 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083884034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08405314 seconds)
  done (took 1.30191831 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.0840652 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069396873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090324143 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08024227 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069706753 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069381645 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088860613 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069963741 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069995175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06993391 seconds)
  done (took 1.896851582 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072180895 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07956893 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073106966 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083348248 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076966048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067958477 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074806515 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071452688 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079580354 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06748937 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075116763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087041943 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074308598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088543254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074713687 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072099959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074877363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071587869 seconds)
  done (took 2.499052085 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06922941 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070132798 seconds)
  done (took 1.278374118 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070482928 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067245491 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070243357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070086187 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067131639 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066666949 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067450487 seconds)
  done (took 1.615332661 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385286873 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119462956 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303474515 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076761283 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085739686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257337856 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071608838 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076193205 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076323362 seconds)
  done (took 2.62421797 seconds)
done (took 13.653466545 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085068921 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092305555 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099987339 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379687643 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096533768 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072032207 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11881998 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180942928 seconds)
done (took 2.269379809 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211771533 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.657251859 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402384051 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206513331 seconds)
  done (took 2.408520686 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343260802 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092159711 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065361931 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072192556 seconds)
  done (took 1.72160313 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071631444 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075111707 seconds)
  done (took 1.294278284 seconds)
done (took 6.778690757 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071782632 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.185224044 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069664099 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071583322 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.068982406 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068709567 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071216131 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071010158 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090312455 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.071048571 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.0716411 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070985494 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068912646 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06889637 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071106918 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068697478 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068776682 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068908855 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071200749 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069210073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070889224 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068788827 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068376935 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068889935 seconds)
  done (took 2.988520953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087117228 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071050331 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074869078 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075133691 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073170206 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074767748 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074889254 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071046753 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074742921 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073119941 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072582549 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072578631 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072836622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072959552 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072538132 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072687115 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075251583 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070909485 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072828141 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072951438 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074729369 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070762891 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073149707 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075020265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072719469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072854002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073139404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070664176 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075098093 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072926862 seconds)
  done (took 3.363223958 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074238343 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067817479 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068091462 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075705402 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067951322 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068407808 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067383963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068075613 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068207786 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06754474 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068824803 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067378538 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067956699 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068831492 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068446766 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072674275 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084142498 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068093041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067370462 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068392613 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074175594 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06801851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067753647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067836797 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067630337 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067546451 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068141057 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06757184 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068579308 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068382393 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071254216 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071978683 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067797404 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075730995 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072051458 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068017657 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072493458 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067538852 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068488592 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067392338 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067873367 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06804052 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06766355 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075894036 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068323396 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069085901 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067646882 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06913815 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068189157 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069938078 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067476067 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067797476 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069696572 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069411688 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072240807 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067749096 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068567241 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06751605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068843024 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068077519 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067766039 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067679634 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071301456 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068838309 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08432861 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075945443 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067894037 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06929052 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068848701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071156146 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069631427 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083208508 seconds)
  done (took 6.18483432 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091456576 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09058907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070354883 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070633079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066007824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068245028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073917677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068600496 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070518577 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087391385 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06884779 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0701531 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070773069 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07279028 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068616114 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070727884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077073989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06608209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068321144 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072114889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068485367 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073595337 seconds)
  done (took 2.774941646 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151236801 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074493058 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108974208 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078792834 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074453123 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078911096 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074806169 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074260909 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074269569 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072525178 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072834662 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074581324 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074722034 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072310241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072302109 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072229026 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074868689 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072656137 seconds)
  done (took 2.610242757 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08137169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070988521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091618759 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070885976 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070969523 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072946417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074768868 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078156003 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073607369 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070810349 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078628456 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073256606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073733268 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070844951 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073476618 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070821072 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073012947 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07091742 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078035632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074753014 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074734614 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077851885 seconds)
  done (took 2.808494211 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084728722 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072489643 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085591546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072581656 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066149326 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068710714 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07424443 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070687873 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074342616 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072275875 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071003133 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068160256 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072564291 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070667153 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073030444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0703782 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072589024 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070471114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072909408 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065715272 seconds)
  done (took 2.613450009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088858107 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072744821 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072135029 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078210361 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072318367 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071596243 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078082793 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07211798 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072109384 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092523815 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071751405 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072496336 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078523954 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078830981 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072210948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078746477 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078243512 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078468796 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072465002 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072149818 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092920246 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072529738 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078502686 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071817459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072020292 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071798688 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072087968 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076151267 seconds)
  done (took 3.297737869 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071654928 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071187357 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069045867 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06870521 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068797554 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068967646 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068629066 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068523899 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071165639 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06894534 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071610459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071386447 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070862015 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071298377 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071234834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071021279 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07124298 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069098902 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068961889 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069093206 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071229693 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071098752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071164941 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069058678 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068615974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070894106 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068953291 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06888099 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071519623 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068680981 seconds)
  done (took 3.270822057 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07957016 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076961052 seconds)
  done (took 1.326578358 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067153385 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085799774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06764748 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076633491 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073524661 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071321355 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077397554 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073515607 seconds)
  done (took 1.759242242 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086347393 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079276572 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070643744 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079982615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079124956 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087375295 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126797152 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070493921 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077512991 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069625294 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083588583 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070469198 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077485973 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071988903 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077410512 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078285487 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068040118 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074772403 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07187133 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069057881 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071551238 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079868099 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074704186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065989492 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072745398 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093806292 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081926298 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070201978 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07427206 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07845155 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077525532 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065033757 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070283668 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070332214 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068316175 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079206158 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084618612 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074135168 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080008562 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070880165 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078454923 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065669947 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075201328 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078325916 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081747358 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07040479 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070997616 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065656138 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.069663838 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073810827 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065854781 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072142698 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065382916 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078346871 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074798962 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081656537 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069600463 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072853705 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0744352 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074175215 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077894609 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073297646 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07450143 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069992374 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081651266 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077007784 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07874298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065810456 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065326129 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06874219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080548351 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094417217 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076668389 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070581178 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071157723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068620114 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074678011 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071605735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075992599 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077492839 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069748186 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074732119 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078268566 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07157548 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073403354 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075758348 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068386527 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072473485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069646711 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086003696 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072208189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068341342 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069150433 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081190513 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074179029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068530391 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068379629 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077766749 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063841984 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069089044 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069775061 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071043652 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.0788075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072690072 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073102102 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078415439 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076264779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07043449 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072243781 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066450073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195596921 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073000326 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081648581 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065876009 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075966857 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073336505 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071243501 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07944522 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069478519 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070536885 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080109164 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.078084673 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069009324 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068264875 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075207775 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070070315 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072859634 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078903422 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069117219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065712997 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065988956 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074690694 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070454559 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074672374 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074231832 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074873503 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066024254 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069480287 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075289194 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078947222 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071960281 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072679045 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077229047 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072406021 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.0695248 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077919886 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073455722 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070845098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076855071 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072494121 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065851694 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072145757 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073881411 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069554138 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0756299 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073314105 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073278764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070051408 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069100863 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075910673 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070881573 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070901275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071682308 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069505973 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081549197 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073772267 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065928381 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068285859 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077257327 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070113936 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069933999 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071536215 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073683239 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070849449 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06878007 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070261941 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073621738 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078512681 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073400062 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071123794 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07671332 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083659484 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070200307 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074110694 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069938739 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071081853 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071169051 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080675769 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077324204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074621663 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074186918 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068165448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075987493 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078966881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07050862 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068378215 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070493404 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073245545 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076563951 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073717269 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070566415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06898508 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07201783 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072246161 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073893919 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069723995 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071637901 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074800673 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068168946 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074238992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06973439 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08085899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07323823 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064860486 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071366295 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067829156 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076696028 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064721905 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069023829 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070372422 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069847477 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068465088 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072503974 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064308552 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20657197 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081562461 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073920704 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072408056 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071611009 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079630938 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074282771 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075294123 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076871351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077770507 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081634093 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071434345 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078664397 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081298092 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070972464 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065284609 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077137575 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.070145757 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069230677 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069682428 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069091999 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074973072 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077760508 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077428804 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065674653 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073778276 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068809037 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071230902 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066384925 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0758924 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074643188 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073717121 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078478478 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071415338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070438613 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074726354 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06985685 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070587478 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07098154 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074354885 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070341479 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072939134 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071016116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073770339 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07108226 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068293033 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073025919 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070295679 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072329608 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076650932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069936956 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071975728 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073977684 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070817864 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072507351 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071983563 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07144606 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074475103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0725999 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072059246 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073693944 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065803318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079049308 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06980095 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078957383 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071907639 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067720021 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075920325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074013556 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075217641 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070902879 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071191307 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073004081 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070068891 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074210452 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079181956 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069958643 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081941948 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077749219 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072848054 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074436523 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072264568 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073465661 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071423308 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072332531 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070683039 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0720137 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069956818 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075297197 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073512681 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07143895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072654328 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070782512 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071792892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071172272 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06530412 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070988234 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070847887 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070421059 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079797881 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070073275 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070805282 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068608278 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070208605 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068841484 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066815323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075562789 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075558913 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069225117 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076514606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070591922 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072089096 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080258599 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064160534 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067725752 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198789615 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07142141 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08028376 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072261634 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082269111 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073032758 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072245883 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068516568 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071970971 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069930817 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066001988 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069479699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075542036 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.071308704 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069729793 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07084796 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074259277 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071182919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079313125 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07000824 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073215336 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070805339 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068976685 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071477363 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071420347 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074252846 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071204192 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06967536 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068189447 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069917777 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072511693 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073128409 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069619345 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072678666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078971124 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071331277 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074547299 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072298752 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065541625 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074751173 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070052119 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070290096 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071157937 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077534245 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074521398 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070773174 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080490185 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069694826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073110388 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071141996 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068530988 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069815135 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070156336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070851772 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071061893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071408111 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079205687 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068829343 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07479017 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072198127 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072548331 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077347835 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071313679 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074563708 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076085015 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072448184 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07357197 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07986278 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074058622 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075022875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070913478 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073435839 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077404986 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070808832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078086367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072298805 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07096957 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073310961 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070278993 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070408654 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070320483 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070172746 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077240259 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070995012 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071163099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071357278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069077302 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072527339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072376813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078860201 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073291039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074469078 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065979316 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067507509 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071040688 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070080757 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073255979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073343938 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077040785 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073176656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071974025 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069404214 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080551975 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076817839 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074715153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069264929 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07391604 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069906341 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072685203 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.07154292 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071052547 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069976062 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073693 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071697126 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069662808 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076705237 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073701406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200554613 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07529446 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074553045 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073319441 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068123214 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071807208 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074733676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077674897 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074804271 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071270427 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081865913 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069546219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072339495 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07278762 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070067266 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076505236 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066728263 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073718296 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071437139 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071044237 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066362836 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071578067 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069942639 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073898428 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070886999 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066555575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082435442 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080661226 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074541992 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069499978 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069164596 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065978313 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066295422 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071112861 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071183908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073656105 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081525895 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071067349 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070849577 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066344996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070281843 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074202654 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074580092 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06813723 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066242594 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071503881 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074209303 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0768563 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069338674 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069841679 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074316085 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073796132 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069022119 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072953121 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06783338 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074954604 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083279231 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070787584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072664684 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077200028 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079151402 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071057441 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066271307 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07096354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074276147 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072303243 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071075757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071238072 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086011111 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074415354 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071441878 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069612857 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076754134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071163946 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079505571 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071117715 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070799284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07594288 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073272009 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077517164 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075250048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077933109 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074525914 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074517273 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070013662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072319866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068519376 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070655523 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071395686 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070575319 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074475111 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076046919 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07090786 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081038952 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079825891 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072835356 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067612356 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070713783 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070812263 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065850397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07096989 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068619896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06848617 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069087507 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0691499 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072002298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074801453 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072140872 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069751608 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069248183 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064475017 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073670453 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072604208 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071516405 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06713725 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068949296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.200468518 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077205458 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074962107 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071194694 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074244795 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074522659 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073524561 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066713755 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078646068 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07078435 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073795075 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070988397 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0707358 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071701789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074805746 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074676987 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07216308 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074147633 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075263229 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071994941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0685053 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067712653 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076574395 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068898878 seconds)
  done (took 45.293923693 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103362847 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067142499 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066283667 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066559808 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076162239 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067044123 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065999063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06723666 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067307946 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069454089 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066683287 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066423798 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073406617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080562637 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07608756 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070247881 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066535204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067391108 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066067068 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067263049 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073681828 seconds)
  done (took 2.743731918 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076293473 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081562989 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078578597 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086486625 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074520251 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07415723 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078307591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074099454 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081719519 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076192761 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081865776 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073728374 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07654577 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076656058 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07634666 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073862374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081776737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075388904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073597982 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079202916 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07440729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078957329 seconds)
  done (took 2.948941482 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070841093 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069563333 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073164806 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065883584 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070482002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066198398 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072272824 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068512744 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072959 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070222588 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07038806 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.079422352 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0729928 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065774377 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071408347 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06799309 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111134709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072705645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070089338 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070950316 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065764159 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072867165 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065714858 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066232952 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070506663 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073133408 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070974834 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068597283 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070134235 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070049489 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070171298 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068131703 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072916325 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071504453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069982762 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070299535 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072660884 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070210597 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065691878 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068738884 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072050368 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066248999 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07110338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072471393 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068901817 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068678278 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072872509 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069992447 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06583141 seconds)
  done (took 4.72336846 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080468715 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1119938 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072255623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092147719 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082879576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076460219 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074110434 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092670687 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06795344 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068088182 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084148948 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081792445 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069581846 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073507404 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076696856 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069139083 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070685835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068628391 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072551202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069220874 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072675451 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076585216 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083236786 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080886403 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072979147 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068577514 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069040953 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073571876 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080755594 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073361774 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073973665 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074607366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083656544 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072479359 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069197715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071817159 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084606051 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070344772 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072539024 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068091763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071713062 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073698095 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076733688 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084683437 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070004635 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07449872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069333536 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067186231 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080830067 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072198761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07633324 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082064462 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072993981 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069549166 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073564596 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.0834859 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069824813 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068241062 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073038515 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080467825 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067539413 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073474348 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082050847 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071750097 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076275926 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08185418 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.090099732 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072874889 seconds)
  done (took 6.522845411 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078450761 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.099624047 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085023506 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086257714 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079699054 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079384922 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079293257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080152371 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079395294 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083224443 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079140294 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118552021 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08416609 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081322916 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079715427 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079600699 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079600699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079748989 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079699238 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079456411 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079357598 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085686928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07957033 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085885163 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082256047 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075380946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079005954 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079326124 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085928326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079442516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082649317 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079485953 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079446545 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086141762 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082635905 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079481541 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069355348 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079103265 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079176935 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079462971 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076298823 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085241332 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078991371 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075398779 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079355095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079069779 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086104028 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082768573 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081556505 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083378611 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079503157 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085777491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079474465 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079454899 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086343607 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088250327 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085478905 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085638478 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079740452 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085773205 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085982694 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088401362 seconds)
  done (took 6.391411698 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08427869 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076134816 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088295341 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065826104 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068330442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076058575 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068619648 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068682112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076759273 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076588138 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078732777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075966426 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078403381 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078721285 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075911919 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078626697 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075912819 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076148962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077304603 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075947343 seconds)
  done (took 2.812318247 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079786253 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086768113 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071094309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075551539 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073962084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075306667 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073263983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073806235 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071462752 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073660751 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079894199 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079284731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071614933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076534743 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079204773 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075666516 seconds)
  done (took 2.49586362 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08625554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076058794 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081932281 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070354644 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071561206 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066504283 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069543415 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065667983 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066686876 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082310848 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070403675 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081244073 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069829938 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069127107 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066755821 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075713223 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066723285 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067805601 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069904315 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081288675 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073934739 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068463809 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074315548 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070003581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073077723 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074787719 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068993592 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071124892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067587871 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070769274 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073751374 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074007378 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067555329 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068788105 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069301682 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067526026 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070219259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070356089 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.0759624 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070541521 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068730576 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072498667 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070236611 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071188487 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066946534 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07068178 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066738878 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073519552 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067950287 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073182723 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07030858 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072373519 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070642674 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077345561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072986083 seconds)
  done (took 5.222346345 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084715991 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073652522 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065616404 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068362383 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073462449 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072105034 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07399487 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07144677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072105156 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06829657 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071972231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073707647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072420537 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074239009 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072455315 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0742226 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066332801 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071692469 seconds)
  done (took 2.594681776 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076822981 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071412423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07866357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071747034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070355262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072845249 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065833652 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068473753 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068940226 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070610762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071107367 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072741997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069372799 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073420958 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071002786 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070874295 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073515273 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06920785 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071585814 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066166556 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073139223 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068700056 seconds)
  done (took 2.852215229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097500114 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088089584 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142988713 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084350574 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091331044 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077103709 seconds)
  done (took 1.868246368 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096870512 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104961573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071884708 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073897822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080205493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074240919 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074957192 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074554092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081055031 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079424562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077145964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081971973 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081827471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081093088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079486634 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079529411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074653761 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07460574 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071319035 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086252384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074944378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082367799 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074902895 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074897676 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074757926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08081762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08190393 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079815398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074822686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081989591 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079904821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075520848 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082200118 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079361436 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074308649 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081733888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074971394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086241991 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079505718 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08102129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073905986 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079745644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081698175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07850309 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081783925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074710233 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078728872 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074769996 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074827679 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087638622 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079485277 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080775697 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079949172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08190233 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081388686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087843943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079263425 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080889833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079162536 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079370905 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080697166 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079591204 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081207605 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079181012 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07926062 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080883342 seconds)
  done (took 6.542897147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107724419 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071327642 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07535358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079629438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081243341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074491355 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074643381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074722191 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074627831 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071595342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111554852 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074962872 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080858038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081245814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075138238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074744257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074911515 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081096502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072003742 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087729973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074877885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080895353 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081022593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080619363 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079575661 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080138182 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074607194 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074371988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074806316 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07454832 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078554734 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074874674 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080734175 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071328867 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08098431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075170682 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07477658 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078574254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075013435 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07939111 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080999051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086192112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0752272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074542679 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079613825 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074708559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074809937 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072140608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075471802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071734247 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079211001 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079568617 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079350901 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080786049 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074719711 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074781127 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074374708 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074781724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074317353 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079678746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080928585 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074572125 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087500593 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074667075 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074780333 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080900945 seconds)
  done (took 6.464386943 seconds)
done (took 133.616845261 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197822557 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175237013 seconds)
  done (took 1.651793143 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073528077 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100663487 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080544909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133744564 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071538626 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105013434 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103757555 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081694947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071311574 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070955274 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071896943 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073277351 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135937821 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071133836 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070945369 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073597569 seconds)
  done (took 2.684743486 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101716763 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159294837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106533884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069934025 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102105541 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076401935 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072850206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079169968 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075020412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0704363 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076510664 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074813857 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070028851 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074528285 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075294734 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076402674 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070206117 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076959128 seconds)
  done (took 2.806023834 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100831055 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094106847 seconds)
  done (took 1.495192883 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161227866 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137464241 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205585271 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33827101 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156642758 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146177278 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14588653 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144132993 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11710335 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139485883 seconds)
  done (took 2.988215206 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103360827 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152693174 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274316069 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120355388 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077778431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094445854 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122046401 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083240574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083311843 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083454187 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083706968 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080368505 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102977399 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078283552 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079834878 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080186676 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106547409 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078532168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079854687 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080136068 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104942051 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071625525 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078275703 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079072335 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080711178 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081471356 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071309531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071192092 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079282006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079882294 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080543551 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093600786 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080813385 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105655505 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076280727 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106266438 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080694702 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078194134 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07960058 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077118776 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08174764 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081412629 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078179969 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080400113 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071879907 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080812723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071580616 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071209029 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081433851 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071699067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08190866 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08094431 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105552608 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072425893 seconds)
  done (took 6.134547528 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11126663 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110670964 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075339163 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115850195 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10800532 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074605808 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109406181 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102209524 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111182067 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074964857 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072871692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075071759 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08335417 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084510501 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119888911 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111359612 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077284164 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074423415 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111272441 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111130892 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073842095 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105681594 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101204359 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110058327 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073544143 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074668859 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073190472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074434715 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079561397 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081363235 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073153814 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082621178 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087021631 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08061002 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072150753 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072888541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073282302 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081645852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08241611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081938991 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080236068 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072593384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072970653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074101117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073931132 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072811805 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081015073 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082406714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0806413 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073216439 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074487643 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073365901 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074182277 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081861883 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080733728 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08273441 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082264832 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073494293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073279986 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07580458 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083023866 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082930119 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081836955 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076649031 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08259461 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07301325 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083574344 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085750721 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073466429 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074479783 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073358056 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073102691 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074895331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080335003 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079894059 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074612717 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072735853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073024472 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081669206 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080455509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072623734 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079351079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071592035 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072735289 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073868868 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074128928 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079697789 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081632744 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073922786 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073128069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072266694 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071730991 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070682716 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077820956 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080111996 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079798181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078929001 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072905883 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079360664 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078547095 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.206309445 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083088389 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074984058 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075637092 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075249897 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081813781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.08100514 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082940427 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074296286 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073654246 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080926633 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084163508 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073268506 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080563474 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08379808 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080839063 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072574893 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084106525 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074630502 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082944011 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073053689 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082931896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073821721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082003897 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073257077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072562214 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073319125 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081958028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074762569 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074308174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074182142 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073836979 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080689087 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084627318 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07471841 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080807377 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080545308 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07388518 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081123547 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073206544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08202214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072934541 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074109817 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072419402 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083673928 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073313088 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072950428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072976206 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082717128 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073780763 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082833167 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080471215 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072702114 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083750991 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082864462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079900073 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082934488 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074697119 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073125461 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073477787 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073083542 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080232337 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081585274 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074811238 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073129589 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080125289 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082189564 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072437407 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080238804 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080350853 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081312602 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073329428 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073051895 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083473667 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082708797 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080766904 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080637913 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080882184 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07290283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079265296 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080202468 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072567379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085409021 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073033794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084346472 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080971211 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079083825 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080734645 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081988175 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081731487 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082209368 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084017161 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071390432 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07186712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079061266 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071876842 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072139595 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.0782985 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073534789 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072999342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082932007 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071883573 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216356543 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073479673 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082837028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073462568 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075148195 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086674391 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074272431 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078128156 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081780629 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073126574 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081207975 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083083058 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081164969 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073808598 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074522762 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081720889 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082413722 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073679296 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073271502 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074534272 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080134385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080579135 seconds)
  done (took 19.413078778 seconds)
done (took 38.478744793 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196869898 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149115149 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160995504 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116744372 seconds)
  done (took 2.007543444 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112840564 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101305123 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.09228483 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070235183 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098389652 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070241734 seconds)
  done (took 1.877092421 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275909302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192859952 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17673064 seconds)
  done (took 1.976620591 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199564548 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186414004 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426872012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.263855895 seconds)
  done (took 2.504548762 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14031242 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088617536 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071233709 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087356553 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127871624 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.155744968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099058825 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123676745 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083331612 seconds)
  done (took 2.358114337 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146122232 seconds)
done (took 12.19640118 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115555416 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095559858 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.266453786 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072699511 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0872962 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.2100452 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.245838785 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171737284 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09567004 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093692009 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.174444233 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080260955 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.151483442 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12039018 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215723572 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.24243575 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129005902 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137813227 seconds)
    (19/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.37856091 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.120574084 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.102666333 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081286005 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.078315954 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.058666671 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.214103069 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079292656 seconds)
    (27/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.163393883 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17845618 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121567486 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094802047 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205200171 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105142142 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.092805404 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087141928 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0778204 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079332596 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096686915 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08317562 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129372831 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080490358 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221228878 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114780802 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092251996 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078339097 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107031038 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058844767 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 0.135879718 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070010766 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.181007863 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172837591 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.149318395 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076968815 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082350913 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166347089 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 0.156413676 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077837188 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174732482 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068485702 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.07144165 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191290519 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076653054 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08599578 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.181844176 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.162004026 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069796386 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078040717 seconds)
    (67/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068728 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151409484 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071151715 seconds)
    (70/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10628436 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068848848 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083144463 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.180794681 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078530812 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.197862311 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.096303772 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090924682 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149007553 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056143319 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.257688135 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083330109 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.083377909 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110509484 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.160165137 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07781742 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.11048723 seconds)
    (87/309) benchmarking ("sort", BigInt, false)...
    done (took 0.197955578 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083131011 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094599486 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.083091294 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.074063173 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080015773 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109055403 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.184534104 seconds)
    (95/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.077947454 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.10732211 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074237687 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082149935 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.216800653 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072156243 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.07140379 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078606557 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196285481 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081875002 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.106238141 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081315353 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092200371 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084367546 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097025933 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084773124 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.057081735 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164504101 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091151573 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076399898 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116038471 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066715435 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112898504 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.074404805 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184825955 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092744457 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076334788 seconds)
    (122/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.171159561 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117245436 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070620144 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074012291 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070367621 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059118647 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071523644 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095371615 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.142892337 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077831112 seconds)
    (132/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.083652608 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079022728 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07885524 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058260786 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099880791 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057518033 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181417318 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116420058 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076556017 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090752472 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079171893 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070530696 seconds)
    (144/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056798037 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07712919 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 0.134356695 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07669975 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097314056 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.106642496 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080555107 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077237418 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18021297 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163327221 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077465247 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.070184954 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071260631 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081921084 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.180694402 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05910872 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068664138 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070542628 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094171445 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092827441 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058964124 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123310612 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080899486 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057954639 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069588175 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068573958 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076554533 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068778114 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056892901 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.057561622 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147084834 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094532136 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180543214 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07684562 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057089767 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069369514 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056757952 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069676826 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069022227 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.168719194 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057818416 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.222430664 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.077444516 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097740819 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075495632 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153851698 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079350029 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071108104 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.181491495 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070531049 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1575624 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079223894 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071108919 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057284915 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057095148 seconds)
    (199/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068336448 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060506844 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058528155 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079582612 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057826023 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057745562 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077540499 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.181074624 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160861147 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077139341 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078629209 seconds)
    (210/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085576885 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077666946 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073327303 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071405267 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059326401 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079809936 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0720618 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06966335 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071219179 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079983513 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077923831 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144478179 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084651913 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05774303 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126740797 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092264851 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057382371 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057065432 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056909318 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077979552 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05830289 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133021597 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05934056 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057905682 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077803981 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173176739 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.058101964 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.076112535 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125459262 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.0718516 seconds)
    (240/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098363495 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.083116322 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058365067 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.057014691 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071455336 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05816583 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069571973 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071440297 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096006507 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07290029 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078835308 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070514886 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073593115 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070595175 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05696075 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073253228 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068755449 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078915168 seconds)
    (258/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.068391373 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056705245 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070328787 seconds)
    (261/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058588126 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18243345 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094141557 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070725346 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057015634 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082736846 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083343921 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09148187 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078169328 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056757713 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076675301 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078097513 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056914429 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091695744 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058045688 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071853008 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119516377 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056692998 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058225526 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078348035 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111263302 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056647482 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072614126 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069757056 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071598221 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144283234 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056532381 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056595165 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07713083 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076608045 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094166118 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094482819 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056471163 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068959248 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056466379 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075941128 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07107839 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069667421 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150302118 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103372576 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058264222 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121503461 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.057417788 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070722495 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069100618 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071921855 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077769123 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.331509215 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.059198595 seconds)
  done (took 32.390208089 seconds)
done (took 33.732145527 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08872756 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098372983 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082423516 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098558611 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086037826 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082817716 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078798745 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083960822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086717238 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087857006 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084447998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061914986 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080484123 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080248627 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080529142 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096397495 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08483216 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079575611 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079539908 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070347481 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079089278 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072035609 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07269715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061033218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083686444 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077435422 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080331666 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080179975 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070913211 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071430018 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075651535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079395741 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070596948 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085263332 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079631782 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079092069 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080503818 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082587946 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072510984 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071049482 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080178484 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070588703 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078364326 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078979101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077582626 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076477322 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079377271 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082593542 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095034872 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073158197 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080600157 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081312838 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082360227 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07865087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07543826 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078768631 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076696929 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096022292 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079856105 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073141033 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080390116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079571955 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076293855 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078501629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078690469 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080824053 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082345602 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076640945 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080327531 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077308024 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070378128 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07870755 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075130465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07334251 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081356485 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083225548 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069627302 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076791412 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078641572 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079078862 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070005396 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072786253 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072205928 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077364347 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072963045 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060869516 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074959838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077502 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069898038 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078832383 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077749052 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078372163 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072271812 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08227371 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069622863 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076330697 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070721724 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070492618 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072322882 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074886474 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070079414 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072809539 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080671614 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07161093 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077167648 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082989983 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069991957 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078115342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069420457 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070119136 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083585979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080137788 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070207267 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072805384 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069546908 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07728496 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068715073 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069116368 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069300135 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06984404 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075644344 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069599083 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071989899 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077400011 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.223637865 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071838613 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077039257 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074125688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071783122 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077851652 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071886316 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071383736 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072616072 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068376666 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074195534 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071894862 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079465353 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073553512 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079335906 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072374077 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079953991 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076358032 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077765799 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077122846 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06966822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06640151 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073121226 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073623899 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072916745 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070892405 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071794143 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070558746 seconds)
done (took 13.215260649 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071368991 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135763671 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096698157 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097661251 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089077449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071773303 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07993565 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098543393 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073149185 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102080143 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091669265 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090212349 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112731227 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069647708 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071125555 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.074546956 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072445511 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08411171 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099463104 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090990132 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114423928 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070834588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094248445 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092445284 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089477186 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105020428 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072221402 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074979833 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075486648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095167028 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093351335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075636121 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071961657 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098976385 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096887068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085607775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072237865 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085861279 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072291511 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071666492 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072626652 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099367645 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083653494 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083741434 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075561872 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081261599 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072899961 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085590133 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092134774 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082356494 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088249988 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101116984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073595444 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087092368 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069471538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088150191 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080259578 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073370615 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071723514 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078615521 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071203964 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074860584 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084148056 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082781731 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074975078 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086780399 seconds)
  done (took 6.997213592 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088483224 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101157109 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086904011 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088085266 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070524775 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071097573 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071716536 seconds)
  done (took 2.017924908 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072132191 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090852607 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092495707 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092127118 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085590629 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094604566 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080732896 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071349597 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096258163 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073149347 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091389433 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101215396 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074824391 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085379136 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093413986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072004582 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093872465 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072412152 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074309467 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093264621 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077027226 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100527994 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078914008 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072261722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084394707 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071976196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116451926 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075438823 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073243747 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074189308 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072727229 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110394932 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083957357 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078727478 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071961884 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086242376 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085382261 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074875446 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082441556 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08092599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084247214 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071970728 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072702182 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.072952019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075566498 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081141523 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072880147 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076205872 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074254875 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090283561 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070965697 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08428662 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074010805 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077252477 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07343884 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078228234 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082317183 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0726745 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090661093 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073666041 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087272825 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08653044 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084640265 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086583293 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07392657 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084179119 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084660302 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074624683 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07373568 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07516563 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08660147 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070603987 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073832342 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081144622 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073964988 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093559892 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093010992 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073772329 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084950426 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072210531 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072358788 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071631237 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093284487 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076851434 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071785375 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076030616 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075530228 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074635053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070833232 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075914076 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069712891 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077675342 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074743145 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074522147 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074142983 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085887166 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074237711 seconds)
  done (took 9.233934236 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075028004 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073769658 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074573425 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072651712 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073265145 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072748911 seconds)
  done (took 1.909040606 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094150095 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073083881 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085180022 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076189328 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106633297 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090663008 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090204025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080940953 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087407516 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082824884 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089631674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091057972 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094962893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077297142 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090152336 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075760637 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090227475 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078516986 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082528581 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077854956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089661343 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076771738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077265489 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08481221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080101107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076042858 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082951237 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082865487 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082814796 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081216195 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07653411 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08021306 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075414352 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081547094 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090555249 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075494762 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078702736 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081460364 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076411814 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079704605 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091130384 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07695787 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078380579 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081213529 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081114493 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075086972 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081611594 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083010742 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08991025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081396254 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081466678 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07561426 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079805835 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081323958 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07524204 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081575307 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081197881 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091242413 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076602493 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074895059 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073447822 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080003658 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080766071 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080555809 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081375454 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.08113912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07534937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076735331 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076939174 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075540924 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081819186 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073255847 seconds)
  done (took 7.319954125 seconds)
done (took 28.896615103 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537520154 seconds)
  done (took 1.960577735 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599806583 seconds)
  done (took 2.051838986 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.550394839 seconds)
  done (took 7.998467322 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381202808 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.483250041 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717896684 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13827125 seconds)
  done (took 3.212027733 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723847656 seconds)
  done (took 2.181085472 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24016543 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229366661 seconds)
  done (took 1.937585786 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380567063 seconds)
  done (took 1.831520745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.122322156 seconds)
  done (took 2.575550401 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242272582 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181077024 seconds)
  done (took 1.877553199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.446922134 seconds)
  done (took 1.903312683 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.895491472 seconds)
  done (took 6.35416079 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224620622 seconds)
  done (took 1.718885479 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243665418 seconds)
  done (took 1.695992484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.728600511 seconds)
  done (took 3.181749308 seconds)
done (took 41.93251402 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088873568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090980371 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09053355 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086343177 seconds)
  done (took 1.794872708 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081476982 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078244231 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080910487 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077607288 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081225887 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078035446 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079127211 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080289648 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078069362 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078849425 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078176801 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077935175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08011824 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079504831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076529883 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079835687 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08057873 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077864457 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080167153 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077831815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075993756 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079804297 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080362494 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077228105 seconds)
  done (took 3.35413896 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083627385 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077956757 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081484419 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077556598 seconds)
  done (took 1.78463384 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083165403 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094705078 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092799639 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083527472 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094687813 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090487894 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074170018 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074732121 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075344002 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083250376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073198499 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099413001 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092045892 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08312091 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08572292 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070680334 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072578072 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091494293 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084460752 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084240077 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075652512 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084105422 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07400492 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093379794 seconds)
  done (took 3.472651694 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085746108 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105600413 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085397399 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094751335 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096982425 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.071295237 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083848976 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097213341 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13124362 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.071046169 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07663245 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071035152 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079515756 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073942433 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085520031 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112834996 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11657406 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074752486 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102353189 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071407113 seconds)
  done (took 3.260168301 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07778508 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074866737 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076096031 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070852162 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082638491 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078287203 seconds)
  done (took 1.935628518 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073430885 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073448717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072709497 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071859249 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077868447 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073067722 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071701888 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073343204 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072399038 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072632033 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072280711 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071400053 seconds)
  done (took 2.346168506 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185011557 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073821637 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07377337 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07171256 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075820397 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071836126 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085977051 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073106496 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096424967 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071549536 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072056259 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074276537 seconds)
  done (took 2.497198238 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195072678 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080567625 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226270896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152347536 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110094799 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114576893 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114162326 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113646374 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137449745 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101222393 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160966433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161245426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109183314 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13749334 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093225767 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1061291 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150669306 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163953548 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108246526 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162645073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143094763 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128349763 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145376692 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103811265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107497664 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120334371 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075938562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08356021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164354121 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130478025 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140511544 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11292362 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093764469 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174707896 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161038875 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136951853 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147437657 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087036472 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105970014 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131001808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188589616 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091742205 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299210289 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113212093 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084979735 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133326793 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118852311 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121682623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105516295 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093702542 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142788839 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175823722 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133249651 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089665969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124163727 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113291548 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113865396 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115760209 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173003453 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156983106 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129310765 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075982968 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113164549 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14795039 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134634702 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108924413 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.122993928 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093879212 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132397514 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151837183 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123049588 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140582036 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116873013 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091693762 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121287386 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136208723 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126430859 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157575682 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125382277 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076996057 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121028819 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10057133 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083720199 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147703072 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079554376 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169936706 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102056158 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108539776 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124028297 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108885927 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109306284 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150683681 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284558012 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10715985 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073731641 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108696955 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119941486 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143099447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090686841 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109363584 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117240673 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081762085 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13439476 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080238972 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124187549 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081848182 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123839614 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130673308 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082097145 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123826133 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106578948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10454838 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130273202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155290067 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090952175 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084467855 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161964163 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122493496 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104286598 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14064849 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15350095 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104946927 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100766923 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144664985 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166396899 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093054372 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158849157 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106426981 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087709529 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09129726 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123211021 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112105098 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124247671 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084688769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117935055 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159635966 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078723662 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098321022 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133798282 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082300384 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08386624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106663293 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105466899 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09917517 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100346085 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103125844 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133049331 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273261124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109245806 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125689495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101543974 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162488669 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091390294 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10664811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106039821 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074561569 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131753403 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151322568 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083269092 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156428357 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12317601 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117667548 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120766453 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087358555 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135950079 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0826811 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07552153 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139389926 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112890854 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110499699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.146790924 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116488972 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123528484 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118822549 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129778049 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128886994 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129075734 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108980393 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092690629 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114118083 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127277816 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077664751 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093053478 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084061999 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106990805 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098239779 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08731321 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138944548 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122520355 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113428086 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113150682 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098946655 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143612233 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080223258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124809956 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120244155 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097647086 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147919388 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147169717 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13151073 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100400747 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282064721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076459648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079923162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090562638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123072765 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08783306 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087341976 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115571744 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143980109 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128356231 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132783114 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123656393 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118968774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151987575 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075009059 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122516048 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141658308 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121382698 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107910581 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094110581 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101755911 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139881874 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106583662 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172680126 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115444684 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125186843 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152623713 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105628126 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08375403 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104857243 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131062077 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104333982 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142043803 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101549242 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091589445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109793398 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080102919 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099935486 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126558249 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118054592 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133864434 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113809456 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131207889 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081666649 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1139513 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121563384 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12035416 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06968507 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117656979 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153124324 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097722622 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116728594 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295976058 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083393958 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138384542 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167162127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14222275 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088321731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108693983 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12123422 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124180296 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119287382 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136778592 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106146085 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136583656 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111603465 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088989302 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091339751 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098275894 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105916095 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097776141 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10393221 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11336413 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099148797 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130501591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105288882 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112309698 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118976877 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10378764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09621391 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099747288 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170260025 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11904457 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164430594 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103050253 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.138920774 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156541969 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079677328 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083489823 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082213735 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136823685 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088984684 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130000662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11284054 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117049696 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122448558 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136701916 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098119099 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073342532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109725163 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130725051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123081213 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100688045 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103435018 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15641151 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100422517 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081266643 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260047543 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119040736 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10591349 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163259874 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068528297 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108979151 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081759588 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083667971 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124839832 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146064314 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083981569 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102517881 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120784782 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113065263 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125050369 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099893922 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113591375 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124758423 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144189039 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127256498 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092522575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112005669 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128280406 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151241174 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104145316 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100910617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165901642 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148652872 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155247872 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088917056 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115586326 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115277583 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110731969 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135982377 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087476655 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156626835 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085970506 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135150607 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103929596 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089868936 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126371828 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111949215 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091414336 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141351995 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117171597 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086083113 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081407045 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115755106 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118297389 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104876188 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079101507 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283869416 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079816532 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133027379 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156018717 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085012665 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107422865 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0983336 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085288912 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10680545 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104479469 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090042187 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102422727 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164349103 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089632976 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144194802 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132069491 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112060492 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132917433 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105059347 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642746432 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081604367 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147808652 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115733578 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166417866 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101966467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119226203 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111858537 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120740293 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14093398 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103864572 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182617512 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130154467 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116816743 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082837226 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103857055 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105747877 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090463018 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109504972 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114850074 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115680785 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095501234 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116783414 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122451765 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085990425 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097942995 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150696215 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115259133 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140432291 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135534265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08762598 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118160721 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13406694 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232529826 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118822244 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147431628 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107468856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102960584 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08449198 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101025337 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156143025 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.0773459 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153836543 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139126809 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111164132 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114615499 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108996868 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130416429 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106406802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1219574 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094102337 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108580973 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114565356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085198127 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080575942 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106832071 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11102028 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101942085 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098305697 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102833555 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147289086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077691412 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100516883 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117573102 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140985624 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167016044 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092356247 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086770135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119798269 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116638994 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11311161 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121746804 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083223965 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085635089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083441028 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086297415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109283195 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115051964 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114418161 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110456263 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15596923 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087130523 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226243444 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097111553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105347166 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074744864 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081538086 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098214536 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097607148 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254410802 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114540503 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155993577 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098901527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093585914 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094019067 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.0796799 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087199821 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125457363 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109836173 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118383972 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102698621 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06844491 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106932586 seconds)
  done (took 59.11912824 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112216635 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086656169 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101090524 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14781432 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125644094 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203870427 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160051968 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192779599 seconds)
  done (took 2.704134456 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073203239 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09852121 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108353502 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088109642 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071895524 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073398152 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226008402 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086158482 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071351743 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096726373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08154329 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073874478 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.408422867 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070856262 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072654386 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066722437 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072390915 seconds)
  done (took 3.403711995 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389503831 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616186605 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.346948657 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082507656 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.936085329 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097949335 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.269742962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140825637 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083190336 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531658496 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.407762869 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135800408 seconds)
  done (took 18.610319006 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086546524 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.080142248 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093709979 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09326467 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082810956 seconds)
  done (took 2.002683314 seconds)
done (took 107.763065439 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087554622 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41603826 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05937993 seconds)
  done (took 2.069043264 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091487609 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089349517 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089992172 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087355271 seconds)
  done (took 1.935174239 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079220401 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081539578 seconds)
  done (took 1.729953426 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.230512398 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169197483 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100082481 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087049202 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084225734 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084549842 seconds)
  done (took 1.832280388 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076978275 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079245197 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076662387 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080857239 seconds)
  done (took 1.885808313 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080622102 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058609504 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05982295 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062070625 seconds)
  done (took 1.834026776 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09105263 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086452036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083098904 seconds)
  done (took 1.834065582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103956139 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091333355 seconds)
  done (took 1.76922849 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084717269 seconds)
  done (took 1.661631691 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092785247 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102494421 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135764773 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118014709 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141197854 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116811147 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088607595 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08943273 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083127127 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09091676 seconds)
  done (took 2.635956452 seconds)
done (took 21.3301631 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083169044 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371878426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364003512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093896807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673429177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361096271 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.995422379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098022263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144149425 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072667725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08925865 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655484042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988646301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334710393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974890716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333699969 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65569068 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074092819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073568181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073321394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982465862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074381372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074059387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074511922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653757209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377504544 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07387522 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328725962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073669551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075401872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376951271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073836432 seconds)
  done (took 16.30909865 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074852592 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122745652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077308168 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088966306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075246122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075245552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076840814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074526884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12572535 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074054622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090798088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073774718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077761538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074309133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092902035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.076645247 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074918781 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074388812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074067129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074593023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092397504 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073725928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074127207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074328331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073920669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08632925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074777592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074415372 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074352627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076008259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077262207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074945862 seconds)
  done (took 4.165633568 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120321329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127765376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079309102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109366902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117341704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075744479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148489456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098551634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131922208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074488357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09056884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07412759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106399343 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07474577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093150171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074152058 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074778311 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074764388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074266373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074094501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092755809 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074264033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073913063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074986737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073709716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087883407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073994487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074763226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074721374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076084029 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077526099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074991155 seconds)
  done (took 4.414324214 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07816312 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079981974 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086818788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087994274 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074562749 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076965506 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078241209 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074409935 seconds)
  done (took 2.23069376 seconds)
done (took 28.692187177 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084579525 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07469263 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078171538 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.094000258 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079550286 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08301634 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072368243 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081972518 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078848946 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078762619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07971604 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072629716 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076834591 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072267133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079212646 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07323456 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08393885 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077674846 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083732276 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084085377 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075309973 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078661588 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080206945 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083354873 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083475217 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082764665 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08171544 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077507813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073253076 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07615077 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081555428 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088676953 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073130619 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08294945 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072591887 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07244629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076976438 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072986243 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083298738 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081773346 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074585114 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081547395 seconds)
  done (took 4.891112174 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092543313 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097036961 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089918235 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068183176 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072772396 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071224965 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094387038 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065704327 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06647663 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.09389287 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062948528 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065289804 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06924428 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060623474 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066164792 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064079888 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.067822302 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061767404 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066486051 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065485247 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094202406 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060722156 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083205706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069610725 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062325422 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068374955 seconds)
  done (took 3.499974107 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079286101 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088377516 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095138099 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146374187 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114937706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082824396 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083821921 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096598968 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098506812 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071902758 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076169262 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09820725 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09307692 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079015917 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072572678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089003977 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089875552 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074394903 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078006356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099442918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091255309 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090234668 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096072233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085965485 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072178195 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075256664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076386797 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085166846 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07486477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081972581 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075339062 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076065447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074658676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084467215 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075432779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074457372 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098436057 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082813927 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083437087 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073461991 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080534151 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07395703 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096149207 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128573481 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072077491 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078336591 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076062331 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082861866 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072204918 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098751313 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083724795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072538645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075399287 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072122269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071912834 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075831216 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074483668 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074878257 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081237807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07872744 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096346213 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.077617153 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088034188 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072212834 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081541191 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072182605 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073361611 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071858812 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098643279 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074040693 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112542384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073102622 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073528375 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081449736 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081219425 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079300951 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073253897 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08822264 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082622693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076286337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08131178 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07613074 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075199005 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101216397 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075310461 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074592132 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.07390002 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077877806 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075653842 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073864412 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085783179 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072960325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075237148 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089318181 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072928225 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074474197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078058284 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076504353 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071712059 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083044771 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075997287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073127252 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081923913 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072291184 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074760325 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084148848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07940253 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071400768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076297124 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077399012 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073296635 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073876757 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075066624 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073742887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080264807 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07901779 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076216215 seconds)
  done (took 11.146803798 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166188006 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156412469 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07652015 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149018435 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081830013 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084049907 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149725138 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097804047 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07336457 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074828094 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073814264 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112200776 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107558817 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117631142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083117793 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072728209 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095886099 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116734933 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151834613 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147188946 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095690694 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081584821 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075135363 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074564293 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075197097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082353607 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089404706 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081959557 seconds)
  done (took 4.485669706 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084056861 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107795345 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079880138 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095137871 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093904893 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073015535 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074970134 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075027856 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.09020226 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082213118 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072915411 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077487261 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079705146 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075632595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074175539 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07969042 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079053685 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074090991 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076097816 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079966015 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08307296 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095690107 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075929633 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072124732 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077493684 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072099451 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067627248 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087806216 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073367855 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096978297 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070418843 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077445493 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086780433 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073637961 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072648633 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07286487 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072595928 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073054055 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074731098 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071693043 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071362458 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063032168 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072415487 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082600306 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086252749 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061583392 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07727403 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078004891 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078309401 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070567972 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075617807 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075811763 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075496692 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080097852 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076802839 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078299001 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074009953 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081376725 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081175199 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072723799 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069894561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07229936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077462285 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069507108 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087559218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077557614 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071696415 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072729783 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074769943 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086094927 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073243023 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.07761635 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07087375 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074913786 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077415448 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075098974 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074079694 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071610452 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073061401 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073373375 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061120518 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073131723 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059216325 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075728148 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071264103 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071573757 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073178891 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077098717 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083039284 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074575631 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078938479 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073951855 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072427822 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075385429 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065559524 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075412895 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08323282 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086038822 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07345595 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070674904 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085122285 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077495978 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071983021 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062561399 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07663557 seconds)
  done (took 9.657522566 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096322844 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074990803 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086897401 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094605275 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091407013 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079009969 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083654255 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074465134 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089157141 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079748661 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082055671 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07321635 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083396086 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08289299 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074797187 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083050584 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076607436 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087739445 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087135554 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073189943 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08169916 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085424889 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094055455 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085377248 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084010535 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085538241 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.0942528 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082108618 seconds)
  done (took 3.987890722 seconds)
done (took 39.246525156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.676274097 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930298572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.665021814 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.989183728 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.737822687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.863400212 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.753665779 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.669814773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.929991083 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.6970856 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.994345384 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.743776086 seconds)
done (took 64.368070226 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.718709376 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.810121167 seconds)
    (2/2) benchmarking "String"...
    done (took 1.884835968 seconds)
  done (took 5.29175531 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.902423433 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.243933906 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.905376875 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.659004021 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666261146 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.97915575 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.460040537 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.185415333 seconds)
  done (took 29.699484293 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.820462456 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.888815088 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.355901656 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.388430125 seconds)
  done (took 15.103752312 seconds)
done (took 61.394433236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.667082393 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.713707102 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.663304892 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.645626253 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.719061413 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.675325006 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.048592727 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.680634217 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.659718025 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.647505062 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.662972077 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.095002391 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.671382757 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.784307896 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.659930424 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.669636309 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.701746952 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.138146023 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.817277333 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.67863679 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.668725312 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.710806616 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.668080684 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.672413498 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.681392403 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.663547423 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066203885 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.663646954 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.494171369 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.661417135 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.708471857 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.033793831 seconds)
  done (took 200.292362419 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.662739087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.710063584 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.825064351 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.679078145 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.991709015 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.84343923 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.768741118 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.183333648 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.668832204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.668267343 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.749161799 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.662432357 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.790180561 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647999273 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.710509859 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.670708101 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.889509684 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.806087897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.714420879 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.829447483 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.672608412 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.609566335 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.583405058 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.737722486 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700947614 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.751028522 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.66925351 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.69444488 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.856942211 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.831654975 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.668094715 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.703023166 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.870445257 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.535155673 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.686010583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.685363477 seconds)
  done (took 165.328684429 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.854718035 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.664151916 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.661534068 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.663506545 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.668184455 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.662652852 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.79116817 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793701482 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.439658901 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.312331753 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.712869151 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.663299063 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.474719993 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.662739526 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.674285474 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.731234143 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.664220488 seconds)
    (17/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.662641482 seconds)
    (18/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.675810437 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.665642458 seconds)
    (20/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.663404777 seconds)
    (21/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.678137427 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793567305 seconds)
    (23/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.662354518 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670383688 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.663498714 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.668894747 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.664738654 seconds)
    (28/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.69085394 seconds)
    (29/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.663865302 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.848883865 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.668183735 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.033127146 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.67004914 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.904732562 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.665010137 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664018877 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.515583117 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.174489432 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753241188 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.664297048 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.665215913 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.669687065 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.664990058 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.881087485 seconds)
    (45/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.665986674 seconds)
    (46/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.664867055 seconds)
    (47/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.664514361 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.663480091 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.668212398 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.813767304 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.664198385 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795231374 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664819939 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.141707896 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.664021586 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.664642971 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.65892136 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.238071361 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.664777926 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.667878927 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.666187661 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.665731435 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.672099081 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.463443811 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.738183754 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.666958893 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.668641825 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670344831 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.673001069 seconds)
    (70/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.664672017 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664381666 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.889490994 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.725148097 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.905729882 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790546204 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.668250479 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73315076 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759356331 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.665440775 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.665243224 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.666650442 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.665654947 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.665590024 seconds)
    (84/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.747007839 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.796912351 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673290824 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.667294385 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.716417085 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.735483353 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.666876704 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512968226 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930941831 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.666805062 seconds)
    (94/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.666340447 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732399392 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.666057202 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666458525 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.794432891 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791954529 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.669956988 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.374701276 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.590014668 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.043395653 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.668816466 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.883752982 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.668446385 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759134673 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672767508 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.669733086 seconds)
    (110/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.722335897 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.669278045 seconds)
    (112/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700526144 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.66885669 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.041666458 seconds)
  done (took 389.341797441 seconds)
done (took 758.464146468 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.26892889 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.239451583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.341937927 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.245860845 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.228562607 seconds)
  done (took 12.931861165 seconds)
done (took 14.529586056 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.760504441 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.76344229 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.691884717 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.758731188 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.688405382 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.758352893 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.741941568 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.692037311 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.725583176 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.692395364 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.728685459 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.693035928 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68026492 seconds)
  done (took 23.982669838 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904613385 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901505998 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.738908253 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898335872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.714594553 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902374514 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834550418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.818408474 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822367426 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685644236 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681643678 seconds)
  done (took 21.511455945 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92064199 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.909515772 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747328947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904022145 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719517162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909360817 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.832346789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.823060536 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.822586395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.687335613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.684012221 seconds)
  done (took 21.57004808 seconds)
done (took 68.660838031 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.678494096 seconds)
  done (took 3.290131947 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.706830218 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.878199187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.685914953 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.682332162 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.678928866 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.679758397 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.682118376 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.679429609 seconds)
  done (took 15.286464584 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.674662353 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.678261139 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.677658648 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.676015122 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.679619819 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.677773929 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.677732545 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.676085819 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.677152393 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.675631281 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.675404027 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.67835078 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.678663334 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.676021357 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.678739456 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.676395571 seconds)
  done (took 28.445600216 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.677533456 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.676507443 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.676455181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.677340513 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.676531494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.677512069 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.677560165 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.676349835 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.676316052 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.677097066 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.676819041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.676778189 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.676478639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.676754374 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.677190043 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.677923648 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.677665936 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.677312911 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.682102259 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.678261955 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.677461564 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.677046993 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.677472435 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.678538031 seconds)
  done (took 41.872574157 seconds)
done (took 90.495316463 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.436391026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.416601654 seconds)
  done (took 9.466011131 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.680973266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.680721527 seconds)
  done (took 4.978895066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.68019369 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.680543771 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.680475101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.681036122 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.680654873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.679844149 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.680396132 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.680869535 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.680534752 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.680549095 seconds)
  done (took 18.418820328 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.680346312 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.68116565 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.677472811 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.681096175 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.680051952 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.67864452 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.681083796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.680897723 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.67982588 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.677884357 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.67993719 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.678972181 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.68038887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.678484663 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.681239309 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.677435099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.678651541 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.678684064 seconds)
  done (took 31.84739436 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.680914805 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.680690356 seconds)
  done (took 4.976426377 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.678959719 seconds)
    (2/7) benchmarking "second"...
    done (took 1.679276712 seconds)
    (3/7) benchmarking "month"...
    done (took 1.678612921 seconds)
    (4/7) benchmarking "year"...
    done (took 1.678545355 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.679287237 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.679400899 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.679000819 seconds)
  done (took 13.368566049 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.682195232 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.825171542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.887764181 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.319226072 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683030176 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.686262636 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.580699838 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.685809612 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.687091297 seconds)
  done (took 18.651375115 seconds)
done (took 103.309809031 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.531014283 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.679943197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.914133696 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.738095282 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.731472062 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.013039387 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.690415669 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.947277188 seconds)
done (took 41.850582891 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.739029074 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.395887926 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.405326268 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.7448658 seconds)
  done (took 15.16229172 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.663876712 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.989093147 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.687187256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.544946105 seconds)
  done (took 21.504625909 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.050470753 seconds)
    (2/2) benchmarking "read"...
    done (took 2.026796848 seconds)
  done (took 5.698645816 seconds)
done (took 50.710603843 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.683343805 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.683352464 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.682496375 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.684290842 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.681171275 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.680543017 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.683212051 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.684664529 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.682860696 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.6831292 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.684087484 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683765174 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.681937985 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681018245 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683739694 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.681702816 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68103338 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.681359583 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.684215876 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.681595904 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68409843 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.682550034 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.683434072 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.681413555 seconds)
  done (took 42.002354724 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.685265507 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.682423196 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.684350309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.685449043 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.681697079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.684677137 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.684557136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.681731497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.685889499 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.684005526 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68264483 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.682711808 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.685430934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.683210142 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.685126107 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.683011014 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.68577747 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.682613441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68618624 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.682888217 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.685130399 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682470031 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.68333771 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685323214 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.682459678 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.683096831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.688466422 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.68353677 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686781435 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.683804847 seconds)
  done (took 52.143658619 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.690812415 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.693089188 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.6863532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.68607365 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.685941824 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.689386405 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.68572438 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.686462293 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.686445381 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.686339254 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.685909241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.686889714 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.68688285 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.687186318 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.687271738 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.687544242 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.687302888 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.687414712 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.687093274 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.687991097 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.687234892 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.686526407 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.686879008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.687215892 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.686966696 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.687958393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.687338187 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.686602164 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.688182331 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.687275902 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.686908314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.688147901 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.687518662 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.687153297 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.687085803 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.686577718 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.692726022 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.695238935 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.687680206 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.687597203 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.687881288 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.688443583 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.687874301 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.688020632 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.687295626 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.687727614 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.687514257 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.687236726 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.687199184 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.687511488 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.687650575 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.687956219 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.688537739 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.687773718 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.687928009 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.687779171 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.688266411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.68808736 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.68845174 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.688439531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.68824086 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.68860354 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.688519764 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.68826069 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.689560001 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.688395559 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.689021611 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.688967172 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.689237758 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.688790656 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.689174783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.689963359 seconds)
  done (took 123.152240885 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689824268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.687902315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.685746267 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.686867065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687585894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.690772117 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.687704975 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689138137 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.68629183 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.690187938 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690472412 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.687758691 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687837069 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.689950442 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.689891039 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.687334722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.690058896 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.687591688 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.689597513 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.690049533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690502968 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.688320894 seconds)
  done (took 38.774753724 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690271303 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.690920509 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.687777189 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.690741271 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.688222267 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.689911301 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.691167277 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690957325 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689971701 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.688506584 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687690757 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690634105 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.687707698 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688136635 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689352713 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.688454764 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691810842 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.688876264 seconds)
  done (took 32.034798742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.689086256 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.688051902 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691184081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.687924875 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.689147878 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.691408967 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.688451449 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.691171017 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.691505227 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.688943196 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.692374341 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69137972 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.691929862 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.690659437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692687683 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.690311132 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.695207735 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.690025311 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.692560055 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689735745 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.689752977 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693260249 seconds)
  done (took 38.821918984 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692312288 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.692797032 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.690831743 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.690126262 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.690190427 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.693171708 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.692148142 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.690358506 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.692539556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.694680932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689959356 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.692825383 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.690220782 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.69092637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.689148866 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689597804 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.69287926 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.690693302 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693470705 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.68985879 seconds)
  done (took 35.455463912 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.69512752 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69522042 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.694587185 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.694403549 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69370025 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.694609359 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695107725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.69541784 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695352283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.695709798 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.694811891 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.695055459 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695268266 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.695342492 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.694956487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694941911 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.694660653 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.69475165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.694669684 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.695601313 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.69539875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.696108093 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.695412921 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.696042913 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.695909287 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.695490445 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695887765 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.696930437 seconds)
  done (took 49.092581723 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695391974 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.694449697 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.691756568 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.692523043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.692771631 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.692274635 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.692423609 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.692341143 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695444836 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.691426794 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.695620216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.695246332 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694872329 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.69604182 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696022765 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.695878053 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695357895 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.69324219 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692992952 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692235609 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.6953208 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694938956 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.694961043 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693605279 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.6926271 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.69559674 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693326542 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692970604 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696091941 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692567483 seconds)
  done (took 52.448953532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.714249552 seconds)
    (2/2) benchmarking "in"...
    done (took 1.714257183 seconds)
  done (took 5.05649664 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.693138202 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695766974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.69567442 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.693174321 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.693390513 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.696430546 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696764041 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694597927 seconds)
  done (took 15.18806692 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.696226165 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.695432942 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.696717725 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.695519058 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.69732293 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.697362397 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703790975 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.697457466 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.69787989 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.697752289 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.703577468 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.705818075 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.699674035 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.697477811 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.696931823 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.697879666 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.696594621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.697435842 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.698087269 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.697291427 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.698485803 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6996069 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.698608186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.694354768 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.699672957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.709642742 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.701340873 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.697437243 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.697811955 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70072854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.699150869 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.695203041 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.698875021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.699700816 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.697873274 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.69989112 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706547164 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.699146566 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.704302801 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.698784934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698396127 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.695196657 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.699172211 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.700899682 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.698901106 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.698716518 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.699188723 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.695632452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.69825985 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.701559147 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.703389205 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.699017694 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.696095815 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702656989 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.699960514 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706077908 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.700550392 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.703584184 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.708293812 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.70977655 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.712620649 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.707990388 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.700701501 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.699874117 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.708747183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.723602782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.706509696 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.697210164 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.696196034 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.698480199 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.706962917 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.713295866 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.710312164 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.700815277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700903723 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.700281494 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.700332963 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700439463 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.708074412 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.704172995 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.701433501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.701497189 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.70918701 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.724187148 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.699841348 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.701018599 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.701641283 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.702040822 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.702748942 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.712519169 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.703124463 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.70166317 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.700786235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.70170889 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.702798028 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.702104921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.70126965 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701796189 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.698537818 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.702255488 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.701929936 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705289204 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.710630862 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.702458443 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.702433812 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.708045255 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.700830854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.700955478 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.709103454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.701590906 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70236445 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.70236418 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.708348637 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.698940173 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.707551574 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.712281721 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.703326507 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.703999912 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.702625958 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.701806226 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.712300557 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.728189853 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.702567987 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.702204059 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.708028843 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.716643577 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703056144 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.705778447 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.703343412 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.700666513 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.699694185 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.704447227 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.702567673 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.702920149 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70379766 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.704883576 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.699991984 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.702404096 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.703151124 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.704168496 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.705022377 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.703522094 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.706966333 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.705968277 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.70371113 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.705060617 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.709813308 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.703164183 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.704834849 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.704954729 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.700645452 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.703206168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.704020171 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.704734123 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.703866134 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704450034 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.702992677 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.70413834 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.704293049 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.704642775 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703739534 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.705420401 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.708380458 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.704944678 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.708386353 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.703394224 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.70152803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.704779093 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.704060795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.704720165 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.705002068 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.703085 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.707887241 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.713086091 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.704045134 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.706332333 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.707251404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.706847959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.70526171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.705656473 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.708059745 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.713011421 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.706116447 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.711721127 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.705786905 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.70615058 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.70539 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.706859696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.704682002 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.706179028 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.709798154 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.712978262 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.718532707 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715582149 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.707575366 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.708893342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.707760213 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.710616875 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.710146638 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.707269842 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.70577667 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.706841963 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.706182067 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.709060078 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.707646335 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.706834383 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.705989727 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.706113947 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.705959553 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.706901269 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706902481 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.707660395 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.709076636 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.703644442 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.70638342 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.707730183 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.707220912 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.702898292 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.706441353 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.706717731 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.705972424 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.707381658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.713628079 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.704595477 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707401141 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708309563 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.706657306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.70686337 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.707362752 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710351447 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.707851454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714176533 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.708341089 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.707845078 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714940782 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.707197508 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.706517217 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.711518568 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.706878801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.705483783 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.710775072 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.715958415 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.707844839 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.709066884 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.709472641 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707662093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.70838671 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.714250271 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.705643207 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.707250734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.708228144 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.709792719 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.705978308 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.709992428 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.708403167 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.708978262 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711574061 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708675966 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.709355542 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.710033698 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.710752392 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.710161756 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.708606114 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.712524472 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.718798261 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.715127633 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.710113467 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.711832051 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.710474206 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.712928344 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.709971719 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.709992278 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.708755237 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.722461072 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.718987983 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.715940808 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.711866814 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.709464378 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714948761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.710387761 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.714627907 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709659415 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.710636116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.709281696 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.709023551 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.70687907 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.710782663 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.710081502 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.710846993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.711728638 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.713637153 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.710354936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.710278754 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.71104881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.711020317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.709797861 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.709483694 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.71125282 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.712354208 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.712650061 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.710210203 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.711384402 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717197061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71052977 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.712170804 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.711052153 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.711580016 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.710735677 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.712507494 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.711448642 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.715128702 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.719324626 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.714703401 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.720698489 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.713045439 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721107215 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.711880145 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.714626169 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.721179097 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.709235682 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.710834488 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.712899357 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.712592887 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71985688 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.712649915 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.713119331 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.716224763 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714667139 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.713006653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.711874489 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.712469401 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.712429866 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.712943811 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.720718805 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.71319313 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.716275268 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.714288636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.70880448 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.713022614 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.712348637 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.71228035 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715794393 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.713863862 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.713039312 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.711462485 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.713549129 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.71219696 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.71429279 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.71246695 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.710115361 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.712574822 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721014804 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.713968115 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.718758438 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.714805734 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.721300911 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.714312121 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.720528629 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.715328701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.713889212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.713494533 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.713341664 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.715560244 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.713447847 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.714598962 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.714969845 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.715008388 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.717981497 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.714620573 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.715356204 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.714225586 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.714640936 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.714165216 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7239935 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738521692 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.716308191 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718618282 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.712120385 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.71596504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.719961756 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.715514091 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.713774199 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.718393229 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.726512559 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.723304525 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.715500002 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.715924919 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.715812532 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716627519 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.71372792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.714466617 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.715073498 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.715066958 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.716031303 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.715242587 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718938104 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.714180037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.716283424 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717426983 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.716379711 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.72674396 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.715834612 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.716397318 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.715818238 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.715438751 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.716220389 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.715960688 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.715509977 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.716087824 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.715164775 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.716862785 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.723667107 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.722384538 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.718515597 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.716372525 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.716031804 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.717004552 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.716621294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.716539558 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.716504362 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717135097 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.718337825 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.716957531 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.717893218 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.715399531 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.716081334 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.717940124 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.716767667 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720230646 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.724839796 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717563676 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.714606992 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.716569824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.715767798 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.715832808 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.716561425 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.725215851 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.719723475 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.728004062 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.726641387 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.722220587 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.716610392 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720394695 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.725668822 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.716458247 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.71990121 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.718776252 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.71974301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.718328423 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.72182663 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.717747809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.725563064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.717176761 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.718680402 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.726067132 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.719650802 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.718773834 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.71990253 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.722593791 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.719356178 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.714254428 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.718052302 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.717558999 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725104344 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.720935864 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719112063 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719599052 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.717055439 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.72046422 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723785238 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719730272 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.720037755 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.715573763 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.720048612 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719540357 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.721713436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.715512793 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.718284174 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.718100879 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.722728076 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.72630869 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.715746892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.720932576 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.719770106 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.720123102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.720219148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719863418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.717614734 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.716349032 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.720456432 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.720829096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.720464275 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.723099732 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.719568386 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.722013709 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.721604433 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.721400258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.723591043 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.731940715 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.7285058 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.716898213 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.720277384 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.722161975 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.723061548 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.722283782 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.720961127 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720534154 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.722112005 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.719409714 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720861565 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.72016215 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.724797826 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.736514521 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.719960115 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720918151 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.721227351 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.724855196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.720424352 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.718159279 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.720407096 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.723206462 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.726187609 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.729859314 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.723043642 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.728440926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721830528 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.722630194 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.726163876 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.724887157 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.728779688 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.724459882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722216517 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.722397131 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.72713697 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.73837828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.720784747 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.73219295 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.752380134 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.722825663 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.723852055 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.722670297 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721477135 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.722339184 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.723794691 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.722708359 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.723105816 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721816281 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.723520531 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.725410385 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728555497 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.725696081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.723048911 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.723402776 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.722330016 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.723669149 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.720055118 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.724755214 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.722881525 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.723587977 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.723824088 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.724560191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.723281358 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.736765435 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.734461139 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.722915697 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.723821424 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.719617119 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.726778462 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.726671262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.735318197 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.731843059 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.723880763 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.724906604 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.724755747 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724542166 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.72065037 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.724529495 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.723752592 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.723367087 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.721873159 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.737478706 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.733933747 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.72794887 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.723338331 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7258297 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.72408397 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.726111856 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724904606 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.724199482 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.72657846 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.725366482 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.729024071 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.724736392 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.72423659 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.729390146 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.732368486 seconds)
  done (took 1022.415374688 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.721820901 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7217927 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72207686 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72162951 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722436184 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721437811 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.721876795 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.722608326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.722802806 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.723718955 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.722483899 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722989754 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72342167 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.72299372 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722731156 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723091286 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.722621645 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.722438803 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.723154475 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.723253686 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.72294453 seconds)
  done (took 37.832007316 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.725481584 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.723888468 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.723513644 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726373935 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723636797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.725442565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.723039287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725232676 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72714358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723209505 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.725406812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72565804 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.723425331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.723664036 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723378958 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726117798 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.726448385 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.723542123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.727307329 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.724290932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726775384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.72412679 seconds)
  done (took 39.605777006 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.727751632 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.727860148 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.726477605 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.723466974 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.726172439 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.724091412 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.728131767 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.72678967 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.727039202 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.727081143 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.725869236 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.727682108 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.734487369 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.732134734 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.729154105 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.726496542 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.870657316 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.728432532 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.727906301 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.728576974 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.724964563 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.733171887 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.725468134 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.725172576 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.727233269 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.729440983 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.728019347 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.727552882 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.72951457 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.729843815 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.733363092 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.728056233 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.728656232 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.730181368 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.728739972 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.729707658 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.732624776 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.729799969 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.727264534 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.728709373 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.739638431 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.748375026 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.729603553 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.734662656 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.728307134 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.728359282 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.732605501 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.73780406 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.725700271 seconds)
  done (took 86.539277658 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.727952865 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.729329682 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.72665507 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728294357 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.72984517 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.728953966 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.72859341 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728514456 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.727255149 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.726242475 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.729442937 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.726313034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.725827385 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.729343872 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.730143425 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.726677003 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.726806878 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726655146 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.726878963 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.726749453 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.725993672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.729938923 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.72938771 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.727843943 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.729989798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.727138712 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.728693249 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.728551069 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.725267094 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.72668499 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.728242604 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.728798382 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.728852684 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.726404377 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.725578232 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.728054708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.727682194 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.725693242 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728812941 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.723683837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.726655996 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.726596333 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.727748654 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.727921449 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.725856302 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.725599086 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.725547628 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.725263472 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.725297257 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.72715922 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.727598711 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.725956475 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728339687 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.724705379 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.727862291 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.728700151 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.722806055 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.722656291 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.725194901 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.723822695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.722660989 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.725448863 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.721307493 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.723621694 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.723356875 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.720746786 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.721030909 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.722739353 seconds)
  done (took 119.073304753 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.721644495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.721712789 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.721850619 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722538871 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.722241915 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.720432063 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.721743502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.721319646 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.720443271 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.72250817 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.720891225 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.719400269 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.721612036 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.720305804 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.719969162 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.721783467 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.720737917 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720843854 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.720658781 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.721187854 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.721094879 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.721225361 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720701253 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.719950957 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.722063643 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.721732457 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.720874258 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72149018 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721310366 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.721425301 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.722225842 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.720949938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.721557714 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.722541184 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.722220969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.720810633 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.721825624 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722314697 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.720886498 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.721582126 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.720577762 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.721213817 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.723126431 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.720970164 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.722551312 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.721972991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.721231979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.722008545 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.721364906 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.721558693 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.723334945 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721559672 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.721104132 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.720855596 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.721822484 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.721280888 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.722444377 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721504553 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720650631 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.721527887 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.721595672 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.721154344 seconds)
  done (took 108.384201496 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72017674 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.72051462 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.718096372 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.718063425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.721168864 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.718331521 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.719765924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.721009906 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72327071 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.720061403 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722280245 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718879604 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71934282 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721601018 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.720226456 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.719680054 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.719870909 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.720743562 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.721254793 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.71865608 seconds)
  done (took 36.057478149 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.717682594 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.722218971 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.717778616 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.718790615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.720149251 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.719658594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.720976083 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.722186893 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718405463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.720175581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.720856188 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.721596454 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.718521364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.719457958 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.721266981 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.718550365 seconds)
  done (took 29.173605529 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.719170674 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.723119225 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.716407586 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.71688459 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.712627578 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.71392005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.715528138 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.713808852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.711803105 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.714887519 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.714407324 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.714917215 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.714382946 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.715912672 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.711848334 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.71457737 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.71219609 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.712619027 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.715189273 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.717551598 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.712388932 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.711526585 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.71476725 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.714659938 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.711435809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.713056709 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.712353273 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.711581487 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.711271958 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.716190654 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.712201342 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.713215593 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.71216203 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.71160696 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.715664871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.711957922 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.715383839 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.715742724 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.714979967 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.715100181 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.714891348 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.712449108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.71537253 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.715394396 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.711685426 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.714667729 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.712943234 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.712562758 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.713852519 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.713241067 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.714889883 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.716065043 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.71508016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.716400971 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.715465653 seconds)
  done (took 95.940668147 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715416751 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715946782 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.711723826 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.714664215 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715312246 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.712202284 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.715655361 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.712678057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.713712443 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.715066003 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.714084398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.715656275 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71287375 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715818869 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.714568281 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715460789 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.713063725 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.713700248 seconds)
  done (took 32.505850568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.71329463 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.713687737 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.717316932 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.711666342 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.712002322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.714636542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711902539 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.714269537 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715654394 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.711535381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.711364767 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.71452565 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713850242 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.714117217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.713108472 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709999891 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.712181317 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71157794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710678599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709828747 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.714961028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712267386 seconds)
  done (took 39.333128471 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.711406468 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.713094394 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.728838097 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.733585357 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.733872593 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.746471964 seconds)
  done (took 12.013477522 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70982584 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711586696 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.709590034 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712090051 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710764653 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708264008 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708985065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70965155 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710650287 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707557283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707918821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7105904 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710486034 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711373176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708852514 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707936785 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706035227 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705539123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705981242 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709367371 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705212204 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708203336 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705670859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705495651 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705108102 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706083226 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708145182 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705352088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705268582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708290633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709026544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705433762 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708732977 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705197499 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708347586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708454345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705423588 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707710784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707248266 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70500567 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.707777562 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708102383 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708088692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706209829 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707375019 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705083005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705533899 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704825718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708318561 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707511064 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.70897366 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704894705 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707875394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707230029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709190109 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709366415 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705335347 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705858601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708325647 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705517515 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707040449 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709108919 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705591606 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705489215 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709230238 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705229022 seconds)
  done (took 114.346489921 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704753106 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.704818796 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705033701 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705184045 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705920298 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704982119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705120903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705214768 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704996541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70502857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707906241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705941358 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704307551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704627582 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70456481 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705364856 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704234105 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704966639 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705754082 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708060647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705207552 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705699247 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705622597 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704903804 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704603227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706587648 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703638267 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704381804 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704549218 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703742491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703837943 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703472715 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705832482 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.704375106 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706153764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705243943 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704975113 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703716426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705012564 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707276369 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705277721 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707602124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703987082 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703800442 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704595727 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705584293 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704841689 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705095834 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704392152 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704701555 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706206002 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705002789 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705581586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703665407 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704309181 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70333793 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703488153 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704047286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704911804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706556059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703746346 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704136226 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707351821 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704272526 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706099095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70410287 seconds)
  done (took 114.176674049 seconds)
done (took 2373.177729341 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.74473916 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.70421118 seconds)
  done (took 15.088217008 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.865134302 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.820222813 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.704734354 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.709161793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.705644114 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.704268641 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.725106766 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.704867821 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.704169683 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.703599502 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.704004635 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.891684878 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.760086173 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.705344265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.705296404 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.797405767 seconds)
  done (took 49.553941392 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.707048801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.70833778 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.718222044 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.709961151 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.707612683 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.722567597 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.741475142 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.710904715 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.742245151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.720492557 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.777804563 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.717832276 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.706153374 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.756540706 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.720746353 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.72161133 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.801736107 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.7851269 seconds)
  done (took 32.816715568 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786091198 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.712267993 seconds)
  done (took 10.145017702 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.704317934 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.729702316 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.744063469 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.721946374 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.715834359 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.714503659 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.746583746 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.703774961 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.728815368 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.743548859 seconds)
  done (took 68.894587201 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.710683314 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.706956135 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.706863403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.705097753 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.699963513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.703710477 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.705138956 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.701291619 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.369391665 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.742620158 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.713297763 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.710887634 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.706768567 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.707567318 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.704190915 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.729729842 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.811390181 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.703539818 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.703256622 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.712386251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.706642168 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.76302928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.718896028 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.707296713 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.736941142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.366430963 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.715415809 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.712361675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.809200814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.704618751 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.706216447 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.70880139 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.707801891 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.117223655 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.980339468 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.707893318 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.722546927 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.716585231 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.70404158 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.81362752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.708460382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.715230423 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.482654529 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.959864841 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.813565702 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.750072706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.015678037 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.725622461 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.708682294 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.736097744 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.710044826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.710336287 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.720440313 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.198675022 seconds)
  done (took 123.380109448 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.704701677 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.054584712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.872783062 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.703626582 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.991454205 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911838198 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.706620329 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752596594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.704615882 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939481407 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.961867316 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.812167171 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706886672 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.704228516 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.703395316 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.703639134 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.863740582 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779312233 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.706015484 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.702617595 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735792958 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948728063 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.827347548 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.707545441 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.733907177 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.917415772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.828303328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.81072501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.485067426 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.704352349 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769345537 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.704631173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.702371817 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704356838 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.86235986 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.800864924 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.791324981 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.70623773 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70323108 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.705420284 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.376528101 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.906589422 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.803494279 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.847783324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.906129823 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.912794016 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.490183208 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.705128715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456466796 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.872357454 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.936299158 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941493629 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.829257687 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.707216967 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.239372705 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.70471358 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.703395533 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.958240046 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.85302688 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.805073995 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706591018 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.706401914 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704996233 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952334326 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70744208 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.803284939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708995774 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.704245846 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804382792 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807147081 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.844433831 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919266491 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.736755684 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.626845583 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.246246492 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.954849582 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.773834556 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958545575 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.706410622 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.704078483 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785394111 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.553476034 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96460181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956774016 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960598683 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.743541275 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.427921859 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.705405625 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.935102615 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.930973902 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.967701271 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.941589516 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945312401 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.026014991 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.705470655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.704281079 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.916880875 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.845298233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.708693019 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.054789148 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941136056 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.257910599 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.72844344 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015568796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840975647 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.709220017 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.348709074 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.706372574 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939582324 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.750025639 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.70696757 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.70630879 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.929073131 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.697869531 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706461775 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.382987017 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.771349665 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.708344134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.942808405 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.709675232 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978829149 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711654344 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947164119 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.770838893 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.740224896 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.940008631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.941079778 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.710079644 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.953036019 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95615612 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.825368885 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.93239522 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.41535847 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.709527127 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99845392 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71160237 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.706630948 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.878013981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.707597314 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.85216931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.708388434 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.001846462 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730502189 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.93790308 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71009639 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966573187 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743000725 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758540957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.708773767 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838867179 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.707595609 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.533718773 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.866903869 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.710346579 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.707582692 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.525853665 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.705291368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.857096498 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.940848412 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.143711932 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.782269014 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.38004712 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.707069641 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789100837 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.732256256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.098293682 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.706086982 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.961397457 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.709747632 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.706822609 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.707981987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.949509201 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.891120719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.709383698 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.706833253 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.622738208 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.707587619 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.707138301 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.89286719 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.061938005 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.707402982 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911578268 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711530678 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.837690378 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.710682953 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.791106443 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.050908379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.708018295 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.707385732 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.710018734 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.708661264 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.70973056 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.97305345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.735496574 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.227894262 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.84854477 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986709385 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.021609059 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.959829682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.753686544 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.711095895 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.965204596 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.711592252 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.773329357 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.710817687 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.731431361 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941912815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.711125697 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918447896 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.991233687 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.560823173 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.759028304 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.712372094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708664136 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.708580875 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.856972445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798270177 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.71148802 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.710574321 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.825829952 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.831183578 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.920848886 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.710885051 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.804936553 seconds)
  done (took 867.378305255 seconds)
done (took 1168.885016782 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.708976812 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.711198104 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.701717005 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.712946663 seconds)
  done (took 28.484108192 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.718386917 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.714323996 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.715635932 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.715642751 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.716475531 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.713650822 seconds)
  done (took 11.942914381 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.730035443 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.70914271 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.712822627 seconds)
  done (took 20.801036889 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.781944807 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.098749789 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.819536761 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.136263087 seconds)
  done (took 9.486403986 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.717265545 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.715681619 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.716046232 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.71726152 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.717691448 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.719110649 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.717198789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.723067265 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.724484616 seconds)
  done (took 17.119975043 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.72312057 seconds)
done (took 93.193848046 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.775069242 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.800482483 seconds)
    (3/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.194592296 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.832828534 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.887576841 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.714753464 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.411173859 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.821601882 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.081432125 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.779253742 seconds)
    (11/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.742235227 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.74831268 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.841463618 seconds)
    (14/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.806555158 seconds)
    (15/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.022271946 seconds)
    (16/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.220974388 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.71943885 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.92580891 seconds)
    (19/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.8313858 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.976151362 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.884618211 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.821984042 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.890555497 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.175943912 seconds)
    (25/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.717614789 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.216148685 seconds)
    (27/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.711887196 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.418767262 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.841479268 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.727395418 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.452265228 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.094261075 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.743029095 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.819233284 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.945839519 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.73067753 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.174824507 seconds)
    (38/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.754994651 seconds)
    (39/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.065228746 seconds)
    (40/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.827428833 seconds)
    (41/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.018866715 seconds)
    (42/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.666209003 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.134529767 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.905732287 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.553483904 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.74926351 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 5.565447293 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.840631515 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.873039436 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.879469255 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 1.952541231 seconds)
    (52/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.884275232 seconds)
    (53/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.743184568 seconds)
    (54/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.799825887 seconds)
    (55/309) benchmarking ("sort", Int8, false)...
    done (took 4.642042382 seconds)
    (56/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.757628206 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.249891461 seconds)
    (58/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.717177035 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.389844214 seconds)
    (60/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870661605 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.158416999 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.989385953 seconds)
    (63/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.685204619 seconds)
    (64/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.797375849 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.888367231 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751383218 seconds)
    (67/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.898176952 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.873423647 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.735534946 seconds)
    (70/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.931528178 seconds)
    (71/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.8218812 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.73752357 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.034641726 seconds)
    (74/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.763236367 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.715985016 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.815398216 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.798120036 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.740816913 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.023922404 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.751844723 seconds)
    (81/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.833373641 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.746894543 seconds)
    (83/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.825169899 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.837966704 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.148745017 seconds)
    (86/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.027306044 seconds)
    (87/309) benchmarking ("sort", BigInt, false)...
    done (took 6.736079276 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.429461485 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.367895358 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.060920459 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.13950781 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.832800081 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.841897126 seconds)
    (94/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.643475522 seconds)
    (95/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.816777337 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.797077811 seconds)
    (97/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.795742359 seconds)
    (98/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.728657944 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.063665816 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.844082499 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.486197254 seconds)
    (102/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.757876621 seconds)
    (103/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.845263853 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.736411549 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.95932218 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.812623708 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.130072532 seconds)
    (108/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.449163631 seconds)
    (109/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.765128186 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.642958231 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.90013757 seconds)
    (112/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.878702099 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.043633365 seconds)
    (114/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.75492002 seconds)
    (115/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.172279548 seconds)
    (116/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.194009802 seconds)
    (117/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.72421885 seconds)
    (118/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.724414539 seconds)
    (119/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.027987389 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.675213626 seconds)
    (121/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.839043398 seconds)
    (122/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.151002197 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.72580793 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.254258095 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.802013218 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.076812852 seconds)
    (127/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.797937472 seconds)
    (128/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.994773446 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.671025447 seconds)
    (130/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.741453755 seconds)
    (131/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.931015452 seconds)
    (132/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.246797653 seconds)
    (133/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.770215722 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.757734848 seconds)
    (135/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.007415953 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.858463676 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.641720784 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.737877299 seconds)
    (139/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.862389045 seconds)
    (140/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.877519998 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.654255804 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.773768813 seconds)
    (143/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.738845888 seconds)
    (144/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.008988756 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.000800211 seconds)
    (146/309) benchmarking ("sort", Float64, false)...
    done (took 5.516285121 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.992671076 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.394146128 seconds)
    (149/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.819068079 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.739714399 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.159296525 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.095503424 seconds)
    (153/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.841516636 seconds)
    (154/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.763999141 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.138789231 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.739832358 seconds)
    (157/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.961218568 seconds)
    (158/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.099641913 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.727405079 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.265332492 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.079860027 seconds)
    (162/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.742793555 seconds)
    (163/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.869492992 seconds)
    (164/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.721909076 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.921241334 seconds)
    (166/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.746586698 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.722328442 seconds)
    (168/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.078131111 seconds)
    (169/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.872139046 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.826360139 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.967712387 seconds)
    (172/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.837042968 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.015146928 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.740635598 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.462717802 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.752427507 seconds)
    (177/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.124241874 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.833722376 seconds)
    (179/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.07619931 seconds)
    (180/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.311590826 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.143230675 seconds)
    (182/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.976847032 seconds)
    (183/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.214985525 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.718004771 seconds)
    (185/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.12751238 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.756803106 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.737953276 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.810829779 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.818611949 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.758607237 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.096299715 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.744133677 seconds)
    (193/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.838995585 seconds)
    (194/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.918883568 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.74581844 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 3.567567208 seconds)
    (197/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.924896175 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.928069905 seconds)
    (199/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.874712826 seconds)
    (200/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.83448086 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.148475881 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.765655755 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.877677967 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.985301997 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.804944162 seconds)
    (206/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.030354757 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.925428715 seconds)
    (208/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.762390957 seconds)
    (209/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.763642354 seconds)
    (210/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.577930214 seconds)
    (211/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.988794665 seconds)
    (212/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.742295945 seconds)
    (213/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.077418727 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.118967362 seconds)
    (215/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.742316411 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 3.295159647 seconds)
    (217/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.755624292 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.75557672 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.955872469 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.972900467 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.739616745 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.924859082 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.790196787 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.867569647 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.69101838 seconds)
    (226/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.816207029 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.9163123 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.305708826 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.771617195 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.251701139 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.873973882 seconds)
    (232/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.126231743 seconds)
    (233/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.732889018 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862239614 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.740792944 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.371685821 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.441825418 seconds)
    (238/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.743978583 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.741287354 seconds)
    (240/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.877133417 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.742321759 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.987457185 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.941761205 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.743316979 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.823302736 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.002918827 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.765763614 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.142335842 seconds)
    (249/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.853821091 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.823457053 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.004916893 seconds)
    (252/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.808843744 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.00670514 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.061762828 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.817535375 seconds)
    (256/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.935886516 seconds)
    (257/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.764268018 seconds)
    (258/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.901053225 seconds)
    (259/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.854566085 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.840140154 seconds)
    (261/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.177121455 seconds)
    (262/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.751269332 seconds)
    (263/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.760038273 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.05961757 seconds)
    (265/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.034394807 seconds)
    (266/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.264128592 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.363476887 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.73336905 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.100610712 seconds)
    (270/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.981256936 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.768898889 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.766318483 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.844283702 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.91910723 seconds)
    (275/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.73455424 seconds)
    (276/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.541628282 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.769529049 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.116837694 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.041070696 seconds)
    (280/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.774878447 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.729478857 seconds)
    (282/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.362355389 seconds)
    (283/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.882202514 seconds)
    (284/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.986476155 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.756239787 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.744758657 seconds)
    (287/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.991185292 seconds)
    (288/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.8443189 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.528926114 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.934540925 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.589922886 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.407581418 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.992444992 seconds)
    (294/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.884291548 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.120491243 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.784964296 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.745365135 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.957971262 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.749440626 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.734835335 seconds)
    (301/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.251613157 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.769572865 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.812625034 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.745884258 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.247305581 seconds)
    (306/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.884061862 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.753724215 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.842594543 seconds)
    (309/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.989546052 seconds)
  done (took 967.541097827 seconds)
done (took 969.465983549 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.778464553 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.772766712 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.753727279 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.775451064 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.865886729 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.782094107 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.764936843 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.758148902 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.801994006 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.804158155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.751869162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.7810257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.757565429 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.756549672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.756787327 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770218305 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.071768231 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.790008954 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.774854064 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.764957885 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.772171929 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.751735652 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.804799624 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.78147583 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.76014233 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.758429016 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.75786996 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.776109497 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.867079443 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.759033179 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.758346984 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.767926583 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.071287721 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.787997968 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.752098132 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.776312774 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.766716586 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.765906246 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.760175918 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.78793827 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.156874974 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.795672481 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.757155596 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.757454235 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.756782303 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.760442455 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.757542746 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.763250657 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770618534 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770241194 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.148205858 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.818491972 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.758779973 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.757563336 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.768205681 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.757037458 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.760955874 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.772686481 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.775707694 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.773048079 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.052965748 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.793349735 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.75880331 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.774808484 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.765043305 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.183590606 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.795179161 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.762317478 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15999576 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.805564941 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.182555075 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.808232177 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.759014597 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.772677299 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.789983327 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.072475115 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.785088005 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.757805442 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.76676887 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.756581925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.768192457 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.772210104 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.763861144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.759452951 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.778789196 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.787848427 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.769300646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.759889275 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.769064694 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.77862045 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.767726304 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.770177021 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.763088441 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.756001675 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.769425957 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.763506399 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.7624415 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.761257735 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.763946866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.770207595 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.156513503 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82006158 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.756593921 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.756037833 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.758492385 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.773652434 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.158855285 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.803870559 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.781584534 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.807055844 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.761769532 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.054352355 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.795311108 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.775893605 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.770046609 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.763431355 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.755093746 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.05818457 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.183827566 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.817116439 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.761257453 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.757209987 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.775554282 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.76272789 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.757283052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.075117661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.794485161 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.775356627 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.881473398 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.772850784 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.792159803 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.75734669 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.763836963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.795898527 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.779918602 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.792591319 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.764377481 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.777169303 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.77652407 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.759137113 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.771770626 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.772027537 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.760862113 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.766339221 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.756873504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.793866393 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.774348071 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.774591078 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.782638958 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.881748668 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.76359262 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.058207737 seconds)
done (took 276.928977193 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.831318548 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.75212067 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856157507 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.75913324 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.840179015 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.844742337 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.755539928 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.754734257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.754938171 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.129699499 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.758798266 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.755781104 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.756591962 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.75600352 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.840975086 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.759061187 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.755791993 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.093347899 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.759517101 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.831395517 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.756239371 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.758461016 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.760019104 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.137045164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.752872514 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.753539771 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.83265314 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.759553268 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.100493467 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.755306314 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.756310802 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.100515115 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.850848233 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.778072831 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.769805065 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.766485284 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.840741517 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.7646126 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.840740759 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.840116377 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.858461978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.799862527 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.760263606 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.757103 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.763358918 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.761041741 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.757283595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.787734177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.755103877 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.757174626 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.095506875 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.769443946 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.758105684 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.758645597 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.758290049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.791919862 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.757176539 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.762555191 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.852372741 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.761280414 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.823358763 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.140138597 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.133736234 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.760975566 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.762038435 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.760910551 seconds)
  done (took 176.917035338 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.826492422 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.840667823 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.826905654 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.766837637 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.813181237 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.829117199 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.766635324 seconds)
  done (took 14.364574805 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.767551406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.761096371 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.812846879 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.812940878 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.760766085 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.916818898 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.761565476 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.775738677 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.759535645 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.81269912 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.763079399 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.761406992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.768240707 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.757502852 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.812540468 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.773687054 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.878871056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.764146042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.76317087 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.913050586 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.760198628 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.769176045 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.795138308 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.773947778 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.763287239 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.769570897 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.328841688 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.763525857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.759259133 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.762131545 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.759999363 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.80260797 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.764439725 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.760341436 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.760331992 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878772447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.762665822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.761381786 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.763332286 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.757588808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.763056669 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.763094848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.764427423 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.760890838 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.76390655 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.785899642 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.762502528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.764114551 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.764772558 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.766504043 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.796952365 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.762791924 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.760013041 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760884553 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.817493329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770920965 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.764755024 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.761265605 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.764690747 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.760744952 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.916359778 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.815199393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.762979874 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.813806144 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.762909586 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764421651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.767154093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.76441496 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86173768 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.764941484 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.814174613 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.761926657 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.921130707 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.787382549 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.764212969 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.767548724 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.767812772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.764875599 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.768792148 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.772114057 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.763426162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.766628738 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.770840231 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762113396 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.762185748 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.878607911 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.87159773 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.762885742 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.777574591 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.773393898 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.763773722 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.801358053 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.766221674 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.762741482 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820739641 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.882233884 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.820400932 seconds)
  done (took 195.380493169 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.769534763 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.773338437 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.767212956 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.782476971 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.767248455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.767864259 seconds)
  done (took 12.326640317 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.767334081 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.766596567 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.765535161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.765480313 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.766274897 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.767741726 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.766722589 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767913521 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.770343224 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.766965368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.766757851 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.768308985 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.768311337 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.767246241 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.767657394 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.765951546 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.767448081 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.763797026 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.766218113 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766077622 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.923531222 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.766787928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.768043633 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.769584283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.773357643 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.769646404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.775588607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.767213339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.765870708 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.774584124 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.772199467 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.768438142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.768124541 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.774441366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.773687816 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.769961367 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77301225 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.771449174 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.764431108 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.770252048 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.770213649 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.768691896 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.768555084 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.771375981 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.772820918 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.774108741 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.77373948 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77672292 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.768728575 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.769778242 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.768610619 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.767427324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.768392857 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.77069836 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.771868737 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.77587029 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.773885387 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.770073321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.769494562 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.771508515 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.769170561 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.769629097 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.771087667 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.774183792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.767631824 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770775898 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.770094483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.772857648 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.770543509 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.768435509 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.771313951 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.766435069 seconds)
  done (took 130.265080956 seconds)
done (took 530.949290074 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.92897846 seconds)
  done (took 8.631000106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.828225471 seconds)
  done (took 8.571668845 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.305526842 seconds)
  done (took 10.002463041 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.789538125 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.791991668 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771238819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.765241791 seconds)
  done (took 28.83826599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.80814603 seconds)
  done (took 8.503783538 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.78212896 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756279779 seconds)
  done (took 15.269989171 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.815629987 seconds)
  done (took 8.511161264 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.844675287 seconds)
  done (took 8.565667427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.763735391 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.794002042 seconds)
  done (took 15.267964803 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.743705118 seconds)
  done (took 8.438733593 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.460287095 seconds)
  done (took 11.251618567 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.777855417 seconds)
  done (took 8.577383407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.802400174 seconds)
  done (took 8.498467028 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.823903054 seconds)
  done (took 8.520164762 seconds)
done (took 159.135256354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.761996158 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.758909224 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.759839624 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.757557404 seconds)
  done (took 28.733545162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.795887413 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.796661439 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.797571443 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.808815632 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.799633329 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.798231556 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.789303626 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.788909386 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.810504194 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.799472639 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.798260332 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.799513646 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.799094725 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789827458 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.800858531 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799840529 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808747487 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.798828966 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.789948691 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.800120257 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.7646478 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.808208305 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.801368895 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.764722926 seconds)
  done (took 44.806230754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.961669981 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.835454717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917529724 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.816087969 seconds)
  done (took 9.227578764 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.81571976 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.823067446 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829752973 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.868749193 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.894716268 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.827574279 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.788837929 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.786073722 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772382439 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818079832 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.894126678 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812823571 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.904174314 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.766552248 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.943107406 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.766509515 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765445067 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.818351306 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.871619534 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881414893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.766138785 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.816965363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.821885027 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.814023416 seconds)
  done (took 45.566522067 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.764462117 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.772322545 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.771408746 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.767933235 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.767290803 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.765814944 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.771909406 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.76659597 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.786023118 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769353974 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.764900041 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.764648709 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.76479375 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.765583631 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.766350326 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.777446831 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.778738269 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.765379664 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768876165 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771679216 seconds)
  done (took 37.090303087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.76115909 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.616333112 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.11203467 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.017398224 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.763556064 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.763202754 seconds)
  done (took 30.734151423 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.780778521 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.773394443 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.767303389 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824963197 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.910819824 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.775679428 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.767525879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779231962 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.814583837 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.833746757 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.790810866 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.796344265 seconds)
  done (took 23.316179213 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.764133899 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.771622264 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.763827438 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.785706119 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.778569524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.775619371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.773758343 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.762859062 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.78226834 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.78670241 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.775201618 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.779491726 seconds)
  done (took 43.002483207 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850707927 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653745702 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.410136811 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486744247 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298898231 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972047746 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.2924257 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939205023 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.766344265 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036372736 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.38680717 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011963681 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016945391 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764331068 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.835490704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.226758904 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063189884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003669383 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795163084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492271399 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887505578 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349923491 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.49151884 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.893127248 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975860182 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.893763172 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.024021145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.720572903 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898992095 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803339366 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773482921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765586842 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037545891 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994085329 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897592903 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774182355 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.420858402 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.486153711 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.809992543 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.483386099 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.468551452 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.902798445 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773072358 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.7664692 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.697756494 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.307858953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948984028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.769385587 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.46668369 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766632673 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775495715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856332671 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.768229812 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.579926405 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718750965 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042419812 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.762138262 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771882042 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332855326 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874288348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398445572 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.707784638 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.856899908 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.470171461 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242491825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.924832562 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.768869926 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769329936 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698779054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.510804867 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893735237 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910595424 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.786101495 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414488754 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062878426 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.452161582 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853582764 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069782857 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.671288059 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.706935439 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992368982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.723367957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699667553 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.606916043 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69900151 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049118855 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808146828 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.421880832 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816767692 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.940922002 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777323727 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787193513 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774576679 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992255369 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.649167248 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769307323 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.345241541 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056978442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791428192 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.943203201 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701082159 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.772394951 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021092948 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.977854123 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02682648 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.239389475 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935403343 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768197145 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.856529918 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.698039829 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.782762786 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.053960771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835297347 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86854042 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904442345 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.729681591 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083022439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802190258 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.942749252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.411911538 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03761928 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105046554 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02346835 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851257715 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.7716374 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.76991214 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.542087711 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396987569 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993111121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.768631133 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292318683 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.783187008 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.770510678 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703478645 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.433066614 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.421389235 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.882261401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991546603 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.752170908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047378961 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702444667 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913898543 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.87914207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.98921175 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.424886981 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.856605295 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026931829 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279326322 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.034699028 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783873605 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788765763 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870387341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79160144 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.222911799 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.027008267 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.773540494 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774025554 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536117651 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852638966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780415862 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.775690522 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569484983 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058906917 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.803747913 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773548793 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711688016 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.785536336 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854924495 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776196878 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780993486 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.298471785 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528904577 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.78143897 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.43725967 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000344699 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779660651 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.512272142 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963377883 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.863408842 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05309695 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839788948 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.705016532 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.473762244 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.476832957 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773373106 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706035524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.7740344 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781866898 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.783330023 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.992937205 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.066579192 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825567977 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.469675359 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.891829342 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784566363 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.777833304 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777141338 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.270588618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877216852 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409356442 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784300256 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908852431 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.786469794 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705412104 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.775978345 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781990752 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.773904015 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.727466305 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826515314 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.524469239 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111780276 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031323034 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.42188785 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793758751 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.507722402 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.9060252 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.795370505 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365517702 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769445911 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.915627782 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851461871 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785480309 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.523587527 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.563882596 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343229134 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08547505 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101547342 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230010768 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.182049091 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.129893667 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951259166 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007907002 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304987819 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836070077 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.954883674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719830977 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864537702 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432390907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135800407 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789228726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00075408 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166486156 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.432786945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943761436 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985490048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809375314 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.6026411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808167057 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.299435593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929494344 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.373465138 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004742642 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952913536 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373075696 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.892685197 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.77629263 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.248685958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870150166 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.483552781 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138201563 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33265077 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.425027067 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157783379 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.781649023 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221409108 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144657706 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.131821516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.873460492 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711635756 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786223077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786685128 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.777314899 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.754745536 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.680030673 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.053622287 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787737604 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011594445 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.074708695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059873965 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.689702761 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.78268475 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778302391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092823774 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.537668175 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021051875 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.144148308 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.357779722 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786280951 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710680952 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713225926 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.480837153 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788340023 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752577088 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011031884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.891546961 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733311467 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.181541992 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092531324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031889932 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.793070203 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.062079392 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061942298 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5134615 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807796299 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.879184347 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.367416663 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.496259567 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.000603254 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014218673 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576778495 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00849582 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.445024589 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.763861459 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.779328675 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992647356 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000272796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.424577392 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039068525 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.507422782 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.795609191 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154319751 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844841916 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.43264476 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.999526142 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.87208595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789526567 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85995814 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78901279 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.792220649 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790229203 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829702783 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457049278 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921875294 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.794505135 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870678764 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893367344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371569191 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.791733532 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069624109 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145351371 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125630925 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850449995 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782073302 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784823925 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713548331 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919228304 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22946045 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054403583 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.909720444 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.925046875 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806338586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.373718797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.086863309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095683499 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056657393 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.677763624 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782176329 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.869787927 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.00431415 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791135521 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.991415622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017981784 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113390451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257457342 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.937094931 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.06450142 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055847318 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157319391 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784084852 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373514777 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.796465265 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318714931 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.829864436 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.441046152 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076869391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792409606 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009941847 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805585919 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.98372956 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234684896 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.543171033 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.150614089 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.781775593 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.848704543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068386249 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202445092 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10227309 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862603008 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793458526 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479293419 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92173806 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.728027297 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.047211794 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784511984 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994461728 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495852779 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792071933 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078986685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100196037 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.781143447 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.758629925 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847088933 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.793334836 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005328043 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066649385 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039450529 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792421579 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.793877151 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.599796073 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077088412 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851678122 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722818621 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.789321334 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885491697 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032999295 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804226341 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301658042 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.487859302 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097476839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70661151 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806647049 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.210414587 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.247537289 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143522493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.317000683 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031372067 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348184314 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.649156614 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161581882 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.789932298 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.199450394 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170167557 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.789755547 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.309977299 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898303301 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.066043588 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11339356 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.796850666 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602851456 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.837079036 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011939412 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378131404 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725435464 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.794210251 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.848198473 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786564437 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.913885679 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798423543 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.794100011 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.662113073 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.626692137 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276765167 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791895072 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908513493 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.3567996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.363883012 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894727237 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942409066 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797178667 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.508988086 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.07818937 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040536862 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.306604852 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.862192512 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790590867 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787751016 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.716144748 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.9846007 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.983622769 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092014953 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.159203041 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.898261162 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790483063 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.00007174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9972321 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.413539285 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950092431 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.178779209 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901711688 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.719028932 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.499641246 seconds)
  done (took 1634.935475831 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.788767698 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.801931625 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.84042363 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.82018114 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.826244546 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.863993659 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.873937096 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.812876444 seconds)
  done (took 56.354711707 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.790921271 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.978669354 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.797107883 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.790504068 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.849184702 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.791790729 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.978852563 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.813892979 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.862665417 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.798985484 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.790330343 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.835694466 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.117936569 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.8148728 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.792921729 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.801483346 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.822205703 seconds)
  done (took 73.199525491 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.79250778 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.965274077 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.814389596 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.813497046 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.67024471 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.805119664 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.743076042 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.801656296 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.794373992 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.959352702 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.12458286 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.845172307 seconds)
  done (took 88.857872508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.80857353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.798493417 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.797717654 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.800248823 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.796975366 seconds)
  done (took 10.741170787 seconds)
done (took 2128.266806812 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.031464099 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.977643649 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.020760956 seconds)
  done (took 5.729652038 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.943224071 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.987994167 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.106969763 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.1148092 seconds)
  done (took 9.88960869 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.080970319 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.167471731 seconds)
  done (took 5.97941924 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.119429195 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829035464 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.214184573 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.797325314 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.796467169 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.796496856 seconds)
  done (took 22.128344882 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.796934419 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.799511596 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.800947571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.797136138 seconds)
  done (took 8.930713468 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.780933504 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.483682015 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.782080471 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.794619864 seconds)
  done (took 20.572017069 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.544040053 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.920214638 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.543516938 seconds)
  done (took 8.742163022 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.275684221 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.445720726 seconds)
  done (took 9.45404198 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.96053118 seconds)
  done (took 3.695804902 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.829728391 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.068909806 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.324039063 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.374203374 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.434882828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.109757072 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.149833137 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.031544092 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.260588787 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.292413812 seconds)
  done (took 24.608286616 seconds)
done (took 134.639761721 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.3743544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825212442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.998391581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.168223597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.039955929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.999500737 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.017402393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.169577036 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.865609268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.859490137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.18546467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.040659308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.970273026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.817430424 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971707488 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.817576069 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.029421378 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.174877352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.847149559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.077684629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.031348916 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.810198145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.000746219 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.824129614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036986438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949145064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.354829658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823712769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.98267623 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.364212967 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.952141393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.222008297 seconds)
  done (took 166.335005455 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.801470536 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802572551 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.798740081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.797728307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.338618902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.799923672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.798388519 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.801361869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.258377424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.260302067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800477548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.337360416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.803162749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80031133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.800520831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.800193842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.424358436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.800420778 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.80074293 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.802277403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.801013255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.168431206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.800817051 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.177226261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.414555725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.800652279 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.801222034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.803517402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.802797276 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.800489942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.803340698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.80132123 seconds)
  done (took 207.341809414 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.801043713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806364277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801805445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801632742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.804376789 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.806319838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.800799937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.800856087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420506399 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410657017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.802608049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.804405619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.807074481 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.802681183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.809244766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.802476047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.807471615 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80680564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.809676135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.81252108 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.815145402 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.426621839 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.815909728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.403840662 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.80830928 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.810969508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.802623172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.811131121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.813951965 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.813054994 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.82046299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.801685016 seconds)
  done (took 218.000801626 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057832238 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.807210168 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.806604617 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.737522411 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.807826484 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.805275959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.801377515 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.060989075 seconds)
  done (took 18.637331343 seconds)
done (took 612.042030799 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.2812179 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.113598225 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.989604775 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.834277889 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.064851011 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.866089464 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.82788386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.897668114 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.463116844 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.901203287 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.482639845 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.853923039 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.566539559 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.860842397 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.954780679 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.883221733 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.413146889 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.495439164 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.010922676 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.893237329 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.005394513 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.779818045 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.916877089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.502588368 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.587484979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.844911185 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912016797 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.412466945 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.842489727 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.993336775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.558488241 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.161605481 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.847819138 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.827785732 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.887536411 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.868847508 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.128235998 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.846743777 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.957546101 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.591845027 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.896352287 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.379707397 seconds)
  done (took 100.142407946 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.801354634 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.798339402 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.798549058 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.798820248 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.796380287 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.800064403 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.798071204 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.79734014 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.799835063 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.796993831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.79637909 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.800284925 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.797682528 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.799651216 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.798298938 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.80006702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.799797831 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.799603471 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.800784369 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.799753284 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.797862774 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.799672928 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.813829508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.80098043 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.800386196 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.799357479 seconds)
  done (took 48.546465125 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.812294081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.977285274 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.056371157 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.836752168 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.81448509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.814520068 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.831623488 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.822120423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.814654442 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.814248389 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.920271248 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.821472818 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.832803724 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.055397286 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.83290445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.814866268 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.813642117 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.812133319 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.985553169 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834360257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.836802982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.819825392 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832883752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.830175227 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.81620404 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.815074611 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.816897159 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.281141068 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.828305921 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.918609631 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.87415981 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.842049792 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.2224092 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.061585725 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.871952021 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.824225115 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.817658825 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.922292688 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.821661434 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.815397832 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.834043891 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.820082807 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.050166444 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.329997746 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.833257664 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.818189651 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.292159256 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.936265282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.858936974 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.825971594 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.05530463 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.833745459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.816335937 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.818145791 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.848909794 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.818696012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.811117816 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.172460145 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.828866893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.832363649 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.820606456 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.816903738 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985986518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.826145769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.977428855 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.82844903 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.822013761 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.815775239 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.055113295 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.834999346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.32868391 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.834867665 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.815744632 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.921289243 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.985650096 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.32280364 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.831369826 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98911433 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.241605538 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.844077179 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.824705451 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.271100037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.849529152 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.828320022 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.818861836 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.817667431 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.817133155 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.860815849 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.834323613 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.265855996 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.337569896 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.193749827 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.846816387 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.833506179 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.818764899 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.170594501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.830791178 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.816527127 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.050695475 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.342845518 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.837298955 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.82528871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.316543475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.838168347 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.837902399 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.828850457 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.05836915 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.836614606 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.863425886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.818265193 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.826159477 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.820997351 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.836075226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.825482846 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.821336775 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.311078567 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.945508206 seconds)
  done (took 226.145013469 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.815123738 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.827024613 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.813418129 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.828923297 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.813087592 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.817677515 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.813929715 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.811152326 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.816513882 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.814122232 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.812049628 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.814161598 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.817557242 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.817411854 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.826659229 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.819984297 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.421711769 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.810503644 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.815575729 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.838994715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.473705989 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.820187688 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.814025239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.811590684 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.811928525 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.813262218 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.821052249 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.821952227 seconds)
  done (took 165.908745041 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.817479129 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.933671952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.837298344 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.848929199 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.829370335 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.817721043 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.844838643 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.836272629 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.826217922 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.816681991 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.819186354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880969103 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.82941822 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.91837325 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.85495741 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.850812369 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.924559994 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.829165755 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.816939548 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.818387525 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850160003 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.814254699 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.880821867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948158594 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.843126179 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.937819389 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.826476691 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.820590267 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.819975669 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.939212929 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.841550349 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.881530768 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.851321724 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.839518295 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943390681 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.942641869 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.930929505 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.852593295 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.826274358 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.818355938 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.818915075 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.808300384 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.938859305 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.840912584 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.82309995 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.92493455 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.843828098 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.821651029 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.829637185 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.819816651 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.833201394 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.840601103 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.89177764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.956150132 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.859920335 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.847068199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.848988094 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.119799391 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.828470735 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.92232889 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.817876439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.939998228 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.848985315 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.80906069 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.821475082 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.827062467 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.850187642 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.853268126 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.927042692 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.833897606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.921486781 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.860145987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.826487542 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.820748102 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.822908408 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937118711 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.944974633 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.858586532 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.859529725 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.852347258 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.816985754 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.823149403 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.810736115 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.839570523 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.827687018 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.938236805 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.94428955 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.832238581 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.82309578 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.823223073 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.822273595 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.847477606 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948573771 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.86217615 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.917811351 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.891786851 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.901299699 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.84012606 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.834220742 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.828548933 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.886208607 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.839611686 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.835212647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.171786899 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.894024954 seconds)
  done (took 197.564747906 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.283668164 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.876657454 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.88119934 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.144464634 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.173806457 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.740328596 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.873364679 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.87071943 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.897897231 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.065641873 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.952791888 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.891746871 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.863233013 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.84923059 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.873301349 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.895075707 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.882011522 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211762065 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.982235115 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.015497603 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.858653392 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.163937627 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.155254411 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.266375182 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.913227725 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.204016836 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.548378334 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.02026272 seconds)
  done (took 60.11778542 seconds)
done (took 800.147132474 seconds)
SAVING RESULT...
DONE!
