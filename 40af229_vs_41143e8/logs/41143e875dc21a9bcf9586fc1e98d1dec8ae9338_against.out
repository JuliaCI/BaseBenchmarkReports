cset: moving following pidspec: 8691
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.167440038 seconds)
loading group "string"... done (took 0.455745868 seconds)
loading group "linalg"... done (took 10.24589355 seconds)
loading group "parallel"... done (took 0.222996106 seconds)
loading group "find"... done (took 1.881827075 seconds)
loading group "tuple"... done (took 1.975555215 seconds)
loading group "dates"... done (took 1.331574841 seconds)
loading group "micro"... done (took 0.453926603 seconds)
loading group "io"... done (took 0.435869467 seconds)
loading group "scalar"... done (took 44.50372905 seconds)
loading group "sparse"... done (took 12.657476182 seconds)
loading group "broadcast"... done (took 1.036312586 seconds)
loading group "union"... done (took 8.011862534 seconds)
loading group "simd"... done (took 2.00064818 seconds)
loading group "random"... done (took 8.101954767 seconds)
loading group "problem"... done (took 2.365848372 seconds)
loading group "array"... done (took 23.55913924 seconds)
loading group "misc"... done (took 0.879074642 seconds)
loading group "sort"... done (took 3.322911915 seconds)
loading group "collection"... done (took 14.548687506 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.601340418 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.109806358 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.173768273 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171681332 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239610936 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138654387 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.136328045 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097588437 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.826032554 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.177046181 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125014992 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.35841339 seconds)
done (took 6.017912916 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.234000733 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.084878056 seconds)
    (2/2) benchmarking "String"...
    done (took 0.148097174 seconds)
  done (took 1.065888062 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.089967327 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081321961 seconds)
  done (took 1.009157491 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.082142934 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.339348433 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082690655 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.480205242 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143880942 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083684917 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084474729 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.082080211 seconds)
  done (took 2.132552457 seconds)
done (took 5.360079457 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.376138253 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.820325101 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.470017338 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.139938372 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.273567369 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.228867947 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.199239676 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.216286377 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.086480606 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085933768 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.169783281 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.397586837 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.294796009 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.897378923 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.098478579 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100808442 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133342282 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.774365881 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083987967 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.134826332 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.363012894 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119843835 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105541599 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.145630574 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18885071 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105113426 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160809578 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083270077 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.68696371 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123342029 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.205432642 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089344926 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156488009 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.126872548 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176371132 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115234176 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672382039 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.193286704 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.14104778 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.084607789 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.694891442 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.104767318 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.168984419 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.09647433 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085910257 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.169055574 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120857873 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084208601 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109321366 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084167379 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165046119 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.633593995 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103408221 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195796025 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09895904 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694578316 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10491083 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.254723161 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132692366 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110006437 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083251332 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.08356194 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153391812 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089398793 seconds)
  done (took 19.518682572 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147393813 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137531209 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085244859 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131123105 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099775787 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083134857 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083299282 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085743014 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089109685 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.143942546 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089850606 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150709143 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083067875 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082273152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.147412843 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202241513 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090533582 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.095785342 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088491236 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105353638 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114339315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087988162 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083802865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08351892 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140269645 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214412189 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114885429 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115768082 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.082313027 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09723241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.136173289 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130901195 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083346738 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081906847 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121027877 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125855055 seconds)
  done (took 4.898297236 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190515782 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106118444 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162740433 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.134357312 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114144453 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.150028258 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151306415 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.229213625 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.664429634 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.161824864 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167571275 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131315816 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09987276 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097702941 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089108953 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084596842 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.551745332 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142138877 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110223656 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169506306 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084923021 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087681644 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.400556043 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085155101 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085314884 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084922626 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086214895 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16309821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082722692 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.577498399 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085254628 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081193343 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.149186065 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200347419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087562276 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119542645 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096977761 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085006746 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.085046297 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08472649 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084098754 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092102777 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.180658992 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13586094 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125351145 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083219585 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083463638 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188793392 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083361633 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.092326923 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.798868624 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.173837239 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.151078469 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083394627 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.161720621 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103268737 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086464622 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083099295 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.141696605 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.092951077 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083642201 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086277707 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084033366 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083956453 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083503487 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.215767854 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.089098844 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10301796 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08555265 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084534561 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.353167848 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085992446 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089915029 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088036658 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104290914 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083518514 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084135478 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084998569 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084648445 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084864555 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118989075 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089625955 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087486345 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146127011 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.085493581 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10405465 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11176093 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099497096 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086340982 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083706391 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116615448 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083868213 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083737918 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.160684555 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099511437 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103206661 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086614525 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147789026 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086815136 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163668574 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083706037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104622801 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083712366 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087609031 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129555994 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085160208 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08482755 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088784637 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084648965 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086094013 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146405946 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084763918 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08619077 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084438653 seconds)
  done (took 21.146804886 seconds)
done (took 46.404864509 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.347654113 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084507665 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083885873 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084343597 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083847498 seconds)
  done (took 1.601276881 seconds)
done (took 2.491228223 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.184640503 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103308604 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097475273 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.09910995 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.106578029 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100916595 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085270958 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09939343 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.122648997 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098008012 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101731769 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.087300534 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098677169 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.101348921 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099338288 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082826575 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.102104487 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099856219 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115156716 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.085350442 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084724948 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100761225 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085513649 seconds)
  done (took 3.259705252 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096950773 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102816902 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093882669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09517429 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085150979 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094980787 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094145393 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102172776 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094445398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091910959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083292538 seconds)
  done (took 1.93166124 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098337114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099698053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085735478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095708825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085485929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094834928 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094711811 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098688884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094901665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092177843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082772465 seconds)
  done (took 1.920893046 seconds)
done (took 8.007054614 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.446758885 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.675146257 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151337034 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.203046207 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.24467825 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.180122921 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.282480045 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.164589339 seconds)
  done (took 4.356500404 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.126366888 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086558797 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.147922447 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086553053 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087508146 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087909828 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086245045 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085093385 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085915452 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092531972 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088975312 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.105586716 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088254393 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089361333 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088339672 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086903724 seconds)
  done (took 2.474539217 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.130698184 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112118642 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088862955 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.089056585 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090739416 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091510559 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092335174 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088586065 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086588005 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.087940294 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092193215 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106975654 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088582819 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087442824 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089535361 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11005489 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088348456 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089925379 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106864425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090965701 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089086897 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.087613162 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087880902 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08849847 seconds)
  done (took 3.25992978 seconds)
done (took 10.989212776 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.103380096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085991823 seconds)
  done (took 1.087369564 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.162224863 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154587937 seconds)
  done (took 1.221619428 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09115558 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083894965 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090752164 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.086447866 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083833334 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084030973 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087628376 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084346022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08393164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.084224476 seconds)
  done (took 1.770027965 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087564207 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086157604 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088035813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.151540882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.086048994 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084064644 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08534265 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084363066 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084245238 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082998022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083880849 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111746643 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084720111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091659145 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085049653 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086041736 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085707481 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085077097 seconds)
  done (took 2.543159166 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.084941464 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.084664875 seconds)
  done (took 1.080116184 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084264994 seconds)
    (2/7) benchmarking "second"...
    done (took 0.083523146 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086089763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083684788 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083611717 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082899579 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083036041 seconds)
  done (took 1.496809855 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.44701877 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.206069099 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294208433 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103121719 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085404939 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.292749232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.083526334 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08365852 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08904273 seconds)
  done (took 2.630765937 seconds)
done (took 12.737789835 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096782421 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.163600486 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.487718199 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105591016 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.085077914 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151288618 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.18575906 seconds)
done (took 2.196598282 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.25181123 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140261889 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.10932061 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08550595 seconds)
  done (took 1.498278158 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088990003 seconds)
    (2/2) benchmarking "read"...
    done (took 0.093103562 seconds)
  done (took 1.101880006 seconds)
done (took 3.522805046 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085874166 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.106764928 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082839382 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083725261 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.083374471 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08337602 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.08357169 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083207756 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082731491 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083026704 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085447284 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.082748578 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084068972 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101467433 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084206726 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083830488 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083328394 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083776086 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08415799 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083699264 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084011076 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086103655 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.083732835 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082901653 seconds)
  done (took 3.006624226 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08574668 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084120979 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083326242 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083326834 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082685267 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083069158 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083081385 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.083991229 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085566429 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.083396405 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083381597 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084551569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084806002 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084461249 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102321325 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.085376293 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085687485 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085601097 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084580896 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087075162 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08475579 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084581401 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084357053 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083683146 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084917241 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084091686 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084209686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084100988 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083890974 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103000097 seconds)
  done (took 3.492657177 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092138565 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.082836008 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085577612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087410176 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084513601 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084441956 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082159831 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084623967 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.084951442 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08416126 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085200276 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087150139 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085391043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08507259 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.10311522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.085710165 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087230978 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085934975 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085269278 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085163491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085121551 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085315994 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086622849 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085158748 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084681177 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08215195 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084365851 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083784012 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102308437 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084914047 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085581491 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085031859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085522704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090720123 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085137924 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085103609 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085618167 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082271356 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085562827 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082944607 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.082474815 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084320113 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085227182 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104829777 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087719372 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085545715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085584627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085548676 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086656686 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085914519 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084251369 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085232112 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085437061 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085035667 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086743031 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084377622 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084791058 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.100398111 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085969096 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085653369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085317509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082088767 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085187026 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084812411 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089366161 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085831687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088234403 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085433821 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084997392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.085780856 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.085496582 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107484518 seconds)
  done (took 7.164488865 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086402269 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085407813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084770336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084827937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085266897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.086411668 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085146063 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084385188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084259623 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084474434 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084776495 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084692928 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084105037 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084451877 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103334189 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085555646 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087676893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085195406 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085333185 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085012872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084826057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08539694 seconds)
  done (took 2.823427542 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088185278 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089692869 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.086380907 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087591499 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089052045 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089593652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085214878 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087244968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085562483 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085225321 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085049318 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085711044 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087295988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085751236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10472365 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087400383 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087480845 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086946679 seconds)
  done (took 2.521745452 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086222219 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085300246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085264751 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085041345 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084911141 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085617489 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084562813 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085325629 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08502175 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087279884 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085063816 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084800893 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.084832777 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084964805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102944761 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085672105 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.085316193 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085563478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084945575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086067243 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085294702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087643775 seconds)
  done (took 2.836628787 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086649482 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085665753 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085969177 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086258196 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.088080263 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.085495621 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085805947 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.085297391 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089427748 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085269063 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088610432 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086057515 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089446965 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08563031 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104891522 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086379344 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086210029 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086241389 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085658504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086042577 seconds)
  done (took 2.690480961 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146490885 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088954379 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087671324 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087410313 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087323406 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087202922 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087063213 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087256203 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087506269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087527418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087298939 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087716082 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109851185 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088604665 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088410972 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088109656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088010916 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087542983 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088022181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087665198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087843644 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087923676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087739944 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089247259 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087871878 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0875637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106688413 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088523314 seconds)
  done (took 3.502400273 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089258578 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085598769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085587232 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085639029 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.085826313 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085561659 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087629525 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.085457963 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085174932 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085343456 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085445564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085712298 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085631138 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10370536 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086540849 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086140262 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085809814 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.089149742 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086512596 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085634094 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.085817921 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085427199 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.085944518 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085711824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085662031 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085200699 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085546472 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085116206 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107229597 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08652743 seconds)
  done (took 3.566665005 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090392008 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089465042 seconds)
  done (took 1.127863166 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.087780874 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08643163 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085859146 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086537356 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086246774 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085647481 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086321619 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089176696 seconds)
  done (took 1.641752656 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148090165 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160255626 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086855146 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.0926535 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.162309506 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157718889 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129930518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087301254 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089872906 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08768151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147743481 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087656029 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091930616 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089967147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090500991 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113342871 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.086507713 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093026813 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089287379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.087787977 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089172958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094673294 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0926054 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.090604147 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089002269 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105338135 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092876729 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09031458 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090338586 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.112367945 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090787637 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088251644 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.092700708 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087933353 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085660581 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.162754032 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094843172 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090485508 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100822208 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088264592 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091334943 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.107960443 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09210242 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093653872 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094033912 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.088528997 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088660317 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.086589617 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087926939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089941701 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.087415536 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089063217 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.086233077 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092775928 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095418568 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114753841 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088328397 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092105185 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089333566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093065197 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09121424 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090674973 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093251092 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088049239 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092551431 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094759449 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091015335 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086457059 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088694545 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107453513 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096794999 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116837336 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093737968 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088108055 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088210641 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086664884 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093214015 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088280043 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090710516 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089731731 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087834127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089050004 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111183781 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0904699 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092604554 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08997859 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087716141 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090174467 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088357388 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096224083 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087947768 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.087002491 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089306738 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09276206 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089883613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.088429145 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088840744 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112137576 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088981566 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088669267 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088710487 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091561168 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094171803 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0891985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089672823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092169191 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156857965 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091808128 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096513857 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.112495228 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089251961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091785224 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092381504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087268868 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091585438 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087829789 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.089214878 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091159616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.088345837 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.088965454 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093715353 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094695709 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.087757715 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107074396 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092026932 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088568938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088621152 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090175733 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.088410272 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.087914246 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087669292 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093634605 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.090871305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091516337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089219015 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091834593 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.08645767 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.106986575 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089554279 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09347515 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091047268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092940344 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093777779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092624155 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08870885 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091397135 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090581757 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089486235 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09118873 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087717673 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087549956 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108145216 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092561271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089278071 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092128685 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088948406 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092238375 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.088458121 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088745503 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089696595 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088608259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088616993 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088293311 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.088553275 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091987175 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109980011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088054731 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087987396 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090715801 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08977321 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08900516 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089853169 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091294588 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089128232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087799785 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089133308 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095506424 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097115779 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093594267 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109001202 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092989497 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09296332 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089249151 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093584729 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089142266 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088970043 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089177796 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095180321 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091008024 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089406216 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088355194 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087754557 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093885866 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092388958 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.110162701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.088108676 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089371573 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090474887 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095484898 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090755375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089303534 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088342717 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091761474 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089725382 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091289481 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088299068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089367366 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089441461 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111859265 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092585247 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08942383 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093346601 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092546614 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088181752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090101207 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089131029 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092569584 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088304882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089453176 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091275224 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0928758 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088694756 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116747927 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087735435 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094356839 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094104862 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092384749 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090089166 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088507518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091090245 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090846369 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093805047 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090915396 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092100071 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092831934 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09016929 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110322555 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093886127 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089327984 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088228664 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092006534 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089345581 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096904265 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089136442 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088756877 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0922531 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090481278 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093884579 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.087853302 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092412984 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10924271 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090235708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.088508627 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093553636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091781611 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087663972 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089060753 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087313099 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087011645 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090217997 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086989358 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086658805 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08719782 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090299488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089428816 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.110780753 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088769065 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086973413 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087608353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08617085 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092010059 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.089146714 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091831889 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09114457 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090416509 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090896451 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09230399 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089407759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088937082 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108492723 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.09136165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092561518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09181401 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089729716 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.0916708 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086674668 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095658833 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.089927919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094724816 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091751299 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087704439 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090840907 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092759866 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110564105 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089976612 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091621208 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091917257 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09201297 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093805845 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091326086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090551415 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093510481 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091475207 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093145291 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092944638 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092535808 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091339603 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090547732 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.113296183 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.090296861 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.090766569 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088236862 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093298267 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092660121 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091740584 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094620446 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090812199 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093261909 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091180321 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090954988 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089889639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.0901213 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10965413 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09384921 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089799477 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.092233783 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088246044 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088120053 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087707327 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085995957 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089696384 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091064213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088024339 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08893755 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088003412 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09048919 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108738271 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086661749 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087643147 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086518752 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088701279 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094423506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09090921 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09206677 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087563739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089067742 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087160515 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088262718 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.087343607 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.089708344 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.105241449 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090426779 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09149985 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090013103 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08793761 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091641161 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087633694 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089732697 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088132228 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089206076 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090052588 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087757732 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08735178 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088621875 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113541042 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091592193 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090079393 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.090429397 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.088281391 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087659305 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089095585 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088304134 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089288749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092718512 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08852111 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092023805 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088329359 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086146895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089102894 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109232743 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088565408 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089333824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090130697 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09131453 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088198714 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091060109 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.089781031 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090984144 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089582441 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087063614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088870824 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088620182 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08772378 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108171194 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088931976 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094504197 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086276876 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090080679 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088118584 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087525469 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092581424 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088339674 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08767843 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08967281 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090891654 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091294825 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092300567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110376819 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096919303 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090874321 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092350838 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092039053 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091624372 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092106971 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097503006 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091018903 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092765816 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091533102 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090996275 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093059536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090954337 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115994486 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092146259 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.091077024 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090988286 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.089450228 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090164429 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09115655 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092770766 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093465002 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096149915 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088898876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08986344 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091832141 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091162393 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092234203 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115540537 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092491597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094394293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090105263 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090680984 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096404376 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092023235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094006929 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.092040035 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094942009 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091741169 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093691255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090084547 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092282658 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112984591 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095758336 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096203601 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092407879 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093232252 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093825065 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091431095 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092714355 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094764168 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092988576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089836024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091660825 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08983319 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095647394 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.111193869 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092449356 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092996793 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.09347764 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.092527937 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091367165 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09105436 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092945809 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090213579 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093846084 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09284399 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091769115 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089435733 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091486236 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111453914 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094131399 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091673889 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08987193 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092598691 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094163769 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091052425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094361443 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090830148 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.089683347 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.088984812 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091418744 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091211773 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093598136 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09234903 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.112345629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091807321 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089929068 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092788974 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092414221 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.092809661 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090004719 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090705978 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090859305 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090338933 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093218365 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090942635 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091410722 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094296254 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113267217 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.090606612 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09264585 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.089615963 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093954397 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093652305 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092057942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094627185 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094631944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098217322 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.091866532 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092206497 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091747354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.090921636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094080324 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.113099525 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092676635 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095195011 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094673832 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.092434257 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.091770891 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094135413 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095071521 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092411529 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091625349 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091621591 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093946185 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096700982 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091328422 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117941375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094104393 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092105396 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091480554 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091593012 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096039722 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091086325 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090525893 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092566224 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.09151394 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090893105 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093640245 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091642091 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092302328 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115008851 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.095997856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092581421 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092095606 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092407835 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.090467679 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092392538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.094402781 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090984163 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091721432 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091604853 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095294 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093883835 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094069578 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.091932774 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.114737402 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091594656 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09401491 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095607362 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094985067 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091153064 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.092449471 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.091831884 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094626239 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094399944 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09276835 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09423012 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093598752 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094286954 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.111283107 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095528768 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092556231 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097072339 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092917675 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092808387 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095828072 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094569708 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09321205 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091403051 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094199931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09636767 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091032566 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.095300385 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.111289773 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09477351 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090897422 seconds)
  done (took 56.625574094 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107662376 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091352245 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09104301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091459711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091232608 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090965308 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091472314 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090487194 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091046456 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090431267 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090525308 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093031859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090254968 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090752839 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111342704 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091430771 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091274503 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090708205 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09103595 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091925952 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091023008 seconds)
  done (took 2.97303322 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.091463431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093332923 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091206445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090847235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09099827 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090408521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090643259 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090620989 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090925946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091034648 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09050189 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090298628 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093173358 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.090662485 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111229106 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091162822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090862923 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091220908 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091644347 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091009859 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090404808 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091029224 seconds)
  done (took 3.046306835 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093444989 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095433602 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.092507817 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.091517393 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.092299868 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09140142 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.093119837 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.091035085 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.094051509 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092894045 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093461895 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092874341 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095221439 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091341511 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.113669493 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091231778 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.093992535 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092842383 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.093354688 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.09192337 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093890024 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091526624 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091965691 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.095794757 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093092699 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092749393 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.091815044 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092883528 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.114516357 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.094952997 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.091616306 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092263692 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.092977252 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093716699 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095754714 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092091097 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092449557 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.091064962 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091712973 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092468609 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.0913596 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092466993 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113482328 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.092444568 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.09146762 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095233141 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092775686 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091139912 seconds)
  done (took 5.542321721 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.09147171 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116972134 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091051672 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117359935 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091136637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091423312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091064997 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117110757 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093054934 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091669733 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.091065712 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.092076849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.114263219 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092071238 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091580352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091653187 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091314454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09160929 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091867353 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094096396 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09133025 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090779631 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.091425528 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.091718899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0914312 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091208659 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091133859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113961923 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.092363322 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092573002 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094191173 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091847687 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.091644799 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091973192 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091983038 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091323323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091342936 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091643233 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091152785 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.091531846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092036429 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094419442 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115802998 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.091973665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092761156 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09250302 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.091789664 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092091361 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.092100379 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09164427 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094063748 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.092489826 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093865204 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.091432457 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091880336 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09190365 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112945553 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09307981 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092067277 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092121099 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092433738 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091738101 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.092330124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091317961 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094288861 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.091905551 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091773928 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091131349 seconds)
  done (took 7.555773628 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092338144 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091808482 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091995051 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.09163505 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091718214 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091865568 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091308786 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.09362823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091935812 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091750372 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091767199 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091783633 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092073628 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091317334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114234168 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092944898 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092636001 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092505649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094245788 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092063503 seconds)
  done (took 2.9012303 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09280927 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092646848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092794353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09265999 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091808955 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092916736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.091681802 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092548126 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092847229 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094576738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092599135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092305132 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09297403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092687667 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114149773 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092996342 seconds)
  done (took 2.54124729 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094160543 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093718057 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203955887 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089486281 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.09177535 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.09426085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090471162 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.092320076 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.091180189 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098049482 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.092105873 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112772926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102364564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.09029414 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.091600339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.094497142 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.092455344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.09285421 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.092290957 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.173543655 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.088523366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089539377 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.091452867 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117998564 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093408706 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093411748 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095931722 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093617489 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096110037 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.092826573 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.093400203 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093011587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.092499463 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.092754714 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.09250769 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.092647725 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092142054 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094639023 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.117026696 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.093277216 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.092706511 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.093191186 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092518562 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.091888405 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.09316869 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.092293297 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09229901 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092777398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.094796138 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092545662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092066056 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093410203 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.115397299 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.093171505 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093304178 seconds)
  done (took 6.434392567 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093778836 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09319303 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094254361 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093328708 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095660869 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09279263 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.092380972 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.096792058 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093001677 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092712468 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093301724 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09638706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09326125 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092687752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114647552 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096305141 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093555625 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094268966 seconds)
  done (took 2.752985378 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094261117 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093795537 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093560955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092774228 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092995242 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093043654 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093089553 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092580834 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094785224 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093595525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092761519 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092943671 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092744645 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093217211 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114374586 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093789369 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.093582475 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092528552 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093677182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095391449 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092746311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093254436 seconds)
  done (took 3.118250182 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.104579376 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164322092 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105166542 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.170126793 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.095475385 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095724106 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.102532336 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.095533972 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133090087 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.096208375 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095577937 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095941219 seconds)
  done (took 2.397782717 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094005413 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093921172 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094074947 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093269914 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093180929 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093665455 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093327757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096288637 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09412356 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093158059 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093480152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093448643 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093544431 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093938372 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115573815 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094902403 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094170572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09405593 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096286192 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09534964 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094702859 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093883955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094117107 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093919562 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093933291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0938282 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093305859 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094093927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093462384 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119306791 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094000874 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094300345 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094348955 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093930853 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093535462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093764089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093483048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094019419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093630735 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093533316 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096101502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093391642 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094561809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115750994 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094175976 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095035319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094275602 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094527264 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094575952 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094023106 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093808449 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096225552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093174341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093761153 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09348714 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094146747 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093880319 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094248123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117287728 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095354575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094918075 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094246288 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094278671 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097021994 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094258134 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0946346 seconds)
  done (took 7.357844122 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094791214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094380263 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095422303 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095032925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094794733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09484498 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095935974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094085909 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096634943 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094011726 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09418542 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093666496 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093783014 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093868077 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115758439 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094914596 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094334538 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09420431 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094510736 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096716357 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094670255 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094962911 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095376304 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094711574 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094106496 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09398256 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09411592 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094038263 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093823187 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117230772 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097949833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094915128 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09445514 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094503187 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094479933 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094111506 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094572154 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094274217 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094546691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094298872 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093824989 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09736078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094480142 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117322516 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094770695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095098004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095256656 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0949864 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094889724 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094212921 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095097702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095202934 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097344507 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09432466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095959387 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094585739 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094862485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095006815 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118489299 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09524628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094920796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095643122 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095512452 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097016853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095190086 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094778038 seconds)
  done (took 7.40846609 seconds)
done (took 145.950647611 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.168519596 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.191821567 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.24074118 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151617427 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140471639 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123258991 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091795313 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.094560284 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.099604732 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.116207205 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095899142 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.095472316 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.149119448 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.19207744 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093028799 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.127831667 seconds)
  done (took 3.217318845 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186026507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.268183555 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110371583 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098033272 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100221268 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096050441 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.095729328 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.146926393 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117852532 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.096793178 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09522731 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095471388 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096129358 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095330595 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097795286 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095156692 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.096434705 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097094299 seconds)
  done (took 3.144389429 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113670417 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.138607839 seconds)
  done (took 1.317750925 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119136402 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.130218075 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268399013 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125055126 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111458513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102968284 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125116825 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127139085 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.171355151 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.09632656 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.096780653 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098120157 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.114832414 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095758787 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.104020431 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.09793884 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11660774 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.095647953 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095816526 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096261951 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141012887 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.098815767 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095835678 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096495476 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.16270674 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096022847 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097054545 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099234281 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095903875 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095157221 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.095639877 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095547302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.094025036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113905225 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.098450535 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098676881 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097912446 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096663448 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.100168298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096226802 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095929972 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096252519 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099395162 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09703132 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.097383217 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097075735 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.096582801 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.120673226 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.096523752 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101087519 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096521492 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.096013245 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096080299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098454048 seconds)
  done (took 6.898008424 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.504252925 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.130226241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093371122 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.553428931 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097823919 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098524859 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.482847875 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119248132 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203527236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.522910539 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110228793 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091476077 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105131077 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.199626483 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143116962 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224266693 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.411697112 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097636634 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.121247869 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10879225 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096419777 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098317924 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099028605 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.696101537 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094390125 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095702993 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09609969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.096196181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.131470371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099158591 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097069363 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.111834499 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.215341843 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.101565397 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.091801151 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093146178 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09586702 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.106442664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.182629505 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.108186154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17462409 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095798617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119199604 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097952917 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099235584 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096317625 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.098785543 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.112244834 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.110731333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096259614 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098974541 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097369892 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.096045624 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098666101 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.09736104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.231396321 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.253641255 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098620244 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098565001 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099036222 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.180471236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104807579 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.111629119 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112709353 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.107962574 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097047403 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.04989835 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107676619 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096698537 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096470547 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119502747 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096830369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098897831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157009366 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.673357906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096078426 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096488033 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098180221 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17144837 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098265125 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09715006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.105950146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096257789 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099244334 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118599162 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096889731 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.110164169 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.193483605 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097081082 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096588073 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096991873 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106534089 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096489793 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192753041 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101680988 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.098852215 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185978146 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095290903 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.122445298 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.108915674 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097509837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.110183674 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098712271 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100735257 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096931976 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102057695 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.105549759 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102786562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096689855 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.097108266 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.108495367 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102753733 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096982785 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.132577972 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.694314887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.108379625 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099935648 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103750374 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097022391 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.107741991 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097109062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.185354273 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096931054 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101536828 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092688651 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092770848 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095696631 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.120424259 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100954473 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094430819 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093223229 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099332244 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.202948821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.106480795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096192252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177177935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179043896 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096323813 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.111898236 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09962955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.11074017 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123542707 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097088516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097169364 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.053852303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10016681 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097755126 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097026454 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181193697 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09723136 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105030914 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.09745986 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09470735 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.049371803 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101434924 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120202624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104705278 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096879575 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.097678766 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096597822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097678138 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.102313828 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.110733524 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096786868 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096498106 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.098501518 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.106509251 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097148558 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098083166 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121566588 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.099284874 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099189618 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100483553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104438571 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.111201501 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.098985144 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.098425794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.871599066 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098326594 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09835331 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.111989585 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097050931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195724226 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09418563 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.126237973 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1050334 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.093834979 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225320263 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.103123975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177668445 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.097073061 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10639467 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092680752 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092812616 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.096552621 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093204424 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09520498 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.09691574 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119078557 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097203898 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.185395458 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093692466 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203451771 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097234323 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.111530346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102583928 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097344461 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.201585179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098283831 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101058219 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098740628 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097355118 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122943175 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.865810691 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094367851 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096441008 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095456637 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.09710853 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.107580317 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097937344 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098115201 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097718576 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.100347795 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184748419 seconds)
  done (took 41.456361205 seconds)
done (took 57.093482901 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.164600546 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.137297178 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184708441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114401808 seconds)
  done (took 1.765060831 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.1847628 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110716498 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.172056084 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092043469 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173763324 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11455655 seconds)
  done (took 1.943223132 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.127883143 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.114812575 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.108193417 seconds)
  done (took 1.438507289 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.157854885 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.146368798 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414440485 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.339074625 seconds)
  done (took 2.250361036 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209380258 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09484162 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094446757 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.173755422 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.17700973 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.134762223 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100121969 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.106147534 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101070466 seconds)
  done (took 2.331118686 seconds)
done (took 10.820838974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.429831291 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.208554859 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.216349658 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.17113597 seconds)
    (5/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.240770726 seconds)
    (6/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.248002496 seconds)
    (7/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.201359548 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.224055732 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103327989 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115662044 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.182073443 seconds)
    (12/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.251341536 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.184492175 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.214063758 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109005434 seconds)
    (16/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218980797 seconds)
    (17/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.09880823 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.129678564 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116929895 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.17443055 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.227828102 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.289647131 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114982486 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.277365097 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095028162 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212711021 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.210656962 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216348116 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.097334252 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.183205882 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.162417322 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118855093 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104589387 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.248985755 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.162596679 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096702275 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098441114 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.100155115 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.108449039 seconds)
    (40/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.100026452 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097666819 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.183395949 seconds)
    (43/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101833944 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097761106 seconds)
    (45/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.141497295 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.209287235 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.177644713 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.255039514 seconds)
    (49/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15396272 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101424565 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097941417 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.102454428 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.098192025 seconds)
    (54/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.158457457 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113512732 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098369683 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.177241914 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.198512091 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156897909 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208448746 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103121501 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.140703225 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.183812152 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.198674458 seconds)
    (65/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109291721 seconds)
    (66/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.181619211 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.149344971 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.156737853 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.124734931 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.155889221 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.12098418 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.116483081 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123417507 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114931704 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107188584 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.204304072 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.147184933 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094490192 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.097166307 seconds)
    (80/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.101033565 seconds)
    (81/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124497095 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101008283 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.09883943 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107712754 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.103580539 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.097987519 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098215667 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.100584969 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1077912 seconds)
    (90/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.110783477 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140719263 seconds)
    (92/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.112990371 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105472063 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186379112 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.108701514 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104392654 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100071685 seconds)
    (98/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.099654748 seconds)
    (99/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.146205863 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.101608061 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096765011 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.224401578 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100657165 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.234383908 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126136226 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098732917 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.103068167 seconds)
    (108/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.103285402 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097927945 seconds)
    (110/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.117002297 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.182645976 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.11738973 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14121178 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12299796 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10151829 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.102805773 seconds)
    (117/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0987924 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11226641 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.10104663 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104182024 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.111311388 seconds)
    (122/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.098312759 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.167584295 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.153611126 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.126710506 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.102517344 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106193764 seconds)
    (128/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156820577 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.10152094 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09808402 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099684293 seconds)
    (132/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097918009 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100418237 seconds)
    (134/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.098288435 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.146346764 seconds)
    (136/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.115466748 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097774404 seconds)
    (138/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124368488 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.109455984 seconds)
    (140/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15707008 seconds)
    (141/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097835177 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.112746866 seconds)
    (143/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.101962931 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.098469708 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.109118682 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.110069064 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098067059 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.10073796 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099515696 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.123406221 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.102156981 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.15597088 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099123114 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09940416 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.101214013 seconds)
    (156/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108739593 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.113944986 seconds)
    (158/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.100576527 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.102006451 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097965097 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.139288935 seconds)
    (162/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.122902145 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.11477948 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102789964 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099257277 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09844843 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101556865 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.109811616 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102177489 seconds)
    (170/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.098515611 seconds)
    (171/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.09881642 seconds)
    (172/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.117931796 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.11841521 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.101260937 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.098993553 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.125953174 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.100588532 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.100468702 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100566794 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.105219957 seconds)
    (181/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100143621 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101736211 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.122845504 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.101838722 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10790168 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.102384935 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099328239 seconds)
    (188/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102053844 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.123892238 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098160698 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.100647402 seconds)
    (192/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.099180671 seconds)
  done (took 26.651297174 seconds)
done (took 27.754015075 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17783529 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125394788 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106519068 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106589534 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.174831502 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125032458 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116533756 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.130556111 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.10341984 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094302296 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094643267 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10699638 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102335418 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.172976428 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105687203 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.097569824 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099257814 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.111604336 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.138272502 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.115223849 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.175991752 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103984752 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.109129058 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099897394 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.17551645 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10357997 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107304863 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143183732 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.113694505 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098032257 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11714355 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100111395 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.115018001 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113269333 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102954437 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098984063 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102696264 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.104729568 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.098927834 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.129319921 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.111897434 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.098744995 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.106768346 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100213629 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099808542 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098888623 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102290287 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111712739 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100384108 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118191026 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107014875 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.112730988 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.126631595 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100829916 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100309576 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.100106773 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.109702414 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10279877 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.112031438 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103458482 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099820063 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105077011 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.099674856 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102971488 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.098981024 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.099716774 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.12679269 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.100671254 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.098529427 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105763924 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10317486 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098657893 seconds)
done (took 9.225880248 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.102635135 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117909978 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.100867244 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.177675212 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157883053 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096177452 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098756122 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098845623 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106232593 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.125847497 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.099845893 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.10401955 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100600285 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.100582808 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.100082048 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105488903 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.098889178 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100546429 seconds)
  done (took 3.125088201 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110175627 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.122262938 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.111546584 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112194927 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.103003549 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.099590159 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099897085 seconds)
  done (took 1.908605252 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099512202 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188558626 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.167303311 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.166773996 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.197191087 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.170442423 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094009727 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109470451 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.100895605 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185457913 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.207776317 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095180928 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102877401 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.173227686 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095909734 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.16512864 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119623246 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096847328 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.167054048 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09756916 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1110526 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.106703208 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.098565472 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.181767713 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.096212038 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124822408 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098070803 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096568104 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.120480322 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176276058 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100437093 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095292619 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.173387464 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121435364 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.175728438 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097710734 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.177494151 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098266835 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.102418193 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.098169621 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100390227 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.186899538 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095701235 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.098670535 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096573557 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18282339 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094551526 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.179120334 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120682722 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096285987 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100149208 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099341344 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102831148 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.098871241 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189281982 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098301979 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167134394 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188731485 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.175332452 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.189459562 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09658632 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.179218614 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.166526926 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.100040754 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098379205 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09667504 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190962791 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.09318421 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.101870917 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.161752068 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095744535 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.172478704 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.193998253 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100646576 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.098442298 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.103427783 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100719406 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.173467133 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097357319 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099945076 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.196652327 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095244971 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099542956 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.10155962 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.100888182 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104518429 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.103075941 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.099617987 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.170252571 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.191540691 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095310736 seconds)
  done (took 12.945050494 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.100461631 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.101078262 seconds)
  done (took 1.371049421 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.107652101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.099776412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110149042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.101001241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109039586 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.186392463 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.183620783 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095133028 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.129264551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106436039 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.186496354 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.184559501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.178413684 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122376223 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.184356247 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098957992 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.184840933 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095128145 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.105125631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100224711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.105387018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.10082425 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126362196 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.166398558 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.098082823 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099575462 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103455393 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107438155 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106942355 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.101475842 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.101317287 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.101219618 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.10118175 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.127624819 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.185952451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096925695 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098976836 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.103471951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100671641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100783209 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.187540881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096526161 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127235997 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098230003 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09995614 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09998869 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101162178 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101952033 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.189866469 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095937689 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097800982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094919824 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096691546 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120544806 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096576157 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10055933 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.100563383 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.186916032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095471521 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100918968 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099245353 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.099433184 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099764358 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.101485996 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100250228 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128331912 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.101871362 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101593334 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102809373 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.101326706 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.104483109 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.101196009 seconds)
  done (took 9.602819268 seconds)
done (took 30.100329092 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.134608649 seconds)
  done (took 2.297149723 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635838992 seconds)
  done (took 1.806988743 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.57777731 seconds)
  done (took 8.779318282 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.368331198 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.280778941 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.864505543 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134416938 seconds)
  done (took 2.820702916 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.113219395 seconds)
  done (took 2.307208329 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24030771 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192810744 seconds)
  done (took 1.611206399 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736478224 seconds)
  done (took 1.930899106 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.321852227 seconds)
  done (took 2.500659924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.199555064 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159494063 seconds)
  done (took 1.547350566 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542231987 seconds)
  done (took 1.731252136 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.613755592 seconds)
  done (took 8.808283396 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23341361 seconds)
  done (took 1.416425088 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267418446 seconds)
  done (took 1.460043372 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.046629667 seconds)
  done (took 3.239535009 seconds)
done (took 43.440330705 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.108749786 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.109791776 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106207979 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.103128811 seconds)
  done (took 1.604862331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107498563 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.103632489 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103676339 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.099740355 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101481197 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099794083 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098028025 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099368654 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101405489 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099709617 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099978777 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099189778 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099821241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121538437 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096018408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10067131 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100925868 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.099427599 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098115013 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102528545 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.094675527 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099513651 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.099158813 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101500875 seconds)
  done (took 3.622015284 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.108438905 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105392493 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100260884 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100125349 seconds)
  done (took 1.613323074 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.110208115 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11178705 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107352366 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103249342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106234045 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105582397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.097993245 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095139799 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098178681 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102842311 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.107030257 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.10064097 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130133091 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105416797 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10552619 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095036186 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103451486 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.105706044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103395973 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103407537 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100947469 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102850516 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095483207 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098282635 seconds)
  done (took 3.692617389 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173382128 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.107720263 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.118801435 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.12204868 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.095727187 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.121107863 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.118299067 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.095821124 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.102623608 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.09508898 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095262152 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.122946826 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.122833106 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.104845059 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095436218 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096023885 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.09614349 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102222898 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.149256084 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.094715673 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104295968 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.106947404 seconds)
  done (took 3.63761766 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.112711596 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.101940512 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09633448 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095447347 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106809174 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102007934 seconds)
  done (took 1.814667222 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.1076548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099464395 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098278098 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095384687 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099380694 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099057042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096054293 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0976447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097271457 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.096651873 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09610584 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095362467 seconds)
  done (took 2.375977149 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.214625773 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114927601 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120005619 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096307257 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101399124 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096196852 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107837834 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.097501045 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096613556 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095455197 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095460255 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096657416 seconds)
  done (took 2.533075772 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152423721 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101103938 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178676185 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.459348961 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112109432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155139111 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.390736879 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145024809 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.129377909 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109841583 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129312934 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111711118 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145867416 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137780874 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111930434 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.372628566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149389501 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146408949 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1144115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142752236 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124060756 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162755152 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13520227 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115258683 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137721974 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113347568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099125992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10303104 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118989209 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121267785 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143405627 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115767269 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10730689 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139504161 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11257454 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119312488 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207819326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104051342 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.231106861 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130724305 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144065743 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133675105 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128233724 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118005947 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10538473 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138482829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108535629 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126434935 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107318375 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112172126 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153389024 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124037892 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.118064641 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11059266 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.429402796 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104832605 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113031213 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143814736 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137506027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135616811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130030262 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100317205 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170218624 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132390776 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125355727 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1096946 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.115400941 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120787957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157561229 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139583499 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124197247 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155044348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.14161033 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109153447 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124238591 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121075701 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14569174 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126852531 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123930088 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099619812 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142477198 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104455278 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105569313 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166850545 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124949228 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141242583 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105318088 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.305895414 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136359769 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118549307 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115610607 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145671258 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12956435 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118982606 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.139618042 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113925635 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114105934 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145843274 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101262668 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116594447 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138813862 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099067136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142125317 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104881425 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122998353 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13150432 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118110516 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128995679 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.110303369 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133206794 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140227132 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124131675 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12367839 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132006579 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104209098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106583746 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13292159 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127897109 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107109516 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15051814 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132605855 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141561581 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104163167 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10599453 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179866723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134254467 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13462175 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106938418 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105959759 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.126594798 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129596177 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114386793 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123826557 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103704997 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.144195936 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1305849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102767107 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110347747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157154398 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101166416 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103739232 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13586875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105681069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.114629057 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.121959389 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132629428 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119516982 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127492032 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150007254 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108538593 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108885813 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113348107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107968574 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12863873 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143472843 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098903144 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125302224 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132090808 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103129426 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172101692 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.145029179 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150933399 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125595834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105317858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195316043 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102747161 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101253359 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104480839 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120205124 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116582966 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127210111 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172302917 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.117017138 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120808628 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11497072 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144159535 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12980519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116752425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.108759155 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128889812 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122949514 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099955156 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095956979 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.101117471 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111564854 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127389541 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108001886 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120174753 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118658079 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144844908 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126109349 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132586192 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131768667 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099263938 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117582345 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124292677 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109394496 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.125285147 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13170689 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131420521 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131167706 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109858937 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.10115685 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10066361 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.10199666 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119823571 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108456296 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105321938 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105555438 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134618919 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146611225 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114130204 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175462227 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119596953 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139315329 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101305795 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14138845 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11464361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128808284 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.174659267 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106390094 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117343088 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130813497 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108586872 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139269391 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149061167 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127250083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129208972 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130088657 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102163047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108355426 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154307293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104175653 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112053612 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106317956 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105510878 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133139345 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108318971 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098913749 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125329534 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11255582 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1378054 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111484182 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113000782 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103746233 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105452267 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129945655 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138094467 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.121041607 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122309208 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140253922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111131656 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109662975 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117434845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102786938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.429059275 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126464083 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123989694 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129815897 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105809629 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133189958 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111927383 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113170511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174174932 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107350029 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151269327 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128743933 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106252612 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10643681 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114721413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113688639 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127229094 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096106728 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118625947 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139139653 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125511621 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137967634 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130651477 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123528979 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1225715 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145452279 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108804606 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137573566 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124562935 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121700346 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127277144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111031398 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195872067 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104094885 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102921059 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098521276 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174466028 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105482532 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123647298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.17132081 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151660473 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130244707 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155534056 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137986295 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102080222 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124029869 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13711235 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149535165 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105674158 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106471547 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153918892 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.161931175 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103963741 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154334765 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406917578 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140537609 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116428986 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119442225 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.426862979 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103526228 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103662613 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112514949 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117650637 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102554907 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176632227 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12944692 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107917463 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113802528 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103861706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169137524 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13794867 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106805393 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120468676 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106284853 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116311634 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113091823 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142679301 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114376244 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.115960683 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113707461 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130710074 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120609483 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102348136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124831653 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124695912 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127620021 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140440866 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109879612 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174754571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104231865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113264253 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104048812 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097596734 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147539876 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.172946498 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106243539 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118031951 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12398748 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104796268 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100067505 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107980862 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124591418 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106867582 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129711065 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126535412 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.106857521 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126580447 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127245684 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105453756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127134374 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10660874 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098694111 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105781616 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134015147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10514115 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147253099 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11985526 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097489972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11850685 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107240617 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14316206 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110784544 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107444477 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.260359907 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103085373 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13325655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145471989 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140375231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114382473 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125816179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125761293 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141226347 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106356985 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106828218 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204837057 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111404165 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120626733 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104291154 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134207798 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112834918 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122670398 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115216612 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124723859 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112239291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104520177 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149132988 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11220714 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.105962835 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113438744 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131681846 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145977962 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126295796 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197226468 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105741641 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125566083 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116033911 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102538234 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116639161 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11956845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141941208 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108703759 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.1057552 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107852585 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152951357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104722084 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123256609 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125617171 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125962776 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124762306 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.09735892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12556765 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105285537 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125282375 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123884593 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109831299 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129201297 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106049366 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102098301 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128227659 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10951131 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125243307 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098097275 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167402243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135654388 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.102894454 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10463061 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.411999616 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124388034 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201276735 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130440103 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108048958 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138235136 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114840622 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124387548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129623829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098491835 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105651251 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099167491 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.238040659 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.12402018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128998431 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147537161 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112004248 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199623449 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110913439 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249439539 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138843484 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129636157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122947251 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10173961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110012624 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107129446 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108685245 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174519985 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132545241 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128078351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.107458806 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098672952 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105476738 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106245837 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141284493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110942446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127989887 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110170294 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.118154144 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10868163 seconds)
  done (took 78.86846648 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153430807 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135052007 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149519542 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220315231 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165587669 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281387513 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237915731 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248756246 seconds)
  done (took 2.886285755 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106773986 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.123845467 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.120514759 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122356823 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.102144144 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.304816415 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144449655 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.099585147 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143364164 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.127125306 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104459104 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.458149302 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.100333708 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.100512709 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1250363 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.100355188 seconds)
  done (took 3.662651679 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.462315608 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.341289869 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.560500598 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.200915742 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.414054749 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122741737 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.52684912 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.10157265 seconds)
  done (took 10.025716768 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.139114172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.128844329 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.216895411 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.230050846 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.137698569 seconds)
  done (took 2.149136123 seconds)
done (took 119.664823652 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110599544 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.108051047 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.111097132 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.107057591 seconds)
  done (took 1.718403687 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.158464139 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.099444782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102193955 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.105335325 seconds)
  done (took 1.76313129 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422349795 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101160366 seconds)
  done (took 1.861122011 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.131673917 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.122589843 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123788041 seconds)
  done (took 1.688075598 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11550796 seconds)
  done (took 1.41992499 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10613058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105691565 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.174712209 seconds)
  done (took 1.692161564 seconds)
done (took 11.443222855 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.21607452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.946520092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410121072 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155153038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700608399 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415080896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.374031042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101089123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109826035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10069349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100504794 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679886337 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.353078037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873673665 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.38288597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.87414386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709165834 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100551226 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099842906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100386253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.34832092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100143267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099797673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102105655 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.685942672 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.398949164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100499542 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.899428739 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100756055 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.10059852 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.386194186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100325229 seconds)
  done (took 20.515369215 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.134787172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122090921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107669602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100366106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100142555 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102030877 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103617352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100357714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116637346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100902013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100431595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125429101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103972361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103629357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115897802 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101490013 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10090179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100306551 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101168001 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10136916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105120866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100486373 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125876087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100711199 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103841136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109727512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101298042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100717917 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101073409 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099865662 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102056985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101781618 seconds)
  done (took 4.70622556 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14580515 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.137647429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105975123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133383281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130812376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102651198 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155852478 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101044587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1432567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100772844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101436673 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101024133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116916455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101786236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118832794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.101226005 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100229618 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100242133 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101425412 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127205525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104916668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100634463 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100745825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101059477 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101519342 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.113387508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100713265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101178335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103875779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126253469 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103214735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101250224 seconds)
  done (took 4.900331519 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102492637 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.109283917 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1338455 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134089479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102249501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.10000568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100254381 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10047871 seconds)
  done (took 2.197274272 seconds)
done (took 33.629282354 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.115401387 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108060036 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110846072 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.110165768 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.167683707 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098953652 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110099899 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100946373 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107128241 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.113272702 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.127263361 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101606871 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.111898365 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102829304 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.169185324 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109052112 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.169483912 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.19836003 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103389776 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109724061 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099292305 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.16860227 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102807431 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100531653 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192914981 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.104659877 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104036534 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.102891256 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.102638664 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.104782623 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.168518448 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102915977 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101369908 seconds)
  done (took 5.300298397 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.175035203 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.099764461 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.099982762 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.099066191 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099258567 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.098661155 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.173583353 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.101355814 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126953631 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100302312 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.09980048 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.18720087 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.099056547 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.100485931 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.101926917 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.09562201 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099598799 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.10168649 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.203398933 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.101793209 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10173593 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.101274035 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.095828424 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.099418255 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.191651988 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.095814922 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.099277235 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128004651 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.100404329 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.099618683 seconds)
  done (took 4.81128128 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109554222 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.120025358 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119701649 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.122620511 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101477237 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100555522 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.113826984 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110173438 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.104440357 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138030615 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10049577 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.106552744 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130304206 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102456437 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.113127485 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.112110344 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.11503068 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099906923 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.111125885 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.151468874 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111217113 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108777054 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.109908308 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.10513445 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106990017 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.142165742 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121406164 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.101280896 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.100889881 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.110085062 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.100510887 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103956158 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.129126744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.119845405 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.106951013 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.111554365 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113908328 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102033652 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.13525084 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.112579084 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.104567728 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.101287462 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122382128 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.101419955 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.103370299 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.099699293 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.111168044 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115864172 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.112261879 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102495939 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123279774 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.128904758 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.10128512 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105961013 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.101855989 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103891754 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.121899909 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111483481 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105313062 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.101347446 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.101875759 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101440637 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121906504 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.112245889 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.129617548 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11676859 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.103781637 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.100444449 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105454466 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101085068 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.116609969 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101126997 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108862657 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103165076 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.122494387 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.099807962 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.101405157 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.10382861 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127533077 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.106723427 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108635863 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108425616 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.102105531 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.102249176 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.101571883 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101370753 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.100024596 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101881361 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.101616992 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.100440659 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.101753813 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09969745 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127863067 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102815554 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102228423 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100322812 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106080624 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101502502 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101688778 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.103650301 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110053071 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.122674718 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.101773564 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106576276 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.106879319 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128201172 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123350693 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100330098 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101934496 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.113893312 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.104517593 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.101332921 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.109519872 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101873889 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.101692773 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101606153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128548985 seconds)
  done (took 14.180735691 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.17583534 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.232024764 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.28120303 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.244394781 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.187650104 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.161497688 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.25440848 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.110618011 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.228354644 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108287896 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.152073908 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.231924592 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.114871695 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289390083 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.106189154 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.128972365 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124118781 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.101768752 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.11213008 seconds)
  done (took 4.692108766 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10464484 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.12162383 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.102446 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.101425577 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101517566 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.102458991 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.112419691 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.108008577 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.100882272 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.103612584 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.11341401 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.112792926 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.1052464 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14974996 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.106861684 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100702568 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101192184 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.109371711 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10504541 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123075658 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11126981 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.106010022 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101742462 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101108237 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100176909 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100475217 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.100538186 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.130132103 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10137874 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108085905 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107015654 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100005043 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106240302 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.10587238 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103493052 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106934969 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101457796 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106633669 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.211804682 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.101809982 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103279759 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101375038 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104697448 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101465178 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.100293991 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.109815764 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.103664079 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100880486 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109840216 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101938002 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10130207 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104225017 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.132258239 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102811681 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104109537 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.103304273 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.100891274 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.113624424 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102009377 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101865935 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.103515686 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.108479127 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.10232843 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103175195 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103360926 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.105408887 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132815617 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.111289153 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.101154502 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.10221215 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.100945409 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106531304 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.100933481 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.100846394 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103662204 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106566858 seconds)
  done (took 9.5679538 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101472025 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112166069 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.114362188 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104715857 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.110637052 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102113208 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.112244663 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.116271257 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113858926 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103548038 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114223271 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104058057 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.142353321 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.109698938 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.111925395 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.110768099 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.111877309 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.103473947 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.107308386 seconds)
  done (took 3.480327606 seconds)
done (took 43.349070847 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.377640066 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.55785182 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.349111199 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.350937731 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.348485563 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.358192167 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.353551879 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.356139536 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.983822798 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.354880735 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.348738243 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.354036761 seconds)
done (took 30.438858091 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.375368797 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.35828051 seconds)
    (2/2) benchmarking "String"...
    done (took 1.353504748 seconds)
  done (took 4.346984647 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.355760189 seconds)
    (2/2) benchmarking "String"...
    done (took 1.353712466 seconds)
  done (took 4.051167434 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.34938805 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.358326193 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.361094246 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.529247241 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.38923173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.352442671 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.365774456 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.353577647 seconds)
  done (took 18.049644701 seconds)
done (took 32.51603173 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.368585418 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.514666869 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.61286474 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.353503223 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.354596067 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.353272491 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.355128677 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.363251032 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.352733917 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.358470497 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.705783701 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.635758707 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.365249442 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.887802663 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.34749995 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.360268128 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.352755953 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.607627893 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.349615425 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.401225001 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.362570898 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.351566117 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.365491536 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.364168125 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.456098081 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.353104688 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.358085671 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.350079658 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.526764916 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.383278397 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.395880067 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.355395669 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.364027086 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.349928576 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.352973631 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.361543581 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.536044667 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.451102706 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.35443959 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.349714045 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.531044855 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.355504709 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.352620158 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.351759004 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.358289211 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.371955643 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.577312953 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.444992874 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.348285217 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.350734908 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.377337452 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.856778126 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.356394394 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.35296156 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.353236393 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.567823671 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.349982711 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.387982672 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.362202977 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.355874831 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.353016228 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.359544032 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.397628626 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.353401658 seconds)
  done (took 153.913623601 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.351886917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.346864661 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.353014237 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.351588866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.352704622 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.349834636 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348414317 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.352009757 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.348051301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.352118708 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.348210742 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.3527491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.349682117 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.284433646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.345701827 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.36643275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.346751281 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.351887063 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.348627621 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.352668843 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.354247152 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.348249601 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.353140719 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.350356052 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.378795065 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.400935996 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.374709844 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.380592837 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.3522145 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.348105476 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.377405531 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.35192647 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.846930766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.206898167 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.35927564 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.354456075 seconds)
  done (took 85.441864044 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.355230213 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.351664253 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.347438117 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.374961648 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.346876954 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816872893 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816301687 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.354426 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.386595977 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.772226891 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.387689248 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48655073 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.350366601 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437522926 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.365971075 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.353763183 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.395450231 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.379370953 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.352976797 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352527535 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817463748 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.360246871 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.48839738 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.503543479 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.350123847 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.374193171 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.783338854 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.352112589 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37626899 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.724324931 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.382069031 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.352611799 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.584192512 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.281509197 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.450740534 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.353917618 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379108905 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.351324713 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.619380096 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.352929134 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.353464934 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.352426598 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.352591843 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.896275864 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.347975822 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812638502 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.349104165 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.20250878 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.350590387 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.351233084 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.723931835 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.813085358 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.350356016 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.353096992 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.350383852 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.352648864 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350231676 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.375672839 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.811468839 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.491741043 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.353273168 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.35620889 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379365301 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.350775193 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.347196481 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.266788028 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.406060508 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.112181689 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817704529 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348527862 seconds)
    (71/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.542363589 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.352773357 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.441151063 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.463048999 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.353302046 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.351984701 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.348511303 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.349441636 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.452367428 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.35219804 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.694963181 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.508733352 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.354233942 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.392222775 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.440283401 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.352368153 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578445401 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.349177337 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.351757397 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.352867534 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945092345 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.439985493 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.35521258 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.351330689 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.351620398 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.695031893 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820049806 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.48874079 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.352775322 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.871724895 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.347452745 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.690694976 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.352461166 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.800960885 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891665456 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.347996046 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.456454338 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.50899246 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.353440103 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.350624273 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.386731507 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.349594692 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.405825623 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.353958692 seconds)
  done (took 382.100332382 seconds)
done (took 622.802947646 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.230847152 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.146675791 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.212310924 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.10437605 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.07418388 seconds)
  done (took 12.110786048 seconds)
done (took 13.450691592 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.566533641 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.561028256 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.406436267 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.373778674 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.465233766 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.512740036 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377198866 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562603881 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.565689174 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.521337248 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.362396489 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.387866542 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.46727705 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.467127894 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.560947633 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.410112539 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.56146055 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.56398277 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46165622 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.410334081 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380593759 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.560159302 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366704973 seconds)
  done (took 35.211816753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.714605342 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.701487429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399292872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.707385215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.376218974 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.700331041 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.562159206 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.558440938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.560758173 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.40352815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358703402 seconds)
  done (took 18.386331706 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.666200514 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.662683651 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398596256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.663986108 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.375975995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.649695785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.532609583 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.544868918 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.533287112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369816966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36380534 seconds)
  done (took 18.107218279 seconds)
done (took 73.050976407 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.372300477 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.427335826 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.354695552 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.353648181 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.351899813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.35969267 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.361918195 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.360289836 seconds)
  done (took 12.283826377 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.359479508 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.35689069 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.353006301 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.354764264 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.353273976 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.355878423 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.356912942 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.353532769 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.353332533 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.354858346 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.355317617 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.354817702 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.354299004 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.353289232 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.354886302 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.358761579 seconds)
  done (took 23.032523329 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.355156729 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.356069248 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.35115743 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.354684498 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.353603271 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.356148593 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.357242495 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.355665098 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.358115954 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.355755867 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.356947317 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.353934882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.35365861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.350743658 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.353320727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.357259333 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.352601599 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.354416273 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.356736973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.353396222 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.356271824 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.35025943 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.350923072 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.356268919 seconds)
  done (took 33.853445293 seconds)
done (took 70.510799589 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.346097882 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.349652498 seconds)
  done (took 6.035841262 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.751584629 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.807880977 seconds)
  done (took 4.900698552 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.356124445 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.356539114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.355181987 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.35442684 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.355164835 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.351811198 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.357720354 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.353619243 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.356884473 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.356575988 seconds)
  done (took 14.900433067 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.356140345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.356557298 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.35327993 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.354582537 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.356325729 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.351015056 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.35603506 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.3508619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.356974354 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.35597241 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352659586 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.354752549 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.355939596 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.354385736 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.354140999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.352785632 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351042657 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.351744185 seconds)
  done (took 25.720432899 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.369818948 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.374998924 seconds)
  done (took 4.0876752 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.488275681 seconds)
    (2/7) benchmarking "second"...
    done (took 1.399582741 seconds)
    (3/7) benchmarking "month"...
    done (took 1.463827339 seconds)
    (4/7) benchmarking "year"...
    done (took 1.454641159 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.395094686 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.382444538 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.398576222 seconds)
  done (took 11.322030935 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.356867325 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.615264163 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.761811109 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.093548701 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.357760834 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.356181222 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.107421549 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.36271229 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360609289 seconds)
  done (took 15.716801088 seconds)
done (took 84.027624701 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.360785644 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.348687343 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.367077151 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.354557836 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.717804106 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.361924219 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.35147299 seconds)
done (took 17.203229224 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.350976309 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.357785023 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.358092473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.350326676 seconds)
  done (took 10.763080449 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.32683674 seconds)
    (2/2) benchmarking "read"...
    done (took 1.607636751 seconds)
  done (took 5.280735083 seconds)
done (took 17.385410378 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356439509 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.357109312 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.354534439 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.353196436 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.355708604 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.351490119 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.353828536 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.354713593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.354933199 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.355882118 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.356203062 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.353312815 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.354223773 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352851317 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353326848 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35616592 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353673007 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.352209985 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357177859 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.35185414 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357010146 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356857048 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.356659052 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.353308868 seconds)
  done (took 33.855534409 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.352784857 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.352529291 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.354225792 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.354011919 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.356564797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.359961241 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.355482603 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.35553864 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.354851822 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.353892392 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.352106353 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.356901943 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.354188758 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.358926051 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352819198 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.355665962 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.354821606 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354227755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351358939 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.351675405 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.351979 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35414394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.355249552 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351912335 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.35472857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356025445 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.356493727 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.354080922 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.354451223 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.358412447 seconds)
  done (took 41.986616486 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.361815219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.363464519 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.355702242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.354660399 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.356803622 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.353862778 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.356111078 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.358260143 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.354334151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.354977372 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.35324023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.354813265 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.35136725 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.355049117 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.357312794 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.353551622 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.354411851 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.356443248 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.354015265 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.35220224 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.357251813 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.355223672 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.355146045 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.352018929 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.357390666 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.355822929 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.359392139 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.356614506 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.353400991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.355977377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.353782816 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.357819661 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.3541138 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.357899013 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.356866704 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.354341346 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.358387487 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.363149924 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.352286862 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.356677309 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.357341148 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.352933359 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.353767893 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.355845043 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.356827549 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.352059053 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.35426192 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.352035566 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.36018537 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.354170562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.357125457 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.351958969 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.353819029 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.356040857 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.355755315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.352590875 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.35192647 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.354641241 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.356896737 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.351998191 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351959433 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.354607311 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.356764987 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.356432608 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.352300878 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.354340752 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.352498736 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.356736052 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.355677879 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.354804784 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.354568417 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.351908074 seconds)
  done (took 98.92951903 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.350594888 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.35444283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354270574 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.358202339 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353712897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.354026107 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356500433 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35665979 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356674327 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.352801036 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355881959 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.357389453 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358458782 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35943456 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356767381 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.356689062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.355094859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354013884 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.355325001 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356809222 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358693306 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.360550281 seconds)
  done (took 31.176358292 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353567715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.354105623 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.353906514 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36053948 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359964081 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.357242871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.351596143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.355627917 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354624929 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353392917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351508828 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354600829 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.353061734 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355486264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35461842 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357767057 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358740124 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.356648448 seconds)
  done (took 25.73919114 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.357422832 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.357098103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.354962627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35675861 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.35432032 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.354354491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356290067 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.354517747 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.351685601 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.354553607 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.35872692 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357506926 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.352621559 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357154197 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35287967 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.354526885 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.356508952 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358927246 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358815769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352887693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.360939846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357530688 seconds)
  done (took 31.171986283 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354732863 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352498905 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356829566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.356021053 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.354345595 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355617763 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.360194126 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.354562149 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.356207515 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.353880145 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352115079 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.353398284 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.358769948 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356519364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.356071796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354913892 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.355013305 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35148098 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354035504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357129856 seconds)
  done (took 28.447211631 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.359109398 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357741136 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.359460678 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355236505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357428586 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.35702985 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.355171901 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.360818801 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.360302359 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361317705 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355032315 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.360796542 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357284287 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358259731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.360148871 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355590741 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.359758556 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.360669299 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.358610396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358884974 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361551892 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.357933125 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358140303 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.360991694 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355738337 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357988329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354774639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.360695939 seconds)
  done (took 39.379815575 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354574946 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356399468 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.35701266 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.354579782 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.357518624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.352300619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.355263291 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.355187837 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358300891 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.355824502 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.353544706 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.353293423 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.356835052 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.360225792 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356308815 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.354204643 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354960459 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.354463015 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353254768 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.353276837 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.358377558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355705411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.35550597 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354930022 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352425992 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.355599985 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356543446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361004429 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354284107 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359248495 seconds)
  done (took 42.02087727 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.424130162 seconds)
    (2/2) benchmarking "in"...
    done (took 1.422570893 seconds)
  done (took 4.192510062 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.354572669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354329581 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.354640935 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356474121 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.35438638 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.355275947 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.356153739 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.356302931 seconds)
  done (took 12.185505324 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.362559241 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.360532271 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.359270691 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352219263 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.354748642 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.356645659 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362489486 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.362179195 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.354691627 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.361431526 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.362829466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.364615354 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.35859992 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360706827 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.360834675 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366249336 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.361925853 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.359009179 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.358748563 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.357149769 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354998363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35815865 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360697221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.359359951 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.354643145 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.369626041 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.362090815 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.35933207 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361394211 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.368332266 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.362344479 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.359077295 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.354558905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.354472862 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.356615798 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.35294618 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367365917 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.36160681 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.367868295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356953805 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356935811 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.355272288 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.353980129 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.359971465 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361865842 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.362208256 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.359475937 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.353835708 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.358723899 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.358392912 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.360349528 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357029808 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.357508488 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360341365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.359986913 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367813559 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.362025496 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.356002168 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.365836711 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.36759282 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.378090068 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.367803298 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368447003 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.362296832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368008245 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.371283252 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365228077 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.360843796 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.360851654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.354697115 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.364828305 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382802759 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.373655621 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.36196415 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356014638 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.355698079 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358359017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359171762 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367162814 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.364208359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.362887874 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354460201 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366672205 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.37142748 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.361027424 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.360748247 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.355464155 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.353194611 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.353476616 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369740289 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.367788123 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.359326848 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.353782461 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358662825 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.363839734 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.360742682 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.358229478 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360599653 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.357649092 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.353040028 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355920125 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357073434 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.360242407 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363557245 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356349875 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.364484232 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.359300425 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.356139085 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36155634 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.365398079 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.353717408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354936529 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.360615569 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.35878389 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356033932 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.363163763 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.361428808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.359111654 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.358879397 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.354998565 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366219834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.374245607 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.360160519 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.357422341 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.363523506 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.363260491 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.357870017 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.359728935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.36298428 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.354935217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.357815724 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.35753073 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.360321511 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.357152352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359228668 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357790557 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.360989828 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.360245604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.352878263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.357562595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.359760872 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.363777511 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.36354863 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.365190708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.361005233 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.356072114 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.367289701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.36082885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.361020556 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.360397311 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.358115458 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35571635 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.358904699 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.360882699 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.361791465 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361219774 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.356765716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.361733639 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352797753 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.357150598 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357063501 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.358286475 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359242325 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.361524305 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.360860108 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.363559752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.35944237 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.353230587 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.3539658 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.35653284 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.358434749 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.357594886 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.364313433 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.363621163 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.356305243 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.354560446 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.361477252 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362541267 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355894383 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355841262 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.356567823 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364595972 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.365071336 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.364202132 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.359128874 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3587052 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.359316454 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361242971 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.362607327 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361349496 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.358249203 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.365379475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376531599 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.37453821 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.361828979 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.360945444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.361644725 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.361368863 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.361324998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363641577 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.355821142 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355866385 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35374618 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361888004 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.357770371 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.358978979 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.353517206 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.356313994 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.360292689 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.355518828 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353667654 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.359946724 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366017685 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.361026143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360214117 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355173442 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.357944775 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.360889848 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.355375413 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.358227097 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.361022524 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.356907159 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.360582386 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.361112678 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358549595 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36487874 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.363753999 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.362027129 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.360607555 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359238999 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.359152687 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367079113 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.361209075 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.355223807 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369371851 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.36158874 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.355689227 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.360170619 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.362629521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.360475135 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.364602435 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.364830283 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.360645637 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.36019259 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.354930906 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356268785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.36074829 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.360747602 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.364848673 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.361689501 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.361558183 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.357497188 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.362340133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.356145125 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.360726049 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.358598439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358403915 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361964361 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.354209839 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36085905 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.36214442 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.355490033 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.357382867 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35637586 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.363527043 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.36107068 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.364754821 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.364808503 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.361481315 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.358993977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.35691072 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.356627356 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.355216686 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382442893 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.371772319 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368694583 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.372639102 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.360528165 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.360681481 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.363299819 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.362356621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358592676 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363958738 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.359934787 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.362109066 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.359546359 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359313781 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.361752116 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.358587314 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.359158645 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.360808939 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.356846936 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.356117951 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.358715272 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.353655903 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.358025412 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.355264055 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.361427425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.361844269 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363167857 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.361475402 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.3632453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.370368306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367300078 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.364437542 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.364778392 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.360652671 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.361628853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.363765022 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.360610682 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.356595062 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364066855 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358671091 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.367297824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.362165102 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.368509867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.363201588 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.358839172 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.363582987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.361097904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.357848955 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.360937916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.362020646 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366450158 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.363757163 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.359849087 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.357773003 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356218322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.356116478 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.355259769 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.356542775 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355852918 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.353554164 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372336645 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.364791335 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.360541257 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363272664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.363246833 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.361018954 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.361217421 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.355673109 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367937731 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.364042899 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.360474703 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.361683745 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.359216387 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.358123613 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.355749759 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.357467787 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.359960509 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.354808241 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368906726 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.366778114 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361188175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.355817005 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.367585259 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358575401 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367011051 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.358930691 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.359685316 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.357973366 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.357277165 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.359985314 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.359868187 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.362560882 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.361719886 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.361019453 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.362880955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.360350054 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.360544433 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.36111651 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.358597603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.354012477 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370851915 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.370884149 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.361007212 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360894383 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.358249713 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361570758 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.361020075 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.355417833 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.361152005 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.364802414 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.36953352 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364510099 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.359442977 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.359689957 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358395931 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359786578 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.357770225 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.356187367 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.357917176 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.358433644 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.359073208 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.355607996 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361570211 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.360573345 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.357202764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359553367 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.362402528 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.368174505 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.360551718 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.359587643 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.360480614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.357359729 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.35521056 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.359648777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.357518764 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356510717 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357802159 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.3588872 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.365319692 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.364329683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.365728706 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.366391419 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.362021436 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358498645 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.364098967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359774206 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.35851672 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361109265 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.360662539 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.361198663 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.355748111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.359680356 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.362476638 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.358452248 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358091169 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361628966 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.366285907 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3636003 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.361901647 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.361061496 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355723361 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.360626897 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.361056296 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.368006068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366439859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.365438816 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.366207349 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.36167317 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.357246849 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36255015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.363150387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.360795932 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363005985 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.356731055 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.358216646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.360342452 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.363012556 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359719916 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.364840301 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.3627722 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.360811899 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.369411697 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.365530377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.358984274 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.358108883 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.359281437 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.358230808 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.357821229 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.358214059 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.359680906 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369697651 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.36873578 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.359978497 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361197138 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.363469372 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.359041967 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356512303 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357692837 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359926622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358831775 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.359860725 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.360187104 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358446864 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.357597687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.358377396 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.359848895 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.362057205 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.361993595 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.359339444 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.360941339 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.361580222 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361937764 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360958606 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357942989 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.35879517 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.35817553 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.358981169 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359630782 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.359273548 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.363945364 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.361918212 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.358112347 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.358964578 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357247592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36185979 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.366378014 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.364272936 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.358210261 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.358891117 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.361462997 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.362103344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360209699 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.357545793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359881187 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.362007334 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.361610817 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.356274292 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.356759267 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.360690366 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371446457 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.362313129 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359071306 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.359523866 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.366804114 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.361072334 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.356604819 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.356608623 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359890594 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.362228288 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.360322246 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.358067452 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364277124 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362335288 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.357947019 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.35627141 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.359357211 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.360583891 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.361835385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358316022 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.3554578 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.360648633 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.369632411 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359021644 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364684551 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373706192 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.361993925 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.358531765 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.356235715 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355132777 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.355909523 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.35734584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.35639632 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.354955788 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35387979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.354330509 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.357174669 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358933611 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.360493422 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.362773535 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.359030086 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.355594559 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.35772176 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.355059486 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.354665366 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.355265268 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.354118462 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.354411317 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.353974048 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.355694375 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.373617442 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.373250574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.356095244 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.35378289 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.353976977 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.359344828 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.360348301 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36150583 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.357734166 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353523045 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.353961312 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.357210229 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356192719 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.35468765 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.356007084 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.355654366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355942517 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.357167232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.368563734 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365979322 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.360460799 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.358857699 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355345271 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.35395863 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356335548 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355222338 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.354097925 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.357416862 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.357546649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356519729 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.35482119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.353403643 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.357410433 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.357348689 seconds)
  done (took 812.170610509 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356423944 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35408192 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353784685 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.353455739 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35534847 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353342708 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353761808 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.35395658 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353607162 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355259185 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35383012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354173868 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355058714 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.358273425 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354816637 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355176645 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353970981 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.353555447 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354110985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353709242 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.35507152 seconds)
  done (took 29.788813739 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.354013224 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.354550946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354241782 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354268134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354374722 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.353647464 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.35446731 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354245286 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35403207 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354140536 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.354708944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353619948 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.354104064 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.354766778 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354165195 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354204208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.353936191 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.35374352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.354563454 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.354558213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35361548 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354247951 seconds)
  done (took 31.136199845 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.354349736 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.356270182 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.354588053 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.355364136 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.353958964 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.353667776 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.354230417 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.353949786 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.353920494 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.355147494 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.354819435 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.355543761 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.35825973 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.357411887 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.356246433 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.355852281 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.354269576 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.354161209 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.354043719 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.353547711 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.361545667 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.35838407 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.353805711 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.354023864 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.355300414 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.353994093 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.353785781 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.354171977 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.3548298 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.35577377 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.353912499 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356666915 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.358614764 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.357568378 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.355665622 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.35479556 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.354294718 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.353692557 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.354026991 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.36270915 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.363940868 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.353979117 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.369806599 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.366677057 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.353620669 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.357956382 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.358018528 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.353617032 seconds)
  done (took 66.440006087 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.354070543 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.354069685 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.35491614 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.354322629 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.354160294 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.353569836 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.353521981 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.353827766 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.353267739 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.354984067 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.35389121 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.353874371 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353747929 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.353640547 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.356055844 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353563157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.354534658 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.353943724 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.353721602 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.353987917 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.353967542 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.35372173 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.354395322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.35402263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354471444 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.353998799 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.353256478 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.353721936 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.354404327 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.353485059 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.353369036 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354249591 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.353687154 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.353968557 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.35310525 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.353826097 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.353751409 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.353875121 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.353717466 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.353532552 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.352832641 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.352905194 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.352991173 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.352941975 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.354625322 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.353317822 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353178254 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.352424238 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.35225562 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.352394036 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.352437591 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.352989593 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.352270847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.353115439 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.351758509 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.352362086 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.351674372 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.351930933 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.351736744 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.352774738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351767699 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.352715604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.35193454 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.35182012 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.352219129 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.351839659 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.351791405 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.351660755 seconds)
  done (took 93.372943575 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351679239 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351439906 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.351619099 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.351510956 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351886287 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351320161 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351246029 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.353375339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35171461 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.351850716 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352223417 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351650165 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352605766 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352918907 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352432873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352670905 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351982479 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352051041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351543424 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.352258188 seconds)
  done (took 28.382633906 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.352582358 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351493258 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.351553982 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352255253 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.351364584 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.351777852 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351980765 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351733826 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351918333 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351652221 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351761952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351347486 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351666643 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.35153007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352115108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352843686 seconds)
  done (took 22.971225426 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.352195863 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35343308 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.351011394 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.350749968 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.350939407 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.35044287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.352233671 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35006719 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.35124178 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.350887076 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.350639446 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.351025552 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.350426595 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351434703 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349578681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.35036116 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.349557787 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349628791 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.350531421 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.350199075 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.351445691 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349186439 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349967961 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.349335003 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.349555393 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.349845941 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.349515256 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350020989 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.35132925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.348938072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349160962 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.349501109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.35052954 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.348500164 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.349754875 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.349319894 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.348731259 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.349145147 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.348798167 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.348814535 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.349157722 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.349335158 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.348832792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.34886597 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.348743537 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.349165555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.349768656 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.349123707 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.349003216 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.349742116 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.349357631 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.349263331 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.349442247 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.349481335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.348904068 seconds)
  done (took 75.588476997 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.34853843 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.349262689 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.348893463 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348770401 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.348508751 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.349142185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.348614424 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352021836 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348730088 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.348667338 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349187627 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.349892981 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348531997 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.349039901 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34824283 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348317107 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.348732224 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349078804 seconds)
  done (took 25.621915007 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349109828 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349105055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.348204407 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348689895 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.348553743 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.34867328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348775979 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.348320856 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348603723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.348805714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348326114 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.348806872 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349364383 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.348235855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.349234034 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348328724 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.348347252 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348756307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.348397049 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34830068 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.3508767 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34847566 seconds)
  done (took 31.010983563 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348805197 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.348838249 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.348443796 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.358502528 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.351639002 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.348329428 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.348615153 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.348602358 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.363075584 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.36738733 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363805424 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.352032279 seconds)
  done (took 17.586839686 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348772635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348860244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348547854 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348440271 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348771411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348485195 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348751845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348802762 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348250954 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349977101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348822685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348482971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348759558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350087693 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348466896 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348347686 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350234922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348660496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348284689 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349070614 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348630205 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348670376 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348877741 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348781295 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348911548 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348825736 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349380378 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349989034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348914078 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348620408 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348735298 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349040343 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348316213 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349854293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348425783 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348537122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348612868 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348259233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348587615 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347994995 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348116319 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348256095 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347988105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348242951 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34964824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348289777 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348201115 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350185514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348072191 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349300112 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348397833 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348822279 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348069632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348347671 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348389401 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349213122 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349396881 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347779389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348302325 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349451806 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348306059 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347909497 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34861495 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34931207 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348077892 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34833442 seconds)
  done (took 90.356793836 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348477696 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348203215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347672356 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349005564 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348273658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3489694 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348313006 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348200796 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348312527 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34823187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348122077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349886929 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348129446 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348468235 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347703453 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348111938 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347725988 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348420158 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347638475 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349180986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350192811 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347635682 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348279204 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348451523 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349039762 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348000035 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348318164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34818604 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348492949 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348684155 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347365533 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348343429 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34795233 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.347361309 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348480137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348395029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347858549 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348886066 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348440769 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347743562 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348184528 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347740894 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349262293 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34820312 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349168568 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348054337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347640092 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347804308 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347596731 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347758599 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349059516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348899399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349024173 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347840953 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347601089 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347510137 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347536887 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348187582 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346821964 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347820095 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347545048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347396164 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348371265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347366473 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347678174 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348025362 seconds)
  done (took 90.32186089 seconds)
done (took 1805.17500437 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.511172454 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.499451507 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.383918856 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.360119395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.364267168 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.360759823 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.825047419 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.536635114 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.779552062 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.97711952 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.656994758 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.46674456 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.344769111 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.517697018 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.445540503 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.345110696 seconds)
  done (took 33.71261776 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373347257 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.355289255 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441173884 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.352075112 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373695028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.50144973 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.396640338 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.357902607 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.343027416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.37517681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.344271905 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.371005417 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.351495486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.191469068 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.690036369 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.502043984 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.557977585 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.34365884 seconds)
  done (took 30.560288499 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.676218209 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.514778049 seconds)
  done (took 5.529250185 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.366997944 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.353394946 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.353963988 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.350138088 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.343203382 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.344135883 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.349000931 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.34848769 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.342537694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.447174125 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.352292965 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.361197735 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.351118637 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.351862 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.348585682 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.390538597 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.486260045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.349367704 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.348604938 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.356357615 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.349961665 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.444764813 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.384878141 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.349959202 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.444663707 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.34339579 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.353603161 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.358697515 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.477964111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.349256813 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.350038541 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.353978199 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.353811444 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.088630554 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.824214539 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.343228013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.361481981 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.361456273 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.348581186 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.504776214 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.350761312 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.356646813 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.342580987 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.773907778 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.474368864 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.453791699 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.343464282 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.351140721 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.352505403 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.415511106 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350807615 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.35320863 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.385602851 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.133250797 seconds)
  done (took 85.821715575 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.417187805 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.343317004 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542863498 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.348274997 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.343010666 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.343058646 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.343258685 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.550238769 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.405064406 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342833392 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.595787692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80366893 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.345125223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.40978817 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.393825295 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395193794 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343019213 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.342844833 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.345487687 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.35193323 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809373108 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343618332 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34378047 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.540947365 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.377098479 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831513147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.349157475 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.342854732 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.344809566 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.343333809 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785359448 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345294566 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.400624464 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.34420269 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.585207085 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659059425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633434609 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.349388978 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343796462 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.34468482 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.349649407 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.818749698 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657156236 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.343113876 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343423832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.820385776 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.344024207 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.349726312 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.354388851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605125255 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.343362256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.34288568 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.351196384 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.34438366 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.342731479 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.413120457 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.421055448 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.831466614 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342626516 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.343184322 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425163542 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.343695194 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351191759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.350584376 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.343709646 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658589031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.245852954 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.349427007 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.657093812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.774731538 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343494196 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.850661204 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.343220115 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377241709 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.498262959 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342623132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.342741901 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.83204474 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.362987168 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.343073322 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.633031615 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.349583855 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.596733862 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.343447253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342820231 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827211206 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.355005941 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.401372817 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.342774544 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.348535837 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.342672564 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.35157976 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586407338 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.392965998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.343673885 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.343835728 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.377427517 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342655127 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.343952212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.349665591 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852849852 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.354715307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.343220248 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346309191 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342750099 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.344036202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.344681729 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.344153873 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.620859416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.343333234 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.353455313 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.347069238 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.342824197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.352949583 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.540375484 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.347797542 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57484012 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.347513809 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344409256 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34783074 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.342937098 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.352385263 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34429231 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347724262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343643566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.661388471 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.343616453 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.343592568 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.343723995 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.343507025 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344825873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344352717 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.400792304 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346626341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013168035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.395525817 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.398107126 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.343376012 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.353938261 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.343151349 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.350749034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.345439361 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697656315 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.582006702 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.249618069 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335413845 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.335992793 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.069163917 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.414958097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527858793 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334045319 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329383542 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634753599 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.235695145 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.330296199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.328134415 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.33044579 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.604038864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323370652 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.677408535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783604617 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.325993184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329722636 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.042799633 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.325879301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.317792044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.317370805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.561046209 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.312197807 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.311409858 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.311148743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.312304653 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.308368039 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.313717467 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.316123645 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.30907569 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.307856897 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.856059934 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513049008 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.309391591 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.313079666 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.793931157 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.310416981 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303656333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313555985 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.301561967 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.299316892 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.356674902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.303701223 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.375613682 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.295186023 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.302687292 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.799282308 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.294865366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.29358293 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497838954 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.875132445 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.293373618 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.292345614 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.289580309 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.371144462 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805745827 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351494523 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.520589551 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.288931939 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.320678723 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286812102 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301303437 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.886603302 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287793229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.284589095 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941400449 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.285182706 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.049839226 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.281594081 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.28405133 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.854568929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.282598939 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.288810319 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.282674891 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282037402 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.583841925 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.284494552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.315570914 seconds)
  done (took 500.921184721 seconds)
done (took 657.881483845 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.281849764 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.282429351 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.282661889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.282206392 seconds)
  done (took 10.405682553 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.288612974 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.288789252 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.287364299 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.28756289 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.288236572 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.287865394 seconds)
  done (took 9.005392019 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.282766142 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.283380463 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.28239159 seconds)
  done (took 8.125669007 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.4413879 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.279685719 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.563866824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.288170685 seconds)
  done (took 8.849557186 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.287589373 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.287618551 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.286725728 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.287829445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288667983 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.289378841 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.288533762 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.288081874 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.288688863 seconds)
  done (took 12.869121848 seconds)
done (took 50.532223558 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.282786089 seconds)
    (2/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.170509485 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.508912291 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.503630582 seconds)
    (5/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.667069899 seconds)
    (6/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.187163589 seconds)
    (7/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.939243152 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.809997499 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.297704341 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.282419407 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.950806693 seconds)
    (12/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.812294668 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.909985107 seconds)
    (14/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.418910786 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.282617524 seconds)
    (16/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.286031993 seconds)
    (17/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.283999132 seconds)
    (18/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.299198181 seconds)
    (19/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.010404035 seconds)
    (20/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.62258744 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.284713494 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.751151017 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.517022496 seconds)
    (24/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.69821704 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.281114744 seconds)
    (26/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.728948438 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.277109932 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.791876736 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.002611523 seconds)
    (30/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.277230597 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.969848992 seconds)
    (32/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.064308283 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.599608009 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.285606003 seconds)
    (35/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.277568289 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.12048213 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.279429591 seconds)
    (38/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.745275908 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.360193384 seconds)
    (40/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.534128261 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.946755231 seconds)
    (42/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.273240746 seconds)
    (43/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.708345739 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.477492004 seconds)
    (45/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.272329172 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.273467498 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.594570754 seconds)
    (48/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.274619209 seconds)
    (49/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.273037813 seconds)
    (50/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.287568133 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.289289406 seconds)
    (52/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.285477172 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.900660113 seconds)
    (54/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.961562244 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.564521889 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.579981257 seconds)
    (57/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.258423426 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.272164878 seconds)
    (59/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.710008219 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.284388338 seconds)
    (61/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.766955202 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.117359618 seconds)
    (63/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.491331997 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.273825451 seconds)
    (65/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.675057793 seconds)
    (66/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.642931548 seconds)
    (67/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.525455357 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.927647007 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.272821735 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.273787518 seconds)
    (71/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.840216984 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.178297981 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.485339216 seconds)
    (74/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.305659588 seconds)
    (75/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.366404059 seconds)
    (76/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.386322041 seconds)
    (77/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.273732754 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.287086337 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.9486919 seconds)
    (80/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275391578 seconds)
    (81/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.286845313 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.281306407 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.27342646 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50017984 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.000381357 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.60276439 seconds)
    (87/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.61533405 seconds)
    (88/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.277664579 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.35960783 seconds)
    (90/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.646490281 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.274798571 seconds)
    (92/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.271644284 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.614766349 seconds)
    (94/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.037516883 seconds)
    (95/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.363361693 seconds)
    (96/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.271389861 seconds)
    (97/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.272462941 seconds)
    (98/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.271852202 seconds)
    (99/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.388864054 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.832281768 seconds)
    (101/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287060993 seconds)
    (102/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.27037234 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.500192683 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.224912447 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.271466916 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.605520511 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.284647791 seconds)
    (108/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.285342983 seconds)
    (109/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.28328486 seconds)
    (110/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.270066379 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.27592868 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.030026403 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.426746302 seconds)
    (114/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.597789975 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.270868485 seconds)
    (116/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.288636172 seconds)
    (117/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.740796883 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.95138648 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281981194 seconds)
    (120/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.28497617 seconds)
    (121/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.927948163 seconds)
    (122/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.383264819 seconds)
    (123/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.271530238 seconds)
    (124/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.270819443 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.272397627 seconds)
    (126/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.271119483 seconds)
    (127/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.498931581 seconds)
    (128/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.805269565 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.270827997 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.289111447 seconds)
    (131/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.270178548 seconds)
    (132/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.285110715 seconds)
    (133/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.722501443 seconds)
    (134/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.387670307 seconds)
    (135/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.529538537 seconds)
    (136/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.271399484 seconds)
    (137/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.285123547 seconds)
    (138/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285027071 seconds)
    (139/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.676569577 seconds)
    (140/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.221874826 seconds)
    (141/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.062780375 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.661219275 seconds)
    (143/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.270406959 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.605705887 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.411248113 seconds)
    (146/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.365160544 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.575607365 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.162768534 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.283982318 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.060563955 seconds)
    (151/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.274022558 seconds)
    (152/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.271712855 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.489484487 seconds)
    (154/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.270238803 seconds)
    (155/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.168029411 seconds)
    (156/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.288247383 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.931102284 seconds)
    (158/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.662227469 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.27154532 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480105436 seconds)
    (161/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.164009502 seconds)
    (162/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.724163762 seconds)
    (163/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270633778 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.271055223 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.9489508 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.284474542 seconds)
    (167/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.27085317 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.377702857 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.270633022 seconds)
    (170/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.529423207 seconds)
    (171/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.529521752 seconds)
    (172/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.207743122 seconds)
    (173/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.205290431 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.710499788 seconds)
    (175/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.591776877 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.272607012 seconds)
    (177/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.283511522 seconds)
    (178/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.270578715 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.270804611 seconds)
    (180/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.270499842 seconds)
    (181/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.539027719 seconds)
    (182/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.271591573 seconds)
    (183/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.746689939 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.656693437 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.471051907 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.748330283 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.272011198 seconds)
    (188/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.271234383 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.994205497 seconds)
    (190/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.510491852 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.270279634 seconds)
    (192/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.273777775 seconds)
  done (took 364.849371718 seconds)
done (took 366.126710169 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298902719 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.891186277 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.27954774 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.278930097 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27997485 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.281631556 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.290772267 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.279826536 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.282607075 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.282614892 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.281684148 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.278251123 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.294383693 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.279338863 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.294959911 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.279731806 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.278825179 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278908191 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.283669199 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.28929284 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28007993 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.280121118 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.296392488 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.278998069 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288583246 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287392595 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.285366141 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.270744392 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277131405 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.284192807 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277300113 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.286019476 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.28622439 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280210872 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280628464 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278944673 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280264787 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.893030603 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.289849993 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.279342263 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.277592402 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.285620916 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.284130556 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.284343873 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.279886665 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.296727908 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.287708644 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.292903449 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.270961128 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.271693457 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29983256 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.282623675 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.277531891 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.271147307 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.271677487 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.2955439 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.279093543 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.299632466 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276058383 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280523672 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.295544815 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29825297 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.28257096 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28698338 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276194079 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.294692893 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.278602879 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.288898568 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.277187765 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280573188 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280472707 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277363585 seconds)
done (took 102.897667891 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276958605 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.27692111 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.409330579 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.27681219 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.420056646 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.27668715 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.276582901 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.286082652 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.277533251 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.27660497 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.409755982 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.276694764 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.409989776 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.422031226 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.409072724 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.276681126 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.277279834 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.276803302 seconds)
  done (took 28.077439545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.350990129 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.350605318 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.379420386 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.277407463 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327587951 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.379667563 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.277226655 seconds)
  done (took 10.608329009 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.284329303 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.27629343 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339822797 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340166286 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.2760503 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.467025464 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.289931081 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.276431278 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337711443 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.276802151 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276415076 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.286248468 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.272888897 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339810854 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.289970578 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395395146 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279841294 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.276892428 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.447086021 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.278006082 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.285631068 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.334653897 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289993784 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.276822901 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283739415 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276829873 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.276477977 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276942568 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.353385803 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.276724503 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274050363 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27691384 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.27684133 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.276727719 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.277134442 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.279348268 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.276800929 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.277029059 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.27705579 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.276756436 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.276805788 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.300735303 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.277184845 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.276876173 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.277128908 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.276795247 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.334456142 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.276502368 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.276865211 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.27815845 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.3387572 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285813538 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.276758146 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.276163086 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.276503951 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276587727 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.447131696 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.340158217 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.276383453 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340413324 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276613321 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276209739 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.276973121 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.276447079 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351241837 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.276555062 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.342327178 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.276821155 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.468634899 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.301083847 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.276426934 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.281507542 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281800088 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.27878283 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.283703252 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.277003911 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.279907121 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.284406919 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277030764 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.276597649 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470657562 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.276764925 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.295576425 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.285387683 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.276808265 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336162376 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.276677707 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.276455266 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363432232 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396077449 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338014302 seconds)
  done (took 123.774663562 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.295202469 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.280631116 seconds)
  done (took 3.841523043 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.280868686 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.277956172 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.277310603 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.27715533 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.277258767 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.276551649 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.276864405 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279157823 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.277845602 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.27688721 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.276665558 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.27824786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.27707151 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.277609122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277573011 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.276895698 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.277082603 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.279251118 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.27672991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277026164 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.886774329 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.277768923 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277392011 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.278325756 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.277479192 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.276774244 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302733411 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.276710124 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.276762024 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.287513245 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.27858108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.276550231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.277302887 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.28094271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.277719707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.277894132 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277156922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.278296236 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.276830646 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.276371782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.277767218 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277368838 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.277230531 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.277734949 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.278505373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.277827752 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.278151207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.303000587 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.278483664 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.277269484 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.277975999 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.277083183 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.276771039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.278297319 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.279752433 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280043746 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.278514784 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.276792255 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.277514885 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.278269461 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.277995659 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.27665513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.279188934 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.277797971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.277232074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.277918785 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.277551932 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.278112527 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277392986 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.276922446 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.278423867 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.276562219 seconds)
  done (took 93.933168523 seconds)
done (took 261.500189027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.065036873 seconds)
  done (took 4.330385246 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.551229372 seconds)
  done (took 3.817153125 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.750556714 seconds)
  done (took 10.019248413 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.310331041 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.294246993 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.273850604 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.279244926 seconds)
  done (took 10.423531395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.883805423 seconds)
  done (took 4.149908849 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.272641349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.280898284 seconds)
  done (took 5.820417997 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.430631118 seconds)
  done (took 3.696232678 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.424681287 seconds)
  done (took 3.691702116 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.287593716 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.295051427 seconds)
  done (took 5.856687581 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.284408609 seconds)
  done (took 3.55065607 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.591892708 seconds)
  done (took 8.857752642 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.294746737 seconds)
  done (took 3.562621199 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.312441717 seconds)
  done (took 3.578601361 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.943613361 seconds)
  done (took 4.209529806 seconds)
done (took 76.830093147 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.27216429 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.271422111 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.271018122 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.272184166 seconds)
  done (took 10.352348939 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.343398108 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.335373712 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.3521887 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.329763404 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.335418406 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.335418306 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.302999407 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.302943744 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.337229673 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.333069945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.338442376 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.328463942 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.345306051 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.303660523 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.334216595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.347867587 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.333433038 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.33765466 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.303153672 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.32908465 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.27781651 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.335539498 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.329581058 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.277998263 seconds)
  done (took 33.096858538 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.694970357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.348812198 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.484084556 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.328835793 seconds)
  done (took 7.12296301 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.3704067 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.380875886 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.381192727 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.424169239 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.451098236 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.381013352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.303643473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.298936836 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.284466025 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.380753811 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.457344763 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.277025621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.552749469 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.277329454 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.567770562 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.276990711 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.278576471 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.372118228 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.420442966 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.437703808 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.27748333 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.367076173 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.375708948 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.277235396 seconds)
  done (took 34.139286633 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.285086586 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.293884398 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.278531613 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.278756738 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.279200632 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.279704884 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.292790021 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.279759102 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.284472415 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.277810138 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.277736045 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.278754119 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.291945655 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.277982622 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.278357332 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.284943572 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.281886551 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.284892626 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.288032276 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.278621697 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.278032632 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.284829319 seconds)
  done (took 29.48299113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.272595023 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.273342927 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.622682701 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.527527348 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.272616956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.272324078 seconds)
  done (took 13.507383301 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.326449041 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.349768449 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.278021492 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.524504647 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.584880242 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.27931782 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.279020035 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.378230112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.5792649 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.649469402 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.308871256 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.316678048 seconds)
  done (took 18.121133068 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.276053553 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.272091038 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.278027837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.287455008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.316172289 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.280513057 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.284900911 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.272233471 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.315789428 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.319941261 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.280639298 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.317273591 seconds)
  done (took 20.768812793 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964247022 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.161288089 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2722284 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417423447 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271813185 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2839121 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407700309 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683780292 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.276872037 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548107065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271733993 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849937713 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275964222 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273575056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274159313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.273859166 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27798338 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971728337 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273735054 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273745594 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277041168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.280267044 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27390969 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436936604 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287879728 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273927849 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.536176056 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274292201 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503538273 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475814337 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477333111 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276745007 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551950395 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613375514 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41646657 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437739021 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281041255 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275170913 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.297950205 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.275062213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280288268 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.277320767 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474165786 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276924698 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275238368 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281901058 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687934548 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.282591518 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.274546811 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275935338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47866354 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854047131 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.280044798 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274963463 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449149599 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274384525 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.279887321 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471079115 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28324137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274224087 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277119375 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.274555103 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.27991025 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283928481 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854566035 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.281737613 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.279591694 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.279799022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291983049 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274263349 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297705596 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.286552642 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.294127352 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274440019 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906509933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276654041 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282716717 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926910698 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274479204 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.27527481 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278998084 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275308913 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274539721 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.274014033 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274447843 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023178758 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280972883 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.274826447 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.290945174 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687491639 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.436079162 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058822434 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275126276 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281536272 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.274917326 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276048214 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.274294622 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279599216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29696143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.687742219 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292374518 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.279475643 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287324368 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.484813527 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274338963 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.274041496 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689632821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275297322 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.298561247 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281159947 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.431326802 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.758911941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478465571 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282652997 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304479265 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274392245 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099074552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275794383 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.27972376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2742406 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518606321 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.274529109 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274664247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397053678 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301791993 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.274870339 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284292333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276754749 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274522775 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.503251588 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276593588 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.475148513 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.277015997 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275233454 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.278048637 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27927105 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.276849268 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282744625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285098068 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548327046 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274579333 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283497484 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274756501 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.286053592 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.274869712 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.279889618 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275311812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275002797 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283569479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477910867 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302627598 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418114769 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302276976 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.281025801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276248132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.281121089 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.280488877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282302931 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27673834 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304694461 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.282635424 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275063488 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75954302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250613468 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.298321454 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162402259 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.289723304 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395592139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28240977 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.433375869 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.279684782 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292731012 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.281167012 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.281670085 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277930347 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476813998 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.275920544 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449178117 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.68568096 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.760782103 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683269009 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.276406611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.274550561 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.274827144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274904896 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276348696 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.27622791 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435300263 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.483117922 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.289687337 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.76553513 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277709188 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283319396 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.282293536 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477173755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.284042168 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27561636 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.277905238 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281258287 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276791485 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.476165839 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553550371 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.290497242 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275324479 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.836463066 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.28282506 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275561226 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274737674 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30460377 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282780885 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770811041 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.287407842 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276407971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.478649986 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.2759777 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.29438925 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.274642336 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276105323 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277349132 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.276630976 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281201486 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.43470507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284592723 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27619522 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275379345 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925697363 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721943291 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277192049 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.282838262 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274636247 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689608069 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276375359 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274962152 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470333865 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687417966 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274240877 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687166299 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.274495599 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860545241 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476979671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283260733 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280344204 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.275896935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480837785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48650618 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306940595 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284529427 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279166719 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.278281216 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773072157 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27982587 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453648703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688104464 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274895442 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.277355236 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.35009674 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275967423 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.582606158 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274412395 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275519744 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.284066277 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274148537 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77306905 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298724011 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275177314 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863411239 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283364608 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.688102024 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274740128 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.435368758 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.476512877 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.546444845 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.278923334 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.280430559 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.285877282 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.479428259 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280205666 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.274907996 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722637066 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.120012946 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.282025198 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274884545 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089665365 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274710701 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50271191 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.278006328 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.274639006 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29780663 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275433865 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275288771 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.275255476 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.296454211 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249944348 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829530969 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.292836788 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28287784 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278611233 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277342146 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277779083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.290892234 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.758700605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282221296 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280746844 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30333104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.280020435 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274478824 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.277862973 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.276642692 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290669112 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458602607 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283595921 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28913422 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.281695196 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.418001956 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.485290292 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275038155 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275839873 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469884649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.275483171 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.277369953 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934670452 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.285198651 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275626915 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277104453 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.278587608 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291800245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398328232 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433879828 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.477521344 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.480014801 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581623212 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275515291 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276848655 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.003889145 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973280392 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275470051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.27742125 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.276788126 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764079374 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945250786 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.770993446 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481873853 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.277670194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293289976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27523046 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588843823 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275644525 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551149867 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28737831 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.27835381 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296628217 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283260979 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279925476 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48528053 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549009765 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274947989 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275072312 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274749483 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.274946119 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477037196 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.486139688 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964617363 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922159008 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274977526 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.276154566 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.688369202 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549959563 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275350143 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277257253 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275109981 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.281849008 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275727694 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.282464805 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282372785 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562342538 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474524246 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616936008 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.473602924 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.666899013 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149776202 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275162745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279579757 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280227419 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.433640078 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753297367 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.865398349 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284641184 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399559047 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43712539 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.275677856 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587087421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.279753696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275395017 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275472846 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27732671 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.275265264 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472545134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77172265 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278975622 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.281218569 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.281217899 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274890783 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.431382669 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283455506 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030847753 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275836213 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475563928 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298500795 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275469215 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757252472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480010312 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276690806 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.280771707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466107311 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27689132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.309898184 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.149634867 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.274921322 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098266378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.485260339 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058849271 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275474915 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869243051 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764328015 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.279917842 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829151722 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274846339 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274625953 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551678854 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.284451024 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275028933 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56279434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.280714881 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27831067 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436149086 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.75477557 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.862213547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.282179242 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275638965 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.277469897 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27506251 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417926651 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278050671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315225961 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.668991454 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.275033848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275450152 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.832088182 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.280710839 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274907726 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.274915836 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27510456 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.283421612 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.298972162 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.275210871 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.277391681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471394247 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768838906 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290787061 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.899796327 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.61003579 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.279886546 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275707866 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.27669854 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.281479765 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275147418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275292304 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275829268 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28187523 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084944791 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.277908553 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.474665371 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.281991653 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.485383371 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485399905 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280033516 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435122305 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279783986 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.294539676 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.278374507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276506749 seconds)
  done (took 968.460541395 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.306913388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.280828238 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.288049015 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.31113578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.308495678 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.31404765 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.327798147 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.301583086 seconds)
  done (took 19.708701584 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.280941552 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.287577423 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.28038089 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.286798342 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.276744815 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.517288804 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.282546592 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.286354984 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.291621396 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.278563136 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.283524135 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.649909334 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.28561847 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.276757618 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.275158573 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.285644173 seconds)
  done (took 30.396539484 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.952392236 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.304266182 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.311089819 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.312197724 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.291823395 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.2784602 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.404383101 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.27978427 seconds)
  done (took 22.405405492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.292180729 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.292057861 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.291950356 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.292441562 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.291963474 seconds)
  done (took 7.729867082 seconds)
done (took 1216.559669907 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.281307747 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.281640336 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.282995385 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.283104117 seconds)
  done (took 6.397997264 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.275419766 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.275508463 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.278793563 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.691637379 seconds)
  done (took 9.791162999 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.587911857 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.715954464 seconds)
  done (took 4.573577973 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.645497409 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.330024454 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.453801168 seconds)
  done (took 5.69935459 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693537106 seconds)
  done (took 2.964866868 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.754232402 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.731577211 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.431072953 seconds)
  done (took 6.187080734 seconds)
done (took 36.883586531 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.276589102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.047223628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.430205659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275125265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.437154609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431243936 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.503219897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.274906428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.281269085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.279171219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.27490406 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.436700743 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.490057182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.04674197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.490213263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.046473464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.436097465 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.275238626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.276820752 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.279767041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.496298867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.278923105 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.280203145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.275621042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.437334983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.420639147 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275402807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.045820166 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.274943744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.275341578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.421021787 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.274790747 seconds)
  done (took 79.316058836 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.275383849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.275152862 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.275072541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275009186 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.27525521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.275974535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.276756022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.275225401 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.279906443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.282315478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.277440884 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.275706601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.275622098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.275291681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.277825442 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.275157148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.275077023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.27530731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.275716924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.283692563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.275511025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.275388955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.275277169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.279014377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.275168217 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.276054723 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275391447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.275805743 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.275606576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.275563772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.276736827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.275566483 seconds)
  done (took 74.114633689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.278411752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.27590064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.277039398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.275609779 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.276270931 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.276883928 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.276652321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.275614117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.276639365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.275188151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.275328258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.275183502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.275707815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.276013504 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.277393025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.275707365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.275618918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.275284662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.27598514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.275622113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.279483041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.276053927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.276159981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.275706489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.275649991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.276211941 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.275507858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.281581692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.275642799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276002723 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.277178185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.275448594 seconds)
  done (took 74.114143415 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.506110607 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.281394212 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.283332329 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.275788756 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.282824216 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.281125827 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.275905671 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.510084859 seconds)
  done (took 13.966740821 seconds)
done (took 242.781355478 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.275373733 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.755444125 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.30224193 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.275612432 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.305014831 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.305430561 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.438929296 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.302451525 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.422292716 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.27571558 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.302399075 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.276024631 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.989711727 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.387510547 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.148817031 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.270962758 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.065552192 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.285561919 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.815824459 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.445833166 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.302085634 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.275750949 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.158814838 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.065372364 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.275574757 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.286620089 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.286724862 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.395077502 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.365959262 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.288386995 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.757412534 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.276829806 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.275674744 seconds)
  done (took 59.927114511 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.280443281 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.281366931 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.281115604 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.281093326 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.281165147 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.281206094 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.281322701 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.281138725 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.281197765 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.281144793 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.281156436 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.281444351 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.280843496 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.280945824 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.281799731 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.281116568 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.280987603 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.285252717 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.281112428 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.281387219 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.280700508 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.284838703 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.280863083 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.281253179 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.280825372 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.280844633 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.281335411 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.282717184 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.281044388 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.280887195 seconds)
  done (took 39.714325148 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.281372529 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.979078778 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.279746322 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.285523391 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.585441039 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.606051426 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.108138182 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503519942 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.287424809 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.359247642 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.277042627 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.281220901 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.281581605 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.982613235 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.313973572 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 1.879687006 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.352718972 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.659534068 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424242341 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.27626222 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420748187 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.407382669 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.285529492 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.290104957 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.313344602 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.287745743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.674721118 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.28672573 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.289777395 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.28989349 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.2863817 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.595961882 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.27576256 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.275849276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.674420045 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.281693483 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.854071855 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.281496446 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.47686396 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.287506277 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.281885014 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.288876557 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.276340893 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.289144688 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.660559217 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.281399304 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.314849963 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.6019299 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.285384212 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.279985945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.275935957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.660210147 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.286227098 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.287774608 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.286454197 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.661444018 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.286907102 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.109574523 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.601482194 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.287152347 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.287840809 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.276299462 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.276256566 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.351720821 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.277422957 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.275625695 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.275327398 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.28629163 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.294343191 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.662451532 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.275777347 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.282616048 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.561156071 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.282698047 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.275698293 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.281130258 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.287317711 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.29145262 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.28192294 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.281793391 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.376893439 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.402070199 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.602491884 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.606603792 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.28718517 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.412214767 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.285788932 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.594481465 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.280729396 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.287261111 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.284574837 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.281221425 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.068081461 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.275972764 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.28149449 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.282142306 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.415849879 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.674311133 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.290094535 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.289761551 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.426164112 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.278633728 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.275970356 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.602027794 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.281944949 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.276164326 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.275862834 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.412318529 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.281713723 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.29288628 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.286598544 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.285012027 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.524014911 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.600583873 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.287671149 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.286320639 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.635846445 seconds)
  done (took 188.37300091 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.283312952 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.276864301 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.277967552 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.276253403 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.277539175 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.287753107 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.276416391 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.275664898 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.275915641 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.27657094 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.275921079 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.275645978 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.28584653 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.276276694 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.276866624 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.280230071 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.275778564 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.280735445 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.275524892 seconds)
  done (took 42.557595965 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.28162517 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.639363278 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.281521139 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.28152749 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.32074013 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.281590182 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.276147526 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.397388858 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.281417324 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.281784409 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.281431722 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.276136571 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.284898644 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.674443762 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.284157682 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.674156938 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.281729352 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.282220444 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.281467633 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.675782955 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.276442748 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.597344205 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.323015196 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.675546223 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.28151096 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.281590279 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.281512984 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.674236148 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.281605602 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.682431231 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.282936047 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.281602435 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.323037618 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.323124013 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.27592083 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.595896962 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.301789958 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.412792463 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.2816402 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.283143754 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.677027693 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.283068273 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.283838846 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.286977173 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.644050278 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.642770881 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.281180706 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.28190899 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.674515007 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.642153696 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.639882413 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.394783698 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.282072756 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.28120673 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.595513646 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.281787822 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.677383745 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.284732041 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.282665388 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.282068867 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.281996412 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.285369375 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.398478773 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.674411982 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.595308417 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.285178534 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.276836615 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.276200521 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.282117607 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.323259353 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.281549724 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.276018479 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.2820976 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.321867156 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.609008477 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.279596272 seconds)
  done (took 114.739254025 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.369948239 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.720666089 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.275874106 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.286092643 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.38945872 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.370577333 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.477871269 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.33931038 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.329607319 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.369778895 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.389517678 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.711642243 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.276390448 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.353342704 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.877959541 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.502860367 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.076448356 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.277116363 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.416345902 seconds)
  done (took 33.082662877 seconds)
done (took 479.664148732 seconds)
SAVING RESULT...
DONE!
