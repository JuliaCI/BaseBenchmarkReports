cset: moving following pidspec: 10604
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.160242684 seconds)
loading group "string"... done (took 0.450639046 seconds)
loading group "linalg"... done (took 10.09141125 seconds)
loading group "parallel"... done (took 0.299426977 seconds)
loading group "find"... done (took 1.87554754 seconds)
loading group "tuple"... done (took 1.972628745 seconds)
loading group "dates"... done (took 1.327558192 seconds)
loading group "micro"... done (took 0.453950122 seconds)
loading group "io"... done (took 0.439135185 seconds)
loading group "scalar"... done (took 44.684869478 seconds)
loading group "sparse"... done (took 11.746239082 seconds)
loading group "broadcast"... done (took 1.032003981 seconds)
loading group "union"... done (took 7.956720273 seconds)
loading group "simd"... done (took 2.049085231 seconds)
loading group "random"... done (took 8.382573122 seconds)
loading group "problem"... done (took 1.945943591 seconds)
loading group "array"... done (took 24.807847624 seconds)
loading group "misc"... done (took 0.942499598 seconds)
loading group "sort"... done (took 3.423275525 seconds)
loading group "collection"... done (took 15.425045783 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.612602056 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.114219883 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.180318543 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.178698686 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.24856133 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140453445 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142228489 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101544837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.771194544 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181550338 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126684619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.362740257 seconds)
done (took 6.240457831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.232313012 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.083665223 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147100719 seconds)
  done (took 1.281784536 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.088125162 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080488295 seconds)
  done (took 1.222211415 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.081633566 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.347683668 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082622972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.480712296 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.140253193 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083654002 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.08424662 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08166912 seconds)
  done (took 2.353493297 seconds)
done (took 6.225112943 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.38296011 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.83853163 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.46152487 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142154843 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.282428423 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.235218306 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.203051356 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200669763 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.105967897 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085102811 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.16964778 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.410061343 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.290001027 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.762765917 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.084603956 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099662714 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13389641 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772697805 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083790807 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133003936 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.369037758 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119775508 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105881088 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.146813184 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190262215 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107498079 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163130509 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.083457873 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.686973524 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123185049 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.203804687 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089170716 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157833928 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.127669332 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179545886 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.116880788 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675780133 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192097839 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.145475907 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.08503693 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68969503 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.105764517 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.166813264 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.097230593 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.085359271 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.168935207 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121833296 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.083253139 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109960438 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08289995 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166977721 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.472712252 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.114636254 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.185158648 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097980575 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.693849397 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103832951 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.257053076 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130922334 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110086862 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082544119 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.083930657 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151791836 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.08711157 seconds)
  done (took 19.483850593 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143169719 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137168072 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.085337185 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.131800464 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100093598 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083333953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083144728 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084817518 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088948379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1283766 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.106168764 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153307514 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.083640785 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082872046 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.14921089 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202601759 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089225647 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09525926 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086009796 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086596299 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114763434 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088980975 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.100637329 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083483251 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140370372 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.217842751 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115848082 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115918417 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08298537 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082597786 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.150398345 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133069164 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083599854 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081221565 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121612768 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126243298 seconds)
  done (took 5.119747554 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200378148 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1068084 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16458057 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.137784726 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11566963 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152445937 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137070819 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231083736 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.697118639 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.187108775 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.1816971 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08145622 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168625783 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131643005 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101345098 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081496452 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084630297 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082834975 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.575195265 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143666073 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111730814 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134802069 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115957639 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087161008 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375133463 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084135694 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082774038 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083331468 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084237791 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.181784864 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082839986 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.583876105 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087865009 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081199894 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129055385 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216254153 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087551796 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122911912 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082869207 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08236894 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084245146 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083743086 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084620154 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106120677 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117728301 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126145411 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082457466 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098797713 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173832494 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082730139 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.090113109 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.815957218 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170755775 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.140130487 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096596183 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08340316 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.162565763 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103916568 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082894829 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081826799 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081388563 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.157586491 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.090880154 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082249828 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082646152 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082620284 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084975632 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082021237 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.263991057 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08574679 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10184061 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084009886 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085702636 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.351932589 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088288289 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0871931 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103692166 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083524022 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082564468 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08201708 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083616652 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083313536 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104385873 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08709619 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09840917 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144920336 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083996219 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10186717 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112959454 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084520641 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081557523 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128493962 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084073321 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084962013 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.155631184 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080953185 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102594057 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100274491 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134467781 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083247672 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181002145 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082787836 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102683683 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087009722 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127331467 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082729314 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082560039 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086244301 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082652688 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083542941 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144995767 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082371694 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083530505 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083285895 seconds)
  done (took 21.398512686 seconds)
done (took 47.059928014 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.353244885 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082474607 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082834435 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081976881 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082723746 seconds)
  done (took 1.81220731 seconds)
done (took 2.913989373 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.188243502 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100941782 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09682978 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.097746196 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.104410099 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098899648 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083526115 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098758711 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100392342 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113889904 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099412904 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.084151274 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096610867 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.099905532 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.097867678 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.080942676 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100074233 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098387032 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094646503 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.081053816 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081478701 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.117300119 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084211604 seconds)
  done (took 3.430775303 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091994589 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09982576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.091813239 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093166858 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083058734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092670504 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091969587 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098995496 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092230762 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089532959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080636103 seconds)
  done (took 2.116017854 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092249892 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097252168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08541273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093250001 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083620805 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092849677 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09289683 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097171615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092495858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090347094 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081155874 seconds)
  done (took 2.107617423 seconds)
done (took 8.764679244 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.443685456 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.643366889 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148175469 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20201364 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.255162545 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.179364669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283262838 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.163791566 seconds)
  done (took 4.545712312 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.122700888 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144415776 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085546 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087233823 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.0843707 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085476004 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08701101 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084329841 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083926146 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090121182 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087973869 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08283974 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.083195522 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104465102 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084804909 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084104688 seconds)
  done (took 2.646025841 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139282089 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120545516 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.086829476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087732017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088175201 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089230381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090386828 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08730159 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.084311381 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086528597 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090541398 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.086221265 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085770677 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.104308215 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087986541 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107583646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085787034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08740014 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106237467 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088556588 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087269824 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.085108184 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086949602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086638077 seconds)
  done (took 3.443051829 seconds)
done (took 11.744814228 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.098713208 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083190106 seconds)
  done (took 1.300027991 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.155490177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153180087 seconds)
  done (took 1.433592964 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087637264 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083305326 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086433958 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084308116 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082061953 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.081844084 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085500957 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081722435 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082745037 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082186099 seconds)
  done (took 1.968085853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084205143 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084247813 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085196521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.14656091 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.084233957 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081918145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083023644 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081869975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081923478 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080886691 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.082048956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090687909 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.081704678 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.106781214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083363502 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083709646 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.083517797 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.08389081 seconds)
  done (took 2.7182129 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081534855 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.082701214 seconds)
  done (took 1.287241798 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080611557 seconds)
    (2/7) benchmarking "second"...
    done (took 0.081546127 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083726351 seconds)
    (4/7) benchmarking "year"...
    done (took 0.08105921 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082846996 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081430569 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081080599 seconds)
  done (took 1.694975513 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438195434 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.201325262 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290942017 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082844603 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100856333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302959462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081692409 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08186145 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087303799 seconds)
  done (took 2.826387305 seconds)
done (took 14.357794199 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092412349 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.158510596 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.468837999 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.102582751 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082823275 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149469774 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.184840749 seconds)
done (took 2.377580222 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.246001186 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.137482267 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.107725757 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.08403491 seconds)
  done (took 1.702411446 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084102695 seconds)
    (2/2) benchmarking "read"...
    done (took 0.089534389 seconds)
  done (took 1.311027024 seconds)
done (took 4.152193488 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081054122 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.114491523 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081965819 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.081623299 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081846464 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081879879 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.082135179 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081952801 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081752262 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081930543 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083357114 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081528372 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082117266 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.080940849 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082100074 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101692595 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082025369 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081816896 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082353846 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081544341 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081360718 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083549849 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08153813 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081487375 seconds)
  done (took 3.187935187 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081784806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081530211 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081875496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08209868 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081850133 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.081545584 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081509156 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081867343 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083841217 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.081773511 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081644665 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081675234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.081086214 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08139817 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081376751 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082269905 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098253479 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08263556 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081480655 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.085457582 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081620542 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082450186 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082014414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081555909 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.081263552 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081353144 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.080920117 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081801203 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0808017 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.081452372 seconds)
  done (took 3.613832939 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088081609 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.080105776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082298826 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085663151 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081721868 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081783611 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079431512 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082093344 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082276534 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.081882985 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082938894 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084725044 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082738584 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082499138 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083085502 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083054686 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101834545 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082965535 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081911971 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082887056 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08245101 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082166586 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084161517 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082537259 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081723181 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079326419 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082125215 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081930973 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081986141 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081745107 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082855746 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0827531 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100382524 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087989007 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08268833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082362084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08294659 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079831399 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.083299365 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079422847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079388619 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082411138 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083728461 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083823096 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084279545 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081990271 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.082274913 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082585901 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081918264 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101134104 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082615788 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.082445032 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083000166 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082787987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083762215 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08212075 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081940813 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079011602 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08257866 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081665943 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082706011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079903441 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082074864 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082712734 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085997208 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100927144 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085462877 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083401953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.082373401 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08337833 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.083470625 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086590151 seconds)
  done (took 7.166214617 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081393405 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08249641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082105865 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082233999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082186306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084065741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082024566 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081718224 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082472704 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081360755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081254455 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081649056 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081566163 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082173953 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081738313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082133607 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101288454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082492638 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08188321 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081959903 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082045208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08266418 seconds)
  done (took 2.971791246 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082567112 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085891985 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.083377314 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083992137 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085881866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087084493 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082563287 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084074632 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083162846 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08237761 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083358688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083139587 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084714247 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084199507 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083077826 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084314961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102799347 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085532909 seconds)
  done (took 2.679829433 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082119514 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.082503516 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.081796737 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082603719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082694346 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08261313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081990504 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081919876 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081912913 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.084375789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081800158 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081571262 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08198967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082552838 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081444746 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081940343 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099673658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082826929 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082689254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082417193 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081945613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08419582 seconds)
  done (took 2.976208095 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082528562 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082841031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08328025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084025014 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083253943 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08395536 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082657138 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08322261 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086463047 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.082781635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085114059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083089106 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08640479 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082885509 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08303855 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082532137 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099948773 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083566536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08298999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083056232 seconds)
  done (took 2.835727808 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13906385 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085704062 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085052559 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084653883 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084927634 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084386236 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084524869 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0847222 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084482482 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084414548 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084633891 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084638391 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087243532 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085417341 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103721543 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084821705 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084904962 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084591923 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084762954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084787862 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084563861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084792316 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084630269 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087585681 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084820379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085113398 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084763178 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08665402 seconds)
  done (took 3.604086388 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081753621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081834513 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083701817 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082893566 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0828539 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082755199 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.085087695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082906797 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082875556 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083179525 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083063148 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.082846846 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082752911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082771114 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082694878 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.082309081 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100730834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085165387 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082642014 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083368901 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08201984 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083348272 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08295816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082698906 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082357258 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082689627 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08248069 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082756743 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085143513 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082750951 seconds)
  done (took 3.66230898 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085100178 seconds)
    (2/2) benchmarking "in"...
    done (took 0.085306101 seconds)
  done (took 1.325303498 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.083080436 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082157828 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083199409 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083863638 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.083267685 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082856631 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08303408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085458648 seconds)
  done (took 1.820707112 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140561922 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154830185 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083069145 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088282493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.154805444 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149915629 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115494279 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083417914 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085494511 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.092863948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.142671082 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084782366 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.088446183 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087638124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08764354 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089940844 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083977261 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090015955 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105853092 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084840396 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086665747 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091518942 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089891436 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08733898 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086542962 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102743953 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090054298 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.087648807 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088054956 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088875479 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08692459 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084619321 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088044471 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084815442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.104187459 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159334671 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093016922 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087579532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097792161 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085264831 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088559057 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084166845 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088588766 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091017971 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089832125 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085196579 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085874654 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.104159648 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085495084 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087016413 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083944345 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086644208 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084350898 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091469473 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093894852 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092156995 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085296711 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088189466 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087091972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091950554 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088764809 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088182773 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090119159 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105817637 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09101914 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091508254 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088430964 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083861721 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.085883642 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083787292 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093375669 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113165603 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090363007 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085012734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085181308 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083244694 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090476078 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085737372 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108883784 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086543204 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085764902 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086624025 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089863885 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08714691 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088617837 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.08733117 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.084854209 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08740097 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086060045 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094628689 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085368118 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084545153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085912138 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088802769 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105036409 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086146028 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086388248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089151351 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.086265685 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085502526 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085451827 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088348056 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090771271 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085911969 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086723998 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089176823 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152532639 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086558409 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109570946 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086972355 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084092681 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087416971 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089824254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.084493985 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087687335 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084628481 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085906981 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087591813 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084796128 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085587272 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090537006 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091747231 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085469276 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083774337 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107876301 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085525408 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086065058 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086818122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085622455 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.083773584 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08416605 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091465597 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088786334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089341331 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086575599 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088706568 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084530857 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083981213 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085677685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090124119 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108415072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.089586186 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09175544 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090363077 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085779375 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088864255 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087705045 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085793464 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089289285 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085480328 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083411608 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086024758 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088031182 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085454717 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088520065 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085877541 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088957344 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104673128 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085955952 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087025615 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086140648 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085589261 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085491892 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08537636 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089471499 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087382265 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.084188794 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083944359 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087553511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086002274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085003257 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085836511 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.088495104 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104211446 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085607825 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085600989 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091366804 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092854356 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089830351 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085710497 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088169343 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089189986 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.085218769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09060322 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085202295 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086013224 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086008418 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091228192 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087993981 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106471704 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088674855 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.08618503 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091783408 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090535914 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087638716 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084146203 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085799931 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086724344 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092404649 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086753824 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085524669 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085092565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088149197 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086717675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089464644 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105287087 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087155929 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.0864879 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.088204647 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089228046 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086041931 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090139448 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088836783 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084506449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086690428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085488623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089411166 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085171586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086349099 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088377881 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09062865 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104917006 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.094808097 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.085052254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091388686 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090645846 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089207646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0869564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085141057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088270899 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0879284 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092472396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087281528 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088771524 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090297119 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086173121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086220388 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107880403 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08658794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.084404178 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088344545 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.08627005 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.090943398 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086914516 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085070264 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08922498 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086904357 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09055783 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.084460277 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088896997 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085721067 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085598391 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.084355213 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091148187 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.109418167 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086302216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087416231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086519019 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086103949 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090617359 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085768313 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087228334 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086482923 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089249249 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088106893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090858076 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086689505 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085719234 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086801564 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084584528 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108216288 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086551493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089280813 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088608858 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086606134 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088628145 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089585199 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086025013 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085763693 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085782768 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08680294 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088941556 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08915218 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.089019838 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088870446 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.086167889 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111726288 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087179243 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092569707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08835836 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.08493747 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087119963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089272953 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087304504 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086391152 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086584553 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088625311 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088786966 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089720769 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089089387 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086888488 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089548705 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088398528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109629983 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091271734 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.089666616 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088256081 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086918384 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088717344 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086212289 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.089383554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.086196092 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08993651 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089365556 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08930438 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09161404 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086832091 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.089390836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087874169 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.106411348 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087271753 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086697784 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086239041 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089304912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08666853 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090458175 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087012988 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086880669 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086601086 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.084927253 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088775458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090505371 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087060451 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088786685 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086753841 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10880124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087988474 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085271321 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08612841 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084661555 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086653302 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092301847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088785153 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091579795 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086023747 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087028058 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085618171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086297223 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086248305 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.088085616 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084799356 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108490532 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090212506 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0900558 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087374316 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09084889 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087063318 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088648752 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087366325 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087163033 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086557157 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085226963 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086938411 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087672296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092336781 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087678391 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087378268 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.108303622 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087316082 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086926057 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088399944 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087629578 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088473822 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091484055 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087336222 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090361612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087870022 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.085145725 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.088115083 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087115487 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086901807 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087452827 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088712667 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109279371 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088598385 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091384882 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.089390587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090178324 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088705419 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085782487 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086917441 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.086911471 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086535691 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08803053 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088081861 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092347033 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085136228 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090027265 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087229251 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086956395 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.110504452 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086349316 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087403396 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088475199 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.092201398 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089810839 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090893385 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088477357 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092985062 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087405615 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089088208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088957265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088121495 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090460716 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.090116371 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.087485769 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108794702 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086647217 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087663685 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087774954 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088109249 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093019175 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087724699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087689859 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087720818 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.085344393 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086803566 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087050832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088997865 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090611689 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092965892 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085786687 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105317998 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08591994 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086900403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087070065 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089055286 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087306187 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08803597 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084548347 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086061608 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090375211 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086889432 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088361487 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0855594 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0886976 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085826612 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.088334988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084417296 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104593623 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086901407 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089109925 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090504452 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086296046 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086619601 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088554279 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085798965 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086932969 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088327012 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088537589 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084087731 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085562242 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084550805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090192022 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086386904 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105035883 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.087281273 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088792501 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.087545863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086030653 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085709669 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087100923 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084281887 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.089532323 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088668343 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088443524 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086982738 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088801004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089751933 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091426795 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089374813 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105137874 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088147625 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091322289 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086110248 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088322817 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086718728 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086082084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086330087 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088290632 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087835849 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091230192 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089110082 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088523665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088225644 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086655277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09143054 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090761011 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108262209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087399478 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.087810643 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088028603 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088298951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088980184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08775029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088797171 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090997126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090559323 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086386199 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089710523 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086042178 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090337472 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09011257 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087885913 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111273127 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091830623 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094049972 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088484222 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090330595 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088558126 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08763529 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090855271 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088929464 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08892713 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091724873 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091249332 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088601028 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088141915 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090365183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091648519 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.108764001 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086755471 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.088839463 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09179874 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093088355 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08916798 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093272272 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090383298 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088346613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087983699 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088704298 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09299193 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.088014843 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087730762 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089032076 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088045078 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086922531 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109561422 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088649137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090054579 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091656879 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.091526016 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.088136959 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088387248 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088169557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087421039 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088855121 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.090121794 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087365448 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087592218 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08806244 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.091499734 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090792464 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.109513757 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088093728 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.089123862 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.087648342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089680794 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091204092 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091786531 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086536724 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089126975 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088383644 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091962479 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091060266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088560296 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09112667 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090357724 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09213333 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.106767472 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088742426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088519866 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092426139 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089061027 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089516768 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091718355 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091869815 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08945587 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08746412 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092310534 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093225649 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088522078 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090383935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088419096 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091929701 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086965452 seconds)
  done (took 54.847416683 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100627635 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084548264 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086480726 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087551249 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087433373 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086675999 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087041398 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087359124 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087594 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086973304 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086693847 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089325971 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086800606 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087054186 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087292769 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087148064 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107032581 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.086649414 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087358847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087948018 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087284062 seconds)
  done (took 3.078494761 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.086096269 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.086747354 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084604876 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085817156 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087081871 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087178057 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.087352523 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087282348 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08713383 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086934112 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087026109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086828419 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089462905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.087662353 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086685996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086814599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105637853 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084979487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.08594183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085052682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08409898 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084706 seconds)
  done (took 3.134871817 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086429491 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088141465 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086013158 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.08449512 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085679994 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.084934108 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088372627 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.087405258 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090554687 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089799017 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.089986055 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.08978748 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.091154974 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08704371 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.088435954 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08723721 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109392133 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087853469 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087761224 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.086397269 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089288143 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.086490613 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086909423 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091215648 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088451821 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08881258 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.087955006 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088740775 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09018405 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089298144 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.088527911 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088975687 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107152196 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088658482 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092603671 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089359147 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090100347 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087437406 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.087897522 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088251879 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.089217146 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089018071 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088527149 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087774773 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.087385322 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091392804 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089456451 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087951309 seconds)
  done (took 5.499646496 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085035047 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.119925909 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085403903 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122774556 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087870567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087503519 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087727159 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124067332 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.089654149 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.087306004 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088307722 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.087867419 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087917151 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08776522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107771149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085028437 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087021652 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088048981 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087969018 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090177171 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.088072007 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.087618102 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087345831 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.087839688 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087879608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087992013 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088077643 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087306165 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.088218611 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088296298 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090771564 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108714883 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086728972 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088617472 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.088532538 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088342095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08822183 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088406077 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087606577 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088815646 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087806759 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09054029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088133839 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087619632 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087913174 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.08819857 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088388443 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.087942143 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107074396 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087103476 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.086100666 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085135937 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088317586 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087209905 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087957297 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087782929 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087948662 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.088293659 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088855287 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.088764082 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087822956 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087924992 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088100791 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087867861 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109293022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085791224 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087971431 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087447976 seconds)
  done (took 7.483374036 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085088153 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085601061 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086543012 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087086158 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087792717 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089549441 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087859452 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.089915338 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08848706 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.087534667 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08817415 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087814128 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088320983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08760694 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088046656 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089036621 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106955251 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085083828 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087094224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08639047 seconds)
  done (took 2.994799961 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086969831 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085799762 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.114468239 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085771019 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085570334 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087142241 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088414907 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088133375 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088311823 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091058377 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088090102 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088365607 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088443617 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088842113 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08863534 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08969687 seconds)
  done (took 2.659098851 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087226829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.087421887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.168641852 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087681406 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.089446695 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.091638746 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088654918 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08876681 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089709901 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.097400636 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089010492 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.08826104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100662104 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.111974158 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.089246282 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090751363 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.089084877 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088861889 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088782342 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169698008 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.089334391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088582966 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088119632 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091212406 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08876769 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088830704 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090975595 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107328008 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092746802 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.088220747 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088811004 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088290065 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088759388 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088298421 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089553563 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089148908 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088245298 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090434785 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088240267 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090154982 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089149192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088917337 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088821289 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109395998 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088248851 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088646045 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08920009 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089332258 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090858283 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088530588 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088024568 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088911157 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089280196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.088594714 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089131132 seconds)
  done (took 6.372018359 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086620813 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08701619 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087930025 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088543756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091347737 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.09009111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089431372 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093604756 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090171506 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089360735 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088932431 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092968561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088779702 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089860927 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089605152 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091526184 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108592724 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088392824 seconds)
  done (took 2.868071372 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086039299 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.086671262 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.087115165 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088542262 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088727665 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.088902125 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08878786 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089355783 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09119913 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089612437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089185531 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088918053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089577461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089161814 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089659385 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089352929 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109081854 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087946891 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089960502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091858625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088982358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089158605 seconds)
  done (took 3.212131913 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097289248 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.152626725 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.09803678 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.165827907 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.092453215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09202685 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.098767781 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.091717775 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.106784367 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112405188 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.090822047 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.093942708 seconds)
  done (took 2.52878821 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086714717 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087665604 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088084369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089852424 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089531817 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089860797 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090873349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091757669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089660961 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089899635 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090360391 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089720722 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089302825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089935321 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090606898 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090202008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112103217 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089222523 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092473311 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089915571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090093529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08994917 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0898757 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090311336 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089517782 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089565812 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08994004 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090225844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089740284 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092621916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090034732 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090003958 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089225609 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111245859 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09004867 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089643802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089603052 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09014416 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090006657 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090341161 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092796565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089656132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089951261 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090072692 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089574089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090160467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089930721 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089999113 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090802568 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111457857 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087578183 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094346092 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090489532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09036577 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090083874 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090463935 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091219971 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090309416 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090735638 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090204346 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089617266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089443287 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090292571 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092532028 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090180267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091959249 seconds)
  done (took 7.256490125 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087117608 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08952414 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090491837 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090354932 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090211811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090500511 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08967037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090257626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093089285 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090298822 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090387758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090227647 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090611554 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089947329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090442702 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089823573 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111064422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090092777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091154345 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092225119 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091032266 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090760634 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090116859 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089956323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091141371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08998958 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090541769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09044691 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090152827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090145811 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092479586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090062448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08984008 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111756828 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090094115 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091837736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090537306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090467533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090835856 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090336474 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090961948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092126761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090637812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090315037 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090177851 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090442954 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090610709 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090534855 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090604964 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112110793 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088703197 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091424612 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093042781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091098113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090567391 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090468973 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090644917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091120978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091523785 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091141646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090477472 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091840059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090571899 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093551844 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090355705 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0901018 seconds)
  done (took 7.292788601 seconds)
done (took 146.207819681 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.156758761 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.186020948 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.237033452 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.148270666 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.136205707 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118807381 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.088338297 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.088015503 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.094064486 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.111466222 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0899358 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.091519187 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.142802846 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.18869626 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088235332 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.122278232 seconds)
  done (took 3.324484284 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176389212 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.258229558 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102955066 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.093187552 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096595487 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.092362266 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091434132 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.121020872 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.115806132 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106539965 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.090510564 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091366677 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092175587 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092036522 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094002856 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.0907754 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.092365539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090945178 seconds)
  done (took 3.238564973 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104448175 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.12890282 seconds)
  done (took 1.487789367 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.111037836 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.121039108 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258010846 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118050027 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106269659 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098528787 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122300342 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.102367713 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186403702 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087707546 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.09019287 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094119099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.110082027 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091398678 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100097979 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093001254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11299557 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091066663 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091264944 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.092579758 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112009368 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.092672286 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.091269635 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11214226 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.156841398 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.091181782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092863938 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09433813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092220382 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.091129708 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091887622 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091029928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.091605797 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.091711937 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.094171526 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.09334219 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.093071077 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091206253 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115440661 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092864696 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.091735159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.09233956 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094974775 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.093464637 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.092604404 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.093914089 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.093220981 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091936781 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092020115 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096905473 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.091805618 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091636862 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092098275 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094705364 seconds)
  done (took 6.802999697 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.490282286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.123836149 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091987244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.548378254 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090762173 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090784739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.475592297 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111645513 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.197738877 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.51539097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103926524 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090318044 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106258332 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.206364703 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.148097068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.221595998 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.38683294 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11297583 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114432682 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105039376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092986645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095520194 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095107139 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.692834845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092846711 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093876786 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092104821 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092689001 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.104826615 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.096130407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092927127 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.107996188 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.212512247 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.117870598 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088615407 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092523751 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094817162 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.102952192 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179869789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104712344 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171501703 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091953403 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093358851 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092248561 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095985091 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093015815 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.094043247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107931318 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105872765 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113035504 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091918626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089108456 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093945569 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090548664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.093036056 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.224701125 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226435406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092305378 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093618113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.09464576 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176849 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101609054 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104850279 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103803515 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.118555154 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089504969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.040344089 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100428141 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089579338 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.088390106 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089346898 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090733527 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.093317761 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153317289 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.671163103 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093760657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092746294 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093859034 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167003063 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094320359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115340399 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102077835 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09309417 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095277241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092443576 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092770432 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.106133792 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.190512658 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093432451 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095626683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09347982 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10355199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0927174 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189983247 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.097325971 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.09442933 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.202941343 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09002074 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.095437965 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104732073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093449984 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105635139 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093554403 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096899271 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092698888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.097001626 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.101588376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099654652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093670418 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093595768 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.105088141 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09934584 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113678783 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.105191657 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.693362288 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.10382638 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095085579 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098878064 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092286468 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.10390249 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091865308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.180221442 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091397384 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09853376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091627631 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093079569 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094034515 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.094837977 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118794618 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093270131 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093050087 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096748245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.199857331 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.103479529 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093507669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174843837 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177110364 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092641969 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108598442 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09468892 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.106741321 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096624523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091872427 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091059945 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.061828855 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092785564 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089707803 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088637069 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174436599 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089818866 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096956602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093902976 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092847504 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.049029749 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099026506 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0941226 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.097756874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090141278 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090982383 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091586785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092940767 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.116252194 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.104106819 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092179875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094736609 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09399706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.103747058 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093125402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094386514 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.094256959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094991931 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095319305 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095351035 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.100080767 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.10714216 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.093359812 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.093739031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.887309598 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090736746 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092199837 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.103900685 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090849901 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.195965389 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091438466 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.099431017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.097013368 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089735706 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.222084671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.098485457 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.172085547 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093037831 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1021836 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088413695 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108217384 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.092607467 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089462344 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088475371 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.090484284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092808765 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092719996 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157989301 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08958109 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.195575826 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088328658 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.103124503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091119886 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088762769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194885936 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089013695 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113169859 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.090288662 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.088467877 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091114064 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.643341559 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.092345965 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092465417 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093295192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095178987 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.103898597 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093841411 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093319801 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093438012 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.095716829 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.180476573 seconds)
  done (took 41.318868811 seconds)
done (took 57.422016742 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.166894454 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143029737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179512715 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11055491 seconds)
  done (took 1.949613081 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173421752 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106816526 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.164840274 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088611197 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.17095677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092611436 seconds)
  done (took 2.077341575 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.118344436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.108307647 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.105850225 seconds)
  done (took 1.617107669 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.159487431 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.15481542 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41232752 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.334286321 seconds)
  done (took 2.435164251 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210752147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091154139 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09624614 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.174367928 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.18092448 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.130744813 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093715548 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10440762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101251438 seconds)
  done (took 2.504748553 seconds)
done (took 11.863917903 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.263567313 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.210080037 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.447662572 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.174066179 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.14595549 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.255816071 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.189758244 seconds)
    (8/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.196194472 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093308027 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.174327553 seconds)
    (11/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.161549138 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107497069 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094321883 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121916688 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093557267 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093596307 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.17095877 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.113791815 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205428141 seconds)
    (20/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.165717701 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.194751501 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.207192782 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095776127 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108832847 seconds)
    (25/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141325203 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10464946 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102221264 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118060353 seconds)
    (29/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.200037219 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092566893 seconds)
    (31/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.204622042 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.177532569 seconds)
    (33/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.219867461 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.268928409 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.180262743 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093130569 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.174492692 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19847238 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10108167 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.181132124 seconds)
    (41/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.167180927 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.160959212 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.1563615 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.184940822 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095636911 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.198665091 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179365544 seconds)
    (48/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098928952 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.091487645 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100403854 seconds)
    (51/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.156835244 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.214757117 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.096235573 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.137563019 seconds)
    (55/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15950353 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192162376 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.133740945 seconds)
    (58/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.130360643 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.096056519 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097971544 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093532888 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212279367 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110861432 seconds)
    (64/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.174568584 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.187023457 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.098881592 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094642371 seconds)
    (68/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.093335881 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094289998 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.099573026 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.1185956 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.103682989 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.201440983 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195645193 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097060384 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.09639018 seconds)
    (77/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.094302234 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.117808333 seconds)
    (79/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09563718 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.160510073 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.096104614 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093702884 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103931159 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.13656725 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110358895 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102518348 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094239666 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100702062 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094183708 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104673514 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.136215159 seconds)
    (92/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.154717133 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094885885 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.117905616 seconds)
    (95/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.095457434 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.095011354 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.221637989 seconds)
    (98/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096678118 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.097268617 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097006762 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098582122 seconds)
    (102/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.09660934 seconds)
    (103/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093241485 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09757201 seconds)
    (105/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161101676 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.153256433 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.113566773 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09546542 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.139011373 seconds)
    (110/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112614045 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.176875438 seconds)
    (112/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136569105 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095897679 seconds)
    (114/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.095809281 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.096034115 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.142827618 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096754101 seconds)
    (118/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105113786 seconds)
    (119/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094718676 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.179358671 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.116429492 seconds)
    (122/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200175244 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094310795 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.118828729 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093817659 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.0945042 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.120135472 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.095870375 seconds)
    (129/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104640993 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094397203 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.112758368 seconds)
    (132/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.095928801 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.212808387 seconds)
    (134/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.138394884 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.097695255 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.115415147 seconds)
    (137/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.140320465 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093602478 seconds)
    (139/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.094124732 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.096090795 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094794786 seconds)
    (142/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114316762 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093693928 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.128016806 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101278566 seconds)
    (146/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.095880799 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.097944832 seconds)
    (148/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.107426557 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.096302929 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.108323013 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09407425 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095177573 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.094873448 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.094147072 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.107759016 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094824653 seconds)
    (157/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.146329936 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.11497622 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.174800143 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.107744984 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095687992 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107418798 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.107738135 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097870877 seconds)
    (165/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1511345 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.137587515 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.096904459 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.094726344 seconds)
    (169/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09537761 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096050108 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.120379535 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090392416 seconds)
    (173/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.111735181 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097928011 seconds)
    (175/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094421457 seconds)
    (176/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.095586586 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.107834182 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.098083807 seconds)
    (179/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.107877096 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095341921 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.094703848 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094867511 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.112462085 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095288247 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095414454 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117867696 seconds)
    (187/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089080562 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.105288158 seconds)
    (189/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096490071 seconds)
    (190/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.095163734 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.105813334 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095207333 seconds)
  done (took 25.895078139 seconds)
done (took 27.182443926 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.166497383 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117400937 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101268148 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103349701 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.171656153 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122492913 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112564048 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104990434 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127277327 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092172591 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094705063 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.106821499 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103086358 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.174930377 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.105932942 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094813647 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095207825 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.106721364 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11249309 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109332751 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193150614 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094272681 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.102499765 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094674113 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.172107401 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100179147 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.102474611 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111735389 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.110158871 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.093928063 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136363487 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.090590724 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10842385 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109226347 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097931429 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09526052 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.097928072 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099620228 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.095086432 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098182227 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.107963028 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.095254432 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103301864 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095407505 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095767925 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094784838 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122322063 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105442105 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.095374615 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112862398 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103004828 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.108634186 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.095023426 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095110362 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094836087 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.095429896 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103794293 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098685241 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.107733215 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098453188 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095478843 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12200226 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.092376378 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097039587 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.094407079 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09592487 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09484372 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095253238 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.094674843 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101085746 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098153785 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094629457 seconds)
done (took 9.057269443 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093199871 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113751652 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096095458 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.172413234 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157441529 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096784813 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.095930404 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.095618656 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10289913 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.094579485 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.118117704 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096901614 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096304757 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0958087 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.095146146 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100227977 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.09519077 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095541813 seconds)
  done (took 3.226099598 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.101365977 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.1168145 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106699376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106767442 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.098667613 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.095535594 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095487411 seconds)
  done (took 2.053545531 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090877388 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181703149 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.168004095 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.169056791 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.197149626 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.170678598 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095215373 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106399106 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097874833 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.180934342 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.205830085 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090285922 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099101098 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.171388857 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.096450887 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.164601516 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096216052 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096110672 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18978924 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093859038 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1085652 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103942053 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096143288 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.178910526 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09666621 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097234581 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096901696 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097990586 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.122751951 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.201001557 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.097516746 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.100245925 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.174409805 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097600198 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.174800711 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097904774 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.199926272 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.099041437 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.100594077 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.095470443 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098215117 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.16219598 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096102129 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099897859 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097613969 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208088219 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094669487 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.179229916 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.097046739 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096174539 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100108909 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097360133 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.09996645 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095343751 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210332651 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094098974 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.167085703 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.164562218 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176320553 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.188719989 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095474855 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178296033 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.168419406 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099976093 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096259611 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.09528786 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188007679 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090447677 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.099904504 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.161549208 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096654115 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.169905319 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.198102916 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.095356664 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.095816943 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.100629735 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096448837 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.170224497 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095778455 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097810988 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165425498 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094838474 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.120479157 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091597651 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.096125092 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.100443952 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098060326 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094888866 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.166554759 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.167863577 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096702454 seconds)
  done (took 12.940513748 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091200132 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.094680985 seconds)
  done (took 1.546022693 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097361952 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091908927 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104960466 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094934612 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104924122 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.180183133 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.180254024 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096589631 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.100885124 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126202364 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.172874467 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.174299195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.178254691 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094961436 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.204490756 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092992511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.183628934 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095670225 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102445495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097103896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.101409397 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096560343 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096425886 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.186760303 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091554987 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095372599 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09980179 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10346447 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103051461 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096738268 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098008647 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096391471 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096815439 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.096468889 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.182131131 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095775671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121012769 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094125088 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.095251201 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.097326968 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.183129364 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09718811 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.096714174 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096660567 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096777245 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096990116 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096888602 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097129436 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.208097536 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.091416377 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095320074 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096512383 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097422364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097354416 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097044073 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096840401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096705031 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.183004922 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097395765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122985872 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090873319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094653498 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095131368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095270643 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095813421 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096719076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096837463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097036742 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096606107 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0957723 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099478627 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097139923 seconds)
  done (took 9.470114805 seconds)
done (took 30.566506065 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.102462356 seconds)
  done (took 2.453416382 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.640833219 seconds)
  done (took 1.992413263 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.687629706 seconds)
  done (took 9.068179603 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.356570181 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.276828076 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.848354211 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12967916 seconds)
  done (took 2.962892737 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.123228766 seconds)
  done (took 2.496100893 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225380729 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.188285776 seconds)
  done (took 1.771242982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.785049735 seconds)
  done (took 2.16064623 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.295523326 seconds)
  done (took 2.656995769 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.186295851 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155242097 seconds)
  done (took 1.71914617 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532371402 seconds)
  done (took 1.910683768 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.689617676 seconds)
  done (took 9.078304695 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22399891 seconds)
  done (took 1.601110631 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.253321522 seconds)
  done (took 1.638865667 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.114508743 seconds)
  done (took 3.500762336 seconds)
done (took 46.381089722 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098414668 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.105127007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102016121 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.098661935 seconds)
  done (took 1.776128546 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.097522578 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.09960055 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099518628 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.097426719 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099501054 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099472712 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098112892 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101717194 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101970567 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099672846 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.101585764 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10142237 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101434484 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098729621 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094795172 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123174859 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09645247 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095211131 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094639255 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.100295759 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.090807848 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096874841 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.096721184 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09669984 seconds)
  done (took 3.771052229 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098228989 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.097098778 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098886716 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096383439 seconds)
  done (took 1.781545137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098855709 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.102257946 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104133104 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099168201 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.101888524 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100887395 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093613816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.090507904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093893514 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098551093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.103992771 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095916086 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.101117261 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100691443 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124127604 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090324453 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.099210214 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.101420615 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098878921 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099728109 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09868604 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099304229 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092332398 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093919815 seconds)
  done (took 3.77392613 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.162022233 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.102355294 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.114097917 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.116930268 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.090528481 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.11621372 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.11450441 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.090287372 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.100861672 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.094254361 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095404375 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.098473989 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.146558898 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.099880497 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092328675 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.096162045 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.096115663 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.10575888 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.154509418 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095233544 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.106612858 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.10872323 seconds)
  done (took 3.794000251 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101323573 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.098212041 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094925459 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095573286 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106337689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.10404987 seconds)
  done (took 2.000942907 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093695267 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.096588747 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09743823 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.096007653 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.101911593 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100224961 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098123968 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.099382436 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098610944 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.097389645 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.098878234 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.098376066 seconds)
  done (took 2.574378747 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201843179 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.111248696 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114975376 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091762166 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096910075 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091771713 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.106109075 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.095903156 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096436549 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.094548465 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095193496 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.096305212 seconds)
  done (took 2.691350687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139637304 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096493539 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172756293 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.440688515 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107377176 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149565388 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.376665189 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116044449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146789493 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105203492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125514019 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108172642 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142203768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132465003 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106200382 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.364832179 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148519218 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139280155 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109391616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136999815 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120112581 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132994305 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152479783 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110217815 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132157708 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108202086 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094774225 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098352974 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114942144 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116628402 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114956073 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110197543 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101533047 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155971672 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108184353 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114784589 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174821002 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099537588 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.250917368 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.125669872 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139806225 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104171016 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12282135 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113095586 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100595131 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157022825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104352111 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122094661 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104581072 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112932076 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129944279 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123901775 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.115482736 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129160929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395399827 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10014378 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112543093 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136656703 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159740668 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131963106 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125795229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098314509 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140505023 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131941531 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148448711 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104971615 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.112419607 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093703438 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155750169 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135236927 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119614168 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150377694 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.133469257 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107708985 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124512643 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145288178 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115939936 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145344591 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119488888 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097766608 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116346033 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101225412 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105720513 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190823466 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097426063 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13779057 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101791699 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.299906008 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131112644 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113623201 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135512171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117247216 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124606512 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114389582 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.134617802 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109934796 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.109691586 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142152542 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096951717 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11103324 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13325889 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.095404651 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136909213 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100607273 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12044743 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127491069 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1160459 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124874448 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.108537467 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127838909 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134028805 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119762774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119868564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127273155 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099167721 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101537578 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133319712 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129981805 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109241403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152842167 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126809928 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.136919242 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103517539 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105266026 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178969886 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105565831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13017201 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126191924 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101688106 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.12598316 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128377537 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115456988 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.123569571 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103777621 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120214229 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131142135 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.129025933 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107511493 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136103642 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104065628 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106250866 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138516929 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102135883 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140769626 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.117446344 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105280862 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13944581 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123426155 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125872144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108248521 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108539161 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112457551 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107687661 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.155093863 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11831991 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.096499389 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.121927703 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129699107 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127688805 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175046431 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115348718 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147028668 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15072265 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102696585 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173460661 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098114408 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100886608 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104876918 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123784767 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120449881 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155219124 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141180921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119992628 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123070591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143683609 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113432253 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130939791 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117019804 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110212748 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132427139 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127743917 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.129086426 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093321959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.105067019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115450358 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1055279 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111340479 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124404399 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122166504 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1711137 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123120517 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108701977 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134870869 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102094468 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121658349 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.128455199 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112625703 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128005313 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13498991 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159188391 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101596102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106701996 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096414882 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09970268 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.101767587 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120150436 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106565568 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102690514 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100882338 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128985447 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146666962 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110132137 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173955019 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116419376 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136868664 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101176597 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.144563081 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11786711 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131471136 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.177062108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100916923 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.119359966 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129996266 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104351077 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13705772 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119316855 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122135334 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151483015 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123515912 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102489257 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106335778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149109634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099442336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108457937 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10540735 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105964826 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109208973 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.111115239 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1009739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152373531 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109354577 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115220344 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113068464 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114220149 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105517029 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131257286 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132083136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114705721 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.140385866 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124392528 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117403624 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112773407 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113066892 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120676418 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104540478 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.450460967 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121223392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12410872 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105101514 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107799516 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135979339 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113569381 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114476035 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198724231 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102909252 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123398981 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124293596 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.103507297 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103148311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111802102 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109462446 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.148560649 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092776814 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118166329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.109632988 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143843815 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107598916 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152457695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119948325 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.120745745 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122008354 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110084177 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139360327 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12494705 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119610147 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125525112 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.136576109 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168433704 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100138274 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102951376 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098533143 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174719368 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123512681 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119953651 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.140530264 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170277521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124541964 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14920246 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109633066 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102140965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122636923 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136763948 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140653086 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124176891 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101476222 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12448912 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157774885 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099012396 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148012658 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.406098941 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136440973 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11200418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118512666 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.42870691 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099023592 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102254438 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113035049 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119271873 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103809845 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17721363 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123318297 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103783682 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11306471 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104136992 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168198292 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130686045 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105599646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119157487 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.102419276 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114080811 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108215433 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117905841 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140722888 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111212392 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108638655 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127557176 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117692098 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.097465947 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124888058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126989937 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128342864 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116726348 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112582685 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199977747 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098441846 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107536229 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09855579 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097637814 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145142628 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.138899991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101227519 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117546549 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141893016 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101870813 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094573457 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107369835 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124938913 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106399783 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099551275 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120202448 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101552054 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120730709 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147163707 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100810221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12406232 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101479927 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094120762 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104758893 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10315568 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100264932 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163406783 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114311911 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093007087 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114809928 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10259165 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113432217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105577201 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102041727 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.511375103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.099433084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131275404 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14330864 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13573463 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108632104 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121632559 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149518922 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114342275 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103986479 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105537956 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202307116 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132431361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119399254 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099584391 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103253463 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133125913 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092508744 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1123891 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119867383 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131955953 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.10084458 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122025115 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106442025 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.101908379 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135231941 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127389244 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115515479 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121779465 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192933746 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101071707 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121043757 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112444508 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097439245 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.114156282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113350575 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135345556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103641341 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103481893 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.106830728 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152384882 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099808776 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121728173 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124977424 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126608588 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125145551 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098466848 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125364109 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106212644 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125946817 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120627057 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106165993 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130659728 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105395347 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.099637452 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12643693 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104386451 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.119173136 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093163812 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.16326789 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128703945 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098390476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103759613 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404735033 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119294848 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194766728 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.125407304 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102193198 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132050395 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109752494 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.117762932 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126338186 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.094580945 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105323818 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098744395 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.215481062 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141757517 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124466207 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142812246 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112327761 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174433438 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.107559988 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.271051193 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109663891 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126309638 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141510452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.097108212 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10845709 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102474849 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106387734 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141888981 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149154577 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122067762 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101434907 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092847202 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101135615 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101289674 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109310756 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104813124 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124774844 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104961178 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13876264 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102662853 seconds)
  done (took 77.941091853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148308369 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130958496 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144084464 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.212793043 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160365029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275948902 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.232585372 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244149581 seconds)
  done (took 3.02936714 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098583191 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.117187732 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.114882426 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.095193955 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.121200205 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.298552098 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136088769 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.094597515 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.138379127 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.096075468 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.1237705 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.356428588 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.094295805 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.121321311 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.096712237 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.095769453 seconds)
  done (took 3.667817954 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.553918463 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.346411983 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.659489983 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.240743792 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.407811238 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117731555 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.542041818 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096757373 seconds)
  done (took 10.447700686 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130115235 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.127584309 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.219005043 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.195925037 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.157198383 seconds)
  done (took 2.310181957 seconds)
done (took 120.932402579 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09990272 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.102620978 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106971607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.104116681 seconds)
  done (took 1.880459514 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.14971528 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095214532 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100776853 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.104913321 seconds)
  done (took 1.935117542 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391721583 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.1236545 seconds)
  done (took 2.037544277 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.127077104 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.124493738 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123153752 seconds)
  done (took 1.864973931 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107524864 seconds)
  done (took 1.593971619 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101460743 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.105658915 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.178581061 seconds)
  done (took 1.870200376 seconds)
done (took 12.665799423 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.197432956 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.941413237 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.408360026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150552613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698084166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389204366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.375505072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1283143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105413799 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100457128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101289801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680689205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.351007517 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874701088 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.37416663 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.875528564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675292585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09511789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09528521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120754978 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.345819195 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097306121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097641941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100939349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.678944393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396875846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100592016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.873645165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100393599 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098258524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384816762 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098203256 seconds)
  done (took 20.580990755 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.127697934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123443364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108901313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10422329 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102219661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104578503 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106868848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102439748 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116879048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.103161931 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103848026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101080319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129634608 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1002952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116338444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102320686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10170838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100958874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100925198 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101410687 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.103924484 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097395977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098153794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098150927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098486256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134622237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10270275 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.102311964 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103054227 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100030442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098497021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098704731 seconds)
  done (took 4.904042391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137659656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.134284927 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.105590736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12906174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127407198 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102434514 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153363527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100365894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11559251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127277194 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096470827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101233136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114625871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.100619024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114409888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096278314 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097719935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09515094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095540714 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095909052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.099096437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122078582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098219284 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097501952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095975834 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108717468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099148012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101152559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101477145 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098831902 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101330036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099620512 seconds)
  done (took 4.973966792 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095941929 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.109281951 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134870479 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.131450317 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097873111 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100714929 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.103233832 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102493874 seconds)
  done (took 2.388798859 seconds)
done (took 34.337474197 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.106913602 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.111524078 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12089793 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.109996583 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.16362917 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095936254 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.10936149 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.101544101 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107886687 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114194746 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.126813403 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.096277166 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.108652373 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098511669 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.161608567 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.104759849 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.161087737 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188604878 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.09783506 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104934287 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.095185633 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.166063073 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.097985028 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097698363 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.165045989 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125860751 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.099700461 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10339208 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104317154 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10784807 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.172856524 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.102402646 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.098854807 seconds)
  done (took 5.42297825 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.16532187 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.094746156 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.094790899 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.094590635 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.094590727 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.095842292 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.16673183 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.096503332 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.096456745 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.122649187 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.095357466 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.18489769 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.094390265 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.09571839 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.097328905 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.091579323 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.094696709 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.096019464 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.166843171 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.12427267 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.099338967 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096935199 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.091518727 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.095137023 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.194889793 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.091865296 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.094382156 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.098485136 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.125992357 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.095211186 seconds)
  done (took 4.87013333 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101342448 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.118739085 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118439892 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.123636041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101248787 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101585362 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.115230919 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109333375 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.099845947 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132821291 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099685255 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.105025694 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.098845486 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.09644766 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.137423909 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.106767142 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.10939612 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095224911 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106609926 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.147150518 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107592601 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.106076983 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.104558418 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.102849742 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104455351 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.112286195 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11733611 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.096374001 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.097395136 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.131578036 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.097762074 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099939925 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.12468256 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115278836 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103095254 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106568755 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111326778 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099736363 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103579194 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.110398715 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.101194647 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.099029771 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.119914652 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.10281052 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.125300272 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.099575522 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.113199513 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.112665198 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.11243086 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.103837459 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.125277212 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.102769924 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102953709 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.105954064 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.097190592 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.101381978 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.120310453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.106051654 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126411383 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.098122867 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.101886425 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.097488606 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117608147 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.112093314 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.100587703 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113698047 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.10046391 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.097869305 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.099320143 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096116971 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111117315 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.095981444 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.103833581 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.128310795 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.117679219 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.098337912 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.098308586 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.097974659 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09572051 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.102089841 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103485267 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10351138 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.096846235 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097186495 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.096977888 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099109627 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.095386734 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099162556 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.098519767 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.126260884 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.097303835 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097092635 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094976523 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.096918035 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.096732671 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094918533 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.103636754 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096065753 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.096351218 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.09872609 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.105223182 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.118182787 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.097055051 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101913006 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.10447063 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.123734109 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.117594399 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095605409 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09736571 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.109468999 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.099410218 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.101673051 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111668833 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102490205 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.097439074 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101032627 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127817615 seconds)
  done (took 13.971282618 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.16884672 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22551559 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.2716948 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236873069 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.182552367 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.131633452 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.274642593 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105755175 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.222622634 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.104182321 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.122049074 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.25536559 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.109088425 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.25078424 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.101250331 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151577007 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.120860707 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.099212502 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105541113 seconds)
  done (took 4.776807811 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.096031108 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.116054752 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.098045835 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.0986539 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.10047479 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.101348305 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106838949 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.100937499 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097566288 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.100593629 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.108987995 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104005715 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.100036925 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.11473026 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101036269 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.125509791 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.096796345 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.107042825 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.099932033 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116180294 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.106588343 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.106379438 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102368255 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099901717 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.101079685 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100341473 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.101765368 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101974472 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102402181 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10731616 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.103509208 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.124696237 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101550677 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.104655325 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102289079 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.104587291 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.100395273 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.106247795 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.177506553 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095748153 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.099965002 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099588934 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099179964 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.098708762 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126753708 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.104588738 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.094722231 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095232845 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.10459641 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.097432888 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.100261954 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.101060723 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.09780531 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099221441 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098150983 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.096162603 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096134893 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.109373223 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.095943823 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09853045 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.128396078 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.103491047 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097951186 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098598526 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098116306 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.101327678 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099211607 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105300205 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.095685718 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096625942 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.096000052 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105905667 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.095367415 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097417006 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098347056 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101885771 seconds)
  done (took 9.426524755 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096718461 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.106697716 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.109465094 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099699118 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105354634 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09720228 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.107432728 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.111267303 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109965335 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.098836381 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109418808 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.099104479 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10933483 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.104453148 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.132989056 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.106433483 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.10711088 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.101077033 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.102825425 seconds)
  done (took 3.557524632 seconds)
done (took 43.539056582 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.542605403 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.727703601 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.520356701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.522572445 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.561211504 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.533101006 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.521097739 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.523707885 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.110769437 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.522578609 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.521000821 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.520531356 seconds)
done (took 32.641996851 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.699517723 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.525536718 seconds)
    (2/2) benchmarking "String"...
    done (took 1.525264594 seconds)
  done (took 4.85873409 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.526521559 seconds)
    (2/2) benchmarking "String"...
    done (took 1.525582643 seconds)
  done (took 4.567868267 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.521039989 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.522803744 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.51996398 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.7129968 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.562416605 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.520414933 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.519849515 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.532031885 seconds)
  done (took 19.40625181 seconds)
done (took 35.56995692 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.55532464 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.699518755 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.779228668 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.520563012 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.523692388 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.52071221 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.525277059 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.544204233 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.526732951 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.520700938 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.879441703 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.817278171 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.534872133 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.912146888 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.521749582 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.537288327 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.520102888 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.760802233 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.521077996 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.567570576 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.531116667 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.522802489 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.538074384 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.54112675 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.626118356 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.530445771 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.537476583 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.520602419 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.719453971 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.542899428 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.568712202 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.525218965 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.537483769 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.520301022 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.528443346 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.521931586 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.755533544 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.626560604 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.545435468 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.532886525 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.754680752 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.537069729 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.519888144 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.529313854 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.520789714 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.559602451 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.547339721 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.902294883 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.525177016 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.524885743 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.587261065 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.925804933 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.521028137 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.524591098 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.52963547 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.752541044 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.535510476 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.563408332 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.542512013 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.525353509 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.520243116 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.52079764 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.568509286 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.522689684 seconds)
  done (took 165.140367116 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.521038452 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.519892054 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.520019994 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.521156276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.5200653 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.52200951 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.520389191 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.519939019 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.520249071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.549795661 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.520762488 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.521470923 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.529205318 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.519916891 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.520061443 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.541956213 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.520670982 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.53012784 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.52003293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.520373176 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.525200674 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.521012738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.521237564 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.520897879 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.557293903 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.590895342 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.524334076 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.531838991 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.520534232 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.520082494 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.551253484 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.526598077 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.049078778 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.379673993 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.528653228 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.542659018 seconds)
  done (took 91.907412533 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.521773671 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.520747328 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.520116904 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.547649106 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.520234667 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.014067625 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.005488066 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.501019147 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.626630295 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.520506481 seconds)
    (11/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.940644178 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.520390098 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.670183525 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.713742479 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.520171933 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.607227606 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.53178532 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.521389521 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.559365158 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.545931275 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.520756598 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.520826537 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.016439808 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.533720155 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.754957145 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.680868001 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.520433333 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.547697373 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.953668917 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.5209278 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.549518208 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.905903573 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.548465673 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520935625 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.803746525 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.625040799 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.627214749 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.522023756 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.54774717 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.519964083 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.791076084 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.5204189 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.520975084 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.523562482 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.100311842 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.520178647 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.013026346 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.520436309 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.395265969 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.520300719 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.520595362 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.77767613 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.072554114 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.520807707 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.520556295 seconds)
    (56/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.520554298 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.522867643 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.520012677 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520324523 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.520446366 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.547273633 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.770687001 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.663502816 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.5212046 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.524022402 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.54788266 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.52016008 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.520163723 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.641886617 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.580999107 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.284098179 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.01672921 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.520259096 seconds)
    (74/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.550581933 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.610203409 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.633377184 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.520616875 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.522032383 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.521227662 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.520412308 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.626753514 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.520226401 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.890127843 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681614034 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.521194264 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.666165847 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.611697307 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.519936613 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.788240105 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.520333754 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.520001307 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.188316385 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.611723226 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.520407221 seconds)
    (95/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.520217564 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520462471 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.896103606 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.002477281 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.709241905 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.519938097 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.783730232 seconds)
    (102/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.523249183 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.888560205 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.995005255 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.111293459 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.520683159 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.626288694 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.680967902 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.521441311 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.526655306 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.664432136 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.519710456 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.575563866 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.519002856 seconds)
  done (took 403.482424834 seconds)
done (took 662.044880521 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.519470875 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.526352161 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.522651353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.528561553 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.527022391 seconds)
  done (took 14.139092195 seconds)
done (took 15.652546409 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.737646854 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.738497875 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.580564952 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.549444922 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.638968842 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.692277911 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.555446381 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.738220813 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.736912778 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.691757606 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.542000813 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.564642275 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.639312596 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.638131274 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.738885416 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.587531298 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.735934344 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.738083786 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.638643637 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.589036741 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.559123146 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.73615314 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.542974749 seconds)
  done (took 39.432539048 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.8989872 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.888659874 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.573563229 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.886044929 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.556010514 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.888153535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.744793716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.747789582 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.744788684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.587578816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.537148782 seconds)
  done (took 20.577053195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.865813621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.837916624 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.569918459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.837664444 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.554056345 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.821164602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707306672 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.71162324 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.703235843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.541995315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.536036453 seconds)
  done (took 20.207570852 seconds)
done (took 81.738374915 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.547111729 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.60067647 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.52925161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.530555652 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.531833336 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.528843924 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.531696938 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.529033137 seconds)
  done (took 13.847647867 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.528234937 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.529538208 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.527436095 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.527981579 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.527748633 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.527333478 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.52808268 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.527526282 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.528456941 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.528290711 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.52785717 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.529179427 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.527958595 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.527951296 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.527994009 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.528040411 seconds)
  done (took 25.968373908 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.530089314 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.527423467 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.527779574 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.527618829 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.527974247 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.527978825 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.528716276 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.527932793 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.527711847 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.527578962 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.52846933 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.528132242 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.52788933 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.527533838 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.527940655 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.532306539 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.527240766 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.528243043 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.531972354 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.527867312 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.528442865 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.527963823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.527405309 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.528252278 seconds)
  done (took 38.199087979 seconds)
done (took 79.532436931 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.522174397 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.522138524 seconds)
  done (took 6.561711395 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.904307618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.960464079 seconds)
  done (took 5.382504036 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.528397457 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.528637846 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.528069297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.528025442 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.527598374 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.52765532 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.527933329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.527175146 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.527058468 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.527979072 seconds)
  done (took 16.796966157 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.527224103 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.52759723 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.527533261 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.527429582 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.527407833 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.527593191 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.527437571 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.52790541 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.527747566 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.527779075 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.527771619 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.527870973 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.528553836 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.528108057 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.52809257 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.528129156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.527796977 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.527410277 seconds)
  done (took 29.01824141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.544014646 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.551221891 seconds)
  done (took 4.613786773 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.662727374 seconds)
    (2/7) benchmarking "second"...
    done (took 1.569441343 seconds)
    (3/7) benchmarking "month"...
    done (took 1.636035408 seconds)
    (4/7) benchmarking "year"...
    done (took 1.62614033 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.569376698 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.556577302 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.569042288 seconds)
  done (took 12.707151117 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.528139829 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.773599051 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.906150429 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.25436372 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.52868197 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.531430762 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.284355685 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.531085665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.533473121 seconds)
  done (took 17.389600958 seconds)
done (took 93.986958573 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.530136809 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.528711425 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.523535611 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.528051697 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.889974497 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.544883372 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.522682155 seconds)
done (took 18.584784584 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.530489954 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.521923168 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.529243609 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.521342011 seconds)
  done (took 11.621109868 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.442016643 seconds)
    (2/2) benchmarking "read"...
    done (took 1.778705335 seconds)
  done (took 5.738426364 seconds)
done (took 18.877271821 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.529464251 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.528003041 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.527709214 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.528042927 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.527339161 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.527536316 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.52813488 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.527642205 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.527265169 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.527173345 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.528087596 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.527554756 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.52713439 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.527400741 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527587951 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.527980153 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.528615874 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.527553136 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.527093712 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.527693168 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.527839028 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.527385356 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.527625076 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.5284224 seconds)
  done (took 38.185061277 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.527562428 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.527427513 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.527981432 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.527551527 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.528746907 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.527830551 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.529322914 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.527739819 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.527250046 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.528220387 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527323224 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.528957043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.527202064 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.527947582 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527299446 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.528203668 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.527654063 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.528640798 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.527774985 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.527749508 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.527483832 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.527229501 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.527465037 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.527505454 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.528733875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.52691597 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.52703855 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.527133944 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.52715041 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.526906077 seconds)
  done (took 47.351437766 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.531239333 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.531063461 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.526953583 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.527013367 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.527129104 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.526926807 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.527237438 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.528320171 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.527051043 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.527064369 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.527484557 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.525894963 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.52670295 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.526874441 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.52635174 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.526109358 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.526113842 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.525689704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.526120101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.526424903 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.525824804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.526127404 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.525931952 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.525367204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.527050248 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.526262255 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.527553176 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.525859967 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.52576643 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.525877661 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.525811146 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.526333197 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.527706356 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.5255242 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.525300545 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.525305543 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.528784617 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.531875304 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.525126892 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.527522299 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.523922629 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.524861014 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.524851459 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.524406693 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.524683273 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.526743154 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.523621511 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.52340286 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.523577266 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.52358825 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.524259573 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.523375319 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.52602434 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.522708213 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.522994063 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.522619594 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.523285923 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.522708473 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.523371325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.523221481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.523567197 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.522572521 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.523340737 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.523253681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.52371137 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.522954545 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.522629704 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.522798022 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.525182859 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.523417327 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.52278833 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.5229089 seconds)
  done (took 111.35167904 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.523221258 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.522975425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.522809238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.52252343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.522964367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.522480669 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.523930167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.52296942 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.522968181 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.523263433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.523138006 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.523079073 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.522727903 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.52298272 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.52295985 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.522893743 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.523039165 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.523000669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.52278192 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.523322289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.522821317 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.523121152 seconds)
  done (took 35.019537355 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.522888591 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.524038986 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.526194504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.523226416 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.525520638 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.523422433 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.52244654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.523453627 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.522236641 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.523229547 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.522019312 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.521985608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.523823071 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.522404198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.522420261 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.523730424 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.521963334 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.523735681 seconds)
  done (took 28.932475322 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.522757445 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.522436541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.52254094 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.522731194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.522569866 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.522179651 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.522508794 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.521981908 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.522686478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.522956244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.522545987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.5217404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.522561698 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.521979581 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.522333001 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.522132489 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.522588794 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.523364104 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.52170578 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.521804495 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.522016071 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.521918878 seconds)
  done (took 35.005074269 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.52185258 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.522079963 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.521891688 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.521783059 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.52180193 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.521821656 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.52223764 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.521531467 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.522778496 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.521642304 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.521128363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.521641099 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.52317966 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.522056791 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.521003328 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.521239297 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.521398339 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.521691788 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.521550791 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.52157711 seconds)
  done (took 31.949081103 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.521935798 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.522270263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.522365015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.522303513 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.522272414 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.524552514 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522069534 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.522163756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522286801 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.523141926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.521904759 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.52234966 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522702548 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.52210862 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522044142 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.521756159 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522778469 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.522425308 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.522865979 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.522147389 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.523396207 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.523019266 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.522421962 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.522834323 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.522847466 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.522839443 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.52218332 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.522634566 seconds)
  done (took 44.143373576 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.521518731 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.52159774 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.521396443 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.521183762 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.521406019 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.521238772 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.521660151 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.521358663 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.52272252 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.521599604 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.521516631 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.521002503 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.521136337 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.520822409 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.521344644 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.521874245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.521033661 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.521625033 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.521082403 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.520995485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.521186631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.521093698 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.521548437 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.521335394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.520833118 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.520807368 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.521170586 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.521587505 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.521616762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.521098867 seconds)
  done (took 47.152786971 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.586377782 seconds)
    (2/2) benchmarking "in"...
    done (took 1.586123908 seconds)
  done (took 4.684027259 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.521269505 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.521739 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.520940482 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.521103546 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.521713787 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.521315257 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.522952942 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.521274939 seconds)
  done (took 13.683841467 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.524097301 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.522144124 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.521050803 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.520963511 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.52138452 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.522342311 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.530822789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.525031384 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.524338552 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.522931952 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.524702996 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.525662223 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.525366628 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.523745524 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.52329964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.528204769 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.523486392 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.521103483 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.521610892 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.521503966 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.52139459 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.524527331 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.526814584 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.524226743 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.521748534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.531511695 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.530897248 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.524234056 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522687433 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.529471547 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.524099396 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.522466815 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.521537404 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.521086813 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.521357042 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.520540497 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.531596689 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.527335703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.530066985 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.524700117 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.52087107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.521080885 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.523293306 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.52528955 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.525441446 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.522911463 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.521001238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.521953599 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.521884895 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.525327197 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.52408342 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.521855639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.522192545 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.528094401 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.525625102 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.531095415 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.52595046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.523930045 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.526211693 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.529779004 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.539923611 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.532063254 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.528065418 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.523211917 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.530713913 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.533533914 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.531003419 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.525498286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.522743033 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.521531524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.528899423 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.543704398 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.54020813 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.52250616 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.520530734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.521380533 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.522533735 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.522291837 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.530556038 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.530545754 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.523289797 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.521069809 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.530396273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.531978865 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.523168782 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.522262277 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.520833104 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.521455646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.522571973 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.530694362 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.528430632 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.521273193 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.52280804 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.523200759 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.524968541 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.521284397 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.523188916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.52529789 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.522389164 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.521959965 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.521528647 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.524354732 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.526573187 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.523298687 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.521134787 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.530884011 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.525388305 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.521884775 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.530551173 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.525293483 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.522363385 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.523931768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.527277855 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.522287332 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.524196273 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.525981471 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.522752952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.524363487 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.522496733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.521439334 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.530654742 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.537867234 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.523523624 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.521905799 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.52623504 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.525675684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.520991677 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.525728449 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.523740877 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.521439286 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.521309682 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.524239398 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.523381989 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.52304652 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.522403901 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.523581328 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.522815652 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.521297674 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.521269588 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.523938405 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.525578807 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.523955164 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.525221637 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.527293335 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.523663288 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.523891874 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.532931464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.526063549 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.52521922 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.526117972 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.522427395 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.523389252 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.524133427 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.522095864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.522805788 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.521737876 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.522323149 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.522546454 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.521782582 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.521545511 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.521367135 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.522330752 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.525512791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.522313704 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.526399638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.52436678 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.522286451 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.521471841 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.521411802 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.523217155 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.521747415 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.521783105 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.525356263 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.52386748 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.52215656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.521518937 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.525270894 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.523147658 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.521094482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.520995448 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.524896945 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.525727644 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.523502881 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.5262657 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.521906967 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.518018639 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.518735592 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.519758852 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.520052731 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.51983671 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.521847602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.522436401 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.537523519 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.536989082 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.520096496 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.518730665 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.518936138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.518746895 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.523771952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.520804617 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.518398278 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.517912656 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.519563997 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.519407367 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.520908391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.519383446 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.518733642 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.519455179 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.519661224 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.515062441 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.515034467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.517489227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.520522632 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.516387944 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.515213341 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.514797908 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.510777503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.511426148 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.510010538 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.511621371 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.511534632 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.50998297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.514272647 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.50812658 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.508167967 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.509938205 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.509214648 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.506588385 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.507495192 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.504802698 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.50409088 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.510715301 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.50753134 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.503687482 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.510722312 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.506081945 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.500130085 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.503575627 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.500977941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.498635448 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.501581052 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.506295345 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.496648711 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.497091985 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.495818521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.496789876 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.497451715 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.503643771 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.501516521 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.49446905 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.495051825 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.496007413 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.4953504 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.496824947 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.497870328 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.498021802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.497701438 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.494802899 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.493176209 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.495037856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.493211061 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.492116713 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.492269712 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.495055184 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.496092102 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.498452055 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.497044116 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.496679623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.494307914 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.492728003 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.494499938 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.493084542 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.4950944 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.514603812 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.509343913 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.508445508 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.505745351 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.494122699 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.500682168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.49717249 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.494725067 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.494905933 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.495989496 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.495010498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.494258959 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.494584287 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.495165607 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.493795989 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.495956215 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.497385599 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.493188352 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.493295464 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.49378557 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.493593076 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.492771611 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.493656459 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.493016219 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.493054949 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.496547829 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.497103648 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.495838811 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.494385807 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.50284895 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.498393178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.497761664 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.495751707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.493794183 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.493394318 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.494689775 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.492860638 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.49533321 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.494689264 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.495177223 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.498198848 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.493504138 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.49941399 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.494791493 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.495577424 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.494550933 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.492086232 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.491953229 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.494311438 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.492410276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.501523079 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.49647722 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.494145499 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.493828999 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.4916555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.49173272 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.491937858 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.492181572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.492583446 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.491627491 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.502920626 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.499645008 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.493680728 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.497045401 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.49452043 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.491788295 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.491985246 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.492288251 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.499289746 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.49420203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.494825083 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.495848451 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.494998562 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.492791143 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.491468541 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.494390953 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.491707849 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.490939591 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.500459929 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.498566794 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.492146391 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.491004628 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.501103743 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.493803866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.499916068 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.49473033 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.492436961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.491197926 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.490292459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.493855274 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.491612365 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.493679648 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.492639441 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.490503489 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.491669871 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.489428501 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.492713078 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.493079115 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.490896737 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.490199314 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.499687681 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.499452913 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.490420752 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.489714782 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.488362975 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.489025725 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.4885183 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.488005589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.488262136 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.492028837 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.494757047 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.489810317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.488256499 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.488025064 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.488745572 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.487893459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.487938732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.486861544 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.486121801 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.487003628 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.488467184 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.48725014 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.495259115 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.48830924 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.487739724 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.489400371 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.487202907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.493706228 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.489093209 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.488345335 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.486096692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.486100263 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.486686426 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.487462677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.486034811 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.487756151 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.486480124 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.484809522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.488171104 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.48716611 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.489472047 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.489648306 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.484976222 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.485783268 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.485652762 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.484365189 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.482940377 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.4835005 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.485582066 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.4847286 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.484384299 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.484000915 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.483240658 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.486150105 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.484338325 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.485455975 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.489419965 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.484021678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.482926341 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.482004664 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.482273685 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.48362582 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.4842349 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.492826127 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.488426194 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.487379775 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.484284239 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.481568162 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.482182982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.486549974 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.484984681 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.482554152 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.483137164 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.480930861 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.48339236 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.482788146 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.484243972 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.47994154 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.487741172 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.484275097 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.481224386 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.490305716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.486884371 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.483030366 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.479085999 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.480270981 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.481284046 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.479078382 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.478455798 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.479271119 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.489674845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.486383145 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.478536246 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.481162876 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.481837676 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.47848836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.479168849 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.476938268 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.479180039 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.478801478 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.478424187 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.478631189 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.477278598 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.477557559 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.477264147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.478698439 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.481390774 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.480134132 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.477364235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.480909499 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.480551847 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.479604116 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.478138373 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.476810844 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.478438484 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.476416264 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.478325295 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.477145233 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.47846348 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.481846043 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.480043886 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.478272768 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.477772716 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.475806284 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.480156007 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.482213912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.480635494 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.476261741 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.477139803 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.479384116 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.481821502 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.47845458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.476053693 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.478497907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.480400501 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.478090317 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.4759569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.477266709 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.478854172 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.489138256 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.48115255 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.477499637 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.478417013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.4835827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.481306917 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.475547419 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.47482537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.478950246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.480280024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.477461805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.474738229 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.484272923 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480307959 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.475901487 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.474984685 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.477735247 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.478558252 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.480882228 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.476041211 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.472886513 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.478638262 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.486445708 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.476844557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.483232198 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.494381814 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.479359538 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.476492207 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.47429669 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.473005723 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.473293507 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.475868775 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.47478113 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.472146803 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.472256756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.471965681 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.474553588 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.476325744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.47779079 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.4799205 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.476407132 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.473559097 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.475378016 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.47285071 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.472364448 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.473799609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.472532046 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.472382606 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.472510398 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.474370547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.49270796 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.492372109 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.474864308 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.471517339 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.471498418 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.477307617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.477825686 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.477944977 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.474603708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.472944296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.470092039 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.473823726 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.472578959 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.471376505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.47222945 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.472409286 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.47252141 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.473326864 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.485076456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.48038515 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.47620305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.474306642 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.470271912 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.469286101 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.471643066 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.470138045 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.468910923 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.472370681 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.472542637 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.471070485 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.469031226 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.467919052 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.471757012 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.470767478 seconds)
  done (took 896.021362443 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.470756419 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.469083445 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.46704611 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.467276068 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.468386594 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.467345975 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.467619761 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.467415913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.467637652 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.467484878 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.466407622 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.466443603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.467984029 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.470202631 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.467382621 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.467250333 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.465923576 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.46533793 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.465833982 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.465904066 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.466840196 seconds)
  done (took 32.273962511 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.466538562 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.465382013 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.465473029 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.465220549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.46494955 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.465147136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.466604721 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.464255154 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.464030532 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.464886528 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.464162371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.463532539 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.464130642 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.464942979 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.463367331 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.462909713 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.464460006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.46347524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.464004885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.463814302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.464573763 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.46218948 seconds)
  done (took 33.674097431 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.461967444 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.463714739 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.46286977 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.463283024 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.462786161 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.461946382 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.461558054 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.462201087 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.462223548 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.463130984 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.462962242 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.463072993 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.465499902 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.464415104 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.464288117 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.462767269 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.461059955 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.461139089 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.461341281 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.460927652 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.468960237 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.465001561 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.46104985 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.461090894 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.462156923 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.460004175 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.460505164 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.460184944 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.460482415 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.460321284 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.460207538 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.463522693 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.464523234 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.462880429 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.461859039 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.460358841 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.459512505 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.46010386 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.460831083 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.469213264 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.470495859 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.459852808 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.475605405 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.470183897 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.46073953 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.463626072 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.462624143 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.460266627 seconds)
  done (took 71.672684601 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.460600734 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.459932581 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.460498947 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.460700496 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.460107771 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.460087826 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.460035466 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.45946702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.459460184 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.459889712 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.460364081 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.460213904 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.460407918 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.459584952 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.4614233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.459717534 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.460106374 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.459388951 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.45929032 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.459350553 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.459411294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.459337225 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.459705559 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.460132369 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.45915656 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.45935929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.459486111 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.458890489 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.459968884 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.459221825 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.459956297 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.459167076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.459278828 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.459645716 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.459375405 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.459190836 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.459115892 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.459846071 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.458767143 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.458997314 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.458904333 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.459219231 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.459096747 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.459399681 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.461658427 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.459594055 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.459009847 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.458899084 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.459464067 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.458691428 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.459158104 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.45990306 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.45911157 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.458968272 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.459249837 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.459254977 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.458668876 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.459338229 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.459264424 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.459525132 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.458835223 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.458762377 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.459227826 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.458941312 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.458821723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.4593372 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.459487263 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.459781441 seconds)
  done (took 100.699928801 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.459034762 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.459577844 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.459073642 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.45972391 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.458986733 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.459589468 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.458645365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.461027571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.45933942 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.459426444 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.459702643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.459538439 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.460666866 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.45980757 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.459493263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.460202375 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.459467983 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.459214607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.458661741 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.459063825 seconds)
  done (took 30.639077819 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.459100662 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.459238485 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.459072392 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.459055339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.458534473 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.459234259 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.458894839 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.458868958 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.458844209 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.458852137 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.459449888 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.459172047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.458646718 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.459417371 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.45904962 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.458738207 seconds)
  done (took 24.792475684 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.459166249 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.461388435 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.45857195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.458366861 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.458994808 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.459234162 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.459561512 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.4589549 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.459825208 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.45943277 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.459003336 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.460192528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.458906575 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.45812745 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.458880152 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.459503837 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.458373917 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.458954229 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.459127848 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.458620938 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.460456687 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.458736279 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.459820229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.458733165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.459343428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.46010558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.459541542 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.45919741 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.459492209 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.459165824 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.459603897 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.459091663 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.460816686 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.458912237 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.459297009 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.458933977 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.459442243 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.458984583 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.458705103 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.459864368 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.458979386 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.460075793 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.460092577 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.46357593 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.463950828 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.459813318 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.459728191 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.460167187 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.458826318 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.459597501 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.458698852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.458421007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.458832286 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.459577849 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.459132831 seconds)
  done (took 81.721065711 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.458892518 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.459057603 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.458815742 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.459129914 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.459258426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.458784785 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.45892701 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.462591069 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.459131573 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.458824004 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.459044121 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.460328777 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.459143023 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.459101248 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.459439125 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.458956621 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.458885785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.459450216 seconds)
  done (took 27.716532918 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.459505614 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.459450014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.458926986 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.459177586 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.458722331 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.459399544 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.459078334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.459176416 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.45879631 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.459708403 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.45903601 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.459270485 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.458921391 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.459058141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.459972787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.459225914 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.460011345 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.459746843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.459334004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.45915092 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.461099634 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.45925806 seconds)
  done (took 33.555016482 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.458880868 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.458856561 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.459268993 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.469907764 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.459234394 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.456264326 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.45601309 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.455765198 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.470413258 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.473464665 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.470800263 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.458251278 seconds)
  done (took 18.995895658 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455608042 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455256618 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.455657691 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.455318949 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458584018 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.455202954 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455130622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455317285 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.455188333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.455876469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.455246255 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.456761394 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453029097 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4533471 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453008568 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453176265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45422392 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453223112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453061858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450695663 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450611868 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450555956 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450692319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450920288 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45108001 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452755974 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448909145 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449634395 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448646808 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448661506 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449079825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448840607 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449962805 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449006834 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447731759 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447992558 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448445196 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448170234 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447759415 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448437161 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.447735593 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447339991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448042287 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447605056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447497119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449658294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445315224 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447313995 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445571789 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44625897 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446007159 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445504939 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446728246 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443472537 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.443302581 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44458257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444732209 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44381288 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443193629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446431904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441717792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441728273 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441839249 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.442374777 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441647559 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441532938 seconds)
  done (took 97.099306175 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439544747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.439079055 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.439906938 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440356396 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.439863607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439622871 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.442416341 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437363735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437553294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437403296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437150023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439070971 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.43727211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439182916 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435153472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43539901 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435449973 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435231462 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435221699 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436180053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435970921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433438227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433213108 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433492497 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434258109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433067906 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433588655 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434087391 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431587447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431794972 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431785517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431517902 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43219888 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.431528253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432221065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431541021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431680649 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431623061 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431400174 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431923743 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432003026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431969522 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433445011 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431762262 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433135912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431938351 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431529803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431703731 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432703012 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43168133 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432905127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433096133 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43319324 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431793301 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43227209 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43178098 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432164515 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432111477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43210941 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431787771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432289667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431980083 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433113882 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431983944 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43204412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432268725 seconds)
  done (took 96.084054981 seconds)
done (took 1983.92118468 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.594538821 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.71008106 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.465893875 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.440188873 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.42841609 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.442284964 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.922852802 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.621626894 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.877460725 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 2.085650481 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.750619276 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.550438034 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.458054483 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.700939706 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.527565237 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.431540578 seconds)
  done (took 35.429631914 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.453644419 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.439420462 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.528913155 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.435142043 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.457547371 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.586699065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.481136544 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.44346506 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.429038849 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.460067253 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.439351409 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.455596694 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.436473865 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310545783 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.776173721 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.589566886 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.646529531 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.436812972 seconds)
  done (took 32.227843736 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.773495597 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.666769856 seconds)
  done (took 5.862561081 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.448030677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.434823944 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.434114216 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.430136601 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.424819163 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.427570855 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.428263238 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.427250289 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.423092942 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.525726966 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.431517988 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.43728104 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.427338055 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.428526041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.426736303 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.467509164 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.565310896 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.425920277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.424695588 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.432407309 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.426169435 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.522638939 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.461688997 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.425322471 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.524803988 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.427573564 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.426805234 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.43307435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.555592667 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.425220334 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.424809803 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.430442112 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.43015426 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.162873049 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.881208418 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.418073392 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.436041915 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.436111467 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.424878488 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.582432614 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.426712514 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.432957451 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.419457808 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.856898048 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.553366669 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.531971645 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.429408811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.424988799 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.42819555 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.499551696 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.425539532 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.428148475 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.461739792 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.238936351 seconds)
  done (took 90.107465152 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.493682532 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.419350535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618534215 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.429440973 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419328769 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419520824 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419778326 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.63784798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.484779931 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42867924 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.679221598 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901177677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.424723731 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.520984445 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.476245249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.480231011 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422770256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419975147 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.421320562 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.428107166 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894754146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419720983 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.424500794 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.618486332 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453801752 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.918886625 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.419404075 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.419567992 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435910488 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.419125862 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.880241844 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.423654328 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.483131971 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.419297973 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.666149062 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.74732214 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721337543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.42412761 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.501159686 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.422287407 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.421501207 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.907935799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.745256724 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.423616608 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419847183 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.908293102 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.41922195 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.430224269 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.421152413 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.683998217 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.41977146 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.419729907 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.419074987 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.419583934 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.419936335 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.495055995 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.500862739 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919272927 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420157706 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.419655289 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.498372159 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419850943 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.422161889 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427435003 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.422366886 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.747479765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.321089882 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.426555215 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.744849167 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.87108259 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.419208593 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945262722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419215332 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435921309 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.57449653 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419456193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.419862828 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920160112 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.440929873 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.419717998 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721331239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.425801908 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.678195887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.419859609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419815115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.910013956 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.421210029 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.482815948 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.419151464 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.419860333 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.419826384 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.427191023 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.667771894 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.467804583 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420754339 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.420366539 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.453193526 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41958236 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419837387 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.422861486 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.946278293 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.424741409 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42024623 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422132482 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419837697 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420374058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.424815359 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.423163731 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.699212698 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.419301809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.430870197 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421577406 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.419394247 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.431178968 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.620955764 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.425396335 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.66297894 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.419352347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429502564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.426681839 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419289093 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.428897062 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420812603 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.422790778 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.419916965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.737172363 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.420981642 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.420767172 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.419694296 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419707871 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.421408815 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.421309898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.480216653 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425973632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104732958 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.46892925 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.474720289 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.419680738 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.434004164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428312229 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.430472732 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422275565 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.774289523 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.66401678 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.320980617 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.420068134 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.420901707 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.175201519 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.497674904 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.619623755 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.423045894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420257101 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.723261096 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.329964368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.421112561 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.419780536 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.419989131 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.692082518 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.420330202 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.776917863 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899079868 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421474719 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.428338781 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.166056373 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.419163417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.420674572 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.420174086 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.674365731 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.420240727 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.420012317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.420189437 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.421033742 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420053683 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.425047732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.428908362 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.42007476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.419994136 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.966506282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.624978708 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.420545025 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.427108856 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920907283 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.474018343 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420190057 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.428765612 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.421761808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.420015751 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.477924294 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.428337866 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.497457823 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.419719455 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.430392068 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.938553219 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.418925478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.420979973 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.625194843 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024289998 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.418504845 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.419975282 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419853904 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.481352622 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950296854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.483854791 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.666296177 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.427479743 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.454326943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420194646 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.477088849 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.950368435 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421129479 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.420300739 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.096900704 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.418829178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 8.047973641 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.420157376 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.421963497 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012896624 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.419435409 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.42016704 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.419819422 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.420210383 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.723284516 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.422984619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.454176504 seconds)
  done (took 522.759904884 seconds)
done (took 687.808319655 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420039961 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.420489115 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.41914505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.419113557 seconds)
  done (took 11.09313009 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.426166174 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.4259212 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.425047594 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.425661554 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.425359027 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.426269988 seconds)
  done (took 9.968094054 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.421915942 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.422498267 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.418827361 seconds)
  done (took 8.677780745 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.593139068 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.428185247 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.713563528 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.420656046 seconds)
  done (took 9.568561019 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.425643329 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.425269321 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.425172001 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.425490808 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.426354517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.427005391 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.425142083 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.425354676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.426339128 seconds)
  done (took 14.244520275 seconds)
done (took 54.966700252 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.810551204 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.137130919 seconds)
    (3/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.899950033 seconds)
    (4/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.418644041 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.427091672 seconds)
    (6/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.959922032 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.64430863 seconds)
    (8/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.556301652 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.434332951 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.420153408 seconds)
    (11/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.41958386 seconds)
    (12/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.428990527 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.421979901 seconds)
    (14/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.43141913 seconds)
    (15/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.434615962 seconds)
    (16/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.420034584 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.663812935 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.654530937 seconds)
    (19/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.420664393 seconds)
    (20/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.648021574 seconds)
    (21/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.796556363 seconds)
    (22/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.419657437 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.419387699 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.423896665 seconds)
    (25/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.561381311 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.511021126 seconds)
    (27/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.772066369 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.426929292 seconds)
    (29/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.619168231 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.639969501 seconds)
    (31/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.86742721 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.112532533 seconds)
    (33/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.356602568 seconds)
    (34/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.43054078 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.122414544 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.420951759 seconds)
    (37/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.420089252 seconds)
    (38/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.002256173 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.759959206 seconds)
    (40/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.419451529 seconds)
    (41/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.685465781 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.421331623 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.41933697 seconds)
    (44/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.420035167 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.431289514 seconds)
    (46/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.358866407 seconds)
    (47/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.808694877 seconds)
    (48/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.836076279 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.135958477 seconds)
    (50/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.635785097 seconds)
    (51/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.130841354 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.417296987 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.077172157 seconds)
    (54/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.423304401 seconds)
    (55/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.437655357 seconds)
    (56/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.426210571 seconds)
    (57/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.535467392 seconds)
    (58/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.860307492 seconds)
    (59/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.422693734 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.432929459 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130175885 seconds)
    (62/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.419138511 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.763315279 seconds)
    (64/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.134638029 seconds)
    (65/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.419688639 seconds)
    (66/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.432642242 seconds)
    (67/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420655748 seconds)
    (68/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.539056348 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.780869487 seconds)
    (70/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.431683016 seconds)
    (71/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.390939229 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.512121578 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.42802335 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.90578956 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.91160909 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.358036439 seconds)
    (77/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.69321934 seconds)
    (78/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.988708233 seconds)
    (79/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.305542915 seconds)
    (80/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.42614567 seconds)
    (81/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.990226569 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.187018157 seconds)
    (83/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.866196517 seconds)
    (84/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.419660407 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.730413244 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.506033494 seconds)
    (87/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.433629336 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.775250596 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.759378951 seconds)
    (90/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.507789586 seconds)
    (91/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.996917331 seconds)
    (92/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.80078276 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.420105451 seconds)
    (94/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.423193996 seconds)
    (95/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.42040065 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.422132115 seconds)
    (97/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.41993713 seconds)
    (98/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.434643097 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.420876102 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.769932661 seconds)
    (101/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.432045309 seconds)
    (102/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.633232233 seconds)
    (103/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.43458129 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.420630516 seconds)
    (105/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.377905649 seconds)
    (106/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.874451845 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.245658073 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193550205 seconds)
    (109/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.937020649 seconds)
    (110/192) benchmarking ("perf_sum", Float64, false)...
    done (took 2.210067014 seconds)
    (111/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.418894045 seconds)
    (112/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.356984748 seconds)
    (113/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.419048375 seconds)
    (114/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.422943605 seconds)
    (115/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.424317591 seconds)
    (116/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.762014916 seconds)
    (117/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.845570145 seconds)
    (118/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.816738183 seconds)
    (119/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.418975306 seconds)
    (120/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.353682838 seconds)
    (121/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.436411959 seconds)
    (122/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.41989294 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.433041655 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.431705203 seconds)
    (125/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.435687062 seconds)
    (126/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.853578686 seconds)
    (127/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.423467827 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.533529667 seconds)
    (129/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.421888164 seconds)
    (130/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.655525176 seconds)
    (131/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.957162763 seconds)
    (132/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.854140388 seconds)
    (133/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.420123968 seconds)
    (134/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.42537243 seconds)
    (135/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.430165947 seconds)
    (136/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.419445267 seconds)
    (137/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.689149654 seconds)
    (138/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.431383301 seconds)
    (139/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.653140357 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.306962939 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.42130786 seconds)
    (142/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.269623143 seconds)
    (143/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.434802598 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.561506861 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.513092911 seconds)
    (146/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.435064612 seconds)
    (147/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.424275293 seconds)
    (148/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.10024724 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.815991798 seconds)
    (150/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.808177262 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.888200856 seconds)
    (152/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.756141243 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.695470145 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.278654702 seconds)
    (155/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.221868709 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.084415422 seconds)
    (157/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.689666941 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.955401702 seconds)
    (159/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.108907441 seconds)
    (160/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.419719027 seconds)
    (161/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.433390419 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.419620056 seconds)
    (163/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.103074028 seconds)
    (164/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.418960174 seconds)
    (165/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.41714933 seconds)
    (166/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.419703933 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.420106914 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.63271913 seconds)
    (169/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.419854677 seconds)
    (170/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.418914145 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 2.206081286 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.714488908 seconds)
    (173/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.395094146 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.419911922 seconds)
    (175/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.434763203 seconds)
    (176/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.686962085 seconds)
    (177/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.524525303 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.420978159 seconds)
    (179/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.12003928 seconds)
    (180/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419274243 seconds)
    (181/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.419875487 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.434431009 seconds)
    (183/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.426006812 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.435751343 seconds)
    (185/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.64762297 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731483026 seconds)
    (187/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.278555846 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.614828368 seconds)
    (189/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.420974658 seconds)
    (190/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.53194163 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.422162316 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.752750363 seconds)
  done (took 395.067728003 seconds)
done (took 396.48204492 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448748927 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.089513103 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.428737373 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.428716617 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429710581 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.4208498 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.438733561 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.429155028 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.432834434 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.433091491 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.420889125 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.425287667 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.444100805 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.429333309 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.445509949 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.42979227 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.42888422 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.429260943 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.434215892 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.438641104 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430549029 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.429684371 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.446395292 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.428837295 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.438641493 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437224099 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.434792023 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.42123193 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.425477749 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.434074223 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.421087571 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.433671963 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.43619855 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.429953998 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431707943 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.428693767 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.430568387 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.090701585 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.440055023 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.429293305 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.42780395 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.435697027 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.434403523 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.434022919 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.429906942 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.446643867 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437340647 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.443266589 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.420944018 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.419570396 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.447691129 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.432680371 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.427584172 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.421217734 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.419533483 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.443445025 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.429749941 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449074201 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.426773205 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430506423 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.445248416 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448613331 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.43292316 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437096485 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.426240937 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.44460152 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.428586785 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.439309781 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.42663188 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.431095068 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430810855 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.427376593 seconds)
done (took 113.897031969 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.426408018 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.426556835 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.555428226 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.426679443 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.567331435 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.426236705 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.426644523 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.435918122 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.428301236 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.426574773 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.556875726 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.427242632 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.556854756 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.568868054 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.555075426 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.426780536 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.427003834 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.426433174 seconds)
  done (took 30.90687971 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.500993799 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.50038501 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.531535978 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.426778061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.477571094 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.531529435 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.427323213 seconds)
  done (took 11.811514304 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.43429868 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.427117742 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.489573082 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.490632308 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.426300859 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.618707416 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.439382994 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.427209313 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.488518424 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.426998322 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426572485 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.436205229 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.423258353 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.490038934 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.439987362 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.54365452 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.429784126 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.426264008 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.596760346 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.428077799 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.435966657 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.484841681 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.439461136 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.426870769 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.433543616 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426552113 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.426333511 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426490372 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.502986034 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426414169 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.422921298 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426769522 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.426299339 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426227702 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.426891777 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.429304381 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.426398208 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.427094721 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.426646715 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.426544749 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.426160642 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.450663289 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.426588293 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.426784768 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.426229423 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426401777 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.484976696 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426472242 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.426532271 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.428813046 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.490882448 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.43596505 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426417652 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.426513534 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.426393647 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426450624 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.596702311 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.490043257 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.426804357 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489731874 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426684827 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427032742 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426286389 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.426807935 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500778353 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.428323836 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.490000453 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.427128896 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.621657273 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.451101683 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426586436 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.431788122 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.431833745 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.429109057 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.434292812 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.426837592 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.430108773 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.434286925 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.426837976 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.427519533 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.620871715 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.427350502 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.445394185 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.435859309 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.426817789 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.485928085 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.427359954 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.426570943 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510038767 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.544939936 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.488076938 seconds)
  done (took 137.572243877 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.444595861 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.430251966 seconds)
  done (took 4.290567 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.429091056 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.427177052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.426742364 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.426618443 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.426964443 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.426442582 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.42647529 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.4281558 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.427424041 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.426428077 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.426537321 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.428242361 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.426383458 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.426988064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.426296032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.427000924 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.426107133 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4284117 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.427122296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.426760804 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.036119774 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.426412812 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.426823089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.427151409 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.427257044 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.426746109 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.452365076 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.426673273 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.426849306 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.435646216 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.427950847 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.426900257 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.427599104 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.430014871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.427031586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.427724858 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427552433 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.428415492 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.427233313 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.42674825 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.428722775 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.426969607 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.427615876 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.428128515 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.429158398 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.427834417 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.428218348 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.452674866 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.428203278 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.428126247 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.427928258 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.427195286 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.426600243 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.428092972 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.430113239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430119963 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.428331974 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.426457236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.426726311 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.427737539 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.427358289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.427560275 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.428205242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.426872647 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.427041319 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.428148414 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.427978424 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.427764269 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427187993 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.427072272 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.42822572 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.426905928 seconds)
  done (took 104.864252852 seconds)
done (took 290.860611227 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.346229093 seconds)
  done (took 4.761718329 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.725992148 seconds)
  done (took 4.141774499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 9.106649006 seconds)
  done (took 10.523622137 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.434606862 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.443076744 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.423288691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.422886328 seconds)
  done (took 11.135810469 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.04347731 seconds)
  done (took 4.459277868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.425201847 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.421512127 seconds)
  done (took 6.263424773 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.672375654 seconds)
  done (took 4.08817282 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.522109529 seconds)
  done (took 3.938129499 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.439635568 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.428007214 seconds)
  done (took 6.290579893 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.421837317 seconds)
  done (took 3.838082201 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.74235004 seconds)
  done (took 9.15676435 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.445572554 seconds)
  done (took 3.863130155 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.456708794 seconds)
  done (took 3.872236838 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.162254462 seconds)
  done (took 4.577861036 seconds)
done (took 82.326908635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.421482962 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.421227185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.419767952 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.420296707 seconds)
  done (took 11.098476153 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.492506727 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.483781791 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.50157442 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.479151488 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.485000564 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.48391104 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.452325406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.452261705 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.487046334 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.482026112 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.485300043 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.478106914 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.494998546 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.452171988 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.483859311 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.496820787 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.48295538 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.488884792 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.452484945 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.478447232 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42711053 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.485076155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.47879844 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.427799484 seconds)
  done (took 36.82788516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.831670703 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.497011191 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.607815951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.478293518 seconds)
  done (took 7.830456185 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.519339302 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.529776788 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.530148877 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.572628142 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.599077484 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.52996693 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.453531712 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.448041845 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.434730659 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.530544478 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.607082647 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.426649388 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.701008663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.426916018 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.719092731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.427093505 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.428318655 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.522143628 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.570185864 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.585480078 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.427151379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.516742897 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.523584623 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.42648614 seconds)
  done (took 37.872211506 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.4346158 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.443903536 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.427997473 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.428452176 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.42913524 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.429812668 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.442192619 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.429552457 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.43486816 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.427407418 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.427498903 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.428129299 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.441576681 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.427572834 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.427718738 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.43461267 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.430919235 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.434427645 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.437711509 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.428170414 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.427815092 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.434643358 seconds)
  done (took 32.925814046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.421684632 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.423337168 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.772676037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.677044696 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.423180399 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.421760127 seconds)
  done (took 14.55592001 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.478563921 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.498310398 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.425320996 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.687328484 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747156964 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.426947352 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.426934136 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.529733408 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.740944907 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.819097217 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457398955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.465593283 seconds)
  done (took 20.117866511 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.422775125 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.420964055 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.427311083 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.435049705 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.468184258 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.430657698 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.434557663 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.421869397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465790521 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.471490172 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.429012912 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.469103014 seconds)
  done (took 22.71320958 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142957189 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310026605 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422105582 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545104626 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420946127 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.42478526 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.545706356 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817438252 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.425933946 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697049764 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431916389 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024656822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.425635858 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423387435 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418489918 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.426354693 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425715969 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06778449 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420990855 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425774496 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.426862538 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42991053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421597081 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590785329 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423159482 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419695952 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.684204657 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421954191 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668918299 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643604975 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644723857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422903645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69921922 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750244784 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558212484 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591835663 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440651793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420170507 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.483758945 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.423023562 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434261155 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42386074 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643974756 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422674786 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422110731 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422046744 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820210957 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.427535617 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.422085692 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423677179 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.647230678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03149317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424876959 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422108243 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.588291278 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420356413 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.427153654 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614069439 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426768016 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419516849 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424060442 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.420275832 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429717385 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419903089 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038944665 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.428514937 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.426930874 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427197025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421867262 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423139443 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444649576 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421740085 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.439864465 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422251858 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081642842 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42366331 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435528971 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061415397 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422834901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.417883554 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430360352 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420242122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421589513 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.421693208 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421996186 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109336452 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428407042 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.422615864 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437946974 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.818974193 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589070491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246159033 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419490455 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422672319 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.418753842 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420309681 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.422210632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429907612 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442411754 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.821593588 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421130474 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.425427618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424173627 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.629280162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429975938 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.421276683 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822936444 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420271997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.444120419 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422086244 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583829193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.922206335 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646929602 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421896593 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451649748 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421924415 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166602907 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421643483 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.425333718 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421722389 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669929487 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.422509069 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421825199 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543914316 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451808071 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422114053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421670187 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424105873 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421763899 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.657286906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425385477 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642040868 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.42335344 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421537115 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.425009715 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42091533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.423981999 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435483749 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431130875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694619698 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422980873 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422504521 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420609845 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.437502003 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.420986185 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.426249859 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425540013 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421811257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421776248 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645336741 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448149502 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565393555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44913186 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.422944517 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426165277 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.425672226 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.427589816 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421677295 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424392241 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454283102 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.429211781 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431869392 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926911754 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396939037 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.448472665 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308914901 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.43729837 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542759286 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429249124 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587014273 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428392323 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428407036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.425474773 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.424466521 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421893364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644266496 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.424254509 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593888459 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.818621367 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928690618 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866972173 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.422074288 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.421937448 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.421924037 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421860408 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423932193 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42297707 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59051302 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646302011 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431584001 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930135532 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423365126 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422045709 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.429835022 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646437295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.429149415 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422656947 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428895048 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419661912 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424517304 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643372902 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701401345 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.437534656 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422306617 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940518058 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429270078 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423437436 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422215029 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452380583 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424220984 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909789406 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434921695 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426662667 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644376293 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422151879 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.441001666 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.422729698 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42163956 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426120573 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.436784503 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426874598 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.588550522 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424448691 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424374315 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422023504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088216855 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883824415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433772102 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.423015332 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420059812 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823024313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42970024 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420804919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620720001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.818738169 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420529322 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818761193 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.428927173 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028201393 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644030675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431028182 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420368257 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.423056883 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648978204 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632721481 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453770665 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426073989 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431692304 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.428637134 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909167915 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420045755 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.599774026 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819094548 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4187167 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424275652 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.482578202 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.432802121 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718090662 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420934236 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421672989 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432659506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41954933 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912719875 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.446042627 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422340285 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014227027 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423491833 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.819642331 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420787746 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.589365461 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643456437 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.709170871 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.427877209 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.426634764 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.4345951 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645854015 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432943467 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42686198 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880359666 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.274076306 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.429264862 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422765788 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19197761 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425579273 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667530829 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.422139584 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.420898502 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443710889 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42221083 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422612392 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.422017496 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.454550053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392744187 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961819457 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.429180021 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43855078 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419495224 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428648985 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.428130469 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.435681748 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.926408187 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435855313 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423684418 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44842673 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.427338108 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425534493 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.430900598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422414599 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.423871029 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597410307 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420834644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420913348 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.427765488 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.555387689 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630129449 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422004126 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422528622 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624127838 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.419999978 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.440888462 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118079709 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422425413 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420954835 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424942317 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.43066799 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435526964 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546546439 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588496739 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.645395444 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647859889 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715795298 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421195669 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425726721 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.238027703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153662841 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418890725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425334904 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.423274037 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9321304 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087329643 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937103929 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649295682 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422451742 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441170076 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422110971 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736155257 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422256491 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697855471 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429462692 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.433881063 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441380077 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425206574 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430647433 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630449345 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696668646 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423001997 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425651247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420374752 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.421963834 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643607144 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632223478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068541413 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084124726 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422213751 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422084461 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822125291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695878178 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422515443 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425187749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422757378 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.436748173 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.420740178 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.430271642 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426815421 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708653453 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644896876 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751383247 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.642262541 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.812879333 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.297837062 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425432323 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424671799 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421133227 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.586844003 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918937944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.037890025 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428399413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543888054 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590680457 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.420821503 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737051623 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.424905973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420587265 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422456323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432006843 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.42039629 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643436496 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93651569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429995163 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.42657271 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.426940856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422922573 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.584839463 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420967115 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110696831 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436259376 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63987778 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.455317861 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422135683 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924662113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649258041 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423049989 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428106699 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62040012 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421565525 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459133433 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295534387 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.422742007 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181172321 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.63251353 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252578718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420609488 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037803162 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93046723 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.4243361 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970080884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423322894 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433390355 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693790666 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431067461 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423421747 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708539776 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.427550628 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422140636 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588338218 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.919991438 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.030711805 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.434781004 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427035694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.424682836 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422899945 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552994558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427886518 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457371465 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.793966119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420742067 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424780539 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036920636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.424584545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420297408 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.418137103 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422723051 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.429714246 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.485875937 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.430106956 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426901231 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611014283 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906933856 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448367869 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.078668158 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.756577392 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.42879202 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422355165 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.42102392 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427092403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422790512 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422918033 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423019465 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42769846 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175478633 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.42256283 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.643743599 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.428212321 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632397789 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632802684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422306352 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588621295 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420508697 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43975385 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.424919542 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421292049 seconds)
  done (took 1039.99420853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.45852615 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.42637785 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.442443772 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.486508447 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.457548055 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.494864706 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.508599479 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481673251 seconds)
  done (took 21.17360404 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.431745026 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.43226188 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.432274359 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.43070427 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.43292536 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.66206856 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.42191379 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.43231788 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.438685963 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.42416875 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.422591717 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.792276494 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.433044254 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.430862941 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.423058118 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.432251207 seconds)
  done (took 32.891299738 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.169065465 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.490898423 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.597844872 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.459709382 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.4426404 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.425062569 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.602273903 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.429140751 seconds)
  done (took 24.03518412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438988737 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439090643 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.43942226 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.439243094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.44008182 seconds)
  done (took 8.611962231 seconds)
done (took 1312.06399085 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.428550095 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.428513105 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.43060122 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.430337 seconds)
  done (took 7.13492952 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.423687177 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.423463801 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.421045612 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.840449214 seconds)
  done (took 10.525753558 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.731756632 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.849298739 seconds)
  done (took 4.997763007 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.776038024 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.477056026 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.617908146 seconds)
  done (took 6.286759557 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.833696482 seconds)
  done (took 3.249386765 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.902499984 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.864541818 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.579439622 seconds)
  done (took 6.761690339 seconds)
done (took 40.372914775 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.42250113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.195219655 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.578624507 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.431116473 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.583052965 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.578962697 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.649770579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423538235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.428343284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.430234617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.43269381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.58298285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.638310032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.194987639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.63793209 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.195019006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.583452144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430533045 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.429199274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427095335 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.649683475 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431046408 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.43015828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423889755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.582483661 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.566843867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422990427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.194371888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.422436512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.431167314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.567260337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422432021 seconds)
  done (took 84.236687246 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.43104119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423346559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424197259 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423260578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422407308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.422948474 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.425338676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422932633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429218097 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422241823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.422691994 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.427351518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423249524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.423233882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.424928775 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.424200075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426512702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423493738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422916258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423877259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424864366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.425066695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423343677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422749325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422919979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422973389 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423763738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.424072495 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427180403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.423396952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.423190893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423457707 seconds)
  done (took 78.994715921 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428713659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423252948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425285971 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423201702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422488738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424530217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.425098908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430099312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422919123 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.422776555 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.427315381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422784195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432476784 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422704856 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.434342982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.423409695 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.426873766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422988612 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422823404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.432686146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429715309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422974825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423146457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422886831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424155242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.423274538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422976519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423577701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423321497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.42289538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.424682083 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423099421 seconds)
  done (took 79.021763749 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.653114663 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.428099456 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430182222 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.423385112 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430458623 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.428667117 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.423303585 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.656101604 seconds)
  done (took 15.29066109 seconds)
done (took 258.96087324 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.427523832 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.913033816 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.4483114 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.423024468 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450555531 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452640279 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.589307015 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.450672778 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.575431379 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.423755545 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.451667174 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.423700853 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.163082537 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535760626 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.312798483 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.423461699 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.241378813 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421395633 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.972993825 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.594860387 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449479116 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.424657477 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.319462153 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.242273915 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.421262353 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.43227522 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.433532524 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.543972321 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.51446411 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434054566 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.914626858 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.421371804 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.420497143 seconds)
  done (took 65.086494973 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.427216865 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.428308176 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.428348855 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.428356076 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.428692194 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.428379409 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.428692519 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.428265934 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.430106722 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.428675892 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.428453469 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.428645913 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.428208586 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.428524275 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.428126146 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.428544155 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.428825589 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.433059496 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.42822526 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.428350815 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.42866619 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.432107819 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.428937539 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.428892919 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.428936228 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.428277609 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.428342016 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.42903527 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.428439328 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.428424528 seconds)
  done (took 44.281125323 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429019875 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.110263189 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.420486053 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.430479242 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.754258555 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.733796459 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.28807159 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.639993751 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.435658875 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.505148259 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.424505112 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.427210377 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42898317 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.103636245 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.461045792 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 2.065220335 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.500018152 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.782424016 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.588588654 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.423825732 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.566259126 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.55728503 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.432370624 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.437626116 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.459275922 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.434187198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.840252255 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.432242534 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.434739423 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.43589265 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.433272671 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.724405524 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.431365274 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.419742783 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.83843289 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427676521 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.038052646 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427989036 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.61919362 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.436936263 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.429067972 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.436020495 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.423680643 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.434742346 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.828558561 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.427204883 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.461424151 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.726335395 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.430707757 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.423182824 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.421783112 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.82596699 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.431058395 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.423043211 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.43191369 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.827442615 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.43077218 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.284783954 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.721148889 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.434401619 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.435043979 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.423576922 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.421714905 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.512008287 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.432482134 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.422316652 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.422079028 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.432420212 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.441490175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.829612247 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.433201182 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.432051224 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.61980449 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.429826971 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.435036026 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.427797238 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.433966207 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.438234692 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.4292533 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.428851348 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.526650387 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.55183601 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.72728955 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.729600918 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.434480816 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.560384322 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.43312795 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.724279009 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.426857241 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.432874106 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.432262883 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.42927589 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.241377185 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427793929 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.427093415 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.428910669 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.566370428 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.838399085 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.436402557 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.436740189 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.593572142 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.424659447 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.422038458 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.724459353 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.426662434 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.427776937 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.422215334 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.558184629 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.428738583 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.439766519 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.433173094 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.432673299 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.660620801 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.727895734 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.435262288 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.42393613 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.754859665 seconds)
  done (took 205.684489314 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.430919315 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429535615 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.422295846 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.424786996 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.423927474 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424137638 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.424429964 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.422772865 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424117247 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.421972636 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.42220807 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.432941538 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.423414753 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.425918381 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.424979262 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.434233428 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.43283951 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.426828972 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.424551281 seconds)
  done (took 45.516053241 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429041735 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.805356005 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.427772264 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.428797247 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.470393255 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.427254344 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.424184775 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.549364455 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.427878687 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.429708759 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430072503 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.424925217 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.430387111 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.843737117 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.427915238 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.84347292 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427386242 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429168578 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429217457 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.843483967 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.42167867 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.717652201 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.472204012 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.841107122 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.428286515 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.430970103 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.42945068 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.842276966 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.42771086 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.848761714 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.428789441 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.42935271 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.471831739 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.471523562 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.423770498 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.720742485 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.450311534 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.540322365 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.429431907 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.431601683 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.844180797 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.429332883 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.43173417 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.434526491 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.80980707 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.808416178 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.428659974 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.429971368 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.842176599 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.807941085 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.805576202 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.547412318 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.427381497 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.428707895 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.718847476 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.429352077 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.84500123 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.42991601 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.429389237 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.429014327 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.428998657 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.432571479 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.550776065 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.838576104 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.717346409 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.432546856 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.424225604 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.42198057 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.427711301 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.472580914 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.429873028 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.423917371 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.427371484 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.471619018 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.74641718 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.422568378 seconds)
  done (took 126.255166457 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519264948 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.847608075 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.424007786 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.423806863 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.532314909 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.525603866 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.626857097 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.485423309 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.479193151 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519355093 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.539353127 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.83525994 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.42429194 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.499564033 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.999741768 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.651542459 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.195852687 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.422699341 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.563396713 seconds)
  done (took 35.932750985 seconds)
done (took 524.173494752 seconds)
SAVING RESULT...
DONE!
