cset: moving following pidspec: 8540
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.957223578 seconds)
loading group "string"... done (took 0.504472416 seconds)
loading group "linalg"... done (took 8.402126353 seconds)
loading group "parallel"... done (took 0.171549996 seconds)
loading group "find"... done (took 3.834688881 seconds)
loading group "tuple"... done (took 2.101298522 seconds)
loading group "dates"... done (took 1.383613927 seconds)
loading group "micro"... done (took 0.195079703 seconds)
loading group "io"... done (took 0.530473399 seconds)
loading group "scalar"... done (took 49.477455807 seconds)
loading group "sparse"... done (took 13.364134015 seconds)
loading group "broadcast"... done (took 1.226245737 seconds)
loading group "union"... done (took 9.182064293 seconds)
loading group "simd"... done (took 3.001186164 seconds)
loading group "random"... done (took 11.1807666 seconds)
loading group "problem"... done (took 2.167655483 seconds)
loading group "array"... done (took 23.965317894 seconds)
loading group "misc"... done (took 1.138306532 seconds)
loading group "sort"... done (took 3.655744984 seconds)
loading group "collection"... done (took 19.059564271 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.607619923 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130794437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.264736614 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.226066547 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.213343003 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168705705 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157682009 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.234752113 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.581020153 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207200943 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137481766 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.438281995 seconds)
done (took 6.121260758 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.24634309 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.242511805 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168372865 seconds)
  done (took 1.104772427 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078541865 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158225324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111042057 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096651761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096173454 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111130537 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094881938 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110491597 seconds)
  done (took 1.476126801 seconds)
done (took 3.59948298 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.492936511 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.855278189 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.505174063 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14454641 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309057476 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290028334 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264225242 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198633373 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093321156 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090430592 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173208898 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.410195561 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.390046133 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.949366399 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.08980375 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095141847 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13466938 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.756945795 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083071071 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111208307 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.513031139 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.190408127 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.101601788 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121283478 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187441476 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133557635 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.161623251 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101487683 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666271575 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136747848 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177850803 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099442121 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160179174 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166813973 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196351845 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110969603 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672041162 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203395045 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097719354 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101930702 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67727575 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121008139 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184578226 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105216285 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089537867 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181307096 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103485088 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095845991 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096096328 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087025658 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164369558 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446924011 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107698116 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.17130567 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096293096 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692237746 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.101770662 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280738792 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128741913 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098569298 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092779787 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089202122 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162246406 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095942443 seconds)
  done (took 19.93932832 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147673537 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165508804 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.081024092 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157224281 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125753366 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082718184 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103774776 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081681269 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.112389385 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.197612436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140169363 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158989333 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077277999 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.109174364 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130840677 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248319291 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110714639 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122209406 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092080917 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092752756 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141576379 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099462484 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092973376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10940248 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171106908 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208100955 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114534729 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126885129 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093876917 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099168939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146660192 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150189536 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096757352 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092879425 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194325855 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110688951 seconds)
  done (took 5.296423367 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.205368671 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125943352 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.229020695 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200012321 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.136557099 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186411747 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168216065 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259372433 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.201849605 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.136551404 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163736876 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128576385 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098027967 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08087842 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081088025 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098600177 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.445693811 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149203126 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193923886 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165317721 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114981025 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08363701 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362690788 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102893875 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087884963 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113725831 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064705762 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203993334 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097322392 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.132598063 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084934721 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123389926 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115318645 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21235349 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124897293 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138290506 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097008742 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103557853 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206563932 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121877315 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083663069 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096020345 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11862348 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135268538 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116768462 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.110828307 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1123987 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222146818 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088612571 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131056737 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.024204018 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.199069084 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.142284696 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.088997185 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290375862 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127921005 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103426496 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110768946 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.777673078 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118558217 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084488755 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097733424 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097398094 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080434527 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430437371 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126167361 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.319882212 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084294935 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158866276 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099828016 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120610599 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086974391 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106791787 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.112294611 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08876573 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098278278 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089759105 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081923032 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155006074 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090526122 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129665044 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086814286 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098240313 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148551878 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098589912 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.126648574 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110653148 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.107242159 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088014229 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129236859 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084439404 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091685089 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.163570822 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100683261 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130509218 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115432312 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130544896 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.105496661 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.233034088 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086973428 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087622334 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.140658009 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087258931 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129471919 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101316123 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09964648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086653197 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096719062 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084368994 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149153503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102787495 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082850245 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090732321 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111065893 seconds)
  done (took 28.621599521 seconds)
done (took 54.551011003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.399984487 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083138315 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082446414 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10109654 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082610276 seconds)
  done (took 1.51900934 seconds)
done (took 2.262919365 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.321948706 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199871439 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087385294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190289525 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088094011 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195687648 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184414439 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102019057 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209121793 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086602424 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188079246 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087885247 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107100816 seconds)
  done (took 2.818248888 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104844434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107014009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104060319 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121690901 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087206246 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103452129 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120171022 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111499688 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103336883 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115807601 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089484003 seconds)
  done (took 1.911516176 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102846544 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105641041 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093325534 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118032757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087499287 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100009081 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119098904 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10761949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100180078 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115474785 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087301082 seconds)
  done (took 1.884907719 seconds)
done (took 7.357018525 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.164440315 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.788101723 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.173969264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.219355543 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342752605 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.24781765 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.601796996 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155061569 seconds)
  done (took 15.585076434 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.165863196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112453885 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093677628 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097927629 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092446712 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110820244 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09768921 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091996161 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116467288 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098632717 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096647885 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.10866444 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09709012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097494088 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109101268 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096758874 seconds)
  done (took 2.490534785 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145400264 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142638673 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099929596 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100868098 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114957692 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100015579 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103383274 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118077589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095952008 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096282247 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12124864 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099283217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099317387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.11155754 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100246005 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118750434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111997398 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101242694 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118227835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117260305 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101087243 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098193757 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.116871937 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100455742 seconds)
  done (took 3.463222417 seconds)
done (took 22.287454651 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148457327 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103663986 seconds)
  done (took 0.999709556 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.141271729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157836402 seconds)
  done (took 1.053435149 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113054992 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09245347 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139556534 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105981186 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091522349 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108460476 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118947699 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108646234 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092386204 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092941629 seconds)
  done (took 1.822010871 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095680523 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096622205 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124531591 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135830697 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.100621719 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.112069494 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097406752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.094607806 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115297097 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092751055 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098365237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.129168239 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097102842 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.129153365 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096402071 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098288211 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118788335 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096632382 seconds)
  done (took 2.687488172 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091567163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093361507 seconds)
  done (took 0.944844738 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095904735 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092426109 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09478735 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111466556 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092436949 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091847099 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107988297 seconds)
  done (took 1.446127871 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.573003245 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.230318221 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.58056795 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.116570115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.153719019 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.499017108 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154046761 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116549419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115067692 seconds)
  done (took 3.333644632 seconds)
done (took 13.042153247 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092778826 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220442062 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609556512 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115737154 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093614498 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147796428 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.302026791 seconds)
done (took 2.347277868 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344595177 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140547545 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0825964 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093054131 seconds)
  done (took 1.419166969 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084031309 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100406029 seconds)
  done (took 0.951549735 seconds)
done (took 3.137014096 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.124101271 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089827676 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108176088 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.091716564 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.091148316 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090701952 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.109065518 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09050204 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090014117 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.108571169 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090528698 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090339942 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09051242 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10648635 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090713502 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090518348 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107721337 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091263803 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092794365 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092045533 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109645655 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095161102 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092239994 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108516601 seconds)
  done (took 3.142618205 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112796336 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092806619 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111609157 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095862166 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095757275 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111739736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096943879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093252925 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112528841 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093023585 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095899063 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111486758 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092661321 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096837661 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110479402 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096454463 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095277852 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09225636 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109835124 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095724121 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094655325 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110561796 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096056059 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094150502 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113176009 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097002895 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093301063 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109374791 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096175377 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095851385 seconds)
  done (took 3.779584678 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099186613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087757016 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091417461 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116229383 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088386362 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091130213 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104436541 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091783089 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092142217 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090196713 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110110912 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091609603 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08986172 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110410932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092713522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093935794 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11625635 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.090846631 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090966822 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091352707 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110882586 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09222568 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091722808 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108666538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090622631 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088588525 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.092333963 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108590526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091460407 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08961132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112405586 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095913001 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09153551 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117159092 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094714696 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091642978 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095804101 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107286529 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092152214 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088373334 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105730218 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09230639 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090727579 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114851538 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092547775 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091903669 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09018934 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110955326 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092516506 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093429836 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104500204 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093766904 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093144766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092427392 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.11200151 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090039917 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090394016 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105918919 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092490868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092184766 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106368413 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088901255 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097696282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092045246 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124110013 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097610761 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091116365 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109741682 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093280331 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096019108 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110921132 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.102789321 seconds)
  done (took 7.80689218 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103946353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100419971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094259349 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109986844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093396411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091750799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113690003 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093116966 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091960782 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116099889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093535135 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092643052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109406728 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094208175 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092428537 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092714795 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11544312 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092627823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092013795 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109340412 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095854813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09577731 seconds)
  done (took 2.963091669 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239717947 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099174871 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140446201 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124817832 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110048542 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122715928 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097510448 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098396262 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113668663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103412306 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101370824 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114820646 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11064124 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11829813 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101982537 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102375238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113587911 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103142231 seconds)
  done (took 2.895824507 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10584432 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093353654 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132612797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094176449 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093762022 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094099797 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117785502 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112521406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111895964 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094986387 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100813624 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110681221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093970365 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09412794 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094015335 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110608217 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094705258 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093132687 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12156319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101013981 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09811406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118254182 seconds)
  done (took 3.063480489 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107487887 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094348086 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12853606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097784964 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093317847 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110552335 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099537459 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094256485 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.119461771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093839302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094221753 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094107171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125842616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095892199 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097953284 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112661302 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094918102 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093228841 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111916047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094099345 seconds)
  done (took 2.836138298 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17070842 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126737304 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110978964 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11775762 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128568067 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111907892 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117501893 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.129430138 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110658403 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137816936 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110732053 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108944396 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135070559 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114589177 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126605047 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119169651 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116502365 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137038097 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111287612 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108895998 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122535685 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109255844 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134683126 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110923422 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108385047 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127841747 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109883175 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132426007 seconds)
  done (took 4.208490629 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092821349 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092839114 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091552549 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109673952 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093446374 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092686113 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091465502 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110708385 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093776526 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093258774 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111632787 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093024403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093366055 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091307323 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11104636 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.093257449 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09340954 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109139908 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09312093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092084989 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092365817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111317686 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094279241 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091123024 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109548467 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09356871 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092575344 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091978742 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111415937 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093028712 seconds)
  done (took 3.707715138 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104946272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103046048 seconds)
  done (took 0.996360296 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100987109 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107081756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091714425 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111163189 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100205961 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093045555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119423617 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099411557 seconds)
  done (took 1.611697675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.14210138 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162911144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098759157 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104117023 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164331614 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.134845335 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150286501 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096838035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109664815 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087952766 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.137691048 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.105128438 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092645157 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090580404 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112151194 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101236228 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.093106716 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.122003809 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099955045 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.09490065 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116010762 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101058394 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095449156 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123272047 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088526736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096478158 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1147574 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105147018 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090583624 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.114361403 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.09389907 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094563944 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.115580152 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099729963 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.094667173 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.164687226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100410046 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108706724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.095362363 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099318815 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14485645 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096526722 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095111662 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091428432 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116462197 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098230449 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098502683 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113694151 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088549746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.088673351 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.112214447 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090657372 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094586153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112193647 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095441335 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099834195 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114329129 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.091707527 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089254005 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107744014 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092986929 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090493225 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113990667 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097493402 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095310323 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111953474 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094322453 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094018888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.11388244 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096137898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092931089 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126447952 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.096385426 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098984126 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11738949 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09581448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092677909 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098628351 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112168459 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094645608 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097886075 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141294254 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09654402 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089150291 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10819339 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101877863 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095364312 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115278999 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088753665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101070361 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115188713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095765513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089032913 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110940942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090439453 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097666985 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104894468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095541941 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093022349 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097344857 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118092547 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093927075 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095761481 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118225921 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100920682 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091756634 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157292603 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092044024 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109514962 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09755755 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099149259 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106554951 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095621957 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093031612 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090137544 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110027006 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100257239 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094056227 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.113941061 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.1002755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095539602 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114631762 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097676354 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094141883 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108908322 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099525419 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103625044 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114085291 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098000242 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095256686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.11292128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.095010537 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098797933 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109699785 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102104695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091154789 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093545957 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114616809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101069349 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093968441 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108604529 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093931885 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094084745 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112617169 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097499045 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094380048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108933399 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087095207 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09513811 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.108083415 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095859569 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102522639 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108503628 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100970289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090479008 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122330814 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093567466 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099533382 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097291432 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119408706 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099424576 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085780137 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11148835 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098031667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096934256 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109560702 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096290772 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09435016 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.119076144 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089284186 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098259039 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105309358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093523032 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100524655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095909767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.116798672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091028181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13217584 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125231967 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100542294 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093122718 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112699403 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099031961 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09274852 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117269539 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101067656 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098740382 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109692477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.095071866 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100194171 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109402145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098449091 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0931656 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114265941 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.088026605 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096118163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105205912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102001277 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096464988 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098663045 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119478645 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097889001 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093439991 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122083294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092510429 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098507544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.105381161 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101096572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104477533 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120775262 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100779279 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095276074 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111719275 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098018883 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103565095 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115753939 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095966078 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096140407 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086854663 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.108085723 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102192213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096939514 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109568393 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096183739 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096055953 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115743116 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093484823 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088177342 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118934779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099394232 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090670192 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.122749425 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092022899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093117994 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121900097 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088940505 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091149212 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.114130704 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099546721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094931401 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.113665366 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098197094 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101431813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097762808 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116433766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093307706 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10182687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112742608 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095530509 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091664152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.116020355 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08998894 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097206105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113013319 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094054658 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091638118 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115510126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100988801 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100686033 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093168147 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117921565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101139963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100385749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111608451 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100773206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.099456949 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107375818 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091844114 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087977614 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.115171961 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09266649 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099296132 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110713339 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094821621 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099343635 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115510846 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09417282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100736747 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.125634616 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091187318 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089770539 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110278541 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09608977 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091766486 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110871173 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098293887 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096048036 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10011344 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116160402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092537845 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094920263 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120675028 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092611885 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102639763 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119133171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101140383 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091189057 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.11815066 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093757132 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098786976 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.108117656 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096026046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094715421 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11292788 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094622104 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093844113 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109126259 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090933011 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091555011 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100519127 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113737241 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100378452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093463772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112977618 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093939654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090972203 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121276668 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095365746 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101708664 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116152786 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090122941 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08867329 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11914514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097425301 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100868409 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091680253 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119566386 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102572642 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098411935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116145736 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105066641 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103477206 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120506455 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101851006 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088076114 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111531848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099906179 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096970244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116096241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099408194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090283597 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115833579 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103354569 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096749302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111982955 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.09068939 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09728731 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101653737 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118678837 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10001933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097715663 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114830089 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09161357 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099704958 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119769634 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096870276 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102172591 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113594075 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101520436 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092888843 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101404085 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117014065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090201988 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088242846 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11227609 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102895525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089722097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.119216765 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101864642 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092694887 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.112609779 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101663953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092886595 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117360111 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103320069 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094501933 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1043842 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116699078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094316895 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100638807 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119760492 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090423894 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093879981 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113509399 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105277558 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094309842 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119503851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096332349 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101126602 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117487994 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102618189 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100828288 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101604158 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109679271 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103552995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097926621 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11889563 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093733959 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094421658 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109507057 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096691545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103278968 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111447129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105052582 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102250219 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112470776 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094545841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101466433 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114027133 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103237941 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092168218 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115475449 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.091214754 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098247264 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094709011 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122714903 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093871671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089849966 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121603815 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101876091 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100136577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117922608 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103169756 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089270619 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107543706 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099697809 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092917936 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123942914 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100294633 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.09462805 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113366274 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101017852 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098750005 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103228511 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110831559 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094854537 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.100564115 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118216574 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095925397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091222383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118752366 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095691104 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097823858 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.114030283 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091332805 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09543882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121906652 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096271522 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093115946 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112445838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105067286 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095846244 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09287095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111289961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101978462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116255561 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104463681 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094107983 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09686102 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.113042371 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100057688 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102447842 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114548641 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096983114 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094155742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121695765 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102984676 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08954075 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112152138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106360557 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101498981 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117745898 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101053637 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094900589 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122128234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104236496 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100420376 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091178151 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.11189609 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095490406 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08936788 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119632723 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102436032 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094021129 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.112993983 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10168286 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099875318 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11892863 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100283902 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090981905 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12295639 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09491094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098479981 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090104573 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.110633433 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099228554 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10176889 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115434283 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097050237 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097606652 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119631311 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092581565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094490331 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118544512 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102517129 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101995559 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1143838 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096398185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10084727 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10687445 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.118096066 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.097272584 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104068113 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123263565 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098245053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0956762 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12040547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103270868 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10010229 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.12361618 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.096604386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097113203 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123197447 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105478738 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105241415 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115831142 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091843833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100544663 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114726636 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.093053473 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099915151 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123254948 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105161426 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096903408 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113527765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107338026 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101600343 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115046316 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096138331 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094555373 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101750609 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115914796 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101062283 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092863737 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123981854 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104269676 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10295633 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.1251711 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091762311 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101873555 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11870939 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105324771 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099233093 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.11032912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093433762 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10012319 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103481847 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124100723 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101642282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099345928 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120808023 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.099268742 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096220217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113477066 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104459439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101879874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11764285 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100420966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095509879 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116253098 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099771499 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102917666 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104028914 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118198676 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107923451 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103575315 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.11559062 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094641101 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098061238 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.121226487 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.099266898 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101326256 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114820786 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092249778 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103308703 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123786816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097692611 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104793302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12281876 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097674266 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099936116 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105522454 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.124362389 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098683576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096992361 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120714365 seconds)
  done (took 62.57210824 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148372111 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10567011 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119403357 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099515995 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116466434 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122397972 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099914743 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100229026 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120870185 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109509786 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100011204 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118888256 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115867694 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139026559 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117152039 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109775089 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119052981 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10155101 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100567137 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121139755 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116539625 seconds)
  done (took 3.239480439 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.118257523 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113319041 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131500879 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113358198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107252801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131090691 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110443505 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130602858 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115089857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107133339 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133463144 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110777937 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127657251 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109087111 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107384826 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127208187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113934102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107615031 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131818259 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111653845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128392397 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111633354 seconds)
  done (took 3.440363642 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129524308 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103446478 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097084679 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119776814 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104104966 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099509624 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124121426 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101018204 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108984933 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115447034 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091249252 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095703295 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097901924 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119886523 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094548299 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099108908 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129279459 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103986479 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103737975 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119164371 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091716088 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100119992 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.119603478 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092337881 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104380545 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104066822 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121755401 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103471642 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09041317 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12278599 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101682026 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093828088 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090273132 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111834303 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092010388 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102716692 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123062009 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101111203 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100081087 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.110733098 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102100222 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10387614 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090612568 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.359263561 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101753892 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094422905 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121951974 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100142412 seconds)
  done (took 6.153082285 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128305637 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163969206 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104866452 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137327293 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135676346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109428638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.125090108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137757096 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101510155 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125351977 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114806269 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112315143 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12772885 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10688836 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.12614371 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10462641 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105358485 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121858604 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110609218 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102525777 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126367992 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106898849 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112787786 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133044414 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10647065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102919626 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123250992 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107746059 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110765107 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129366457 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107265712 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.131093067 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115459517 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105281218 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.12145887 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104671887 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115934245 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124804415 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105458228 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102120038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12473012 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107510889 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104867233 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134343359 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104307331 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103998573 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124684784 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102401014 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11096878 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125090618 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109700205 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134018122 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106834403 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105160309 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127454663 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115330318 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104270904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.12410443 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106453531 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111494061 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122474193 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106666702 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11412405 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.12441439 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109666797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.132748775 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107993444 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106976706 seconds)
  done (took 8.86592088 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.13447248 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107248025 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136417217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115670651 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107104124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128930997 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107016743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107306376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129571771 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113218327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127696395 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200240122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125722313 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114041816 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108359912 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129065588 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108399945 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10788451 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.129328504 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107590574 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107468413 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135789958 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107191301 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134918613 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119695256 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104384801 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12893192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107959337 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135626276 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109264074 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117693651 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128148052 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108171581 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115538446 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138990277 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108185782 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12223503 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1095761 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108171696 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126514283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106575532 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115701168 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12803416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106421083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108645323 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129017511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116515224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13886417 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114943158 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113194033 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.129119674 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117193742 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10804811 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128548099 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116175521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144614577 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117755716 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134757633 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109881913 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11578599 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13665962 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122563574 seconds)
  done (took 8.330685601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103158628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101207396 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100698098 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121790928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101954537 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103165748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099335107 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122334388 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101163192 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101093084 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122015237 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101230496 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100999223 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101262997 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121765736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100491325 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10022467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121730608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101835328 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10049998 seconds)
  done (took 2.983441608 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110386905 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117383496 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123205299 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110164043 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103080795 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128267346 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104178426 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103481731 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102246315 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125612459 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112426841 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129883503 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105328628 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107845209 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131728872 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110500971 seconds)
  done (took 2.681581019 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12226091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119669698 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187133889 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106134865 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12478806 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112345518 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103824189 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.104328547 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.125655414 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108945007 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106404684 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127187964 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103666051 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104292958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124620267 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106882863 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102477046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127609141 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105388098 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187037192 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108384879 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106769974 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12414817 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109042749 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104547428 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128622558 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.11065449 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103735561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105228552 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.127334635 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106810923 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.109708371 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12442454 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107368381 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104998881 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125961351 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104301381 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104416048 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126337995 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106908421 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105701287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125377178 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105839649 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105822094 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123222806 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105725906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103276691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109389321 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126736436 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105808154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104195483 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130039651 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108598511 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110459259 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130609135 seconds)
  done (took 7.21994713 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115442956 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104996906 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133968094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103983557 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103718505 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105503014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126859962 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105828189 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10469207 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123781939 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105977762 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105620377 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126886836 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106846591 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105256415 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125572556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10341393 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105457338 seconds)
  done (took 2.873120378 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108525933 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104266183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107171962 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126293992 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103811703 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103848918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123845436 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104509099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102036023 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123614576 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105207873 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103237688 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102575538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125080793 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104539712 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102739268 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125024408 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103490082 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103900385 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122723031 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105487225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103203252 seconds)
  done (took 3.278636225 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115051376 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184865773 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110106448 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.191961165 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101729215 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.100073191 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131444837 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101897259 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116320581 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.122924127 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100619842 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099712989 seconds)
  done (took 2.343320157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132654217 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141458368 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126791582 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106253215 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113750283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130985376 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109892566 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108810537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138601839 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119284298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129228673 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116886028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116849899 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137606734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115185533 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133792024 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109897066 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108489627 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126528646 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125287684 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108636031 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138905596 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108230979 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129088683 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110043269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115651111 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137696628 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121980053 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108855866 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138300104 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113967928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131517411 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117407729 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120005879 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127264715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116758357 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129222889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124471271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112974157 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137566917 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105816452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135918582 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118299382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115160941 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138282911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109628418 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114329955 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129997102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109686722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149444607 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115298308 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117808142 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135339517 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116470026 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13715056 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130472561 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140003754 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117936134 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113540843 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143397919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116638989 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134184204 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117266821 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139857168 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115203199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116459138 seconds)
  done (took 8.998946287 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144576704 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105558439 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130601942 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120462081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137614838 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11053939 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110573485 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130548657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111146595 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105998501 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172872652 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109861244 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137746591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119243305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109575759 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132202681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11047157 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117136177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127762413 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130328438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130717354 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119443266 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116644738 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139019508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120450935 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134607314 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110638021 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110402561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130895534 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110646212 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114928066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131269991 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118154449 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12640561 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118284046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109833836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130430134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115643192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109465094 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134145563 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117470791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145670575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110260265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110082846 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142735643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109519728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110610627 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129029349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110642519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104647905 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144885305 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121722411 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142136067 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117978718 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131519774 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111971181 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110449964 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130418618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111614597 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114383887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139795058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110957488 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150961152 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112277147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10990239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139954983 seconds)
  done (took 8.972668348 seconds)
done (took 169.732009518 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148341405 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.187041005 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147183514 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179441643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097304306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.131071673 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127335506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.170784477 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095327991 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117382757 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096585682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098104327 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184068586 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09646216 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096345594 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098016273 seconds)
  done (took 2.937270567 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.184527257 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.308757587 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110297845 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121030212 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103345677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10059501 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120139196 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103426688 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100804593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128511327 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102397077 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096833946 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129069525 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098038911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100709719 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.12132426 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108740027 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101829925 seconds)
  done (took 3.121648682 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123527639 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144092271 seconds)
  done (took 1.150650351 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131748303 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.215182379 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284500816 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173720525 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122203003 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14158117 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150927116 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135477375 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19144533 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135343476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114213604 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098629317 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148112595 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.106385139 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138396686 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100546836 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129223938 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137538058 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116070755 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101777765 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146089805 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105310453 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105335708 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137243247 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179285092 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135821419 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10513288 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103354452 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124797896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116021457 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127687642 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119204023 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112068431 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179213457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124598999 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.156846576 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12862511 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102772251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114437652 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122349859 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106129778 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103765423 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136165349 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100202452 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104156278 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12979872 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104453285 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10416196 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131549434 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108870264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130113452 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109302739 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175479131 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108385434 seconds)
  done (took 7.953084164 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.872528583 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141695973 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100811146 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.023666021 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145562449 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11468725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.8692017 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146746013 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252750102 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.889727096 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116918089 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131572526 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240730245 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257873193 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.293650808 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360738961 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.730464544 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114054273 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128989652 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1617432 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107979371 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145712632 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121862247 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.51586079 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100718246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121239341 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110224112 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109223202 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17732751 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101201208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12713015 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172105603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293436839 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209431141 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122847357 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101238821 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100569345 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185415647 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270511407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220122279 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194083898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098734614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100471632 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131128614 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121123956 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097936325 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.17689043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191552262 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189977331 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105984493 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108962371 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134429765 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107113018 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176232247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097942778 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3577931 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381006023 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102619999 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110033637 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135791223 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270633165 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102105651 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236114819 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150131608 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217802101 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101187273 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82642715 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184937182 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102668345 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105752468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1321611 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106357771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13029546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168725285 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.498500113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111517284 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126974178 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102607782 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23565258 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101700057 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10004267 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181416545 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101245994 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134462812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113318468 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133797422 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.164609003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270049795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131605284 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111889905 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105313337 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135909095 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103116989 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232442609 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22889905 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174258299 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20558935 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131279493 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177076305 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163226892 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128191124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165642966 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131797075 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113535765 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129114268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226287212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134272228 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12372435 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108481421 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110887934 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158645748 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105750209 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131025174 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165375067 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554169665 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185253692 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098100985 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127455182 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111765367 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180277896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109162372 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26428846 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111068122 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184158001 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130033158 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101229579 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10949505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178758879 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109139823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132258289 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110313227 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110250577 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280332588 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22097914 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132781195 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254798297 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178952023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12850445 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169192675 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132973016 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.186344228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112550387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107452747 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125498578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819276526 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116046884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108347887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12994414 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18253349 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123821376 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104901858 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101517564 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120381229 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81169296 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106105687 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099584948 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124723459 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10912147 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109736946 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133289669 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108240019 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177725135 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244664726 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110427585 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131244123 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102511732 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178848191 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103042186 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102069372 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124750261 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10368756 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110450154 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129567251 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10422341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190518139 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1748453 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230947386 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.655503831 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103564896 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101979435 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261842976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102852574 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326173237 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109921034 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256761234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161528619 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121625695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363669346 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181610995 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184509492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105170748 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189242101 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098969708 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132469085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176017551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10389728 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109256728 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175540966 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112942418 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134537985 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.290182623 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102263999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248736838 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100210256 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.188711072 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102533273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129752088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327988207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101840727 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138951918 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155509522 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129527657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103178746 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.629923003 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102265786 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137785263 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108260217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234217112 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183850763 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111250106 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13469679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111745557 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179379149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228041062 seconds)
  done (took 47.784754044 seconds)
done (took 63.821954108 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270303146 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178432411 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.284081031 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179216525 seconds)
  done (took 1.885001077 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.244587827 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161521984 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.205452022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122821993 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.210896239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122747908 seconds)
  done (took 1.97351231 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179285699 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.170137732 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149808927 seconds)
  done (took 1.403537441 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203780249 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218133908 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.333654753 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236128165 seconds)
  done (took 1.982817469 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.266959369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119929207 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126388789 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.20902623 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.225225468 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20907034 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128869588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177762912 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132448801 seconds)
  done (took 2.547549211 seconds)
done (took 10.69417303 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.148840586 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.198339845 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.294086683 seconds)
    (4/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.260209883 seconds)
    (5/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.289029063 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21812385 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133493648 seconds)
    (8/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.173045994 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.195049653 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.136972851 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111498164 seconds)
    (12/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.243177502 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.351539444 seconds)
    (14/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.259608113 seconds)
    (15/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.280787258 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.316652129 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144644039 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.164892748 seconds)
    (19/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.147992417 seconds)
    (20/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.097258404 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.154945334 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.349684671 seconds)
    (23/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177006771 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.35974674 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.287965292 seconds)
    (26/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.142573814 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077516038 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.135027694 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112027626 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.305641664 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.122101486 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.335915848 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132194617 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.375644664 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.109139265 seconds)
    (36/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078919203 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112538436 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110972633 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.172893227 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.115060939 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.08770818 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.159756729 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104763365 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.197801589 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141880567 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.189136425 seconds)
    (47/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076584371 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.109540087 seconds)
    (49/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171496108 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118720955 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.108668337 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.249725522 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086978341 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.195932729 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07899213 seconds)
    (56/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.129975909 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128534706 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08717546 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113595756 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085191575 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.148610639 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085440423 seconds)
    (63/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.170692589 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101128934 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105539271 seconds)
    (66/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.140694698 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093044049 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.155105188 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.181280732 seconds)
    (70/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.164563918 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.133234986 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085176069 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10233132 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.204921969 seconds)
    (75/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118898397 seconds)
    (76/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084436307 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.144366994 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163872541 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10394926 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.143569505 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085894952 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.133090276 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127889515 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123348569 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10355291 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.186238878 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109742979 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103098745 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149892974 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112953376 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135435329 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158843706 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14415809 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.234019835 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081618387 seconds)
    (96/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081604943 seconds)
    (97/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.083316319 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.126721237 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101832831 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111304967 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140013178 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180650737 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081881002 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086729057 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080114031 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15348579 seconds)
    (107/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079109153 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169711927 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084114381 seconds)
    (110/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102805417 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.086130163 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085789671 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104447499 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155696478 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087162299 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08999984 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109221456 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125786316 seconds)
    (119/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.13708757 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078091548 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084508578 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.128573575 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.102998794 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110098038 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.104693354 seconds)
    (126/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081237055 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082281097 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108152034 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.125667508 seconds)
    (130/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113326711 seconds)
    (131/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138420306 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100985968 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.187489391 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.103750527 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130367337 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079830462 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086510105 seconds)
    (138/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.213183298 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.106749015 seconds)
    (140/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113682652 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148100042 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125783173 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112181259 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08587474 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137495147 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.105949913 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082538371 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085527675 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108504287 seconds)
    (150/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.083078256 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085759245 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085139923 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084941018 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.102673789 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083584218 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105387833 seconds)
    (157/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110330824 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.105089307 seconds)
    (159/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.138661865 seconds)
    (160/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085520312 seconds)
    (161/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129390573 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.127608433 seconds)
    (163/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.130554934 seconds)
    (164/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084891173 seconds)
    (165/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08570247 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.136950758 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113217746 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126332258 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127148867 seconds)
    (170/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.08659177 seconds)
    (171/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08255002 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082986924 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129430427 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114827983 seconds)
    (175/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085475727 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112114776 seconds)
    (177/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104299276 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08266693 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11210394 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079261095 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148753992 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106093538 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080555221 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078756896 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.128829227 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116656962 seconds)
    (187/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114046891 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078704816 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.135787711 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103884283 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080006573 seconds)
    (192/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078802871 seconds)
  done (took 26.81251692 seconds)
done (took 27.725072054 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.205926771 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105480866 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.136662589 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113192563 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202653194 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120307237 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129165727 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.139252697 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12388522 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.112151164 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.127332515 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126065213 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.11248975 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20392377 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115628986 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129597928 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104855139 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124452996 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151114906 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.130572317 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202823687 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10675374 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122621575 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128476642 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180153728 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105143241 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.137566515 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.113466296 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124875507 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138685189 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114035732 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104511114 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.155237699 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129684408 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103101004 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.138340142 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104903714 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087409556 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136702719 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116011478 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127599012 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137575529 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117460929 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104532518 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13827815 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.114215117 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104361844 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115352966 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.128749632 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114540587 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106143625 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154183879 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113387571 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102598911 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.127217771 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10516195 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.123036942 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127791421 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129353012 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104237243 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127653926 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105850093 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114746072 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126871599 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113128128 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104597461 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112628703 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139163409 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113171616 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106209701 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127811148 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113368088 seconds)
done (took 10.011061619 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109275044 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147656638 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.203454207 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210363455 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13352798 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.12007981 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142899567 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127633913 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11641458 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148285859 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141765767 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159920195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.185146787 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144842793 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120863677 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.115260763 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.140666964 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113402428 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208531742 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129604988 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.128377023 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.14615655 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.131326594 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143743305 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109817846 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.131205509 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136196611 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117381631 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107588383 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.150481594 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129869624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107485612 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135101985 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128176491 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125027765 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1433714 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.121666474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115993963 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133266974 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11051422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.116679861 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.147509948 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108070597 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142974176 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118913436 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123664171 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139574443 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121752646 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.109880831 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115941516 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133507579 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134864897 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142798189 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125656217 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120390426 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143143387 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123171328 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122088506 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135517682 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122223122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.109110084 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131661278 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11152386 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.131112223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.135662471 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123411507 seconds)
  done (took 9.702646643 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.12752855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137167749 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141910508 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119328602 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113688625 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126186832 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102773463 seconds)
  done (took 1.825126893 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104846113 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186751545 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21011427 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209642345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.184585674 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.22238643 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12685167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129030159 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139984366 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137677406 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.189340541 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240208122 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11428688 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144161502 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.189586959 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127219865 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.192499883 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127599389 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120077079 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211527221 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122630164 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136560827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.141595731 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106593884 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.206162046 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107802514 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259118647 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123511555 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114258453 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142378857 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120247912 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.208302401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185542331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142277662 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114298475 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.212109634 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183283932 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143043318 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199654219 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.132710428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185134546 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.141804774 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120732961 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118813428 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144174035 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.173143047 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.146518553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121203557 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118107252 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217595506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115965946 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212334837 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.11778885 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117669661 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.143642393 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120928247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150856326 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121553935 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214980808 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122723028 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.20955939 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18671362 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208640333 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.187151215 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154232349 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186453578 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205465318 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118086305 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139189503 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121454375 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.213899667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118200452 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116195047 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200353204 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121593215 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213738608 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213063674 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11797511 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11680643 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.133173811 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.119263448 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105258876 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.204613086 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119333798 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.141035274 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125085389 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11840094 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.144190001 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110606846 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127605466 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.144153739 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117449806 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123840572 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143445029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122561916 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.218266622 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115528228 seconds)
  done (took 15.877969243 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106391919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107222443 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110330191 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130864425 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.108266115 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105854261 seconds)
  done (took 1.645321056 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.144481172 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119379404 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152747902 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121201045 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168498127 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216474002 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.224046318 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114523224 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.161816246 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133411318 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.216512252 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.195744698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218675859 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123516084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225253656 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.12171938 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225467269 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118502286 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153604991 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11759955 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118850953 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147490002 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119374277 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207900359 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120936161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120961823 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137830016 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128480867 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127158087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140114259 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1237329 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.138812003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136687068 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114467361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222825603 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111971936 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141028834 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123375755 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122614819 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14599661 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.19747534 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141377187 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127275599 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122568571 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.139420147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113060687 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122799663 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.137863877 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.19876841 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.149085999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124858316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120026521 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146668098 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123773003 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111940925 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140455813 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122777487 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.224714567 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12434401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136531954 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.121113031 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121768268 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.13936222 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125043169 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121806684 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.148311924 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.113336622 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120705577 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142334263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12274993 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122446573 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146631992 seconds)
  done (took 11.37121453 seconds)
done (took 41.37180937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.608034772 seconds)
  done (took 2.578735106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.896695252 seconds)
  done (took 1.868274369 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.635600367 seconds)
  done (took 18.637999832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.437572946 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467354853 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.18257081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149332979 seconds)
  done (took 3.206410096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.838293487 seconds)
  done (took 1.83242356 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331016338 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.242101076 seconds)
  done (took 1.54942149 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.700814542 seconds)
  done (took 1.688540416 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.493822213 seconds)
  done (took 2.471747086 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.292402579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246571883 seconds)
  done (took 1.530095239 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.614679187 seconds)
  done (took 1.603398055 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.345948131 seconds)
  done (took 20.339994719 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259803689 seconds)
  done (took 1.259648965 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28844243 seconds)
  done (took 1.284911546 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516427247 seconds)
  done (took 4.515861987 seconds)
done (took 65.347116119 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116517006 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.1193722 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118242564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142044515 seconds)
  done (took 1.480684042 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125402807 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11952387 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148646632 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119205874 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126048006 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.144391648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120164663 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122291986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118942288 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145483322 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120139227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118896142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147884961 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118659813 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116727479 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147101081 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123437176 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12056869 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145871426 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120284879 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120589023 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147226064 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124191434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122202773 seconds)
  done (took 4.08326817 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116078328 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11107151 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112246052 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133888154 seconds)
  done (took 1.474409067 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130122444 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132580755 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155376347 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129293734 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131961369 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155175448 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119008123 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115267184 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144489956 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128043473 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133961604 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158661387 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130793999 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.12112683 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155270461 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113988274 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119979261 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155446292 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126872567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.1522699 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121404383 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126264485 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149176348 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128488537 seconds)
  done (took 4.232569731 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194893517 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130358108 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174823962 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165471931 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178989912 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116579422 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146253504 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150467816 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126044028 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.146578242 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122937489 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166545788 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150257704 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121260081 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120182562 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149807031 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132199769 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.149875362 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.168407137 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125337733 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151741995 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132510661 seconds)
  done (took 4.225437428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122127613 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111727212 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130912948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111654968 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.124093355 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.139741767 seconds)
  done (took 1.74837364 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110038262 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104123084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104767944 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129015819 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109205217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104314612 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.128174708 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.108712611 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104477289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10372291 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128798746 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104693451 seconds)
  done (took 2.341859455 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334892186 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108935778 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136607683 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113057798 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115515871 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107546258 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147381556 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109340785 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267142875 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105560657 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133098611 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194170737 seconds)
  done (took 2.881032065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20595792 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146655469 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283664104 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363784353 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188509049 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187270457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287183272 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189194014 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203578817 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138343008 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21335036 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163569463 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180597583 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188837777 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166432545 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158598362 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192534445 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208152579 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169367867 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236675359 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158255151 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201096399 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189675857 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175752047 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139325001 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188199306 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120400219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153137487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170761453 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191904182 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177335572 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176528937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14159437 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218413077 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260062492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205793116 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271228553 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134089285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194528554 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191435745 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26009411 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167552875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221202197 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155021367 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129212401 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211423212 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180272624 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189037011 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.159408994 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146066041 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211887384 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179716078 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203310218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135503286 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32854107 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160695143 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143775617 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204749791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189490387 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229097501 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204288831 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12332886 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204484949 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217583458 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216686825 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16857659 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.165450396 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151663549 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166367855 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233014394 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210495884 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160733552 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237863829 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158973432 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172011418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196114146 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15899967 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234768164 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196997358 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124187828 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179241669 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136512058 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127453624 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21800142 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122793969 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244937089 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132014513 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.34052467 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210849192 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156832688 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188512938 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188502623 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164341111 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147334751 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.130153245 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144361051 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.189836044 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159976497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154513588 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156608671 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167037805 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128817299 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15277266 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150885477 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168929481 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160189614 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164342801 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196438833 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131600875 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204974878 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15004312 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190549928 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167711898 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221062201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131456063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159535285 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247067208 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171352262 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.163146435 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175216004 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223302618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149416148 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162490532 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164146355 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220663893 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169339295 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200770462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166830946 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136227104 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.166465769 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174577335 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188250226 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154732446 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153674426 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164760785 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220996044 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126600786 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166750642 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182188875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162055863 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124867007 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135876886 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163212938 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143983123 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.17716197 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139797974 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181506962 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16794271 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19294671 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159925082 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161706616 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175415226 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158665502 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169404721 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177475847 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120237351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202174936 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201548542 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158295667 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181460189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189482993 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211065173 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17351045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156449422 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183874881 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155039418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121845327 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189015171 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170652312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189925531 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1886443 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208362188 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192555827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.162405591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176896451 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195667133 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184482232 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184425825 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144328562 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198393021 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170665209 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149024403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124475046 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127705502 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164998481 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131786098 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135960301 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208391077 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193689782 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206598418 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168293375 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165297972 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19169935 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.15203061 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162636375 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201155158 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139281259 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217268472 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190028594 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207427092 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166825328 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165381181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120331939 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153780576 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134133651 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188615288 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138329334 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161244017 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144018058 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218324635 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173971878 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17757768 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21860552 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166922748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22966706 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121438611 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190225498 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169846713 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196207038 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.185974261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159251003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163011969 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21940904 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142258468 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222036504 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170016105 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207460538 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223091396 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.165118262 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158278082 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1490239 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18858789 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140023839 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190781164 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147386488 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129808315 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180107329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138922265 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171402174 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216146766 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146209413 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20733417 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15902945 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200758687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126165267 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17163047 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17600286 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174288851 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105074816 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197499951 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196760368 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17746901 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156346419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202794718 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129963171 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347318475 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215886001 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179053314 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165156603 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140097492 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198621586 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162682712 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191311341 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186122916 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169864281 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234782203 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170465722 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141782136 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160724902 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150012185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180902511 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13859076 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17877397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.164248353 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173716873 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215502632 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138441663 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196929886 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178188902 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171681077 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.151622811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13970212 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254378403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196020652 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173976139 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191721119 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165443562 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212332343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123831982 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154909734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134008901 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213503558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131447445 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204419302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.17851448 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213077033 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202408818 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162148167 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16887357 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12817584 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196296058 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152241854 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215642835 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13755174 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167075186 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190839385 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157776651 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132168839 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188851675 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289156151 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174917106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200102952 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107584606 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.309000032 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131960036 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132434826 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190841906 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172435358 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161856558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183494065 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20338113 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141153169 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1897171 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135832124 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207634354 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188015958 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195518208 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20508647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146962696 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191046553 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162121636 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20537364 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146729163 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177663718 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159816754 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224437013 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206121338 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133176145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168054416 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200266652 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197456433 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176569599 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167533392 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184973887 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154760944 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166763116 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166740272 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125510633 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160735093 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.20756473 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157448527 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177737124 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199907168 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130942997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153972783 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148305514 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190949161 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142563311 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130685045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216722606 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12963179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210634132 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238160263 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130795991 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193036064 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147541941 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130674212 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167145695 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144112146 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158880524 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173203736 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210224209 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13125048 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205350563 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1667946 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192626188 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158951859 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172403775 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.329410879 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.155377612 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191057281 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179866498 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198288105 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180252361 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174186299 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196934424 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151289966 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193927272 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147492329 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.247995639 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192484427 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166687203 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131299448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171699863 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138256423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162667522 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152666611 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195960254 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142949693 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136264749 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194950357 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144150632 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17590157 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141483854 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229255478 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181066884 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19045576 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214754823 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13902734 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205563625 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203731642 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129871129 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.193730947 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174360443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171886526 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153283242 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135733843 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.16633049 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242343461 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126673415 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16113354 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202530722 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168719908 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201217438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137263431 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209559453 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141269404 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205018441 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12824438 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.180809759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171078937 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163556816 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128833464 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199083554 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163066279 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192639296 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142240296 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177520115 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221306355 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12404141 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162835043 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316348085 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1635477 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224406167 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136496928 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163521947 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150103646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160835236 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194358055 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198092901 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132918298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130159015 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.17267889 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156272346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167294485 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170483112 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211576667 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1614415 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.709021622 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134697413 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282432707 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143103372 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199729755 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117222454 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128304663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168429578 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133975371 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170013444 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211740865 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217978448 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193021013 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148209826 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163297522 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127784585 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131473254 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19309723 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152528898 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196561142 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149205357 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.130190394 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142874244 seconds)
  done (took 87.375620794 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160517237 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151686522 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168215155 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221779792 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194675117 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289622106 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227985217 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246810178 seconds)
  done (took 2.756735497 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120868955 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158689189 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143354777 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142666153 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11021197 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.439446196 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.13202354 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.147614045 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161954068 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15049967 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135369042 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529016591 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.150749906 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.119216884 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.148006072 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.109131162 seconds)
  done (took 3.983839626 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.599339004 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542508489 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.927200902 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.292265511 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.261126373 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202519 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738873585 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.199011272 seconds)
  done (took 11.85501444 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153093498 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145666925 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.37172325 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.271165766 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.204777604 seconds)
  done (took 2.240929747 seconds)
done (took 131.666116818 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124145127 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124592922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124529732 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153971264 seconds)
  done (took 1.61047873 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174124292 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091695062 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093683311 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117031503 seconds)
  done (took 1.569720661 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.462593182 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.091613014 seconds)
  done (took 1.675189747 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152565603 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137329469 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165025806 seconds)
  done (took 1.561435062 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143185155 seconds)
  done (took 1.238911807 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127765973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129540175 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.229040199 seconds)
  done (took 1.588053908 seconds)
done (took 10.340360179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121034169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925232834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431901235 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135250574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711758051 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425844883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.421491476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17571084 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174290224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137447756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132835827 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690084689 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.433496842 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875391462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.389151038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899929301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695896218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112366952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146102417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112369808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404506333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137299989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112352452 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112583843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716674272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421236742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110317889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.9169112 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110768384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114372832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427916803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112162882 seconds)
  done (took 20.931605416 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113538906 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170890375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145702089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113219026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114719752 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138865039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125103411 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12417557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203146109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161677571 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112425844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116393852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138133975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137150785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110008917 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140683881 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114697875 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118510394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139407431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134399903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109971586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139270453 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114266804 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111051211 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.162721191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112366747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124022177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139332878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116053306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116135992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138121923 seconds)
  done (took 5.272524528 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160648316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178990727 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148004685 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149496767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188213183 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114242275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225638075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151582177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203366832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112072902 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132362476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137776499 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152943493 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11179494 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164605675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112209527 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114585624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141056437 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12038417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11280077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161844817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111000999 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11548285 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141124788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110923023 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159332732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112011648 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12404986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.1383253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117218426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11682513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137945336 seconds)
  done (took 5.582009103 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125950995 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.1264561 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133645834 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.16422934 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122042562 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125238795 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153926129 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121006274 seconds)
  done (took 2.176181014 seconds)
done (took 35.062212204 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137403928 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131392876 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133765902 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154110648 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18950024 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148157135 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130334766 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118390442 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.153159928 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132872162 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112375833 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.120288208 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160005986 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122237439 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.219995139 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128109745 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.224199247 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191803059 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14842827 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128143636 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121655206 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.225527293 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123985782 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120004022 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.220808473 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114752426 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214724828 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122353559 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123593262 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14186689 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.191595184 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154516346 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120691953 seconds)
  done (took 6.078233107 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207497741 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.12224726 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.150237023 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120079592 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121361564 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146903527 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.210401998 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147898145 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122000257 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119811077 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119758583 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.222175072 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.126934963 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144053042 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.124242732 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110460451 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240199591 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122076251 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.112740556 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120351162 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.119228313 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119975145 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251459659 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.1169 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119074942 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147095847 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123797695 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124816156 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.121020407 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.15336802 seconds)
  done (took 5.425065012 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126841178 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133620794 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165228163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.188383758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14924958 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16030589 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140335422 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135236003 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170105593 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115812818 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128700794 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178333197 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130806527 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125040661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142162445 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132401432 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136185513 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142975533 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124005583 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13200124 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163187639 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131262069 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137247272 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151046609 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113495523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121374211 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153391552 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125773517 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121783043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156747267 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.117594891 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11873379 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.144568828 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150549907 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115148177 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15659624 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14177315 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126615412 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156376283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.147372675 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116826012 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144554316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140300617 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167955239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144581244 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127600376 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125647019 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157493699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113693296 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132034786 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.18590359 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114970835 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.134537992 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141734698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113733702 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122696162 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143784874 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118341254 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129547709 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.143923684 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.140426576 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121491128 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153690752 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116580815 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12473535 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141497376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115392769 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118499546 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140221689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150897758 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152740745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115340091 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154014988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128131827 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125260218 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.156380808 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114698907 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125714438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153303081 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121385603 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127735708 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146092446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118273335 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131819438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163388827 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1289917 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126139057 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.156808149 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118748179 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115697893 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159289945 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116283608 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118329061 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156107449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116685301 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118187478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127327047 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.154179814 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111957052 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140810356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146478683 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114641835 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139546485 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.146186971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120340773 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123299092 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184362678 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115785126 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124846608 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156065892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115394942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122245042 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145502424 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115588328 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132371449 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157161647 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12528668 seconds)
  done (took 17.05714985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.316372448 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.274034078 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211347043 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.241537951 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129328534 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.237469053 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299360274 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.273727945 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.146423309 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.150020252 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.196133993 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.271770019 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116868621 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143081353 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305026456 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.355475961 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175547514 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148614094 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180700808 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129149338 seconds)
  done (took 5.43366208 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.136318332 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149711728 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166398502 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142155825 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125754953 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160407322 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115224973 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139573918 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155564189 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124698721 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117071093 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159296888 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127898668 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131347111 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159288446 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146437271 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121199128 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148701878 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138162482 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119594888 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.130044727 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140795865 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12420941 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166042749 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134417711 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125707723 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142772038 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121569389 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121591873 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152815925 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120807326 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132437522 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151446328 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104779358 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125042016 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.158690111 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124499951 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117521163 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118968638 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147641801 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129487953 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127660678 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151274925 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100034895 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133641805 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109790283 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157175922 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128041552 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106852857 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162496868 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128404955 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128548971 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149449467 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137704404 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122173554 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159645243 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126131402 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129755572 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147192636 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11461158 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113670524 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.118736339 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152403976 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.13008398 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12628724 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163693977 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131546441 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114761247 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147585372 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119132255 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118223612 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158618432 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135920301 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124794887 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151753458 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127499013 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122533891 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121883797 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125094108 seconds)
  done (took 11.743612042 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141252184 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124722009 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.16031784 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151810004 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128460084 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.148464097 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127810035 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135133236 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12907388 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162128234 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130278841 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128473449 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165700575 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125605681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12446714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159116331 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129015505 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.181398496 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.133738116 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14218786 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.158166451 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120742759 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128414594 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.154814252 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145138681 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126570677 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170652551 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130137835 seconds)
  done (took 5.107574222 seconds)
done (took 51.956658171 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.264581515 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448433876 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.231437332 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.231630729 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.246537681 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.245536306 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.249358163 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.228220663 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.610166954 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.202557611 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.232326302 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.229283529 seconds)
done (took 28.552625001 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.282497543 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.735521919 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514911721 seconds)
  done (took 4.373169391 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.220042922 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.220060105 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46745525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.218890856 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.235086445 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.220504275 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.220601717 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.227765771 seconds)
  done (took 15.934026062 seconds)
done (took 25.934285193 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.272012702 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.414710167 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.472616863 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.225324847 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.2268367 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.222094421 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.238771542 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.24817951 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.23432467 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.226309199 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.616317217 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.4836901 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.220841799 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.591442257 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.229082084 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.247989793 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223682628 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.46445114 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.228066103 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.266280526 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.201456584 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.204282672 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.245907014 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.222951018 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.226879598 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.233111057 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.27762497 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.231688325 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.413560601 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.238676785 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250383242 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.223153175 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.283170234 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.227979276 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.224875603 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.224526563 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.413512604 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.23402273 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.208781118 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.245205228 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.412709895 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.242683494 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.225190287 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.226166875 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.226656084 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.280356038 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.207387082 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.35492038 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.244056389 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.228637879 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.277238646 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.588693596 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.242526684 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.229701902 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231658879 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.44690201 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.236140975 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.278248017 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.250561782 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.229546873 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.224429662 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.23125144 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.280203007 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.22958661 seconds)
  done (took 145.134555598 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.224113774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.229028566 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.229991524 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.291834566 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.230391635 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.231284085 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.22369815 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.225154276 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.231980666 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.255578212 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.22861037 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.22542399 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.229603234 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.21486112 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.234157955 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.24578716 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.228921291 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.22800253 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.250488584 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.22322833 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.231958851 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.229487247 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.230123641 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.227229103 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.270237042 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.30179544 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.25451148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.252900575 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.238611154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.223623623 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.261926451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233094319 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.813808717 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.081501827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.231225892 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.234700217 seconds)
  done (took 81.127280069 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222636148 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223921179 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224543764 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25470783 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224410345 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.771930102 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778846791 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.200656401 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.412394184 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.230419536 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.51989467 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459671225 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.228638886 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312743164 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.237817308 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.231059771 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.239609246 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.248556625 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.229816562 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.224956689 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767823201 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.240827566 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.459600007 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.392455481 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.237714498 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252023905 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.612557903 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223474296 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253415096 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.548423289 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26882482 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223679151 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.532424867 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.119250953 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332262006 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.226281902 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.251428855 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.223494582 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.499427526 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.223256179 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.222196484 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.22430186 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.226345785 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.828029576 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.228251824 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.759357012 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.230583538 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.130307782 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223924377 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.224231076 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.195211668 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.83937892 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.2291919 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.222197356 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.226660421 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.222295851 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2247657 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253573198 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.18645616 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319170007 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.225340312 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227748131 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.253886972 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.224835335 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.413919421 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.228998902 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.480616027 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.281183859 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.329731974 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754156213 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228577292 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315981259 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338799323 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.225998958 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.224021841 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.223567502 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.222833186 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.332681511 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.225555456 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225806881 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.876463227 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.391285916 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.241514297 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.473677652 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323066767 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.226232812 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503378453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.23024875 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.225233025 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924580349 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322036471 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.226363603 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.225331895 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225862321 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.876030364 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.759498496 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.442184043 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.231667394 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.80646943 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.23064629 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.225300352 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.045645936 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740415916 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.8239078 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.229211201 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333363001 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.391935666 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24122914 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.225726527 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.452485969 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.229814164 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.280324152 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.230452673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.623473813 seconds)
  done (took 374.533090647 seconds)
done (took 601.917162584 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.098718814 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.052962036 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.191101871 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.057813547 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.039830029 seconds)
  done (took 11.565128504 seconds)
done (took 12.690103958 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406783897 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407137708 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.281388332 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.409125081 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25565634 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.420117934 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392090567 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.241943804 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.33091865 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.301787109 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328848399 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274075027 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256885806 seconds)
  done (took 18.432956249 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498543459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.235757866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291656449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486813302 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.273646609 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521498622 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54915562 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.238812643 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402265708 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26628409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245821285 seconds)
  done (took 18.136412662 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538727398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.237140633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293092615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.487512975 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.271397207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516014421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.531995377 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.236958078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.396463468 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252082218 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245881883 seconds)
  done (took 18.132291435 seconds)
done (took 55.825794979 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.262722592 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.319991814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256996435 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.244914196 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.24535379 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.242229809 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.245104108 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.24281765 seconds)
  done (took 11.185274981 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.241960798 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.241252996 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.241909202 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242116038 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.241823629 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.241131393 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.241864403 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.240971228 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240601664 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.241013038 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240399675 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.24154593 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.242445622 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.24204725 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.241369137 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.243927486 seconds)
  done (took 20.992301955 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.245620391 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.24319328 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.243534663 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.242331232 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242291244 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.243208155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.243243615 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.242469226 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.24147287 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.242039205 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.243942569 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.241742034 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.241267285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.243313268 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24053723 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.242632502 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.24211011 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.24041788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.246427206 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.243002021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.24135563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.242730336 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.242727413 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.241813113 seconds)
  done (took 30.950885459 seconds)
done (took 64.253743131 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.225802472 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.227291426 seconds)
  done (took 5.578720698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.302703358 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.300770357 seconds)
  done (took 3.729030936 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.243326084 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240237533 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.244559907 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.242906445 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.242039174 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.24112759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244031177 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.242045414 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.242500242 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.244968862 seconds)
  done (took 13.555507338 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.24391223 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242113406 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241527067 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242673852 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243129898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.242178385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.243054502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.244637151 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.242227013 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.241824272 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.242797993 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.24374974 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.242763947 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.243401481 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.242846001 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.243376611 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242518411 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.243499078 seconds)
  done (took 23.499819262 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.256313139 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.261532722 seconds)
  done (took 3.642764899 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.370084904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.28661676 seconds)
    (3/7) benchmarking "month"...
    done (took 1.346968573 seconds)
    (4/7) benchmarking "year"...
    done (took 1.339506929 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.284395089 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.264958454 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.284465113 seconds)
  done (took 10.304206705 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.262215478 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.486545709 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.628979965 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.468773419 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.249717395 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.314717437 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.243801073 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.316478608 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.318324969 seconds)
  done (took 14.415723339 seconds)
done (took 75.851018447 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.235604676 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.293903534 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.245905436 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.258311194 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.538621584 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.259058052 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.234538825 seconds)
done (took 16.192629075 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.212434248 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.212853144 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.220158809 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.225643384 seconds)
  done (took 9.999733663 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217134323 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552951757 seconds)
  done (took 4.89680698 seconds)
done (took 16.023041488 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.24342646 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244907352 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.243015532 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.245649755 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.243041535 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.244950809 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.243495699 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.24306802 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.242635904 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.242629766 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.243893815 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.24338152 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.243929537 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244538096 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242464785 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243121919 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243489136 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.245429939 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243984237 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.244225037 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24342447 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244158802 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.2436742 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245256549 seconds)
  done (took 30.97969048 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.244853283 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.242859015 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.24322191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.243885217 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.243315625 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.243385787 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245171566 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.24312095 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.243906243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.244835339 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244593801 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.244123723 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.244859449 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.243233054 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245487085 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.243784637 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.242933814 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243303626 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243840817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.243638448 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242926147 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243617258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.245686623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244287294 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245154037 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243304921 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244352457 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.244149976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244599711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.243950029 seconds)
  done (took 38.449092392 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249817805 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250978688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.244078197 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.24517068 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243503885 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245077031 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.245585732 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.246103733 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.247472076 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.244568839 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246175198 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.245348614 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246966712 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.244576919 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24532422 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.246635503 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.245961604 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.245413643 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.245130802 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243284691 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.24656678 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.245541308 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.245973663 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.247067362 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244909938 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.246359233 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.246178537 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.246267235 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246209991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.247123169 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.247105308 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245941262 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.247330517 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.24658506 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245712377 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.248837206 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.2492979 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251160952 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245622044 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.246828378 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.246790883 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246472997 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.24621157 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.246561583 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244548344 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245764545 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247890506 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.247525603 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.246908319 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.247250008 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.248186969 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.246387222 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.247045094 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24590043 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.245988033 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.246200122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.246926905 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247554097 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247706885 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247474799 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247499813 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246107872 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.248413546 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.247822569 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.247123545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.248701258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245061982 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.249743823 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.249303742 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.247702841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.24882485 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247424876 seconds)
  done (took 90.893186787 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.249679872 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247858796 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.248597928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247739518 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248228505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248618242 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248596174 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250204965 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249638058 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.24896179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248472297 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.247919243 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24863934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248965774 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248304891 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24829171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.24959685 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249819219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.250252296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249304784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250287613 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248396676 seconds)
  done (took 28.607860147 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250834735 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25199448 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.248806089 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249525733 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250864359 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251088397 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248363216 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.25163375 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251068346 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24965716 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250254445 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250574745 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252547794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250144188 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25020056 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252037754 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250423082 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251897189 seconds)
  done (took 23.644904251 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.249687045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.250218985 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.250859177 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250006846 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.251119627 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252798748 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25079553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251669099 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249275618 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.251876493 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250854808 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25121413 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.252038008 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251100868 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252008529 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252425936 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.252994824 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252454541 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250869403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252720774 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250492739 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252777744 seconds)
  done (took 28.663877293 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252720155 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252660598 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.253085168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.250418086 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.251291983 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252288684 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25319166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.250969455 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.255222931 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252720206 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252481494 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.252342102 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.254439828 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252800483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.253918927 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.251812564 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252713996 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254332771 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252678508 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253502419 seconds)
  done (took 26.191148159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25268949 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254464126 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.254573717 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252429971 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254741676 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.254921167 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254577933 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254021184 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253361083 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253818767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.2542193 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255610703 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25443504 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254198409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255551828 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253968638 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256922507 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252835341 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255496668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254355107 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255574376 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252952575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255641055 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255467934 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253890995 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256475285 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255274387 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256004183 seconds)
  done (took 36.265379915 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25669524 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.253951086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.255219778 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.252914327 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256687242 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.254438965 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255290168 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.254460109 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253838 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255886323 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.256181205 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255016606 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254927651 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255513807 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256138203 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256470423 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257897782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256601499 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255812024 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256757428 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255613165 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256690311 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.255588001 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256130695 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25570627 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255928765 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255741049 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25647447 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255245171 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257020983 seconds)
  done (took 38.808713118 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.274764837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.276135059 seconds)
  done (took 3.68947525 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.256299478 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256666298 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256378399 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258453658 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.257637841 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257365742 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256601035 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256487876 seconds)
  done (took 11.194355393 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250159913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257450539 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257108083 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257461608 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.25816797 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.249696099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257673565 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26332569 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.250706212 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251081835 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.254248903 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.255713365 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255542297 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252699372 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253563486 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255313215 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.261084662 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.259369377 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.260060769 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.259106813 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259631572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254435073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.257050969 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.262508453 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251797341 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260551329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260877914 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263963143 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251951663 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.258279753 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.255350269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.262629745 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259876555 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260628053 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261041005 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.262184557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259899359 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258590538 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.262311398 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265918115 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260907052 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.258335411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.255652202 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.257753899 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258942262 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.267511218 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.26029332 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.261178539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253802767 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.255580986 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264589362 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252528236 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.262606749 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258039722 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258344117 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264311266 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266792129 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.254560658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258513892 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264165846 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.270203337 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268868219 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259696887 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.268266102 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263388688 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.269390024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266194685 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.269605177 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262388904 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.263754985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26359857 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272540178 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270549213 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.267360819 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261057576 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.26269049 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254918972 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266506012 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263670189 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265729348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.267165584 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264489734 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263467319 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268976673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.258774443 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.267107999 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.26402248 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262270906 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.255007941 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265577669 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.273535861 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263358993 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255504513 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258860562 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261067292 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.267641625 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.254868364 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259204253 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.265816746 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262673771 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262776716 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.257279661 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.263173141 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271374191 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265108232 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265596681 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.270297193 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258739738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268540537 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.2704393 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264891221 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.257533486 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.262010894 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.269343819 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258776861 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.265558298 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269891025 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262066485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.271982176 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.26386942 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264065436 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.277378438 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.272510596 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264623456 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261547279 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270275739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267291069 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262687502 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.271854104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.265070577 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.266090823 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.263183185 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.271312452 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258775508 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270103926 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260485387 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.27104969 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265418268 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265843137 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262552272 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267210809 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262137685 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.266544774 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.270899118 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.27275574 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264057662 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.272501336 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267033634 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265264221 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269103782 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.272025996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266741514 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261369744 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.270093262 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259562434 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.269664093 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.260555161 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.270174706 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267118782 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.269059226 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268672007 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.259243648 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263182413 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.270605905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26576945 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269010485 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.270705245 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.268772812 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.269227826 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260717244 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26976675 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.2600763 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265888529 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272906836 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26836812 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.268457629 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266371907 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274880422 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267408306 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269970847 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.262491811 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.268092568 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.273046577 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.27094789 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.277459046 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270022373 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26847024 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.261714512 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263918766 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.27235965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.261612237 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275098158 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275489522 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278199791 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.265099287 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27237423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.261896458 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.27395884 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267298671 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.276177591 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269842192 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268312949 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262919862 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273512915 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.265902741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.272885889 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26302983 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.271898925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270488094 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.271225428 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271015307 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26426851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266661138 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.274061204 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269747256 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269671772 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.262997291 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.274955145 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264812198 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265299653 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.274673036 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271212377 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.271933982 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.278083208 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.267445879 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273888912 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.272539572 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266920671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.273521462 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267043994 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.271273045 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275848315 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.273890034 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267109988 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277308667 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274513603 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.26574389 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.271847092 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.279968877 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.271629265 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.264704203 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27600639 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272222691 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.274534559 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.271998275 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26648404 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.276364763 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275040054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283256232 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266678888 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.277637979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268124203 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.27701835 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.271253611 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.274639534 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.271884391 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276572518 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280117646 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272542588 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266246921 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.276937925 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273226092 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271839575 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267659758 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278773698 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.275092348 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.274146392 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272818858 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272556272 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276099922 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.265880136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.275703842 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267307465 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281846187 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.290345869 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276332462 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.279110551 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.278237 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274466649 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276342658 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.269078496 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269473255 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273638173 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.271032833 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268384619 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.276771147 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267311657 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.279919028 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273263383 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273252621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.272055204 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270871176 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26478827 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.273378438 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.271217331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271467103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263437993 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.270802302 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257944182 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262919586 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263071833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.258373962 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268653907 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267754643 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.260161512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.257166872 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251182164 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248572443 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.251090918 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.25962574 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.249116371 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.2595401 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247838831 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.250469707 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245958305 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256009867 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.261340563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.245297533 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257576642 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251557859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24389383 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244819793 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249924279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249778261 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.258163845 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239900669 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.248843054 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245616798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.246879678 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244225395 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.242945773 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.242352631 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.242986906 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245622148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.24708802 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.238176194 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24485512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.250616409 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.237248902 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.237035743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.228381671 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239826503 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.247592484 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.233566368 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.235937865 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.233120732 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.236113345 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233694713 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.232997524 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233759026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233585017 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236721974 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.240372962 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2369251 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.232409546 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.237020482 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242340995 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236707164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.246409834 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227308356 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.238267185 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.231589569 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.225200589 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.225711237 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.227285436 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23396969 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.223524288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.234390513 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.23149242 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.224986506 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227559536 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.233838968 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.21940189 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228439159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241388504 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.220075889 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23094933 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.227537567 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.216659536 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.226391346 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.224315854 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.216084557 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.220305097 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.222048565 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228098406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.220478803 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.225289653 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.215813772 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.227144842 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.222157133 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.222307444 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.22246681 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.222480377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.215224699 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.224437281 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221884606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.23128108 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.218295931 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.222795078 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.21967473 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.229831469 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.236164167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.218306926 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228992251 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.22380215 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.216768607 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.220916732 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.227608003 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217704418 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227889804 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.215880962 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.218231987 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.217249332 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.223793888 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.224486982 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.225097051 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.216227727 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.216173247 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226013914 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.220151285 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219869297 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.215655119 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.226272222 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.213412183 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.214499578 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.221188134 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.216460958 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22291709 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.211563832 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.215052478 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216155097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.220762221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.217220817 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.217938597 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.209599939 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.214745899 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.222793693 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.220138399 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.215263717 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.211907022 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.21861508 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.209475774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21421387 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.213513196 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.212242959 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.212611523 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.220076126 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.210239698 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.210663962 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.211005241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.218729752 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.222749856 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.220588088 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.211141936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224015858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.225522235 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224232871 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.209361514 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.21257734 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.21188009 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.217503861 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.21738779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.212202876 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225386585 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.222744798 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221223697 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.216643058 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.218314272 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.209860995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220293294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.21823986 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.212741819 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.223242139 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.214011451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.225296886 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.218905674 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.218046322 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.210279017 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.212337182 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.214278931 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.212704449 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.220093672 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21726351 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.221320516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.216395165 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22437036 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221222332 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.220383099 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.22048132 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.210963174 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.220925827 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.211021326 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.220335216 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.22046336 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.213281125 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.220254411 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.220679676 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212835187 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.216656137 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.222048637 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.219551512 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.213260565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.21780512 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.225205963 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229657152 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.220509354 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.214261415 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.217422519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.222653407 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.219451922 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.220721279 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.214480003 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.228384863 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.233821639 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.214607871 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.21691442 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.222264245 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.231672623 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.219742935 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.220975526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.216565406 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.219069791 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.224521489 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.221711306 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.225948169 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227076606 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.217017722 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.223663649 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.216378884 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.220211865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.222833825 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.231492513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.221179307 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.218062977 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.232036403 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231794781 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.221817887 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238449499 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.230023959 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.221783763 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.227510716 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.213778787 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.225468424 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.217387878 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.227855651 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.223475259 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223542668 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.222287406 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.214550502 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.223254685 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.229027183 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.230800874 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.222194941 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.214781977 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.218172845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.223943161 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.222855269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.225343678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.223466258 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.223225765 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.224210046 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.217623194 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.233418956 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.236848847 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.228110193 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.224201565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.22295271 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.223301435 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.22722803 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22284641 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.229242402 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.224224809 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.224978278 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.221266909 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.233627661 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.226459351 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.218240884 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.220039004 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221184939 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.22809458 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.23060708 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244304523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.226305671 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.227830936 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22879925 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.225063351 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.218774773 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228409967 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226666116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.218428052 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.220514682 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.229000692 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.228019271 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.22488934 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.218168767 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.23053101 seconds)
  done (took 744.205942861 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.224597667 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226262305 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.225476566 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224859031 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224870287 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225778148 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226276005 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225443776 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.225909817 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226929139 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.228734916 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223245543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.223386199 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223239525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.223995983 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.223620831 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.222729042 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.221335216 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.223528224 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.219613407 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.218483703 seconds)
  done (took 26.821758869 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.218823347 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.219793409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220257091 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220833455 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220912956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21844616 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.218032049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219218832 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220084019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217814389 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.21926441 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21869953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.218500521 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.217311039 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2175489 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216568078 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.219154493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217496584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.219255496 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218863607 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220185659 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219066867 seconds)
  done (took 27.925064487 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.219781683 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.219839738 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.211648893 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.222506743 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.220028289 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.21843847 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.219062135 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.220187102 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.219304673 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.211226367 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.213190229 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.212066684 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.215043061 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.223263937 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.216529976 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.224134782 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.22072804 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.219844476 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.218365154 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.219736468 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.223196783 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.231687064 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.219578038 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.211368691 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.223158316 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.221010483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.220362355 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.219617312 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.212927516 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.222416454 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.222003763 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.214202374 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.222314404 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.222089777 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.214061021 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.22298848 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.221093867 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.221680559 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.222593776 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.219452614 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.234299276 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.222192941 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.226568114 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.232908806 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.221808348 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.215247279 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.224907493 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.222219092 seconds)
  done (took 59.681493995 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.221105029 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.222054236 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.223167392 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.221993789 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.220825916 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.22335466 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.222355664 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.223709317 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.222084142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.223244167 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.222277534 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.222675493 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.223137884 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.222852179 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.223368453 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.222566657 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.223459563 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.22388245 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.222370741 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.222288903 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.222192273 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.222559589 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.222835178 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.222761277 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.222611465 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.222350938 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.224455004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.223595588 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.224995718 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.224930942 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.223987662 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.224734914 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.224215211 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.224137484 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224711689 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.224265926 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.225088232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.224334403 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.223785791 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.224199414 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.224316032 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.22513327 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.225222857 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.224842789 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.224392153 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.225691013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.224569517 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.225906401 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.225552502 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.224799191 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.22508446 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.22569124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.225699535 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.226553869 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.22710225 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.224128563 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.22457846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.22365808 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.224252007 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.225249835 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.225041375 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.22507051 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.226184871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.224683602 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.226644401 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.226495577 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.226295112 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.226915189 seconds)
  done (took 84.350556395 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226372958 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.226725961 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228910368 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226735901 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226611722 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.228831794 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.227689476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.228163294 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.227871046 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226060017 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.227134946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.2269826 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.227892591 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.226174219 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.226202629 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226664783 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.227861634 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.228212451 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227816031 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.226472208 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.22703856 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.227605463 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.228764466 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227122936 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.228164836 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.226890112 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227716392 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.227525803 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.228952843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.227137333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.229274037 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.229138397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.227230052 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.228646105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.227933939 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.227989385 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228778709 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22754951 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.22960865 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23009805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.229778438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230712093 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.229064819 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.229641657 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229403375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.228820469 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.23048271 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.230788691 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.230007271 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.228100466 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.229346103 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.229043919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.22933413 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229111232 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.231660578 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.228839527 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229868819 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22972829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230218991 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.22995691 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231234628 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.230693816 seconds)
  done (took 77.278464747 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23203082 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229930129 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.230911088 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.230551131 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231329605 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229934507 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229980256 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.230483474 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230163218 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.229535507 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231033669 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230754228 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230920222 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231752925 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231635676 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232937062 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232023443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2320581 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232445336 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232042833 seconds)
  done (took 25.738924469 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.231155695 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.23039502 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.232106492 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.231636578 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.230675241 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.232072679 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.232744865 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231349837 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230891079 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231599803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231284013 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233527094 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23183218 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232419986 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.231882023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.232936683 seconds)
  done (took 20.826239665 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.232181276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.232208294 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.232175709 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.231379922 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.231892098 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.233329821 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.232651606 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.23308609 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.232038 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.233025433 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.231882934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.233270441 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.232477451 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.232990695 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.233447135 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.232658088 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.233898364 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.231872266 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.233437158 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.233731156 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.23423598 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.231827793 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.235102618 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.232731735 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.231574949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.234000535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.234004251 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.234054088 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.233091696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.233756589 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.233262972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.234326898 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.234044361 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.234334566 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.234287645 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.234404549 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.232892087 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.234242283 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.233428294 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.234662016 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.235182093 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.235267414 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.234538076 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.234704629 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.234694196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.235851999 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.234081691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.236120761 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.236146253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.23491578 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.236565385 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.236593966 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.234846283 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.235780433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.23590587 seconds)
  done (took 68.978662759 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235084109 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236735208 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236473882 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235117011 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.235333673 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.236252465 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.235505816 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.237337349 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235700745 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.235967948 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236464367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.23706879 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235522889 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237145909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237305712 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235791466 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236075715 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.23623496 seconds)
  done (took 23.372988745 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.23624967 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.235701987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.237450184 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.236636367 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.23533498 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.238550879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237990197 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.236931198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237634393 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236395674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236228665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.237084579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23736649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.23793973 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.237653362 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236880042 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.23831772 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238926959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236482702 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.237827344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.238442777 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237267168 seconds)
  done (took 28.341433388 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.22871724 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.227589383 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.228292472 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.242963482 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.2417731 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.229130862 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.229250794 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.22892371 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.247114888 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.263315456 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.258084076 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.241679798 seconds)
  done (took 15.988759838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.239301895 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239199464 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239347398 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.239985038 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23749425 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240401601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240084096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240236926 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240475574 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238926947 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.240132672 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.239107236 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.238506359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.238358922 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238581941 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240814716 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239587781 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.238463411 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239198818 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.239387786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.239164119 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240600386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239258991 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241403086 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.239505114 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239961821 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240725401 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.242284835 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.240430055 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240462566 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241542925 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240438947 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240508773 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.240894955 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.240439834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.238927157 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241070662 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.240576826 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241052914 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.239164414 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.241596305 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.241422159 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242276974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.240889539 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.240732705 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241028348 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241147934 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241476715 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.241303118 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242193431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243130599 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.24236884 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241659084 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241846025 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241963264 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.243689251 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.242486509 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.241465474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242435762 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241866342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241579826 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24296933 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242268649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24245248 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.241307506 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242412709 seconds)
  done (took 83.012419576 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.241869413 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.242980498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.242674004 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.241974616 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.242195881 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242975555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24332124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.241759606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243016332 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.241727062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.243860655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242630567 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.242665026 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.242577229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244678593 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.243507931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.243523866 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243973793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252578405 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.24301508 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243739489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243338234 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.244974876 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245082019 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24476909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244004945 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.244320088 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.24480753 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244502069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243869964 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.245633507 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244390864 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.243758178 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.244121883 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.24734625 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244122872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.243925537 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.244810727 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244144498 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.245299671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244915773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.243780176 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246219159 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.244532651 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.245097745 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.244513757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246122546 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24516617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.244199639 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246529579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245749719 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.246220596 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245927863 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246684476 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.244854043 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.246242436 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245480387 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.246296182 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2451676 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246993527 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247892673 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.246711619 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247428271 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245593905 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.246381417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.245825084 seconds)
  done (took 83.278662807 seconds)
done (took 1728.316375195 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403064435 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.355868123 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.236047774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.246246262 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.236606863 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.240137616 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.248418812 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.237644832 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.237165599 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.239029131 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.237728853 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.427993631 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.274353031 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.237842167 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.238151905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.333684401 seconds)
  done (took 25.560426707 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.260368109 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.254120818 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.356812135 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.252253172 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.276104202 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.429218213 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.310067358 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.253833507 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.406860878 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.270575422 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.254576724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.273350556 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.253665788 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.255804162 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.271714925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426061765 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.496538845 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.257610917 seconds)
  done (took 27.691196365 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.657959646 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.25553009 seconds)
  done (took 5.057710564 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.272679648 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.253498815 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.256191474 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.253996308 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.247068691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.247681851 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.254287264 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.247802039 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.251359308 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.369943282 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.256405083 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.267427995 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.254422299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.255027954 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.262516703 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.297421874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.39444522 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.263491092 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.262870911 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.262004365 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.255158983 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.345405318 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.294297448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.263666408 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.369425119 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.25768274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.263305486 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.263405889 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.372735175 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.264894811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.256111905 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.256762311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.257369483 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19385547 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.780885963 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.250026612 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.279449739 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.262597216 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.262920921 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.402956892 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.258301258 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.263542698 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.248833771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.776927218 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.361840329 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.368114767 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.24899717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.263122118 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.259328892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.318927634 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.257651124 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.258855329 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.31519039 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.025838606 seconds)
  done (took 80.955282078 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.296379088 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.250220981 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432517535 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.264492789 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250514074 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.249090338 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.250757833 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.511662746 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.253268218 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.252725269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.556161249 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841049842 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.250411281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.325959123 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.294602411 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.309119649 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.252243037 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251841205 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.251633055 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.25352718 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.80028496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.25237283 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.250146995 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.328635747 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.29176492 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.765475452 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.253313841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250980998 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.254210042 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.251584706 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819225714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.256969093 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.30949329 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.256040407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.529558815 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614915027 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575993489 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.256631942 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.270656339 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.257458527 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.277423246 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756156114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598809296 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.253555113 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.252398549 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755436701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.252619356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.268049905 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.253936925 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520719709 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.252313245 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.25337733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.252998364 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.253366973 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.252790538 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.308662374 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.298846831 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.768755936 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.254637806 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.254314344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.293761006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.253612888 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.25708543 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.25516348 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.259023441 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.605401858 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.476926928 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.261195804 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600219385 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809914039 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.264252964 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.894171873 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.254350929 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.260833294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.285845602 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.253217137 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.272906126 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.766276387 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.256712182 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.253444302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581438356 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.258857233 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.550992409 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.275645996 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.255540509 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813555906 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.262677272 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.305312572 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.254809328 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.25998077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.258909422 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.259577525 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.536884433 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.293918363 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.256958665 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.25590609 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.277152884 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.255780939 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.269731734 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.264624013 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893856226 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.259947549 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.270113701 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.256585963 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.256425653 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.261426749 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.25944869 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.258726221 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533942622 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.255628249 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.275376119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.256712171 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.257117741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.263708009 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333309825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.262931685 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.542634634 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.260728307 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.257406735 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.260934728 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.259857285 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.264537313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.257867165 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.273973721 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.214285913 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.559106258 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.272566727 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.271439804 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.25979824 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.263527302 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.258397021 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.260958497 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.320112601 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.262420745 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011748896 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.296918663 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.304511108 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.258947486 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.26545799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.264233747 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.269535774 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.257473673 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556066913 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.537362733 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.48022359 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.261043765 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.258386397 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.042597189 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.301772768 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442307598 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.27517723 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.259483217 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538959597 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.472867977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.261237301 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.260073293 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.259524644 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537260854 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.260147024 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.571974554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.845499397 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.259534694 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.262771138 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.009197275 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.063542652 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.265296457 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.261199855 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.549683695 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.279765849 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.26092713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.259127729 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.261677845 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.259642596 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.265707102 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.261042365 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.259945764 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.261339052 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.603469114 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455584554 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.276232359 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.270643125 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.773612095 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.290670702 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.260703565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.269771261 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.265580829 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.260603901 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.309362439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.266703363 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.294698748 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.26060117 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.26420153 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.797617966 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.260155249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.263126894 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455844893 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975887242 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.261967202 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.261974228 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.263480167 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.330980852 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805581393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.283213394 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.549804785 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.268967062 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.300961145 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.261262302 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.279461945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805733893 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.26412617 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.262308797 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989242531 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.263954694 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.693688316 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.262719038 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.268263771 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900883321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.263255312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.266244922 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.266033457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.265563381 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578894759 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.263858773 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.305244922 seconds)
  done (took 481.051002173 seconds)
done (took 621.445047596 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.261686458 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.268667704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.267133978 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.2677169 seconds)
  done (took 10.223481516 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.281426308 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.269917182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.280215667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.270408063 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.280335528 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.269444178 seconds)
  done (took 8.809180735 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.262487588 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.268136002 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.270280994 seconds)
  done (took 7.959586759 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464853457 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.282037501 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.602749606 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.270271194 seconds)
  done (took 8.778876255 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.280412931 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.282213263 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.281093593 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.281556077 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.283114729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.284288065 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.282903001 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.282222678 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.28318575 seconds)
  done (took 12.699777506 seconds)
done (took 49.628280622 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.305910365 seconds)
    (2/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.375844674 seconds)
    (3/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.466644693 seconds)
    (4/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.264740783 seconds)
    (5/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.384399559 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.251756698 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.339090171 seconds)
    (8/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.245721052 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.389327388 seconds)
    (10/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.264966363 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.307971851 seconds)
    (12/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.296341521 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.355930576 seconds)
    (14/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.466316253 seconds)
    (15/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.246224143 seconds)
    (16/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.246550683 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.377022478 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.246354619 seconds)
    (19/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.382647769 seconds)
    (20/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.341043217 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.350704208 seconds)
    (22/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.612064261 seconds)
    (23/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.565853686 seconds)
    (24/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.544585019 seconds)
    (25/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.427569155 seconds)
    (26/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.327640676 seconds)
    (27/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.298126094 seconds)
    (28/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.375094864 seconds)
    (29/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.352511451 seconds)
    (30/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.255286165 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.272050359 seconds)
    (32/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.75774807 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.35503773 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.246691747 seconds)
    (35/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.441498804 seconds)
    (36/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.298635665 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.342126341 seconds)
    (38/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.300942782 seconds)
    (39/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.473009437 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.371311826 seconds)
    (41/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.246611633 seconds)
    (42/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.252744202 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.302053679 seconds)
    (44/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.247776164 seconds)
    (45/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.323135584 seconds)
    (46/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.430354725 seconds)
    (47/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.247580228 seconds)
    (48/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.48180648 seconds)
    (49/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.369312932 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.420739244 seconds)
    (51/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.576368337 seconds)
    (52/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.609575736 seconds)
    (53/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.253084896 seconds)
    (54/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.416025534 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.249204229 seconds)
    (56/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.341544726 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.412956589 seconds)
    (58/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.249232111 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.354322061 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.250478289 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.514137636 seconds)
    (62/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.513834588 seconds)
    (63/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.480954534 seconds)
    (64/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.250396699 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.426436181 seconds)
    (66/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.474136724 seconds)
    (67/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.587258568 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.364011206 seconds)
    (69/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.442891924 seconds)
    (70/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.431502189 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.442149402 seconds)
    (72/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.249645584 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.414040001 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.362124601 seconds)
    (75/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.293122842 seconds)
    (76/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.61703156 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.417668826 seconds)
    (78/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.272179763 seconds)
    (79/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.284726457 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.407502495 seconds)
    (81/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.446851716 seconds)
    (82/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.41664942 seconds)
    (83/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.279701722 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.360949491 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.394245128 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.250767952 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.392033013 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.36374445 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.356795659 seconds)
    (90/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.308760356 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.438416179 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.506357741 seconds)
    (93/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.463651054 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.359609063 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.543106919 seconds)
    (96/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.361336974 seconds)
    (97/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.43425335 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.38791464 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.386947985 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.306103369 seconds)
    (101/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.249891158 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.253846888 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.464886345 seconds)
    (104/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.250731328 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.366283959 seconds)
    (106/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.348201361 seconds)
    (107/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.343471075 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.541558967 seconds)
    (109/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.609620728 seconds)
    (110/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.25538077 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.762716348 seconds)
    (112/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.283311885 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.271455243 seconds)
    (114/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.383760672 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.517941495 seconds)
    (116/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.252808294 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.307906181 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.351081426 seconds)
    (119/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.348860921 seconds)
    (120/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.262359255 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.259501992 seconds)
    (122/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.42627427 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.388391696 seconds)
    (124/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.311986252 seconds)
    (125/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.283900347 seconds)
    (126/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.371278274 seconds)
    (127/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.678071513 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349269136 seconds)
    (129/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.33621892 seconds)
    (130/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.311576616 seconds)
    (131/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.369008445 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.389707519 seconds)
    (133/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.523961049 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.385885782 seconds)
    (135/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.4562353 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.258326403 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.254016689 seconds)
    (138/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355753955 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.27437206 seconds)
    (140/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.309849344 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.406753187 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.36797082 seconds)
    (143/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.310384382 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.292288632 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.342631128 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.512845383 seconds)
    (147/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.553528188 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.493257707 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.42281602 seconds)
    (150/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.384266854 seconds)
    (151/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.389761488 seconds)
    (152/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.26239027 seconds)
    (153/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.620844961 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25510564 seconds)
    (155/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.455697537 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.275492946 seconds)
    (157/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.326857377 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.486178783 seconds)
    (159/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.304860738 seconds)
    (160/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.39191834 seconds)
    (161/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.347156338 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.336007894 seconds)
    (163/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.545750418 seconds)
    (164/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.480378795 seconds)
    (165/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.557918595 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.319094282 seconds)
    (167/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309258814 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.387106978 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.389489918 seconds)
    (170/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.519041535 seconds)
    (171/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.574016963 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.298878973 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.520950082 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.368179134 seconds)
    (175/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.51739576 seconds)
    (176/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.322843638 seconds)
    (177/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.423238538 seconds)
    (178/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.423664794 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311659317 seconds)
    (180/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.355604875 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.480965003 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.429545771 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.255420332 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.420479922 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.381428482 seconds)
    (186/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.430984982 seconds)
    (187/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.357367323 seconds)
    (188/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.25693633 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.312587439 seconds)
    (190/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.456275748 seconds)
    (191/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.340211653 seconds)
    (192/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.256985811 seconds)
  done (took 313.995727062 seconds)
done (took 315.156845821 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313403457 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.383470411 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.285656507 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.286321758 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288789844 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.278034515 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.3109923 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.287909966 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.30172887 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.300587385 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.278344254 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.298979192 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.302265937 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.298562298 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.321816458 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.287268627 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.287470576 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.296516617 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.302706901 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.304015203 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288523666 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289406437 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314643581 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.285937004 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295793417 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295978304 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.294980373 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283296562 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.296236771 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.305808486 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.281931856 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.295704733 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.306456641 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.300622097 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290707543 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.297800155 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.289913425 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.384774353 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308694018 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.299512639 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.296723741 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.305342252 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.293883818 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.294849771 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.300705415 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.316924688 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297407985 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.303582507 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28267166 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.274341362 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314929312 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.301485249 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.2981377 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265268451 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282180481 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.30607759 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.299360153 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.309836521 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.297043247 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291656227 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.324519494 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310073617 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.302381283 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298406996 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.297271794 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.305470692 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.300168345 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.306237512 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.297969921 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29199652 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292299727 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.300483506 seconds)
done (took 102.763852603 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412994517 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.290230793 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.449321765 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.299267677 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.453408333 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.41270868 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.298721151 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.298780761 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.297795737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.099793577 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.29859729 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.299242031 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.291024525 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.299095218 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.410461695 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.299915893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.300255134 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.995330044 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.300627802 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.427841861 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.292741322 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.300104292 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.29959256 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.098792232 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.290811189 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.287575448 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.427906779 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.29954045 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.99895858 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.283304563 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.285926747 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.997513388 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.427375078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.318419669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.310631018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.308728221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.455502277 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.302874673 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.418393216 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.417551809 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451149573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.339207007 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.284948137 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.29263758 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.302876602 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.302200958 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301834097 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.330610515 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.292857251 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.301071061 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.000023233 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.310916009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.301265245 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.302645597 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.301250942 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.331263138 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.302173006 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.302837097 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.430182455 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.303468417 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.417856999 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.101937336 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.102482359 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.301446671 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.288589359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.302344445 seconds)
  done (took 105.834275762 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.362303361 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.367723283 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.404873835 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.295094413 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.341797723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.404798508 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.29610887 seconds)
  done (took 10.650814823 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.299893529 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.303050227 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342866899 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342964988 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.301393655 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.468487255 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.304754763 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.305961637 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.303897568 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.345326543 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.304908652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.304359323 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312663367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.29384053 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.341556871 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.305430508 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.41128511 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.295413804 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304377599 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450768287 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303378739 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.313379285 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.34699494 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.306268836 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.306033252 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.302072209 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.079710062 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.304033413 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303743456 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.304511766 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304812199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.360988538 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.303248879 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.294313456 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.303827174 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411274269 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.304666454 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304419235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.30484294 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.29776391 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.306605874 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.306443026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.30538137 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.304919684 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.305014784 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.319700415 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.30647815 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.306205955 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30515084 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.306111453 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.347119438 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.306484037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306342918 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.30587236 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.350211456 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315878312 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.305894473 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.305426101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.306582356 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306396212 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.453814002 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.344552166 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.306227969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344375196 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306591382 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.307084696 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.30624617 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.307326256 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388231167 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.306631615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34684589 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.305802392 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.47861117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.321722677 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.308164983 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.301450957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.301173017 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.308126283 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.29570422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.305894407 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.308159194 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.301572501 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.304984518 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308713275 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.306703405 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459856154 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406429519 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.307096975 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.314133187 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.307592176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.306715388 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.34952133 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.306488962 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.308253234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.350860076 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415144372 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.350620877 seconds)
  done (took 134.47213673 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.313149585 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.312933108 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.304324035 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.327305341 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.300445437 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.300225335 seconds)
  done (took 9.04206623 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.30303788 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.310465621 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.310139557 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.310486085 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.310851685 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311536065 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.310493708 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.301972978 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.31322207 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.309476105 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.310683847 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.311940156 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.310391556 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.310585046 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.310675743 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.310454806 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.312140018 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311004715 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.310868369 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311156373 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.298984728 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.310974718 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.310860929 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.3039568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.316397777 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.310627509 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.326131094 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.310410518 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.309972934 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.309585442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.314424185 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.313019233 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.305107492 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.308036487 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316105985 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.306148359 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.31473274 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.313229107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310314433 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.314891438 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.312797162 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313785338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.312742519 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.314494025 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.303703039 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.30607914 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3159296 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.327770037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.312905139 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.314285209 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.314546056 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.312492186 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.313478315 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.315385471 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.306239313 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.307736446 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.317255642 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.313084677 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.313456382 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.30454527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.316200475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.31394572 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.306626519 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.317056921 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.312827137 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.315266102 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.305254073 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.316784393 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314722716 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.313058657 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.317013457 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.31442617 seconds)
  done (took 96.627876393 seconds)
done (took 357.801978644 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.688224143 seconds)
  done (took 3.876901737 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.567467556 seconds)
  done (took 3.756917576 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.711405946 seconds)
  done (took 22.149871439 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.386078429 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.303902817 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.306142044 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.306797213 seconds)
  done (took 10.492068565 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.566703361 seconds)
  done (took 3.755563597 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.310774156 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.31172147 seconds)
  done (took 5.813722476 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.459846452 seconds)
  done (took 3.650626368 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.536982372 seconds)
  done (took 3.728851217 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.316431014 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.334648492 seconds)
  done (took 5.849225678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.28249881 seconds)
  done (took 3.473716868 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.299189652 seconds)
  done (took 20.490874823 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.323459684 seconds)
  done (took 3.517213269 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.346226021 seconds)
  done (took 3.536295073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.702484352 seconds)
  done (took 5.893316425 seconds)
done (took 101.173848661 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.30196117 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.305572999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.303925798 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.302905148 seconds)
  done (took 10.405885852 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.383219739 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.380981381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.391320819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.376744932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.375494417 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.38485061 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.344330638 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343031597 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.373822473 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.370825616 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386752684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.377469593 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.386444789 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.344832975 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.371170214 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.386957205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.374665519 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.391101669 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.344898613 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37730163 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.320259224 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.377721092 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.370810911 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.319771651 seconds)
  done (took 34.047311075 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.829832673 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.380240785 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.463544145 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.360866452 seconds)
  done (took 7.227954286 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.424071891 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.425848699 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441887148 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478008483 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.526824755 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.439478365 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.346379209 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.342415681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.328353532 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425596189 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510175128 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.424757032 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.638305658 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321236958 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.639149829 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.32171237 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.320355752 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.424832873 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.473941112 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.502521226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.32002217 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.424449379 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.431497085 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.425295485 seconds)
  done (took 35.551336825 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.330137773 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.33770182 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.323013741 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.336405663 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.323027344 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.32354393 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.32265408 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.327243951 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.322479018 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.321984675 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.322903172 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.336423437 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.321669271 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.32278867 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.329662172 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.324776251 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.323869783 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.330117797 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.33163348 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.322694266 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.324030739 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.330938836 seconds)
  done (took 30.385506453 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.30784696 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.307878866 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.658740139 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.564181927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.309383092 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.312879957 seconds)
  done (took 13.656759873 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.379494546 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.517804192 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.320070339 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645554988 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.735372061 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.316241278 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.31502332 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.550908171 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.835278051 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.826448958 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.374148344 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.382141193 seconds)
  done (took 19.394253877 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.31722772 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.311580586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.318812947 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.329694527 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.366800942 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.318979791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.323164084 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.308398251 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.37073984 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.37224622 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.320726576 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.368890539 seconds)
  done (took 21.224754862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399693479 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319073927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318574263 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368226417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321850578 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319276681 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381215396 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999418811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.325090899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596101788 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318394248 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406033352 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5678684 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330146634 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324166122 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267735495 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549685812 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79318726 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321198616 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320673553 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358859334 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.329277965 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338183445 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.521784693 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327577138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322110957 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.584184426 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.320532276 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589283768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568731635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.568567261 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327964587 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598275815 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948428477 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428826803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515356545 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329504271 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328343552 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.314322242 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.338348392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330302564 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343448854 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559608285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32840299 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320727137 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326827232 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013288886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.332261518 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.322253999 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323627204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559921135 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410400839 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.328091962 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323348656 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351517948 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326867376 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.328652081 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448203803 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963800977 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324800813 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332361858 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.327895849 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316797309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336566406 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945438661 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.336412688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.330267665 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32867668 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32509812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328195266 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352328296 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32604993 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.344781035 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324277016 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057357607 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334037413 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332207992 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843277243 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335388784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.332662692 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552597605 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325554142 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326774836 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.325311206 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326635013 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033877135 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33336168 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.293195949 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36549501 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009276859 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.520883715 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35394162 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355617571 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.547512881 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.294072692 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327905408 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.327629193 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332054322 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349055352 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010841783 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326864001 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.331286337 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576094285 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.538385016 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326184741 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.277586205 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785086072 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336878187 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.356988813 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326645142 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528173617 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.923498358 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574926802 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334361195 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366256176 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329439715 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.096485913 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337149535 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.338516218 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.332487364 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603227662 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.127581928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329488977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401672002 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32976187 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329443117 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332465416 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335859299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329141473 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.501846588 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333709508 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572977192 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.335906644 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32913518 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.328922593 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360128075 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.334320609 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.55013981 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337260779 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609333747 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32879116 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330257614 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328955069 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548862124 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.329854266 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.341179377 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669414178 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342239275 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343994655 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574931603 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368616668 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442963359 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362786694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.343242862 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.58168178 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.33784607 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.336203594 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337308607 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335284621 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334273102 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.339636668 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331989419 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926900912 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312958696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338389335 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330968626 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.348471737 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405241265 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339822829 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526810081 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.341102178 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348607491 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.342060915 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.330799451 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559307477 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57154964 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.337971408 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513130262 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.787764438 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.923158492 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352529373 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.332023058 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.331988137 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.332234212 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334556383 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332285678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331026743 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528714633 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582153422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329461286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.951265116 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340675347 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336777868 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.346185565 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.572164871 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.347581908 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333385756 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.345218429 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337649745 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345114852 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579190813 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561473019 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.352751126 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334536522 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853576379 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342580541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335044481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335061363 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36155812 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335327021 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162095648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674732234 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347904417 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579351323 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340487456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.358550801 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.334524632 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333956008 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341936348 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.356977449 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347945222 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.532880616 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348844491 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34334586 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976838514 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080110522 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87930849 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349320787 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.354127318 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340886344 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026751294 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337858007 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336576928 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574982558 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027677962 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3367801 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792085012 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.335489715 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071916459 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580498466 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570182065 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337340225 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.336441313 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583408494 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554463781 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361418427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340495116 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342102047 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.306314349 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866373118 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336796296 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.53694674 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031363443 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337310009 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343873543 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.382380868 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.33987563 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712919759 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.338640522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3387798 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348719589 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343641622 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165851772 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345079755 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338089553 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957904862 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348148586 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.7998848 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337224738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.535211049 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.583167354 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.559558922 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.354768111 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.344044744 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.587032759 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579083141 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345153528 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340855381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882593499 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.197458982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.345425945 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33825591 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107746099 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33950027 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.611792706 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.35927643 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.34969462 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352165932 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340696864 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339811473 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.340646026 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345204852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314630554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807956957 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.330892734 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33987275 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345810049 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360637756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589269331 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355545079 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939499367 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568131922 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339957145 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376256394 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.345136974 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339208398 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.314855117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341478283 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.341258472 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356602738 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564235871 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348836683 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.31097851 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400280892 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555159977 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.339891916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342888754 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55600497 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.347360424 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.355512463 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093655347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378169882 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343949951 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347058826 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332362341 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399898409 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416027573 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539966959 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.59130719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589719603 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725734309 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347348904 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348709202 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.35795193 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424271778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342609001 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371720889 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.346986995 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940609547 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101316929 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.952430893 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588395304 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.347348543 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3438309 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344197268 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587425442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343221237 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620171223 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345157713 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.342191731 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38800475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34429792 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355256522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561214109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619460823 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343679292 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351736634 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349493011 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.344365392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594262558 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.561908336 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814348798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866733252 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345126757 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350512347 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042336434 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621489946 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345163132 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346153409 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346410743 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.36750033 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.349227023 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.352804632 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349708426 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574790405 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587870484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986448019 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588317597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.528558037 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.271239495 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346437437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600122986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187348731 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.543602162 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957676386 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050549496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604432251 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422522303 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544973024 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.351344065 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583781839 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.356225687 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352116672 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345903555 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347362543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.345613838 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588990147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956732569 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601805015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.354089493 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.357466791 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381587953 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.546574327 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574580487 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065922296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.569295831 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595155788 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.362583985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348743571 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957526727 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594184751 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355200118 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.353715804 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55913178 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353493594 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384274802 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.223179521 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.348435059 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874794837 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.561691616 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369929657 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359883621 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06059161 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963435881 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.361763206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826874813 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35382841 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350212201 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64678085 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.357421192 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.349381812 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651958588 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.355720499 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358959123 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554969048 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.956184981 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090916863 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.359326857 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381019865 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.357316762 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352505327 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423164125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354499212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362481891 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.733526081 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35591706 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352309957 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365225661 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.349840393 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354821601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.357628381 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352358901 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.360407661 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.328625176 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.353147064 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368291305 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480717904 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888037343 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355880914 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.967902836 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.688083343 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601355324 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.36676928 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.328580501 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.359452687 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354742054 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352858879 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354929276 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.346703059 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885324605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.354770851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.620453905 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.366526536 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.565745606 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.567472147 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354411179 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560870792 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371078716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378347486 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.323857183 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354939337 seconds)
  done (took 962.303203174 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.345802817 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.368875696 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.362364933 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.406418648 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.354080741 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.35129045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.354015603 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411624464 seconds)
  done (took 20.1831462 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.352517022 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.353001966 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.35061917 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.354160059 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.346404073 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.823404757 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.349545675 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.354520769 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.368406063 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.356001508 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.353722134 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.95974976 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.360349245 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.351999625 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.356823225 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.360865652 seconds)
  done (took 31.982682305 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.032016678 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.356171268 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.840384845 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.367782073 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.367934722 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.34645681 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.470373554 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.348580026 seconds)
  done (took 25.3614931 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.361513956 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.361687611 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.363247603 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.362714509 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.363369702 seconds)
  done (took 8.043783219 seconds)
done (took 1220.959627827 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.363808394 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362393026 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.36288452 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.362454834 seconds)
  done (took 6.683107038 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.327614456 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.326875904 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.327002196 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.341797989 seconds)
  done (took 9.554481282 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007447914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.859943638 seconds)
  done (took 5.09947325 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.863268485 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.85944183 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.859391565 seconds)
  done (took 6.813342517 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.64160967 seconds)
  done (took 2.873112566 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.30203673 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.353595065 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.353781779 seconds)
  done (took 8.241870428 seconds)
done (took 40.496415553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.358598984 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.113562452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.523805487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.359481645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507338395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.505253255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.599614172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.354636393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.348252304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.360593298 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.359009867 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.511898306 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.587551377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.111784383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.58613142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.108422242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.5107988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.349790059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.354041245 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349564124 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.600007659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.357671846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353467055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350785075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.51703299 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.494572999 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.351119924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.110547182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.358196319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358981741 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.500079479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.352330352 seconds)
  done (took 81.798427232 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.350027062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.358138351 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.356749545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.349360445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.364662391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.355777263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.350391318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349990516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.35415832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350909103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.351915531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.352000553 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.351472473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.351129298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.370139961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.350732171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.36693574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.351109423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.351299324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.366559879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.354092387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.350795811 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.376530303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.36259171 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.352230733 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.379041149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.365060676 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.352156144 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.352239876 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.351852765 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.378508263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.354165506 seconds)
  done (took 76.66826736 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.35157065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.35638172 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.368799367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.358687003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.354880102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.358006028 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.354826364 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.368120622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.370487679 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369758606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.354768118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.354986344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.353453428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.351328774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.352659705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.35455524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.35999987 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.357468262 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.358194521 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.358688774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.355863686 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.368465658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.353293158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367603921 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.361267875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.363123535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.354212675 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.354499195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.354397744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.361338722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36981995 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.356389388 seconds)
  done (took 76.72484635 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.594837576 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.370467694 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.373075767 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364877863 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.373826437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.369520175 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.36302213 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60137863 seconds)
  done (took 14.648720676 seconds)
done (took 251.071980356 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.365432168 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.835713796 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.395725403 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.364615933 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.387357532 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.39392935 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.561280123 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.396281474 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.553051973 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.377954119 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.380580194 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.36717593 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.133409186 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.498826454 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.147720321 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.273920721 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.210260676 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.360190583 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.904271026 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.585774611 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.392633886 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.356133521 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.156957582 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.222914685 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.337981846 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.422918292 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.424769831 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.522217474 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.480210206 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.423897353 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.836906216 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.38234379 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.369807313 seconds)
  done (took 63.061852975 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.361444862 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.373950237 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.37479195 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.373287039 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.371806098 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.372976861 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.362182957 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.375044008 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.373284111 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.37380606 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.372381167 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.373931296 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.373293313 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.374519811 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.372862384 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.346985799 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.363101074 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.375033217 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.363712178 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.346884632 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.373474935 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.374954118 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.375103065 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.373345986 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.374434646 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.374130007 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.373858376 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.374912521 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.376364102 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.374493277 seconds)
  done (took 42.36152263 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.375267132 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.903732312 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.086658222 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.377156956 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.366301492 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.371636691 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.643668864 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.37957762 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370955066 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370843084 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.825761232 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.383005393 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.398896679 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.096120993 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.373816185 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.378131514 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377749705 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.367806136 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.913452257 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382098944 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.6429637 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.383702776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.642873513 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.382340978 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.371743399 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.36849803 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373693935 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.141179561 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.39027487 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.82899457 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.11244852 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.643466547 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.080446182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.148680922 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113041883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383584755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.376887124 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.834394455 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.375507016 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368913589 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.642035759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.375022356 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098887696 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.043276359 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.387038101 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.377209639 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.17846617 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.83609271 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.606367106 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379952791 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.138680414 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.378296811 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.380996679 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.371437886 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.600114599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.378320527 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369894091 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.202811651 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.375655359 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.643894247 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.386328639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.371602683 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915902518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.37497229 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.911190307 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.377979466 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.37938458 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.373880009 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.103024248 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.376305968 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.058841381 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.388499487 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381068048 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.830855145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.918372712 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.232272319 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.37840983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.917009838 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.115688331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.662383679 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381188089 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.129254408 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.667758087 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.381139142 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.383094118 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.383796229 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.382537476 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.444586324 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.643501424 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.987383241 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.055454227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.218660095 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.651788709 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.38523498 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.372659412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.218093513 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.387537569 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381211962 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.098841886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.064872591 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.394377791 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.380292339 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.046002083 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.393313913 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.650288458 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.384203857 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.142208631 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.379692218 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.445178101 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.381906505 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.38057815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37887995 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.648769718 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.382874395 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.383668777 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.044258124 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.86051481 seconds)
  done (took 191.466975848 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.370500758 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.367198927 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.368463869 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.367403247 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.366738238 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.37546797 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.367892203 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.368638444 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374255894 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.368638594 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.368564269 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377338533 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.37666815 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.369294924 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.38123089 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.368751153 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.369467458 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.384134176 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.369842988 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.369486277 seconds)
  done (took 44.679226318 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.386322915 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.915781006 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.884733088 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.388834764 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385188235 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376736009 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.429876319 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.389716063 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.38487489 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.659783998 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.540316871 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391831071 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383757637 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.384517964 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.881983984 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.363651953 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.661505453 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.910388716 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386566659 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.911209962 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.35797662 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.384551108 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.374380439 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.909739264 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.670313068 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.649713444 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.435452017 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.915596699 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.386637406 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.386075984 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910633227 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386437377 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.379363324 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.900441035 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.391370072 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.401159915 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.385522005 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.434434636 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43897632 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.6714925 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.929002413 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.664014153 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.402069066 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.536417333 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.394400329 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.359075263 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.928027986 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.392155821 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358927172 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.390397125 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39304544 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895995299 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.385845748 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.895796389 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.393548834 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.390023751 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919807466 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.90048515 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.891628673 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.546567261 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.382011784 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.652582587 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.391559876 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.925371468 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.388667636 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388757998 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.388417143 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.545043382 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.921096997 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.653718029 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.670473213 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.671472944 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.392181132 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.445475501 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.393693558 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.668849005 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.449312952 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.765759648 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.674857104 seconds)
  done (took 124.775756042 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.647682575 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.494437826 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.74980335 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.937237703 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.871054265 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51619471 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491979436 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.629711541 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.390432049 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.490249539 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.99853426 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470695657 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.12539097 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.449053758 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.493463093 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.524105237 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.76762853 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.322224907 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.001077493 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.97993127 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.38914876 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476296964 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.879636198 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.582254265 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.390474261 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.947778926 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.305984657 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.885426945 seconds)
  done (took 52.463070615 seconds)
done (took 520.04631231 seconds)
SAVING RESULT...
DONE!
