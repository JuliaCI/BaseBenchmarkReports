cset: moving following pidspec: 13100
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.56582785 seconds)
loading group "string"... done (took 0.51993577 seconds)
loading group "linalg"... done (took 9.450345018 seconds)
loading group "parallel"... done (took 0.171661562 seconds)
loading group "find"... done (took 4.495391517 seconds)
loading group "tuple"... done (took 2.079790194 seconds)
loading group "dates"... done (took 1.37714144 seconds)
loading group "micro"... done (took 0.196035403 seconds)
loading group "io"... done (took 0.517753375 seconds)
loading group "scalar"... done (took 57.261329791 seconds)
loading group "sparse"... done (took 13.792805958 seconds)
loading group "broadcast"... done (took 1.726237442 seconds)
loading group "union"... done (took 10.620238694 seconds)
loading group "simd"... done (took 3.576072832 seconds)
loading group "random"... done (took 13.181683996 seconds)
loading group "problem"... done (took 2.259075537 seconds)
loading group "array"... done (took 24.390348304 seconds)
loading group "misc"... done (took 1.16892471 seconds)
loading group "sort"... done (took 3.713272118 seconds)
loading group "collection"... done (took 22.003836109 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.702571355 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.210571206 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.197017999 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208606757 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.278445907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169416043 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160416378 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17359559 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.632411482 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207696551 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13816996 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419697916 seconds)
done (took 6.27573212 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.262304678 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.245369941 seconds)
    (2/2) benchmarking "String"...
    done (took 0.189389605 seconds)
  done (took 1.151082275 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078844746 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159251763 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109899042 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096285859 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095226886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111954315 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096175064 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111405928 seconds)
  done (took 1.501646912 seconds)
done (took 3.717165789 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.521054851 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.883266417 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.523506168 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182465717 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.320904134 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.3079711 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269195875 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220575961 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.092872469 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086675335 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178377197 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.451239333 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.391037461 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.965891647 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069180303 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.095751848 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.156373157 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.787753494 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080801366 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110089051 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533162874 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.214720912 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116972298 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106499642 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188292146 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135806686 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140788147 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103129264 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671915389 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133150264 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215347501 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085243269 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140321166 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.166325247 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.21580436 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112261107 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671429123 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20224099 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097741761 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10198462 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684032968 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117974239 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.20641858 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107551554 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069602647 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162863349 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117499419 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080268995 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095928745 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103658211 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159885633 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.438461439 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108872685 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196015046 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094753783 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.704034243 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098578566 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275079507 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128548568 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095226863 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093348573 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089677611 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.1579758 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096372328 seconds)
  done (took 20.285564624 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.169908805 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.187441598 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07926739 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159545383 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123753631 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100383543 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086522597 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080202712 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128376364 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180405018 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146119517 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.193926388 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079085362 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092650947 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172976671 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232092765 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.129827512 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.107036717 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090294854 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110166195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125435605 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11575886 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.094701586 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093847073 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174334186 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206183574 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110052077 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125206422 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092514552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097551655 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145052154 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146960372 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09536013 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091179328 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191353773 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109558269 seconds)
  done (took 5.404646279 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.246784004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106966457 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.252913308 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.200446318 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155923148 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18585867 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.177945774 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.298505608 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.237645707 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163687348 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.210674417 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11444472 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115006968 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081067206 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081511147 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.10085128 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34036831 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.195670792 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.175282485 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189324913 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099849408 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101492661 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363993434 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103216766 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088833078 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11311905 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065437322 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230584848 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096095701 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.079253078 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085859966 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125370134 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116413188 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212180557 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125924533 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122852113 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116416075 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.088310518 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.226942524 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122749546 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080560885 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116504312 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13657091 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118827858 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111797877 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129436785 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222545758 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089977048 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11351521 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.055836615 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19686431 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146693874 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106914244 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275310075 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.131612558 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102757057 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.114368371 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.780757077 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134073333 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0844808 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08013154 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.117119625 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08009447 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.458756194 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.129813688 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.237266987 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086198134 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160104693 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098648895 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122155832 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085589568 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103616779 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09111148 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088177725 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129667211 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.089593975 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081140532 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10626268 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081991622 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.092205191 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.131744605 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087375105 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09888548 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149905113 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101466038 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.128013909 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110221302 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.108437476 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088298302 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129506848 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084389621 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091760861 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.190285437 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099601332 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.133685037 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11569255 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.13110897 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.108469651 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.248964473 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086422315 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122783324 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104032482 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129162697 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103242599 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082126637 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104122878 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082108692 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082775764 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165467938 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092378953 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082530012 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107970839 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087033358 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093954575 seconds)
  done (took 28.81528341 seconds)
done (took 55.222775277 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.426479379 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084089773 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082286764 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103101694 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084804038 seconds)
  done (took 1.579505858 seconds)
done (took 2.356178518 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.316623435 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203761847 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088358668 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194212456 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08903817 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201103793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.186734104 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101934654 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209623839 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086891607 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194750281 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090589771 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.107206045 seconds)
  done (took 2.871803477 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105542408 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107838958 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103984175 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122085234 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086983054 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103129045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120807106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110450592 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103229718 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115135001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087926871 seconds)
  done (took 1.941686681 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101655987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106324288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093486812 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120566911 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088728433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099844912 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118392293 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108387957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099827848 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11536798 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087993731 seconds)
  done (took 1.919206067 seconds)
done (took 7.507173055 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.229763619 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.995010603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.192027616 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.246785002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.356420969 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.300526967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618166745 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202710949 seconds)
  done (took 16.04969663 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.124651296 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091879626 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.194226997 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096766411 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112795965 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092883331 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098056298 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113967352 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094031257 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096561782 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09656469 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110510889 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098471759 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.093093432 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113388258 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097352316 seconds)
  done (took 2.564557039 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.146015095 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.126083807 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117788996 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100584533 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114869089 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100694464 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103918779 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117679823 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094889244 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096782201 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121698666 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100541106 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098898956 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112575928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100317291 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11934179 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112981673 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100227374 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119375741 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118118812 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.101647228 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09838094 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117266988 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10067296 seconds)
  done (took 3.504080868 seconds)
done (took 22.897618009 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151062485 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104960266 seconds)
  done (took 1.03813549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.166666717 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186677043 seconds)
  done (took 1.13866844 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113273196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092225378 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140291568 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105938784 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092512704 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109769392 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119013724 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110658926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092889632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093607024 seconds)
  done (took 1.861180696 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096941654 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097336113 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12576292 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.170127118 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119505792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095802351 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096969291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115064995 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098838913 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093303611 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116567811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112243332 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.097817587 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130638712 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097645966 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115263371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102715201 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097370347 seconds)
  done (took 2.770202597 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092881189 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094873489 seconds)
  done (took 0.979548706 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096439195 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091998058 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093336428 seconds)
    (4/7) benchmarking "year"...
    done (took 0.112214313 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092401951 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092876177 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.110166744 seconds)
  done (took 1.480525178 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.531408552 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239118572 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374536666 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073894021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125732003 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.450470784 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107843481 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072801983 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093212948 seconds)
  done (took 2.895686998 seconds)
done (took 12.954577698 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093840493 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.245258318 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64185744 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115365817 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.093697553 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162407211 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.323112082 seconds)
done (took 2.47532488 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.352008946 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166064078 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085886095 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093002672 seconds)
  done (took 1.49154403 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084844948 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101004694 seconds)
  done (took 0.990003249 seconds)
done (took 3.287125168 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091338815 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091195246 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.140812563 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.091172766 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090480402 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090196103 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.10995734 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092042097 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09033199 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.110260012 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091506605 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.091504563 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089938059 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108325558 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090739486 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090229425 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1090304 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091803443 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091374239 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090292052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107329618 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090531081 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089669991 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.107823506 seconds)
  done (took 3.176334661 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113165561 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094134886 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112788782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096030362 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09564143 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112534334 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096860624 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092933366 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.114853355 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093702144 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095768953 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112482422 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095105241 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095973604 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093265598 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113729106 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095092549 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09174506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111676177 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096493748 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09521514 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110278238 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095991105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09476463 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.114505602 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095775472 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091881921 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110684092 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094911464 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0952216 seconds)
  done (took 3.825575617 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098308667 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088873767 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090501157 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.11733618 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08854842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091583375 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106334261 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092688029 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093720165 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090992897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111222618 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091906931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091415979 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111313915 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094260249 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.095852034 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.119642395 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091622705 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090527493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092562528 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113498219 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09162144 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090558342 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109578017 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092447572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088638445 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090859261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110879807 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092694803 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09029049 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112751902 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095979963 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091613037 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120090116 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095251252 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091952971 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.115724082 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089563531 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092706912 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088455662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.107628515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09068505 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091878155 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.115483303 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09178597 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092161983 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09170908 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111954825 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093430287 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093483839 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106899467 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092197349 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094337549 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.110222842 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.095389121 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088795196 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092300283 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107361132 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09445092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090908665 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106465795 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090215033 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096925224 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092066131 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124846166 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098282751 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090849186 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112100707 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092614695 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096962125 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.1117496 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101782534 seconds)
  done (took 7.892334535 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116227642 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101292484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112469533 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094040433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09304958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09226345 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11513801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092642592 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092652686 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117089095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093077085 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093837796 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111177918 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093990952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093114596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111911985 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099343996 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09238854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091274629 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111744907 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092984929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097068289 seconds)
  done (took 3.021900061 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244300076 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099725343 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141202729 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125353334 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111530753 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124395645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097580371 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098318443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115808048 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102338502 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100877028 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115900451 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112255587 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119446011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103176597 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103762731 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116397093 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104377633 seconds)
  done (took 2.951921694 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105824519 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094647772 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.15623386 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093821015 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.095399043 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.114717009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100100281 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113345867 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114032169 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095027037 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101401473 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112794146 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095558155 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095602061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113116966 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094920218 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094926975 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113020705 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101405797 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099317559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118098311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103317725 seconds)
  done (took 3.143669321 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110685128 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094966159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130101861 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098329535 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093369826 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112422394 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098943486 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095072922 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120852158 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094951795 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095885546 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092784151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127385238 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095725652 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100223004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113662338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095488904 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094370749 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112070046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094738456 seconds)
  done (took 2.891331792 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196856725 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128687961 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109655879 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117930099 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130587865 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110180609 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.138360903 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11274628 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110277997 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139852305 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113673876 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110019637 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137429738 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11509775 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128580708 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119101917 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117912438 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13604163 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110887388 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12829566 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122065138 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109999693 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139082294 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110706006 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127662956 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11276756 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110246265 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13262979 seconds)
  done (took 4.298525015 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092423366 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092693315 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091815598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110796133 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093149948 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091675589 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091936105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112796438 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092743521 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092932454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112575938 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093413805 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093056834 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092131335 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110858248 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092568974 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091914832 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111597762 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094669224 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092624097 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092703692 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111674582 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093328192 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091622205 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110745488 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093899078 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093209683 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092296359 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111619241 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094144162 seconds)
  done (took 3.754672554 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105539779 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105003951 seconds)
  done (took 1.034957385 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100502071 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108869467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09160281 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112033478 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100582202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092818387 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120645202 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101104991 seconds)
  done (took 1.652619265 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.16955107 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192286947 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099103196 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.125977062 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.17227495 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184890847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131511634 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118987301 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093364029 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087013723 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185425541 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084971274 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.114097853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09181179 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092444947 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121133167 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095811726 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103644188 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.12197557 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096928079 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098773058 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117141845 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096698041 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104179051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107956187 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097932596 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097677655 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124124561 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0921347 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095454757 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.112271337 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094977495 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098506505 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.11711472 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.096037652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.193673475 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101833038 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089768713 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115109287 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099333524 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126834617 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114121099 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096590343 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092060457 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116403619 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099461702 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099977723 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113290295 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087831472 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08999571 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115481703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091136557 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094474932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09435707 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115220938 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100909295 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095100203 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110511334 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091510778 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089688898 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113384521 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091379937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094945412 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116397371 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096133783 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094898058 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113158077 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096453302 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096521064 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113629107 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095820953 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110035251 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.113890082 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100090304 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099033518 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114699032 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093117419 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100240792 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112463241 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096544063 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099921521 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.143228058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09778119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089012021 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.109556217 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102508554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096162539 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.115855079 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088785927 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1028971 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115317481 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09731069 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089031557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092875134 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111184243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098080102 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086896382 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115628394 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09447605 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099101731 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119901017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094891646 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095226656 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118939668 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101492301 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.094667885 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.181554883 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091650219 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110492462 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097401571 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099421692 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08855768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114634011 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095415258 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091533619 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111094097 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099867119 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094039238 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115471784 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099697627 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096046026 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115394875 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097253872 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093850543 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110030793 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100949943 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101842663 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114774123 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097587388 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096139233 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095043765 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115910547 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099660887 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091176485 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119909087 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093170737 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093787132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.115971084 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099659128 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094988493 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109989201 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095152204 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095871156 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113392838 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098274579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095796922 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110252354 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088450053 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095617995 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110717318 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096374286 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104667419 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.112017816 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09781954 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091193837 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102217819 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.112115155 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10007865 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096539431 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119235032 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101067528 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087655343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113384796 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09762243 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.097361881 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110977423 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096055668 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094567062 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.121503625 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09015727 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098801865 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087099224 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.113320626 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100619837 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096571988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.118485462 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092681809 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13209902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127165287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100738324 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094686452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114534599 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100414792 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093807966 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119305795 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101644513 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099041192 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111729655 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094926054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100138786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110877609 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099106714 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09382973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115703017 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089512069 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096994855 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086455274 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.11904424 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097576066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099426533 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119929279 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098135578 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094746994 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12335413 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092996458 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098582327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10741942 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10072754 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105032404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120867395 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101952888 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096958318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112402834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097310956 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104497733 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097124547 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116744055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096549455 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088171325 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.109463291 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100749002 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097500861 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110392759 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095273336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099664434 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115799087 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094057553 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088412722 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118266124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108501408 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092489111 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114158816 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093198065 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093042519 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122524034 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0895738 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09193095 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115779734 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101568772 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097351462 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094444646 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117796986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100437414 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097361543 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117582686 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093825741 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102872203 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113702314 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095576679 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091455499 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117185156 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.091013368 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09716186 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094494818 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112491775 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091995098 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098078925 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121291633 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101467138 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092858396 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.120348102 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10257366 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100491966 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113079182 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110690462 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091406271 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.108190605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092920055 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088414552 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117016697 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092626794 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100628802 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094893302 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114981672 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099493487 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096791576 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.11296263 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103134151 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126069528 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091253131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088644824 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093187331 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115423025 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092658027 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092234335 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.118783258 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097599083 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100152126 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118350563 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09231288 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096043188 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.120550847 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094067026 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102484786 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.122780907 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103498767 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092294847 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119144754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.094773905 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099246269 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.110150439 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097192193 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094792248 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115415314 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094588992 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093672695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091844879 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.109659435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092634712 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101406439 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115169287 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101056796 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09443044 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114579713 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093264392 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091843514 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122382987 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.096174867 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102855601 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.11598881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.091310474 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090570757 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100426406 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116887297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101493282 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090869317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119974682 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102532983 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099044969 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116824894 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.105643829 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104607889 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122467679 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103096976 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089211122 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114545295 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101705327 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.096638096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118969967 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098091372 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090755476 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098791008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.122107674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098609149 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093070321 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.10981974 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097388291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102752121 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118549282 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101171998 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098631524 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116757155 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.092867367 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099744808 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.121349276 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097462442 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102933301 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116189113 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10361994 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093136022 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101383824 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.11849549 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091777075 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089561591 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114330018 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103592227 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090003401 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120502244 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102324457 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092819165 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114147535 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103312519 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093722554 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098095926 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.122369279 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094338641 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105741186 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118946809 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094806841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100941837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122159903 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090815256 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096870553 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116331567 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104561209 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095054487 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.121791419 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097305798 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102042713 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119159107 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10105626 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101538207 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101479563 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110914097 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10363784 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099179142 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.120050963 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095397258 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094763163 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.112496254 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095952077 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103741719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.113442603 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106341935 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102974663 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114968791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095280148 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102942883 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114320384 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104064322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093782036 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097967057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111891321 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099127206 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09509278 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123079562 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092919772 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090519117 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122955147 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101510226 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101182598 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120137382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103955655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090275236 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.109762504 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100899728 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093803238 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12593277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100923564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095137849 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115152896 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100412713 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098418237 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10305257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.11216732 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094205177 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096654373 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119484576 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095663319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092054159 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.121454171 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096295441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098663589 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.117647399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093019521 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095665338 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.124405975 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096318813 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09306815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.11382341 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104379975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095922873 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092983777 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.114370385 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103001233 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098133439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125026123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094271428 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097411488 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.116034047 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098875871 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103099577 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.11610303 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09791553 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094577351 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124419113 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102139291 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091062516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113913362 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109537546 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102236673 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119101705 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.100413053 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096354082 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124177554 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105509144 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100616842 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090596608 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.113273409 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096461678 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.091072946 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.120970517 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10312746 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09605304 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115379545 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102277213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100989193 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.118912518 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100595179 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091060264 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103519384 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.116443151 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100292939 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090417806 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112189342 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100112752 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102032224 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.116572576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.098471355 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099425266 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.119909641 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092944512 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095419668 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120404317 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101917262 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102862674 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095847802 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.117074184 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102923814 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107009487 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.119618442 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09683072 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105830902 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.124349426 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098020677 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095725462 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122970838 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104281958 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100498805 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124580445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09608565 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096732513 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.125022213 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105296102 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10615636 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117172735 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091850537 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10184691 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116184259 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.092949484 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100556629 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124173754 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10690834 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09773346 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094705928 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127987408 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103023154 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116687897 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097587443 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094952523 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101513892 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117010555 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100811878 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09345673 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.127221505 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105160147 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103843384 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127526426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.093495753 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102063275 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120875628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107006829 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098928269 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.112024044 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092561857 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101344313 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104249416 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.126445879 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10239968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100217595 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122629172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098332767 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097484579 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115931586 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105255632 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102773727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.119337032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100961432 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096186462 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118930349 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100404372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103533998 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104370093 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.119963494 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108109534 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103326401 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.117568583 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.09491812 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097847751 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.122522823 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0991738 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102981795 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.116814442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093369248 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103598121 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.125529753 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098405743 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105062834 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126281914 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098221446 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101252786 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105248408 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125987318 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099755335 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098140048 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.122547118 seconds)
  done (took 63.332673902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147672705 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106095885 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.122377075 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10012389 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117060399 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123042518 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100481982 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102185072 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123372825 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111326351 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099662778 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121523972 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115141318 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142354843 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120053676 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110469951 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120513177 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102383707 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100542773 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122081927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115456793 seconds)
  done (took 3.299495506 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117878016 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113610156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131802799 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113783198 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106693559 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.133309132 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111863129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133938145 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114560709 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108629522 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.13549764 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111843032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128040739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108432561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108304689 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129894644 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114282552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106801353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133131392 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111024217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130448481 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112148677 seconds)
  done (took 3.495870632 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13062853 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10475518 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098343528 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.122886033 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103776934 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099845045 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125535261 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.102701972 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109017097 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.116950884 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092693083 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095923006 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098092053 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121697606 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095133668 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.100901449 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130946496 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104281859 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10576204 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121415423 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093288927 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101424543 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100441859 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112237276 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106189946 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105315472 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.121241681 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104769862 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091961561 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12554433 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.10242396 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094335144 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0918651 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112569015 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.092499666 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103844312 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.122903288 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102025798 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.101071317 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091500824 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123200887 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105598294 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.092129977 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.121791972 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102763317 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094321884 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124524062 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102052642 seconds)
  done (took 6.007533552 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130778418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.403963144 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.1049042 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139619982 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.139622485 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110256522 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101521071 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138800118 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101501859 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.127615042 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.116492726 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114543646 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129439354 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108153931 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.128447517 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106861786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106551565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101890542 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12990747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103739689 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.12962672 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.107345607 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113925468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.134339774 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108118089 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103050281 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12505737 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107324002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114016184 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130925233 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108510763 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.130247024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11672948 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106214524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123713785 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106392235 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11563507 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125903839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106178662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102219549 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126238854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108856228 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105029948 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137239386 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105375177 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104782541 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128008414 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102447228 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112338403 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.127638891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111757208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.133909124 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10753913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104641455 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127773326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116302408 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104285902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124651153 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.108151906 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112643881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.123694287 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107465388 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114077202 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.127068941 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110066137 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134420025 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107889469 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108319926 seconds)
  done (took 9.225196371 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136647742 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108771946 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.139108885 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116590742 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107809537 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130912079 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108669206 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.128669301 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11044627 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114056666 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129501561 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227558664 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12820229 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113671087 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129427314 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111567301 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108554145 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130696125 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109789731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108271878 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.129157509 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118296448 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107638673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138869279 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120163043 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.126431829 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109504605 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10931822 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138683077 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110048641 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119724105 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.130697799 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109266681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135549507 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122430432 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107772932 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126043733 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109239168 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108577859 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130800365 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107208738 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116367925 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130847962 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105291003 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107827041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131834739 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116621252 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140117313 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114785516 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112144997 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132245571 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116293723 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12998472 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109536529 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116818295 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145723514 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116405515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139049734 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10984778 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116532682 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138941862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123539729 seconds)
  done (took 8.474988693 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102780482 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101632855 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101209251 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122950147 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101803479 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103651057 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09994224 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.125076292 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102332339 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100878728 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125421123 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102537504 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101928107 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100760396 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126218104 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102112935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099569404 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122053644 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102916715 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102053008 seconds)
  done (took 3.03932578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112170312 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118661071 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124151723 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110987454 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10349896 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129900589 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10352682 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103901084 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103183953 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126360341 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112347584 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.132573447 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105757314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10901926 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132714728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110611656 seconds)
  done (took 2.733581692 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121862668 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120019448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.213806436 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105794403 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128836564 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.111911335 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104056024 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131068364 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104488943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108927925 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129753489 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108855926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104695234 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126833194 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106665102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106848257 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102255606 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130415577 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104859023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.21865143 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108017031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105599467 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.129171977 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108742008 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105089411 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132841991 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10966366 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104221506 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129578889 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105901747 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105494507 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1335084 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103691946 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108845215 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.127637709 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105907989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104818341 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12847449 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108903194 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104386482 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.12780286 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107451095 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104895584 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.127494274 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.105085273 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106134418 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103362047 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.132796111 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.107527386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106048303 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.127362933 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109932229 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.109306439 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.135822301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112659819 seconds)
  done (took 7.380244867 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117237137 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106088208 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137010721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105311255 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105458356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105271172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127981606 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107195922 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104582029 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125159512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106971441 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105847911 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12770342 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105978921 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106079935 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12711707 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102732061 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105253198 seconds)
  done (took 2.929022403 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109195627 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10453367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.1091887 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126526965 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104109768 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103932427 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124596115 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104238991 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103127347 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12677522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106361858 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103881725 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102747896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126432334 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105483117 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104341612 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.126226161 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104544079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103885517 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124904409 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106483909 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102769183 seconds)
  done (took 3.335419429 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116857031 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.215035122 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111333333 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.225243457 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101937977 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123499774 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.111660492 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102058091 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.14068543 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100975592 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100192249 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.123323299 seconds)
  done (took 2.475863739 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13277803 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143811288 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127596995 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105744673 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113111941 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131549965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110892272 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108782528 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140868641 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11941814 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131537058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119511036 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115933084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140696245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114586722 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136235784 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111145981 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109788295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129635802 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125415808 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110504726 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141059402 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109466456 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1309105 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110327596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117843354 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140530884 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121030585 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130259528 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120354498 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11480787 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131212717 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119765589 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120093926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128100711 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117631078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131581938 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125144228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114331673 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140205735 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106646746 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135284444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118814009 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114788369 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139596882 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109554192 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113475723 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132456191 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10972155 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152537454 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115132331 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117117549 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136738811 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118506387 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139589024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128754184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142614427 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117986073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11367885 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142051784 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118437995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137045839 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118465055 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143587407 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115012753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11760626 seconds)
  done (took 9.103263218 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144809117 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106756004 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132767123 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122593079 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141020675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111519056 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109778414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133110392 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11129027 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107111319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175451114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109116799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140949998 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120140598 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110024138 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133532239 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110437205 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117676262 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1300374 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130858382 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133160207 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119461056 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118102382 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141093069 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121216923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136393913 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111159365 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109368808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132770642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110082415 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114260922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132530259 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120176553 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129595061 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120538042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110489736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131385114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117522069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10922823 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137642077 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118770512 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148094455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1118967 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110246304 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145305501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111090331 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110143134 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132904896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110639654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106124275 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144614942 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120903682 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144700166 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118990776 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132536078 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111478399 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110343195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13258804 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111450073 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115170294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140687907 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111095352 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154082657 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11125055 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110981809 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141901486 seconds)
  done (took 9.085652116 seconds)
done (took 172.366736756 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.176879049 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217085598 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.19890065 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160775431 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096557443 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154800014 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129861856 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201037378 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.098374263 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095795081 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.096810142 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12306586 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.166086053 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.096302096 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.12051026 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099732004 seconds)
  done (took 3.137415443 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.187064216 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.338857054 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110982774 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124198987 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103290782 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100933385 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124605832 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103709788 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100740332 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131640428 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102279852 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097458526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132464837 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098443146 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101257761 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123864664 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109506336 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101735365 seconds)
  done (took 3.212788216 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122179296 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146471895 seconds)
  done (took 1.190832627 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133103756 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219834368 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.285439871 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172539437 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122634607 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.143706209 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151426597 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136902505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192078191 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138030447 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115498568 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0986044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.151086774 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107093399 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140504615 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101768715 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130263549 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.137901638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116071662 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103452743 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149704257 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106076165 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106943347 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139320962 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183396846 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137857184 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105871561 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104236585 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126204571 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.116526752 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.129988087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120723192 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11427411 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.182456555 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127364853 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158726156 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132779656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10376357 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115093235 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124530502 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10765237 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104361416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138562435 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101138918 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104271057 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.132478051 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106804321 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104233445 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13243173 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109180725 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.133367684 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109518155 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177266831 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109041958 seconds)
  done (took 8.072365488 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.880153773 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143183432 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102409137 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.02327879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147288611 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115214534 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.876550768 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149458975 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255529091 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.899255184 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116877335 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132489844 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245647125 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258090978 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.296302947 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361370525 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.731846429 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.116340297 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131089666 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164769238 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109428346 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146624106 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12210816 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517990833 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.102513424 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122921696 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111603682 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111359364 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180869548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101784241 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129084321 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174163045 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.294425412 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211191381 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123495375 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102379462 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101955081 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186401819 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274324049 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22165686 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197748494 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099476101 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101233243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131882253 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121704051 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098302126 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180455895 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194181835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191070964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107111066 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109243042 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135559435 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109214139 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181602376 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098561833 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358557642 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.38709528 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103703309 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1112522 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137601541 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269916255 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103150161 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240507086 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152790716 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220070311 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101708572 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.827620255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188920735 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10187906 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106770595 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.134465127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107867281 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132929337 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168891956 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.503058194 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112718566 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128330641 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103624956 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234637104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102798547 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101770524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184745494 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101469864 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133926532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114022814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133062296 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.1686183 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.272298094 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135018243 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112635388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107005244 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139583282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.104434399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235943357 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.232128669 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.17774754 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20847071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134361604 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180902435 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165087601 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131799435 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167113691 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.133253449 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113893351 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130946598 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229374032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136901852 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126338271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110033574 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111021165 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.162068055 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105569479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133132047 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168971661 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555916109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188378762 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09913836 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106467727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1357113 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180301024 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110007972 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266373727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111202665 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187511075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132070237 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.101493461 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110937109 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181698939 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110026353 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136965151 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110370501 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111270666 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282129269 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222785338 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133382367 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256276283 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179383133 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131914149 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171082881 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136054285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188165712 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114083762 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108903036 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125035984 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821063188 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116001993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109633877 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131384199 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185923173 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125322745 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105737524 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103071402 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122056322 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812775743 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109841111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099743725 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104897453 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131861813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112243051 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133108091 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109455734 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178074684 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246139422 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109775756 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13484715 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10276435 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181780222 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103355047 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103135651 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125985263 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104906147 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111872559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130533325 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105180975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192603187 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155024804 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.257815075 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657340085 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103891083 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102490639 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243136234 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127341756 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330356477 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111652748 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.260521804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162804523 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123178493 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364343615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18747316 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186822645 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105756254 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192990113 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098973557 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134000176 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179965019 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104046215 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10942807 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179774284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113985408 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1371784 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28171211 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103248592 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255859693 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100866643 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192669736 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103166295 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132398397 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.330851586 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101898469 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141078481 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159352182 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13162192 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104002996 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.624874279 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103464097 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137543148 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10858961 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.235111055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188471372 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111863894 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137818136 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111638955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184799886 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232009215 seconds)
  done (took 48.225876956 seconds)
done (took 64.75135432 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273152592 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184597711 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.285944871 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181460282 seconds)
  done (took 1.939711771 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274764222 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166569707 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.260561029 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101817286 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.265919844 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099817256 seconds)
  done (took 2.116398165 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.182137045 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172924635 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151081064 seconds)
  done (took 1.454428102 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.2041745 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.219947821 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.33548814 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.237123098 seconds)
  done (took 2.031213566 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.30125984 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120450321 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128081142 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.239932509 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.25739425 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.215121365 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12649197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185645998 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.132095977 seconds)
  done (took 2.698293939 seconds)
done (took 11.187010192 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.285556072 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.347657631 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.214420248 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.315308826 seconds)
    (5/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.351736269 seconds)
    (6/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.14493559 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.269981048 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.244531758 seconds)
    (9/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.29512644 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.201221858 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.279954151 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.388088412 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104761512 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137227576 seconds)
    (15/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.206291835 seconds)
    (16/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.235211807 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118055846 seconds)
    (18/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.342367082 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081073055 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175426608 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111286218 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19652392 seconds)
    (23/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236571272 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.132169646 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.386855169 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.243400724 seconds)
    (27/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113188519 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147830436 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.101408487 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.239240466 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.174389506 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131267806 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.16006422 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12684678 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108429824 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.128205341 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114556253 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.214756734 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.131451339 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079441565 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078595059 seconds)
    (42/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.208373939 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132526412 seconds)
    (44/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.155880237 seconds)
    (45/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111172207 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.195014566 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105485809 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118538234 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.133501791 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.137551175 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.383561087 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.266152992 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195111051 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.228325673 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080381685 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111598499 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172517578 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.111785056 seconds)
    (59/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085667047 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.137035196 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.216542943 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.196872365 seconds)
    (63/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134588231 seconds)
    (64/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.1432727 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086922802 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.081422835 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078713357 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.152323911 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.166905709 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160728148 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109945776 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155898972 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.134411088 seconds)
    (74/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137750439 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.336818258 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.088382456 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112340489 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079800723 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.107468273 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124915417 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082494063 seconds)
    (82/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.145611081 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.133803298 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125611072 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125551368 seconds)
    (86/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166311342 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110439658 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.226303323 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.080936822 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.087723447 seconds)
    (91/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091051733 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113292444 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.195443736 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.087362197 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101526178 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.138072442 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.113860793 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.172303935 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.111855835 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105963224 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195996001 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.171529754 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109942423 seconds)
    (104/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078493828 seconds)
    (105/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110161169 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.135226067 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129831473 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104635285 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106992965 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107217792 seconds)
    (111/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.082304414 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.138582184 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.166529612 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102944363 seconds)
    (115/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.131650147 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130466325 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082222715 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.101637168 seconds)
    (119/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.08007328 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.139302247 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111545552 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086821616 seconds)
    (123/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082207001 seconds)
    (124/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.108547873 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103462032 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087094255 seconds)
    (127/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086817414 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.103140332 seconds)
    (129/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.105284237 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.131698233 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.084684986 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150075876 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127007873 seconds)
    (134/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.146097906 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.11016342 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112825488 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079487561 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152967413 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.143385048 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105292904 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103897589 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138001964 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086343184 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.132012423 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.089094428 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13120537 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.145010321 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082763916 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082208828 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130770274 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.084778875 seconds)
    (152/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079944937 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128236333 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080475498 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.09477835 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.144377235 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085643158 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106532771 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103089235 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.105822807 seconds)
    (161/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087760144 seconds)
    (162/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.104493489 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087588118 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11295409 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080841233 seconds)
    (166/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.106467906 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.127799792 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.087176057 seconds)
    (169/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080283487 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087270394 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.108061649 seconds)
    (172/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079225522 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106402525 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.084671149 seconds)
    (175/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.106144055 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106347253 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08176796 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.105088426 seconds)
    (179/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105499064 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087106317 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103807884 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116114188 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127363789 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125278661 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085002548 seconds)
    (186/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082225878 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.111637223 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.1128652 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112522471 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086817131 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.139529498 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106154852 seconds)
  done (took 27.64345746 seconds)
done (took 28.597527437 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237797535 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13128214 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113785254 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.113291194 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.236238239 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119532803 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15595475 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11567959 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123621852 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138206609 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104612895 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125177686 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138935059 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.207527936 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.142900122 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106642737 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103488363 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.150326914 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129625877 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128802998 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237483581 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10616148 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.149967013 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.105288747 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237991364 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108144707 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112762596 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140975954 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127436296 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113134475 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.141419593 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105992422 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.130221378 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.15430056 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104557376 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.114244115 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128505826 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088336501 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113697503 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.139213616 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127917754 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115053672 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.137968813 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107209561 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114522323 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113225179 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.129491116 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1182271 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103470324 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.140248883 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10889364 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129445963 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137447287 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105044294 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103904382 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129675179 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126522002 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104787978 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.151466739 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105897712 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105842816 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.128362908 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116938025 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105743742 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113303475 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.130257068 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114713644 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115480219 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.137391385 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107428104 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105059108 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.137541221 seconds)
done (took 10.303009098 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109923521 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149806946 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.236125681 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.239098222 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.134268315 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146746463 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119041394 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128290223 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144236049 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123373953 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.142932651 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.161566021 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.24304046 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122928188 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.121108384 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.142886172 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116878899 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114004038 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.240326051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15402383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.130252518 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.122393584 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158244027 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.122482927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108260872 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159751279 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113350485 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116752442 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133975118 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127999784 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.153785918 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109516344 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112772011 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.151503755 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126511656 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119269409 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14625098 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118068699 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.110216193 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.133194583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117817146 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127283384 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133501713 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.124082122 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116463627 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.149010297 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116223948 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121280983 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.134425299 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117382456 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109505904 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159378378 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.124472954 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125978516 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147104208 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122726048 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121262409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146751323 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112994641 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121201061 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.134349903 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110704605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109916481 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156635283 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112659053 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.146007688 seconds)
  done (took 9.969947381 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127348326 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139004779 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144077196 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.120195135 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115167288 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127235352 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.103437611 seconds)
  done (took 1.873784728 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105469498 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.246216453 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218741338 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.247859163 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.246543709 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.258549562 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128298099 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103808916 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167981589 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114950344 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.249336969 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.275529914 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115757663 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146244636 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.225758408 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130420986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.250203071 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.106955811 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120042193 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.249889827 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121731678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16317147 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118800878 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105828952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.243139872 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105168713 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.296666198 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150640974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115832957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118974195 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147662112 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186495316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.245792861 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118634653 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14035726 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245610686 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.218230613 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146455206 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.260564375 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110521358 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.243581516 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11991445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121176021 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147634616 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120567074 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.234208808 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124444366 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.121005792 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.145774799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.256764674 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.117941431 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.247654791 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117246845 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119119211 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14397155 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122474016 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153669253 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.121259331 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.254585167 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123330688 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.248405581 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.248908271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.220919871 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249494774 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15565351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.222592044 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.234249733 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118909101 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140859018 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121620525 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.252908365 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11955183 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.14370908 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.214334336 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149860985 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.226481613 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.25263976 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116172589 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14604285 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.10958542 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117695631 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.133758313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.214341299 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146238585 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116824911 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151224938 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119302367 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121400793 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136856659 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.130382793 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119660193 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.14340144 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127691191 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.120608914 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147441435 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.256752921 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.118034726 seconds)
  done (took 17.345950071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108344363 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106502266 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111501213 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133506501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107449816 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107690697 seconds)
  done (took 1.702186766 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143815017 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.121921523 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153759071 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122346201 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170117833 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.228086474 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26362031 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113580569 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.167460329 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13330153 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256380937 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.25906161 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256578733 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12527614 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.261775577 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123746996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265565899 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119134324 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.156839676 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119490113 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120159567 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150668127 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118583522 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.247917867 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121641917 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.123253983 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140989684 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129211888 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128327235 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.142835322 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123250143 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146248955 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115091169 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.115932482 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.280380544 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113285146 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143865868 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123429886 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121996599 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148198186 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260294034 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119536618 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12634454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.149619752 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11536373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113571314 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.151098067 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114919577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262628642 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123289028 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.15083314 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123422188 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120885032 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.15113898 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113290206 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114567125 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150619746 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.265797162 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126090526 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113623756 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148456844 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.123407581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115694484 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.152699403 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.122704879 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123760472 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.139157979 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12312858 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118155929 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.147305685 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.125423553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121628966 seconds)
  done (took 11.998273179 seconds)
done (took 43.883726181 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.529067304 seconds)
  done (took 2.554278575 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.948480766 seconds)
  done (took 1.973867992 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.460991255 seconds)
  done (took 19.519423703 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444091275 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.471926855 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.156083893 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15014765 seconds)
  done (took 3.249963511 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.833993612 seconds)
  done (took 1.886085962 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.329255053 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.242441865 seconds)
  done (took 1.601888328 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.725645167 seconds)
  done (took 1.769881414 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.537763224 seconds)
  done (took 2.568763031 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.288420026 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246484881 seconds)
  done (took 1.583410553 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.652975242 seconds)
  done (took 1.698665431 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.546796668 seconds)
  done (took 20.599728479 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26224325 seconds)
  done (took 1.316075086 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284558791 seconds)
  done (took 1.339963749 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.61319898 seconds)
  done (took 4.666137704 seconds)
done (took 67.369229942 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116447893 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.119229551 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118417344 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143636553 seconds)
  done (took 1.539847687 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.126152684 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119779238 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149975433 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121091744 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12768397 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146690209 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120897265 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122210837 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120900135 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148745097 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120718561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119399603 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.15141162 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120601138 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11759866 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14987989 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124397573 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119941376 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14981815 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122876921 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121090409 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147954378 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124279318 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122766474 seconds)
  done (took 4.168212753 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11714756 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111193311 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111640706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13590185 seconds)
  done (took 1.530606875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128429555 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132619142 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155473784 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128344401 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132239533 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158022857 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120431879 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115545764 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.146365773 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129790818 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136039105 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160722976 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132503929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122766737 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157806479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115759459 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121703821 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158578723 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127331144 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154780758 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121652079 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126477527 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151059797 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130818287 seconds)
  done (took 4.315952734 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.197031413 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133689976 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.178733062 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164919818 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181012525 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.119871567 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148472378 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15346944 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127236059 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.149839818 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.124297862 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166189424 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.153486346 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122767769 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119738115 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.15249533 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134924913 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153355424 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.169529006 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124528143 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153229546 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132681515 seconds)
  done (took 4.32074928 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123726744 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112792267 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133314944 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111964071 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12376746 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140284202 seconds)
  done (took 1.808729199 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109541417 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104749146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106060702 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131399143 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.109684327 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.105074439 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.13010091 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.106131072 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105732546 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105803389 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131410054 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104938147 seconds)
  done (took 2.40640879 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.334404327 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110979778 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.137422518 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.113401742 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.115346303 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10858972 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.149391221 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109654473 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270658006 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106257208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.135952376 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194307004 seconds)
  done (took 2.950063387 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210686365 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148960981 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260147368 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.690996846 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166610694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191988508 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.308834179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166509452 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210492377 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139209107 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221125857 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162248834 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187351304 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216306476 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1420112 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158658404 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196409648 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242703461 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14424348 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241988535 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186610235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178273053 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.220120742 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151771404 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168000344 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162026514 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.147802547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129774256 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196860744 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169080675 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206864299 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153014679 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170167989 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221312092 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236628925 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206911168 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273508355 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1344372 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200924067 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219074933 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266172379 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143979119 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223928596 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15369452 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159192325 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190065087 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184421727 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.214570517 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.137576357 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145363142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215856549 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210735502 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.179258807 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166667273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326172309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138251867 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.14413179 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254891054 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218935979 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231420671 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181957186 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.15279229 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203368948 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194216722 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244182441 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144552987 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.198584617 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126849229 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194713397 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236750085 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183560102 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190364633 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242821406 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133158162 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202294582 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171468943 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18697016 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239353375 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174520287 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.14862379 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154202698 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134901732 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155223068 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189628879 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14937464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217959325 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161192395 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344739381 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182840546 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186669065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163647023 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191426276 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193675671 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15209833 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10308015 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172814946 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164508506 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189911318 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12999432 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185308755 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143129164 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126773158 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183612856 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125081533 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200227152 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135395812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196255092 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171951732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160974015 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1801955 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178982237 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163826902 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200104491 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222074787 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132460748 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133139956 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249841878 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200437223 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138791487 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205284548 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19805885 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.17854542 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1361554 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196405551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22364899 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145307926 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230163641 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140636327 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163450952 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141878634 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20208479 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162162241 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.184274607 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130529797 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19277151 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195884024 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155737824 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14117675 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213826202 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135730743 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124333318 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166477087 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138081796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.174075979 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152199068 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.168648318 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15802788 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194827999 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167951777 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188246431 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136928891 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2041978 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133569235 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.199839237 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151582045 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11953028 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206257419 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228723037 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13026309 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212092089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16397893 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215145576 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20418185 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13075686 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213140544 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129755815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121938228 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193706012 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197633901 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166028398 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218973021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209959054 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166856652 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.194744121 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152745634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199810244 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214837141 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159964897 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172263633 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17462883 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200246209 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12241659 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124214825 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158733286 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138764033 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159988539 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140286226 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213708172 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167295384 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207992688 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195556014 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141013946 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222258337 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127210125 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189573338 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177728053 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171044192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189638626 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220497581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181433348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1720644 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192596063 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.12243714 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127536968 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163138606 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163366637 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165737627 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138287284 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142891774 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221743023 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203309726 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151329514 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220158717 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197237017 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202399199 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.151091013 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16159819 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199630976 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168988345 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211736278 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135579203 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163972703 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.222377156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171851423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195639313 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19987299 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179882688 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227544808 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194867542 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132487249 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176353242 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163221909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168716772 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166643897 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146558808 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162345645 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154544486 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.172619658 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142882165 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219072848 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144794096 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209339631 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186869327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176964904 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155415454 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143345696 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205673177 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147412313 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104573615 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200792127 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227939922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151360268 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187137287 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175204026 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160931774 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320202177 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219207872 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209729577 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138462504 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139387992 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201700298 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1620273 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195157352 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217013631 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143584418 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239505788 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172909385 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.174875442 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131828348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179657314 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152705931 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.168366344 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153438096 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193665173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145679539 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221775996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137993486 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201435805 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178063036 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175955582 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152560088 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167966814 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228274291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19960889 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205149343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167148833 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195530932 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185112398 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153382927 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128182666 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133961235 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21541109 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130325443 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20998039 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195376783 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211867096 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176202931 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19355181 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14260342 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127635539 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197411831 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149981999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21642546 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164928391 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139480943 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222228198 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129271868 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131706678 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193121536 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314702503 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151280939 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20630735 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10790205 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312024331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131385104 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133841134 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193121806 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20010192 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13542052 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18591542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204998453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1426144 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193976128 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136736989 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209781631 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213213493 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169278536 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207978052 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.14770781 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193748715 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161839938 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206079775 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176820611 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150620063 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160112948 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225452981 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.211825457 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.133492789 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199716141 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171813854 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201513995 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177571808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168939528 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184970874 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157525164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167330375 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168767923 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127110992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19100164 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.174119322 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15915514 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180249321 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202759016 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133298991 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157114355 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150352979 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195633945 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142064947 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13069688 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218629885 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158990792 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184736357 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243872845 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131113906 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198703316 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150399223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161059777 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142085906 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144734819 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162554722 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17589791 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215761609 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13298036 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207925485 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168919223 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196632932 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161583537 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174916837 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.334950232 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160058649 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194980875 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182955419 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198850044 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183893206 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175951065 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200970072 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152305188 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197348482 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180780659 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.222828902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195997483 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169202658 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160974745 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145658063 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139805746 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.164518314 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154581839 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199334527 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143220929 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.167182526 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.17150189 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175705218 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.150250914 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142984553 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231422028 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180274547 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192417427 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218215141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138202816 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208573593 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210981732 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129891565 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195937584 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175381649 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174867398 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154833594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135125774 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.168193735 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244821549 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12752856 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163129102 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204379856 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169995208 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203780609 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136868865 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208947349 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141966124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207107161 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127338856 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183513551 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171299695 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16680679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128985248 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203357167 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16556424 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194541755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144810881 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.18019079 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221516177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124490761 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16610808 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318543447 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164664074 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228736318 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137827974 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167083749 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149135112 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160406201 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.196652141 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201747753 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131770899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13075822 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.175924211 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159372425 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169868815 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170792708 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214487497 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164415307 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217124372 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138646243 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286700757 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144233309 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203068273 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11750569 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.62830184 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171574122 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136953054 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172852216 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211822791 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217462461 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.193159045 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150753839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165219201 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128482192 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13308142 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196477684 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153818242 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200852697 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148768644 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131982038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142295318 seconds)
  done (took 88.71260373 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16345044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153764477 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171065632 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224901221 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198138749 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294954808 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231647949 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247555317 seconds)
  done (took 2.836508535 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120694754 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161511418 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144829737 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.147226963 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111454685 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.489641506 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162322939 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122349685 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165370187 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153948101 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137383269 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.581924323 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116741527 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147430556 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123663637 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138260644 seconds)
  done (took 4.165615267 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.846539232 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548946062 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.251081058 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.283696224 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.267094329 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20812408 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.803919317 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205555701 seconds)
  done (took 12.564550261 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168226461 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159307798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.457116224 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.309318118 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.18677193 seconds)
  done (took 2.44008473 seconds)
done (took 134.804559175 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.125576516 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124882948 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125090722 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156821614 seconds)
  done (took 1.67900633 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196306675 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091973677 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0944833 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.120753648 seconds)
  done (took 1.661989235 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.472213999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092577597 seconds)
  done (took 1.748237094 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.159211149 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.142391348 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168432752 seconds)
  done (took 1.644023771 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.13792834 seconds)
  done (took 1.298594718 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129825166 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129850158 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273776464 seconds)
  done (took 1.699116198 seconds)
done (took 10.899315257 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122743323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.928674448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434609737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136224544 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713460622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429345807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.432323648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178293061 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176369746 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140688779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133519858 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691601804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.449535892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883243549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.404608927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.91181014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69718969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113971987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148479015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113599775 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.412876052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140696582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113848908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112826559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.724810933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423056077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112091621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924047203 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112456313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115664911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430256026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113027643 seconds)
  done (took 21.128050606 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114359319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171779797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148529385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114613519 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115329152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141144763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124813861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124892554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207102638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111261407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164195805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112386127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117164208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14362839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138256949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111712335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.144380432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115261058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119976155 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142925155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136237051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111230663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142462867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115946101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111814836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.164075231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.1123977 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124774352 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140866281 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117779629 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116382836 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141904747 seconds)
  done (took 5.389059697 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162056025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180138837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150442844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152058578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192929967 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115697162 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.230214427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152516546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209069328 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112944117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134623203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140646129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15317147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112982765 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167618113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112520374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115223329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143601548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120850942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114834321 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163890733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112581977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114183187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144152553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113520372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163998674 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114122043 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125131052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140714722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117577367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117590439 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141218135 seconds)
  done (took 5.708290747 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127952892 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127033267 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135260545 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165714546 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121363916 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125810705 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157642188 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122093488 seconds)
  done (took 2.247941633 seconds)
done (took 35.639638822 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141146525 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133464456 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132941336 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156670403 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.260414453 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.121655228 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129874115 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119190414 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.158283043 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134817086 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112588152 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.151133664 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133541152 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123586118 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.259980153 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127351299 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.265933959 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.262070732 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121361329 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127328072 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.154094373 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234361024 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.158936744 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121449125 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.252491939 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115847093 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.253930805 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125312567 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123542798 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14574295 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.232193863 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.158871139 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121849212 seconds)
  done (took 6.530948514 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.243700744 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155785971 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123057034 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121905993 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123022729 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.150950196 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248655691 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154684884 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.1211473 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120318615 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153712877 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.230342081 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.161076877 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116944458 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122514912 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110838838 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281954457 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.154725184 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.115075843 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095205065 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116258615 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.151087923 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.262608778 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.14969425 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121435749 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120115446 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.155643115 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.128395391 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123418131 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123964876 seconds)
  done (took 5.739202702 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127723129 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134770028 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.169192376 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.191386 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151096835 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164298727 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140996393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135445173 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173570082 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11660011 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.131459129 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182685554 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131745159 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126095233 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14543009 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133596982 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137543825 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146080349 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123394801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131571282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167083792 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13261466 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138726484 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153989762 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.11456734 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122326619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15639242 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125000983 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123541071 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.160649374 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.11826203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118958892 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.147843444 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.151930819 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116445595 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159120562 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141943863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127610187 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.15984929 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14835425 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118283608 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148521313 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142738993 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169155003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147286229 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128693479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126938766 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.161245396 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.114237666 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133453345 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190059113 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115402705 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135443659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.146031805 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113694446 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124544239 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146858592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118315431 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131179149 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.147281448 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.141637777 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121519649 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156850843 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117951237 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125328489 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.144286139 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115856941 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118933289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169559225 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12441791 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.152762296 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115145213 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157403237 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128719586 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126184295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159003461 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116092351 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126726189 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156655926 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122194188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128201198 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148591292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119278449 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.131718551 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.168347435 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130817034 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126313156 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159726393 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.120847191 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117472507 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162258733 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118218306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120745341 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158753068 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11717104 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119096768 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127982955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.158470158 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113678067 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141077747 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.150063189 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115410752 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140058651 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148980481 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122889952 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12619685 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.189001738 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115703271 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126646154 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158814125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116343191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123867961 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148785023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11535266 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133570582 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162393713 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124132759 seconds)
  done (took 17.332029691 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363303659 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348649913 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189232949 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.437036285 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130483815 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.278853802 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.34728402 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.352785283 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116519771 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183450419 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178400182 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317048216 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149346605 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145416266 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350420506 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.409014769 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179807062 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153090728 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183377491 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131233619 seconds)
  done (took 6.144807697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137858039 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150842597 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169519492 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145206358 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.1266171 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163508547 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116697785 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138233088 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158128872 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126584465 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118276671 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162934526 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129001152 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132398448 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160996406 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.148939837 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122222705 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.152751996 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139199325 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119760375 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133683362 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141953107 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125705619 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169644765 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134525218 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126767963 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.145240749 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122179148 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122843121 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15589713 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12262769 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132733962 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153325092 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106896921 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126985403 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160379626 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124041682 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118951893 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121141487 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150472321 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131201805 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12839541 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154779294 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100951711 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134881095 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111339584 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.163036534 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.13033012 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106982165 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164931254 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129467434 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129930048 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.15289719 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.1384689 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122694383 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.162677787 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128545559 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131167677 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.151502581 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115499073 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114265923 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119183766 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.155474292 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130697431 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127605261 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.166506032 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132617696 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116546559 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.151062062 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120164485 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119034762 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.161820348 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138086245 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125192967 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.154732106 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127954512 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124353892 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.12476146 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129407921 seconds)
  done (took 11.95955384 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.142554712 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126959475 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.162525597 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.154307397 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129454449 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.151904319 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.127831536 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136147011 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.130687121 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165772161 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.132901943 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130210566 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16830964 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127630574 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125906976 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163630179 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129579452 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.184688658 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.135149971 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143757581 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162674233 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122784983 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12835086 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.157879661 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.146938607 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126833056 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173723769 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131662766 seconds)
  done (took 5.234611332 seconds)
done (took 54.115503631 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.348190043 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.538485335 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.312519226 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.310973186 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.365358765 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.321041614 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.310600691 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.312973249 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.849789268 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.282364388 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.311189932 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.31052606 seconds)
done (took 29.778616325 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.416350842 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.841266516 seconds)
    (2/2) benchmarking "String"...
    done (took 1.595215151 seconds)
  done (took 4.635714067 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.316245354 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.303490933 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.551024095 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.304016787 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.304149301 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.302838684 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.303990211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.307265482 seconds)
  done (took 16.577132205 seconds)
done (took 27.147609286 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.345275 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.483982404 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.548692579 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.281978412 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.308106657 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.306264586 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.305708179 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.325204194 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.305714264 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.287636016 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.727456267 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.572112644 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.32317604 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.679954593 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.280519946 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.311737357 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.333994902 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.534324206 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.30735151 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.337589588 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.281271583 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.286204301 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.34492926 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.306192573 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.314003686 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.31147968 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.339192692 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.305775374 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.482921582 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.313375361 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.341733075 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.307572054 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.329816756 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.316932001 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.314983127 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.319726728 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.492890238 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.315437983 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.292092872 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.330045349 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.495670417 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.327473108 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.312463533 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.309150563 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.286626155 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.346095393 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.301509264 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.425115956 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.330399205 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.314345826 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.317814335 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.687339766 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.316131249 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.306871401 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.309730404 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.526817081 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.329064379 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.362268045 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.33684042 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.311693074 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.314151385 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.317563508 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.336035798 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.310788108 seconds)
  done (took 150.286970206 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.307267631 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.313866054 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.311493733 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.313630955 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.312088589 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.312637745 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.306270794 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.307258817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.311651768 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.341451281 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.31180478 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.308121204 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.310236022 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.244276539 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.316438488 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.323651842 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.309827119 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.324380793 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.317077317 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.307188538 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.310547174 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.311841896 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.323068301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.307748664 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.311922707 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.384130134 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.313099955 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.315506646 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.317064666 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.3058136 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.308253876 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.311417617 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956514513 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.159201873 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.31422459 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.33607881 seconds)
  done (took 84.001060609 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.305169211 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.307321875 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307007129 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.340728863 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.306479896 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91300851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.913602284 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.289146248 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485402921 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.745738448 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.30970718 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526300444 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.305472976 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.395605356 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.317959246 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.305712699 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.320484293 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.333459802 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309462204 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.306357991 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886543858 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.318468781 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.450383673 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.481172778 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.321184586 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336702962 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.695589228 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.303896489 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338164403 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.637758321 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.353840768 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.303824788 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.611018831 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.34970144 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417366367 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304947237 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336041839 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.302951067 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.583979781 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.302031708 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.304781989 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.306529143 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.917242266 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.303192596 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.889388717 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307919318 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251130999 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.304792629 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304121119 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.157942516 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.006421326 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.306655006 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.303308296 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.306983993 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.303730254 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.303511566 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.337588424 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.162959086 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.401155292 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.30524301 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.30816838 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337455576 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.305046562 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.523366919 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.308057328 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.979619531 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.363057138 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.40535436 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878283119 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305246347 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.305470872 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.303362 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400070783 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422146883 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.305366782 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.305870707 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.304809187 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.306015597 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.417778316 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.30572877 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.992586777 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.482615516 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.321607191 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.716246318 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.406903306 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.306111189 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661248699 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.307474551 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.306182601 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.017869206 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399562415 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.307296041 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.306882974 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30837858 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.99032933 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.894816107 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.577835298 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.310525221 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.83426196 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.308726973 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.170486902 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.866933947 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.95661497 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.309899239 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415382806 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.480684522 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.322315725 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.304295161 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.690691111 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.307539269 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.363911848 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.304549545 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.303706201 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.705543159 seconds)
  done (took 385.320106843 seconds)
done (took 620.810064474 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.167344258 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.119586959 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.265305276 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.129727024 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.109221199 seconds)
  done (took 11.990273372 seconds)
done (took 13.190895653 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495335037 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498408313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.366124226 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.500681932 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.340443191 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516372824 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.484187555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.325442618 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416305622 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.386436357 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414341022 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356707524 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.337673083 seconds)
  done (took 19.636336603 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.591780789 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.31561976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369957901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559359725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349157379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595477325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.624845097 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.316945994 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470859558 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326388055 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32532494 seconds)
  done (took 19.046102264 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588849956 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.314830394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371518332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.571489264 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350303039 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.602350925 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.626272678 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.314230823 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.472606519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.328509835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325580922 seconds)
  done (took 19.066851748 seconds)
done (took 58.951989821 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.34112174 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402983034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.341236526 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.320821102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.321519954 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.32185937 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.325607851 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.321239199 seconds)
  done (took 11.897054583 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.319059763 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.320109336 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.319742016 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.321366203 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.319513681 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.319983756 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.31973914 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.321843466 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320846724 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.319749201 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.320805128 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.319463295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.320749011 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.319413339 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.320656558 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.321240956 seconds)
  done (took 22.32422895 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.322682587 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.321202306 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.318731582 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.322577515 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.320917378 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.32151702 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.320329538 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.321167007 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.321030472 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.320555084 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.321713962 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.321810112 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.319684478 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.319540892 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.320142839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.322580322 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.321562998 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.319483541 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326570973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.321688785 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.319158802 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.31961594 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.321095846 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.319996738 seconds)
  done (took 32.904900647 seconds)
done (took 68.327384153 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.320033178 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.328620099 seconds)
  done (took 5.848071058 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.381242407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.378087534 seconds)
  done (took 3.960791196 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.321861555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.321181666 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.320884602 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.321231605 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.320605014 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.320722906 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.320775771 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.320753157 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.321111853 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.321374176 seconds)
  done (took 14.409623677 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.321940539 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.321240768 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.320739389 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.321008232 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.321056973 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.320797826 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.321290045 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.322396923 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.321069162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.322573592 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.320976992 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.32285417 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.321535732 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.322866587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.321669943 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.32235388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.322676957 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.323580565 seconds)
  done (took 24.994398734 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.335074079 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.34121096 seconds)
  done (took 3.87779031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.449748565 seconds)
    (2/7) benchmarking "second"...
    done (took 1.364148437 seconds)
    (3/7) benchmarking "month"...
    done (took 1.427253995 seconds)
    (4/7) benchmarking "year"...
    done (took 1.419943308 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.362291684 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.342355502 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.363600106 seconds)
  done (took 10.929976781 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.309092159 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.595042498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.774716013 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.459115432 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.298881308 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.32115672 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.285392616 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.320379496 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.325172822 seconds)
  done (took 14.890219887 seconds)
done (took 80.113541914 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.31495636 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.35738018 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.325670982 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.326667413 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.660347325 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.319265907 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.311403841 seconds)
done (took 16.821865128 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.289913219 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.29044788 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.291711329 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.3216613 seconds)
  done (took 10.395053332 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.315234707 seconds)
    (2/2) benchmarking "read"...
    done (took 1.633833959 seconds)
  done (took 5.152122431 seconds)
done (took 16.752245417 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324374148 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.324800594 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.323754185 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.324481782 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.324297196 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.323849235 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.323739921 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.325490285 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323915423 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.3250792 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.323985773 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.325148244 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.326833726 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323921122 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3235669 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324217325 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324724897 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.324250654 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324767375 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.324166871 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325723953 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.32380423 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.324143778 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.326949316 seconds)
  done (took 32.993205989 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.32497359 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.323969546 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.324678473 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.326561105 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.326746097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.325814492 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325166431 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.326421141 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.325278845 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.325473465 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326093519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.325171924 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.324027443 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.327240967 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325269341 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.326534346 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.3268629 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325689909 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325503097 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326810555 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.326580257 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32628596 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.325453673 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324665677 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.325344292 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325075471 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.326389807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.326135353 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327158792 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.325783401 seconds)
  done (took 40.97759091 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.330246449 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.332399044 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.328339094 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.327275887 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325509216 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.327717801 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.326940988 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.325956951 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.326974609 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.32874435 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.326489578 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.326147715 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.326688119 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.326485755 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.324536732 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.327971921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327410686 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.328754694 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.326075369 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.328010151 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.328200168 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.327253652 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.327130339 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.326815383 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.327776749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.327428856 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.327937406 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.326559263 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.327137705 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.326192944 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.327186465 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.326148 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.327827819 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.326365001 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.327481031 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.326855696 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.332363081 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.333407106 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.329271073 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.328671709 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.326899508 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.325944987 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.327370944 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.327295961 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.32735747 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.327159068 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.326992094 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.328072178 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.326206486 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.327651208 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.327960908 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.326482588 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.326771682 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.328040475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.326639534 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.329289314 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.326452007 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.327947255 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.327713083 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.32757904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.327694369 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.327284787 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.328528556 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327135531 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.328495355 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.327528181 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.328477484 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.326579416 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.328356394 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.328304723 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.329679115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.326849168 seconds)
  done (took 96.79331988 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.329326728 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329640636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.326831541 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.328586856 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329157277 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.328002005 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.327594817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329056129 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327745085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327715936 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328759369 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.330167412 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327652216 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327132027 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327513204 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328566738 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.327346315 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327953017 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.329182699 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331215096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328513382 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327196097 seconds)
  done (took 30.432180894 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328553282 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.329365201 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329244511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330062006 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.332082607 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329191541 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.326804602 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.330069581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328648306 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32672291 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327090518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329193703 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330197953 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328943578 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327637839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330478047 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327382488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330335755 seconds)
  done (took 25.127293018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.329294633 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.327297948 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.328041378 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326300131 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.328899344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328031592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329542075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.32752061 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.329432934 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.328497664 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.327648753 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327036303 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.328488439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328758661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330170168 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330671971 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.330107363 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328265689 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328204087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329326654 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.329820635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329215909 seconds)
  done (took 30.43769307 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329875045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328359415 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.32873085 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.330123275 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.329695846 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330700827 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.329137556 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.329794243 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.331970833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.328661031 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328797639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330275802 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.330272069 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328990265 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.329308267 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330280543 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327242292 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328996176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329640283 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.329000068 seconds)
  done (took 27.796734745 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329641929 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32885048 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.329250158 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329626469 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330130978 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.329928318 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328480682 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.329246767 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330666228 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.330094841 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329625645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32975146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330643661 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.329678398 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329488284 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330172328 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.330662793 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33057859 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328592134 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330006513 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330885928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329173654 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329243258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.330686523 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330053051 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330375082 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330525651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331337957 seconds)
  done (took 38.445153072 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328057382 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.330041803 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.327538294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330382805 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.328579679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.328332745 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.33158884 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.3293584 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329862347 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329464633 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.329691861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.329696677 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329954514 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.330612806 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329856069 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.328960145 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331440493 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.3315707 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330004677 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329395207 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.329095499 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335509341 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.329589979 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.3320095 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331998045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.330471543 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33213306 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.331570532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331395127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330974582 seconds)
  done (took 41.1161798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.348016362 seconds)
    (2/2) benchmarking "in"...
    done (took 1.349447392 seconds)
  done (took 3.904209281 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.33000716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331317159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.330746928 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330818502 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.332090664 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330838791 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.333075977 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330228334 seconds)
  done (took 11.857494823 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.324921807 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.332328276 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.331910606 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.333022578 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.331233859 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.326652221 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.333191782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.336013622 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.324915929 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.326475981 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.330644307 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.330853794 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.329214272 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328095333 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.326636236 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329155963 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.334852181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.332767712 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.333744016 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.332416673 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33309017 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328230357 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.330479216 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.334825943 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.327169391 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.334777525 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.332940756 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.335653371 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326765314 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.332313145 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.328895099 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.335185828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.332898484 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.333832347 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.333633441 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.333226428 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.335511458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.333199208 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.336080562 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338360167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333629328 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.331202331 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.329009696 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.33155603 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.332980425 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.33812025 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.333070208 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.33248686 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.325396484 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.332578613 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.338040409 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.327583266 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.334868387 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333196339 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.333642264 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.338723458 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.341359453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.330157303 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.334313025 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.339033308 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.343896066 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341534308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.333746489 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.339468001 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335500528 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.343241 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339261279 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.343107543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.335835526 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.334449484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.337353447 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347385712 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.347806142 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.338334546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335280248 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.335018187 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.330463307 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.338081622 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337688607 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.339503308 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.342141154 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335080138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337253648 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343483042 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.330890685 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.34040832 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.33556632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.336899455 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.327797417 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338777945 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.345204798 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.335066943 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.327846646 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.332019217 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.333731663 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.337714878 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.329458148 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33407323 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.341804666 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.336062807 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335573626 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332667066 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.338846897 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341498442 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338156704 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33915274 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.343281694 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330068514 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.34264243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.343815022 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336730429 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.330911947 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.334444764 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.337314397 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330720543 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.336400048 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.341009838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.335044046 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.342890803 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.33732285 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33778563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.349002008 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.343154565 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.337128597 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.33209236 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.344329991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.337513117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.3362464 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.34416966 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.337317365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.336923797 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.335608433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.345097613 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.333462399 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343033938 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.333903247 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.340698697 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.336825857 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.338298347 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.335857876 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.340820123 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.337039501 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.338322421 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.341622447 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.344753147 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.337005367 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.346981647 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.340966217 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.338361388 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.339868879 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.342819582 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338495844 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.334460624 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34439719 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.33230372 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.340852148 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.332696396 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.343110492 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339087303 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.337669717 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.337096254 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.332894309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33622684 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.343154304 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.340243579 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.340208951 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.342492984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.339379225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.338087772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332429624 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.342202733 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.334476976 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.336731385 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.344344269 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.341197622 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.339402139 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.339245614 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345709494 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340895682 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340632066 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336065296 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.339596988 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.345468241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.343097952 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.349321085 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.340604463 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.340255452 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.336708651 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.337939257 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342400137 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.335532466 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.347434909 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.347471326 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.351355243 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.337204058 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.344087847 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33474882 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.342535188 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.342023401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.348903454 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.340906784 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342688446 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336662979 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345462245 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.338298464 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.345536521 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334193583 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.345150499 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.34158708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.342700757 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342133174 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.337282509 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341539248 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.345331821 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343480646 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342162104 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.337809382 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.344957786 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.337247355 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.339544365 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.346170012 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.342739756 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.344470901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.350012368 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.341265828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348366716 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.345116605 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.34037894 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.344258455 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.343146779 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.343344664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349510636 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.346848904 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.341773808 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349527117 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.347334271 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.338647173 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345881688 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.350178535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.343443719 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.338541287 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.34757162 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.345517848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.343738016 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.344958371 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340201583 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34923011 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.347622546 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.353533466 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33957319 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.34697892 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.34086172 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.347254722 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.340886174 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.347613164 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.347479615 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.35003312 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353280438 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.346287085 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340558598 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.348803402 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.344663034 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.345172106 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339065596 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.349406409 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.348199016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.348408123 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.345516238 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.343567045 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.347474211 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.340117676 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.346901819 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.340869914 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356153914 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.363149856 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350291482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.353210314 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.348670869 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349848868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.350888647 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.342440507 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342409366 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346474086 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.342131853 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.344233166 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.349445128 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342840243 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.350463088 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346454954 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.350595325 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.349420559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.347064963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.342423166 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.350527034 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.347860651 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.346937794 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.340436309 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.348801484 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.344643527 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350971169 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.350819022 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.345166868 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355329023 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354959873 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.346897435 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.344631349 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.343239096 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.34359504 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.345344565 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.353947708 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.344417165 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.354395039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.343964564 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.348809153 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.346168325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354565752 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.358061425 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.343134738 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.353397674 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.347772382 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.341861308 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.344165331 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.349608806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353558794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.359873906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.34274183 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.350601813 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349120522 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.349935527 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.350451507 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.349581641 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35037085 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.350271402 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356488508 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357108953 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.347303836 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353217867 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360288694 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.349495641 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.350011565 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.343141317 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351953615 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.359425248 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.347362919 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.350372224 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.346082445 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.35039494 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.349208882 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.349653098 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.351063644 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.352055792 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355576187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.358284308 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353628213 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.350926851 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.357343848 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361632522 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356305831 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.363025906 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.348862969 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.356564257 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.351383492 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.347683893 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349926872 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.349237755 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.355294011 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345454754 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.355542315 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.351759246 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.349535454 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354133962 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.359224204 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.344883633 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355718709 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364879188 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.34761207 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354277719 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.352254895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.346867466 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.355168407 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.352655128 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.345168691 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.348512479 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.352163387 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356381191 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.34695558 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.353406839 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345162345 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352059676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.349146555 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.347956282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.349604361 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.348814225 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.334478508 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.342830779 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340014359 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.348396702 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.33512975 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339078734 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.335954588 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.343728762 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.342713522 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.327001018 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.337255663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.332461203 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.325181718 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.330434136 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.337457549 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325255591 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333050875 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.323124263 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325521281 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.327153384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.331762436 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.33301452 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.33363044 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.321574348 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.325624866 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332123822 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.329000173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.329977695 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.326130887 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.337021896 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.324585848 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.323278551 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.33150768 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.323280615 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334750918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.324692605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.32840609 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328552345 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.332876672 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.331007175 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331309459 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.321721567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.326013615 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.337148042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336609191 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.329285092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.327621913 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.333552983 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.326047013 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329205163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.329501875 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.326207953 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.327167547 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.335293964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.325718976 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.32759959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.325244103 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334289258 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.335642225 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.335845428 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.326688138 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338372109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.340833588 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339529258 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.325349224 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.32778331 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.3285655 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333928539 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.333721966 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.326918981 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338876607 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.339341618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.336930776 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333081848 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.334797703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.327936984 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334493918 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333865956 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.330431075 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.339710251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.328760187 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340343017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334512905 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.334330978 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.326948044 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.327721442 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.329949346 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.331379761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.335260549 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.332993289 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.338481655 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.332171724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338805514 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335319751 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.334515382 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.335345359 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.327211653 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336359027 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.32713117 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.336600656 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336266167 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.328840569 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.337241546 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335510974 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329108787 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.333594313 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.340930879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.334460386 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.329842399 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.333643585 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.341256781 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346099321 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.335290821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331435304 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.334278187 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.339138169 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336354883 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.336043316 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.330166432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34473976 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.351284502 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33181857 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.335255184 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.34033525 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.348312527 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.337704347 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.337207544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.333923198 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.336509855 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.342664323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.339161977 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343170794 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344035585 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.334084692 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.340497724 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.331096059 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.336034844 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.339170797 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349271789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.338837881 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.334835048 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.348439945 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349802807 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338005651 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354959578 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.345861656 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.339140725 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.345533473 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331821422 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341571391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.336749102 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.343553464 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.341465628 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.338938332 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.338865403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.332899903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341071835 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.34596268 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.350030181 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340714997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.332650391 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.336411568 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.342931293 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.340314789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.341806031 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.34060641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.340625108 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.340698974 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.335760913 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351216211 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.355728933 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.345465625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.34437531 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.341856638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.342043897 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.345801095 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.341177454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.346412553 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.341881866 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.342626321 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.339443624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349087371 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.342708818 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.336403401 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.339041399 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337756237 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.346574331 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.349082481 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359516908 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.345218239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.344884509 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343016868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.341696789 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335170014 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342952644 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336027854 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.330203857 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.331073278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.337145812 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.336659251 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.335279798 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.331441805 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.332822074 seconds)
  done (took 800.010331504 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.329905993 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329879602 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.330237703 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32928987 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.328082075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330476319 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324921655 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324620429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.324618321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325007562 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327534226 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326344729 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326343018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.321369386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322939031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.322109956 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321070391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.319562816 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321912985 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322119022 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321615393 seconds)
  done (took 29.03837163 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.317523133 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.317821177 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.317164184 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317216731 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318605354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320495324 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318520927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314286975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313380612 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312911575 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.313851059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314863979 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.312597643 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.315130067 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311266224 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310865464 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.312439612 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310319243 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.311069558 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310624755 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309856507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.310754017 seconds)
  done (took 30.109811383 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.308014982 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.308237018 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.302050879 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.310267844 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.308770921 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.308956788 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.309857685 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.308569509 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.308924114 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.301669869 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.303315569 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.302973598 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30565265 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.313995379 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.305858446 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.313221085 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.308751877 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.310512613 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.309451299 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.309855211 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.313407274 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.321516374 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.310190175 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.302518771 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.312713447 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.309463439 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.309182155 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.30993036 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.301705575 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.312523044 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.310163039 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.302943236 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311150806 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310753609 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.302654266 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.314034539 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.310594245 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.306474092 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.304945172 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30543308 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.318868293 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.305770215 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.311037141 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.318443051 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.307258479 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298515749 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.309299012 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.302910985 seconds)
  done (took 64.004032609 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.304509345 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.303941904 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.30382669 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303879399 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.3002159 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.301177409 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300786517 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301069747 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.300056331 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.302337482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.302221852 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.301088619 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.30018087 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301198214 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300406345 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.301899386 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.300916102 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301200958 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.301734983 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.301993199 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.302166512 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301768793 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301806764 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.30107542 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301883538 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.301168912 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301537544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302236298 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301526463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.302463682 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301769365 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302321778 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302104758 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.302665242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301108501 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302010631 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303031789 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.30222146 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303211449 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.30154815 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302897565 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302063581 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302239261 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.30303682 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.302338204 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.304741951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302297774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.302918718 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302823816 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303723967 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303548084 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.303640647 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30265716 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.303763492 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301893078 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302313173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.303538674 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.303405633 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303256756 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.303579848 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.303781607 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305037056 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.304361931 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30321271 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303887719 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.303461047 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.304301754 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303492287 seconds)
  done (took 89.754289443 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305988949 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303523123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304923205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303337338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30447139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.304070103 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303794084 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304220319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305532072 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305502472 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304599346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306651719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.30379939 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306709949 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305542817 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.30614459 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306307928 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306315522 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306769398 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306076913 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305907276 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306447175 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305975558 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306864738 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307237943 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306817385 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305690723 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305094784 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306414313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306456405 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307054743 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30734939 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305332216 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.307320949 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306486556 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.307312411 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306540893 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307603818 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.306571469 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.307804586 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30761718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308490124 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.307639265 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307340615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30771117 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.307428364 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308901249 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.308900236 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.309488032 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.309893052 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307646609 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.30868855 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309105081 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307328774 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307816092 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308100453 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308351409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308931347 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308538787 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.308587046 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.309275717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308904774 seconds)
  done (took 82.209192326 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308995083 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308490712 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.308514982 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.308128622 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308665799 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.308932146 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308052477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30972935 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.308324362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.30794562 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.309932766 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309593697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31110594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310332872 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308400222 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310068312 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30968731 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308311595 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308379672 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309960683 seconds)
  done (took 27.372559083 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307523157 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308635615 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30814693 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310253222 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.304656767 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30420957 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.304779376 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305698381 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306009141 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30384676 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305660073 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.304949626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301915197 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30271094 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30038639 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301997572 seconds)
  done (took 22.072097995 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30097017 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301817613 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.302460345 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29906395 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29862354 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299271258 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.299430179 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298391021 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.299639203 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299162044 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300142786 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.298268608 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298373229 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298573618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.299123324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299245344 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.29881061 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299962067 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299105112 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299412523 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30076817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.300369725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.299988077 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299883613 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.298961511 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.30190994 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.299802961 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299790659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.2999011 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.300222783 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.300317716 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.300318737 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.300898712 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.299958118 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.301211537 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.299633345 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.301278301 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300170899 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.300983642 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301664997 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.302435813 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300261031 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301075982 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300696725 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.299603178 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.30130561 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301205057 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.301268194 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.303046971 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.300874499 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.302177073 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301020465 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301377458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.303070113 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.301272524 seconds)
  done (took 72.705506765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302797949 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.301106729 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.300963644 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301038879 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301008127 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301287198 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299984119 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302981166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301960939 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301538845 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30141989 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304223826 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300342677 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301680196 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302858395 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302538283 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301811072 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303117077 seconds)
  done (took 24.616006102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302268486 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302636625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303773722 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301895186 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302364394 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304395182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301604694 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302905284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303636511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303167372 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302396548 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304077567 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303413941 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.302499815 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304522027 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302497156 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303992238 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303716235 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303839621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303867619 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304417163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303650757 seconds)
  done (took 29.855892442 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295374159 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.295782744 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.295356959 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.309581301 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.307168727 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.294823735 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.295174059 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.295374906 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.314107721 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.328789416 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.32339381 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.307820463 seconds)
  done (took 16.848748764 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304812416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306044206 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304727759 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304840722 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304275486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305931488 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306105079 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305896152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305596373 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305058418 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305423762 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305359717 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306745055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306131102 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304997873 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30462195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306540962 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305261938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305380257 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306330297 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306157741 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305793758 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306414056 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305667882 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306110446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306064861 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306404058 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307215097 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307273045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306555025 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306754598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306707807 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308082391 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307838964 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309015202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306997681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308398125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307101055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306720733 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307815322 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.308100773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308119533 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307960627 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308125898 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307835974 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309378315 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307004288 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307004487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30817191 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308630264 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308026212 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307294859 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307897089 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306808548 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30813029 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30851178 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309272368 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307346704 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308492686 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309488438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309445752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310646869 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308441214 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308347548 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308145438 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30888185 seconds)
  done (took 87.4540573 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309945746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308780539 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308283185 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308670969 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308582201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309705166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309039168 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309303682 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309325352 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309424434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309526262 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308962992 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309145733 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310116559 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309970571 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308391223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309999077 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309539042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309806095 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310338757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310209098 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310130583 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310093158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309861267 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31258358 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310590948 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310943696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310787979 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309936708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311059427 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312032083 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309446336 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310071914 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311368919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311425969 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312031079 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310812174 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31663594 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312026928 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311460903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310134403 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312657376 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310950409 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310749716 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31216254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310196095 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312427876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31268416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312094109 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312447116 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312624517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312051062 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312683998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312248784 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312712233 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311497548 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311932245 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311203914 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313049856 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31251688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312761165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312739292 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312184968 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311731727 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313059043 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313551978 seconds)
  done (took 87.717007641 seconds)
done (took 1844.855190101 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468161708 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424354224 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.302229032 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.312072822 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303905857 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.300827337 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.316456255 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303210632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.303592442 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303728465 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302899739 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.494703231 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.337493409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30412728 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303559262 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.402099373 seconds)
  done (took 26.677818478 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327683341 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31730871 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422073142 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.316905987 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.341402678 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.491769014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376564878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.319498436 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.477817807 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.336318309 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.322248198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.340099277 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.317460945 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.322053049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.335599722 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495426007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568780417 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.309061638 seconds)
  done (took 28.932793021 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.736949317 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.331809756 seconds)
  done (took 5.272455135 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.337990284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.317759845 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.319737911 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.317784277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.316564908 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311081323 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.318113199 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.317878667 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.314156647 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.440521445 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.320121666 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.331504113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.333750683 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319852966 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325032692 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3629899 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.464452262 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.327319378 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326417147 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.326584282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.318411202 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.409078993 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359653935 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.327420974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437426184 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.32361706 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325440553 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327319851 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.440467256 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328890009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321088281 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.319548025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.320836413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.264560859 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.851094201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.313181663 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.343043784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.329700766 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327437156 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.470459352 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322245561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.326621319 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.313169422 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.848473782 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.434977459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.436619358 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.334165156 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32121199 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.323601571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.383087489 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.322070642 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.323659787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.378325292 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099388968 seconds)
  done (took 84.581515487 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.360105799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315202367 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496412543 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.334866341 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313890636 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.313802824 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.316751176 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.583765877 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.317959727 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313652307 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.62280317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.914432215 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.32577793 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.378769898 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.352902848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.365197198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313718961 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.313482999 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.318822531 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.31692902 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871811435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.315894524 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.315476178 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.391654923 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.356059528 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841537666 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319600401 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.313453635 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.317403419 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.314480602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892376862 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.320999862 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.369693201 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317128191 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596489619 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689821776 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.65277839 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.322943653 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333994611 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319075675 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.341128084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.831217499 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67892912 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.320260063 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31633134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833441032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.32118693 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.328254267 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.321666939 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.585186259 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316397454 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.318443359 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.320811789 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316861314 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316883 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.367677469 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.363389364 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845054323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.32193896 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.316844019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362701162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.318704714 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.322373966 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.323920665 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.321722615 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.679788496 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.545858174 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.323495133 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679601815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886773717 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335346691 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956972877 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.323326764 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.347274606 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.347334562 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318318411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.324217225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845320831 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.337795306 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319111488 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.658424094 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.327371027 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616482822 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.333869838 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320886517 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893296885 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.329918087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.366649511 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.319530198 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318666941 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.336891257 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325319431 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.605337948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359644175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.320020866 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.320278002 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.339946142 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318348862 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.339458892 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326910116 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.956953385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.325355826 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333522148 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.32139371 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321274296 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.322665279 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.324254255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.322384786 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600728966 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319420506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.336908764 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321820272 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.320431354 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.337114244 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.398127067 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328479678 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.622488455 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.325875559 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319566906 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.328480299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320884 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.33267739 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.321206369 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.340748776 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.314795391 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.624520782 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.338680948 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.342034826 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.322297001 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322327539 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338905987 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.325108982 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.378903486 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.322346389 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085544894 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.364908911 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.368374686 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.322230634 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.331819053 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322237131 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345294422 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324632799 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.620714113 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604248269 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.54036229 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.324224051 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321978983 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.112009471 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.366058179 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507864757 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341845613 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.323542389 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.603332788 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540597545 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322039935 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.323626888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.326764834 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602744093 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.3305989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637089401 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.916333441 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.329388444 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.333282919 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.084275771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.135334713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.323711449 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.323414348 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617150928 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.340500298 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.322278565 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.325094025 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324950826 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.324798278 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.329722948 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334920945 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.323804416 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.324661409 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.665555831 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.51921058 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.341509963 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.336119842 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852523791 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.352506199 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.327022026 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324814338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325609139 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.325415655 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.373657362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.327642303 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.358332806 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.324686423 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332104607 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87755067 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.32810004 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.33191272 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.519199874 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043415453 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.330909849 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.327432869 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326155321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.381439578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883295267 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.349245943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.626815531 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.34431523 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365453643 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326962935 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342987632 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883261283 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.334202482 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.327672039 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.058178011 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.332262219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.751026805 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.327160329 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.32892178 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97021659 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.330934251 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.328161682 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.334035632 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328011969 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.643047225 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.327899106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.370815545 seconds)
  done (took 495.98542925 seconds)
done (took 642.643024179 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.327081276 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.336229078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.332834373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.333241066 seconds)
  done (took 10.549057812 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34446821 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.334749092 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344045777 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.335006698 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.344284419 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.333805806 seconds)
  done (took 9.255542802 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.329107215 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.332907749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.332724062 seconds)
  done (took 8.214817105 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.532973998 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.347461183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.678598162 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.328948758 seconds)
  done (took 9.108493995 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344069698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344678905 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344639585 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346148868 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.344994336 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.347889654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.347147004 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.34564382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345336131 seconds)
  done (took 13.329719571 seconds)
done (took 51.676324288 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.45629681 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.519421429 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.47447634 seconds)
    (4/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.663354428 seconds)
    (5/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.535232428 seconds)
    (6/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.374722781 seconds)
    (7/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.563717259 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.338902763 seconds)
    (9/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.625227344 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.40068501 seconds)
    (11/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.471603483 seconds)
    (12/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.421982916 seconds)
    (13/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.334344021 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.365791069 seconds)
    (15/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.307880064 seconds)
    (16/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.43702668 seconds)
    (17/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.333915047 seconds)
    (18/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.327943061 seconds)
    (19/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.604279691 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.613034981 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.672799754 seconds)
    (22/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.484761642 seconds)
    (23/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.309507909 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.413283151 seconds)
    (25/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.407819929 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.570962588 seconds)
    (27/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.369987566 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.482267813 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.469411284 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.43450443 seconds)
    (31/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.308264335 seconds)
    (32/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.415077296 seconds)
    (33/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.427633796 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.418119647 seconds)
    (35/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.449387358 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.442709456 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.405400285 seconds)
    (38/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.486847112 seconds)
    (39/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.576859228 seconds)
    (40/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.310291178 seconds)
    (41/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.309277208 seconds)
    (42/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.496823949 seconds)
    (43/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.512142497 seconds)
    (44/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.582596483 seconds)
    (45/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371082111 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.310062316 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.33135266 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.450314478 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.412383526 seconds)
    (50/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.485909312 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.50608037 seconds)
    (52/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.545885479 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.622906404 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.320943586 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.314191805 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.371335093 seconds)
    (57/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.571597508 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.310625239 seconds)
    (59/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.676253988 seconds)
    (60/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.314575635 seconds)
    (61/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.698074004 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.32118031 seconds)
    (63/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369908027 seconds)
    (64/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.535692078 seconds)
    (65/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.330873012 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.746146904 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.465376441 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.427134758 seconds)
    (69/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.331778176 seconds)
    (70/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.33156631 seconds)
    (71/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.4552538 seconds)
    (72/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.448939436 seconds)
    (73/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377243847 seconds)
    (74/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.476034823 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.312071128 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.313097113 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.372497582 seconds)
    (78/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.312975824 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.627141469 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.425301298 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.61137152 seconds)
    (82/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.417259878 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.443059295 seconds)
    (84/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.356805772 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.424408889 seconds)
    (86/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.433630799 seconds)
    (87/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366024833 seconds)
    (88/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.323641294 seconds)
    (89/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.428487824 seconds)
    (90/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.313428849 seconds)
    (91/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.324417149 seconds)
    (92/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.407398772 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.313722379 seconds)
    (94/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321578344 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.458157786 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.368689562 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369838946 seconds)
    (98/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.314222647 seconds)
    (99/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.349968855 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.578979007 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.650284538 seconds)
    (102/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.369724385 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.447106973 seconds)
    (104/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.316801843 seconds)
    (105/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368571034 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407849219 seconds)
    (107/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.414070125 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.478218343 seconds)
    (109/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.333695433 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.472952186 seconds)
    (111/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.332872553 seconds)
    (112/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.417324794 seconds)
    (113/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.397628209 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.519260119 seconds)
    (115/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.411364053 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.368466825 seconds)
    (117/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.318675316 seconds)
    (118/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.434491827 seconds)
    (119/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.405118953 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.404776811 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37587787 seconds)
    (122/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.3132149 seconds)
    (123/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.519293771 seconds)
    (124/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.539066566 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.451462633 seconds)
    (126/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.339837485 seconds)
    (127/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.497049432 seconds)
    (128/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.410494042 seconds)
    (129/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.353144133 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.424018512 seconds)
    (131/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.541643111 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.433552844 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.470373506 seconds)
    (134/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.366642638 seconds)
    (135/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.553188205 seconds)
    (136/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.368732294 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.33679582 seconds)
    (138/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.537490835 seconds)
    (139/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.373665122 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.445668769 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.490486407 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.409104588 seconds)
    (143/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.58000923 seconds)
    (144/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.614067226 seconds)
    (145/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.320520413 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.502186576 seconds)
    (147/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.455524139 seconds)
    (148/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.433193969 seconds)
    (149/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.520678029 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.434410605 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.453640849 seconds)
    (152/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.369540659 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.461780719 seconds)
    (154/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.318715516 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.664631071 seconds)
    (156/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.456905477 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.679960772 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.461383332 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.401448007 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.451236642 seconds)
    (161/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.550508698 seconds)
    (162/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.365962411 seconds)
    (163/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.584833095 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.380081212 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.317392043 seconds)
    (166/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.503941559 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.452136545 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.628019551 seconds)
    (169/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.419967201 seconds)
    (170/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.521284992 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.553287999 seconds)
    (172/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.323441127 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.594688659 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.509059589 seconds)
    (175/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.525608227 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.500650747 seconds)
    (177/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.323177959 seconds)
    (178/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.375081975 seconds)
    (179/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.322244832 seconds)
    (180/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.488510636 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.405567321 seconds)
    (182/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.511502189 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.458712242 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.540140996 seconds)
    (185/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.453842351 seconds)
    (186/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.436493229 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.829024206 seconds)
    (188/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.381674712 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.371492966 seconds)
    (190/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.830073774 seconds)
    (191/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.431387537 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.462594335 seconds)
  done (took 326.431879246 seconds)
done (took 327.653150187 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370786337 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.436439459 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.350484603 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.350617889 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351533282 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.34522947 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.377850188 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350914985 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365949354 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.36538109 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.345203712 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.364250129 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366860546 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.362544684 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.385447567 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.352650738 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.352548405 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.362139335 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.366957645 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369224571 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354193162 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353475093 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379707509 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.350901463 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360328266 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360640987 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357813422 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.348458632 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365831156 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36630605 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.356163881 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364355385 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.367326497 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.36438194 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.353564539 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.362310381 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355353197 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.437757053 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372491261 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362974232 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.361954028 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369541656 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357858838 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357852727 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.364864484 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.381378317 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362098664 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.367605873 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.358505949 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.36015819 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377976901 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.367272081 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.363910427 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.355822632 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.349697377 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376307759 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.363936064 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373923756 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.362167949 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35532928 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.387945421 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373548718 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367984494 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361504818 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.362857646 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.369382394 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.364486304 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.37005614 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364119844 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.356226921 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35566945 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.364514983 seconds)
done (took 107.508658856 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.478198473 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.349640801 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.511193415 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363500295 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.520490967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.479785933 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.363078031 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.364742845 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.362433759 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.160767916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364804612 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364583023 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.354297281 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.364665983 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.477546535 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.36483834 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364949987 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.062954042 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364324592 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496117908 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.355391188 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.363271369 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.365569234 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.163109957 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.354078543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.350094879 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.496132508 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.364489546 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.062726161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.34771282 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.353516609 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.063112549 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.498528533 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384882986 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373978074 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.374705645 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.524735109 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.36824222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.481832961 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.481925902 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.513644188 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403840395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.349657688 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.35563091 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366578214 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.367786634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.365392593 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.395773271 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.356299051 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.365324809 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.065475911 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374452952 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365775632 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.368783464 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365250037 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394636702 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366761579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.367877172 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.499312374 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.367624599 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.483283233 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.165144869 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.164477429 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.366808103 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.355551836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.367910825 seconds)
  done (took 110.178404046 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.428576063 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.433421401 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4703882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.363498097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.408696786 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.470659412 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.358976101 seconds)
  done (took 11.174757048 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.365949798 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.368714797 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.406606198 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406716077 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367796966 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.532134671 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368106538 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371458093 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368051614 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.410103946 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.368515636 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368791966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.377200972 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.358749227 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.407574598 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372004835 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.481083376 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.360673945 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369003315 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.516379316 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366990987 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37773223 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.41183013 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.372172835 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369635459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.366352516 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.181553622 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369185136 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367993807 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.37086203 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369720884 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428496002 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369113612 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.360147203 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36910872 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474423104 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.369930682 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.369109263 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371715902 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.361947013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.369359722 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.37050005 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.371424686 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.36926252 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.36977593 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386022484 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.370151275 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.370198185 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370652283 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.36869835 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413315761 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37114006 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371360366 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.370651323 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.417390278 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380475876 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371195542 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.371687592 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370803775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.372674174 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519044976 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.410482706 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.371367377 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.409350381 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371614945 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371238183 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.372443383 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.371700852 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455544371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.372528276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.409640045 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.371133305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.542953608 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.387818448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372567538 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.366175117 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.36722461 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371332365 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.36046841 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370356297 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.372089039 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.365324315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.369469786 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.372536168 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373362807 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.522332958 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471779786 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.372378523 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.379832606 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.371549176 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.372993742 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.414311734 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.372831212 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.372599446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.414215782 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.48434801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.415076015 seconds)
  done (took 140.876507402 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376203557 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.376495592 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.368538718 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.392155312 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.365256151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.365612445 seconds)
  done (took 9.490407344 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.367739341 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376825235 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374413584 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373166276 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373610957 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.376083118 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.376845714 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367239452 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.376466275 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374673526 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375531822 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374630362 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375668982 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.375896618 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374970855 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374800717 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374479653 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.374235166 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374523914 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377877539 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.363192131 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.375481246 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375792035 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.367672527 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.379219662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.376282328 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39110478 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376467687 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375956376 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.372336045 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.379495241 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.375745062 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.369193369 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.372406935 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.377939501 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.370003975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378097597 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376027028 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376757422 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377458384 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.37797883 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377128827 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37765082 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.377992926 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.369214919 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371630017 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.379022116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.392331559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375712026 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377663526 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.377105346 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376832007 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378634245 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.37774022 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.370931052 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372996618 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.379864873 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377723685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377473076 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.371076603 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.380764089 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378637358 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370993607 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380466369 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379186901 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.378530791 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.371616138 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.381801854 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379062073 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.378280256 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.379537593 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377755179 seconds)
  done (took 101.317711097 seconds)
done (took 374.274191366 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.92336828 seconds)
  done (took 4.173191153 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.366451631 seconds)
  done (took 3.618513446 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.481090227 seconds)
  done (took 22.734501152 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.41192565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.420847049 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.385382034 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.370533899 seconds)
  done (took 10.838725347 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.63698351 seconds)
  done (took 3.887844702 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.374241151 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.391019429 seconds)
  done (took 6.021037594 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.564570932 seconds)
  done (took 3.817358796 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.592663572 seconds)
  done (took 3.846687754 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.376474098 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.3969842 seconds)
  done (took 6.034724439 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344446182 seconds)
  done (took 3.598610586 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.934863529 seconds)
  done (took 21.188729471 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.397206884 seconds)
  done (took 3.653319408 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.403819037 seconds)
  done (took 3.656730527 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.892396339 seconds)
  done (took 6.1457879 seconds)
done (took 104.466803539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.366435549 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.373825825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.373084685 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.372182246 seconds)
  done (took 10.737922188 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.445017191 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.445825052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.454701594 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.440015731 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.440501381 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.448855889 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.409072522 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.409112667 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439732352 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.434273634 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.451377914 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.439633541 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.45045642 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.408545722 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.433739778 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.452062281 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43974492 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.457267806 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.408985001 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.44178753 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.385561916 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.444526921 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.435897684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.385623584 seconds)
  done (took 35.656276725 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.89368544 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448045967 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531375939 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426617179 seconds)
  done (took 7.554591774 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.487022511 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.489021988 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.506680861 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.540136768 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.591872223 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.502675352 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.406941378 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406791654 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.392541503 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.48990689 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.573680512 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.488457023 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.703795426 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.38463685 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.702396124 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.385367837 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384760364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.488727841 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.537616093 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.567048439 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385457156 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.488843136 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.493093783 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.48936878 seconds)
  done (took 37.142971046 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394420016 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402292017 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.385814011 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401482309 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.387438827 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.386369029 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.388755783 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393314557 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.387184351 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.385574126 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388534347 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400521377 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.386608766 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.387192189 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394357412 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.38904195 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.391093974 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.395777722 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.396335208 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.388310993 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.387864834 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.396567535 seconds)
  done (took 31.871671542 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.371927205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.37309639 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723723341 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628188328 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.37268602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.371696011 seconds)
  done (took 14.099574913 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.445771595 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.589030937 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384853512 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.72285589 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.812068977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386528693 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382094843 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619449851 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.916861177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917557437 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437723972 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.449014623 seconds)
  done (took 20.322220959 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.387684265 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.377045691 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.389402144 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.394678754 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432376785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.385613984 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.385943958 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.373073061 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.437965031 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438471393 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384763065 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434529619 seconds)
  done (took 22.079737692 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464302651 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384216848 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.398359954 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444607513 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38287178 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383925794 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.449173378 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.078630237 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.390710551 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661601316 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390203583 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47126375 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.632687791 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393472175 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389382615 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.352169399 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.614428415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862878254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386404822 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386101194 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436690797 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393110467 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398081976 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.592542563 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389543 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38481765 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648276517 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384797776 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666962186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639421003 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643889549 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392251698 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662285018 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030137563 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491083289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588081395 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383461288 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391759419 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.364530025 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.411734989 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397800406 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388382925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.641547066 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394731466 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38849071 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388197771 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092503703 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396022724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387721195 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389986603 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643151158 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475459193 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.393997302 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.387103647 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397132218 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387605792 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.39298269 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518707191 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026013228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387478073 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392618221 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.392692595 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38707991 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391742462 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028380365 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.397954 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.395164514 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395935346 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389169815 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389712502 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414748629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390772529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.411454645 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389898331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144239928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406553038 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396829427 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918793048 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399720863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.394652245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616069558 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390561102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389641146 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.388601794 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390523292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120569962 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398905785 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.357853825 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429804946 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083547018 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.592922132 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416930061 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419783662 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611878562 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.357891146 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391243919 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.394801469 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39765936 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412384742 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090829177 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393517886 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.396600853 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639350596 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603166375 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391521552 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.365262094 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872550148 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397939047 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418705181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391498826 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598437705 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.004013666 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658626248 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405421411 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431265482 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393201738 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190997728 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397463374 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402535493 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403306474 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672639098 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.210267433 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393527364 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466419089 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395255578 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.39404784 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394351157 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395638884 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395937669 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.573435141 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399121107 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670563118 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.399128757 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395502336 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.406607702 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413690151 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.399041832 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615102892 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395743573 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673251242 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396055547 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394247177 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396236098 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.614955391 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.402274026 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.401904421 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733769616 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406827985 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411985098 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655992561 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433905324 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507132993 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427817831 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.405854768 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647832465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401430149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401201691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395307494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403843082 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400215069 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404604726 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396842123 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022586389 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378569952 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400230281 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395370155 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412021199 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470029566 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404844874 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60017379 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.404905944 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395563821 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.407661213 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.406161959 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623398417 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65227371 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.414982689 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576625724 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.860241468 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.006084186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419397398 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.399604219 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.397514793 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.398194281 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398638194 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398815778 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399406127 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.60094278 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666474842 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38997125 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033411602 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404216615 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398730183 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409931599 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652936049 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.408395108 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399088622 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.397796347 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401481241 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427037353 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658125959 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625023178 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41451681 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400465187 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.919494736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407966835 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399446384 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400082018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426385436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399819501 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234217119 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738881949 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390701209 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657804778 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405441269 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437622294 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.398669377 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398742223 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400777233 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.425993834 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425869274 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.60471181 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409717461 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407110154 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037605077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176937903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956214594 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421288116 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.413681856 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40525942 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106167273 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400119645 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402207748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645321011 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110642293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402095663 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867679426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.40133831 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162983647 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65815111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628076114 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4134574 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.40936152 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665935702 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615408163 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428630754 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401911174 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406552882 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369469103 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94053307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405263576 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58271598 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103901126 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403244807 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40468719 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.450658056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.418236623 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799177011 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40315051 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403803374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4167744 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413202194 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242328861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407749364 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403842015 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043702978 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414268143 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.875690864 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4047578 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.609226322 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66641365 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.64202544 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.405799527 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.414532225 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652656652 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661969786 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409577977 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409687896 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969310348 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263928094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.412950216 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406583286 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197810384 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417393434 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693768316 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.410815228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413911238 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414166415 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405770877 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405573848 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.405940089 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411297859 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380349635 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882188492 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.423450161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407425973 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409967795 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411574632 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654347032 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.42256285 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021486412 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633320902 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404356373 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444607621 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.412703276 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407383149 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.376773025 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406476751 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406546756 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42008563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.629002453 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406283849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.392199783 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475000042 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617855882 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407297897 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412349556 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62948307 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.408700753 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.412348251 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181894647 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444802344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409108092 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410477312 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405198247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468556571 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480616517 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614425709 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.668738091 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.672860405 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808798981 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412753006 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414990248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.42415688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488457699 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414413189 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425955841 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.408209005 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019515633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179464075 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035564417 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676083831 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411696767 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419553939 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41040063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650852007 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407094446 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685481578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409148329 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.408286112 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435256612 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411724496 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417735935 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624880973 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683393454 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409201089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41361999 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412548408 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.410163233 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.674249296 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62829494 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894228947 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951849776 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416338117 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414513899 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125759063 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687487363 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411983368 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411752363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411438365 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.422964854 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.411506209 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.438536522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422577425 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640902251 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669070351 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071435288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670550719 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.600354652 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.334186549 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423504247 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664068224 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.244755848 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.61670487 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03798813 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139290328 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665017797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487299665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61755156 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.417604943 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650519886 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.420301207 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412827898 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41325639 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412035975 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.411645067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670524836 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037592723 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671235943 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417938192 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.421521732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442256655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.617954433 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640497352 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161479647 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632536511 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676799458 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430344634 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412811728 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037455852 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680988039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420477165 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419410152 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630499866 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419124628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450226184 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.290250337 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.41413516 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958341748 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.631682168 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436064873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427073194 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137931185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042500724 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.422138108 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92010737 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421649826 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421520786 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697778422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.4240015 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427315446 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700153449 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421062851 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415340683 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64507287 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.035427699 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183332462 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.436653318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417280953 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.420991147 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416226815 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409216729 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417242976 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41616819 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.816256047 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415336066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416661113 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429743303 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.423377832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432848846 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.421881573 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416322435 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426312499 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.387683663 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.393833099 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436218193 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54774633 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962574464 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42114474 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089841582 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.754802506 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665601967 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429919923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.390462469 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424783592 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420780984 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419574404 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418808169 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41115368 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956784861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.433072483 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.682036853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431633335 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.630091376 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630675672 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432014672 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634332248 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438512913 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443967393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.385941056 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420228047 seconds)
  done (took 995.205501172 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438732465 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.414205644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.431674766 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.414669931 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.44417794 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434835454 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.439408127 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490164086 seconds)
  done (took 20.799849827 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.410096036 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.422375291 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.424639511 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424156852 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.420163953 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.906107307 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.422607456 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.420146896 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.432294829 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.424730595 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.425594393 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.045423209 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.425459659 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.423675617 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.421851848 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.424744927 seconds)
  done (took 33.167065721 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.16540058 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.452444087 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.044164749 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.468402515 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.412313948 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.427964335 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.575274725 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.417390378 seconds)
  done (took 26.256618738 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.426491004 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.426221141 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.426957533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.4274583 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.427530348 seconds)
  done (took 8.427723126 seconds)
done (took 1264.575645289 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427659934 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427711222 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427349576 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428792568 seconds)
  done (took 7.004719097 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.391274461 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393932491 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394987456 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.409992348 seconds)
  done (took 9.883629202 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.092117716 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.955104441 seconds)
  done (took 5.341290198 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.950226024 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.942094057 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.936818644 seconds)
  done (took 7.12320013 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.694392025 seconds)
  done (took 2.988960607 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.385096099 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.413664113 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.424442816 seconds)
  done (took 8.518294465 seconds)
done (took 42.153241624 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.412596174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.177665857 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.608004087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.413971261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.573844788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.569656004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.665945404 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422968884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.414658502 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426737024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414197398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575759639 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.653265734 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.176616242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.652744287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.178337165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.584651177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419088877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416869975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415027212 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.666564072 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41499882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.425190048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415073356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.575936522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.560365747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422480453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.176837818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.414226483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.423764064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.560737856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.4150636 seconds)
  done (took 83.939719874 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.415141403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.415855445 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.440407082 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415884002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431740254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424038324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416643976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417254624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415766643 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414635882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.415828079 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.415984629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.416610054 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.416809714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.417745074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41762768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.431841444 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.423530921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417300037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434443977 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.418081766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.420409306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417344753 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441400769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.426401465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417044555 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432517534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.417277487 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417903102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417231708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420271983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433354133 seconds)
  done (took 78.79166235 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.416851205 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419022975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.425637841 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422633295 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.421504645 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.446120763 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.418348256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418774363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430486532 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425080628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41866256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423497618 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423965259 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.436438831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425678018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433575783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.418457648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.431775155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.423795083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430493512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.420471159 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418248211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.431960763 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.423144761 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422826296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422488178 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421983425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.420429843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.425859125 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.430463754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.427926989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424722265 seconds)
  done (took 78.900918296 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.66167716 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.436135666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.437285826 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.428812552 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.43857167 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436099651 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.430208865 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.665880078 seconds)
  done (took 15.233965923 seconds)
done (took 258.16064282 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.429657756 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.918012106 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.464518869 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.430557736 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446783064 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.4577996 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.631351604 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.458145898 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.620529487 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.431755621 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.445829283 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.430519135 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.244692563 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.567919558 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.218317566 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.335970116 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.3049588 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.421195516 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.003806436 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.652174293 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.459709661 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.436582573 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.226053487 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.319670911 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.406465208 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.490666317 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491289936 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.584900625 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550397666 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491105194 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.916622337 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.431950747 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.45362374 seconds)
  done (took 65.475127533 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.428693602 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.439746868 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.440349488 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.439451996 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.439943689 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.438640753 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.430321613 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.438061721 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.43828478 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.439613418 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.439821323 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.439668806 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.440313246 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.440754051 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.4393285 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.410581901 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.428591442 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.438788134 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.43060064 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.410752114 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.439166684 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.440364438 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.442331772 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.438950676 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.440781381 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.44177351 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.440145102 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440801932 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.440125761 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.440506057 seconds)
  done (took 44.401187563 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.439455337 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.016613524 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.173588704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43757156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.431380803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436469259 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.719093133 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444923906 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.436713534 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.435705735 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.90756364 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.44807309 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464592549 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.18582201 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434247729 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.442102092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440830514 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.433657352 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.025499811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44689473 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.717668414 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.448116807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.719162486 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442771186 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.435429104 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436284743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437910184 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.226945125 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.453034332 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.909100173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.21437724 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.718787275 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.173167745 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.23841753 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.206678877 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.449411465 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.442073963 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915335081 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.441839767 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.43583881 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.718418097 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.440636091 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188577548 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.122465874 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.452718364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443761402 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.266860079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.916918398 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.678452047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447338658 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.231768093 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43968262 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.446317177 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.436808655 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.673912854 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.443585776 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435218598 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.291822689 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.440555331 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.718777482 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.450653122 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.43684514 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.023216722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.440856402 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.017236305 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.442533951 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444826608 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.438071011 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.194157168 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439765951 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.139591317 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.454295191 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.44573775 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.911253037 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.023676051 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.319266101 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443985629 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.02795364 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.207990898 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.740164419 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446033497 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.212235495 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.743113376 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.445769802 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.44940441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.449008758 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.447163536 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.521108031 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.716443836 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.057639185 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139741464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.299801386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.723774261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.451304058 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438356095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.294897451 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.447598393 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447735749 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.191901543 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140050384 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454575762 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.447296346 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.127599643 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.458623601 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.725712557 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.448015111 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.232789585 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444259274 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.524681809 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.448734174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445572713 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.443087167 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.725546448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.447506493 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449227756 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124492004 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.942517206 seconds)
  done (took 200.2002018 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440082578 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.434062 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.436815134 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.433017407 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.433965455 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441035023 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.433653332 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.433619403 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44026109 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.433253026 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.433398524 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442004715 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.441557943 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.434219951 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.447843351 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436215972 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.434343581 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.452102072 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432946182 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.435552087 seconds)
  done (took 46.060797758 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.450718956 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000260014 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.966555102 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.457405507 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.449927856 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.443082911 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49620296 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.453867994 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.450271488 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.737325895 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.611687608 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.457326306 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.451486681 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.452012055 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970455458 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423313898 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737273297 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.995917705 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452780256 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.998498493 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.426815983 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452004519 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441637172 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.997139812 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750450795 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.726966046 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.503332863 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.002329631 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.454941857 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.451595904 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.997846934 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453092922 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.444047133 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.982000471 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451810538 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.463857313 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452691065 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501447835 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.500140341 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740669465 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.004457852 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.735661084 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.466886146 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.609837381 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.453670705 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.422306327 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.0086267 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.453225177 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.42376456 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.453880532 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.457772614 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.978751616 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450012618 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.983812754 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.457892124 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454063682 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001215249 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979646423 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.97734364 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.618150859 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449703113 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.729629552 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.453914581 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.010704073 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.454971603 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454169873 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453204052 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.616517405 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.008028612 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.732873016 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.746732585 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742682171 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.455601654 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513087361 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.461695952 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.742598723 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512903429 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.844932667 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.747083263 seconds)
  done (took 130.487659584 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712596962 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.56666444 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.822019898 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.007604499 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.943623033 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585602775 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5596384 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.694086117 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.455749809 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.559462851 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.099440523 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.54538313 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.191101602 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.512709136 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55520608 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.571793071 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.851617576 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.392989492 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.068769391 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.065040032 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.456499158 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542550709 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.949578893 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.641885629 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.446175179 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.993824216 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.35574522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.959774617 seconds)
  done (took 54.424870309 seconds)
done (took 542.351263413 seconds)
SAVING RESULT...
DONE!
